[
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "I'm tired now and will not do anything further extra.\r\nmy both codes were perfect but your checks keeps giving errors IDK why.\r\n",
    "diff_length": 18371,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "Hacktoberfest is strenuous for our team of active volunteer maintainers. That small team now has ___200+ open pull requests___ to review.  We have __high standards for our submissions__ which are described in [`CONTRIBUTING.md`](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md#contributing-guidelines).  Our continuous integration tests help to ensure that our standards are met before we review and merge deserving pull requests.  This is further complicated by the fact that we already have [lots of algorithms](https://github.com/TheAlgorithms/Python/blob/master/DIRECTORY.md) and would like to avoid duplicates.\r\n\r\nFor these reasons, I will **close all open pull requests failing tests** so that our unpaid team has a smaller mountain to climb.  If you want us to land your pull request, please make sure it is not a duplicate and then read [`CONTRIBUTING.md`](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md#contributing-guidelines) _carefully_ and try again.",
    "diff_length": 18371,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "Surely! I understand. I'll try again later.\r\nThanks for the replay :)\r\n",
    "diff_length": 18371,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "@cclauss  Can you please review this I hope this will be merged as all the tests are passing.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "Your only function, `main()` takes no inputs and returns no outputs and it plots.  This is not an algorithm by this repo's definition.\r\n\r\nhttps://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md#what-is-an-algorithm\r\n#### What is an Algorithm?\r\n\r\nAn Algorithm is one or more functions (or classes) that:\r\n* take one or more inputs,\r\n* perform some internal calculations or data manipulations,\r\n* return one or more outputs,\r\n* have minimal side effects (Ex. `print()`, `plot()`, `read()`, `write()`).",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "But there are algorithms which already exists in your repo that do not return output. The output is the graph it plots. The algorithm does takes input at line 28 for training. It's a machine learning algorithm.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "Why not open a pull request here?  https://github.com/dmlc/xgboost/tree/master/demo  They probably want how-to-use examples.  We want to focus on algorithms.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "This [algorithm](https://github.com/TheAlgorithms/Python/blob/master/machine_learning/knn_sklearn.py) does not have any functions at all but it is there in this repository.\r\n",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "Yes.  That was merged 1,196 days ago and we have raised our standards for new submissions significantly since then.  There are lots of repos that are easier to contribute to. ",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "> Your only function, `main()` takes no inputs and returns no outputs and it plots. This is not an algorithm by this repo's definition.\r\n> \r\n> https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md#what-is-an-algorithm\r\n> \r\n> #### What is an Algorithm?\r\n> An Algorithm is one or more functions (or classes) that:\r\n> \r\n> * take one or more inputs,\r\n> * perform some internal calculations or data manipulations,\r\n> * return one or more outputs,\r\n> * have minimal side effects (Ex. `print()`, `plot()`, `read()`, `write()`).\r\n\r\n@cclauss  I have edited the script according to the deifinition os this repo now",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "@cclauss  Hello it's been 5 day since I made the changes can you review this PR whenever you get time.\r\nThank You",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "[These are type hints.](https://github.com/TheAlgorithms/Python/blob/master/maths/add.py#L6)   If your function parameters do not have them then your pull request will not be reviewed and it will not be merged.\r\n\r\n[These are doctests.](https://github.com/TheAlgorithms/Python/blob/master/maths/add.py#L7-L12)  If your functions do not have them then your pull request will not be reviewed and it will not be merged.\r\n\r\nPlease read [`CONTRIBUTING.md`](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md) for details.\r\n",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "OK.  I have added better names and wrapped long lines to placate pre-commit.\r\n\r\nThe only test that fails is one that I do not know how to solve.\r\n\r\nPlease click the `Details` button on the line with the ❌ below to see [the error.](https://github.com/TheAlgorithms/Python/actions/runs/3287466564/jobs/5416668576#step:6:587)  You can run these tests on your own machine with the command: `python3 -m doctest -v machine_learning/xgboostclassifier.py`\r\n\r\nUNEXPECTED EXCEPTION: ValueError('Invalid classes inferred from unique values of `y`.  Expected: [0 1], got [1 2]')",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "> OK. I have added better names and wrapped long lines to placate pre-commit.\r\n> \r\n> The only test that fails is one that I do not know how to solve.\r\n> \r\n> Please click the `Details` button on the line with the ❌ below to see [the error.](https://github.com/TheAlgorithms/Python/actions/runs/3287466564/jobs/5416668576#step:6:587) You can run these tests on your own machine with the command: `python3 -m doctest -v machine_learning/xgboostclassifier.py`\r\n> \r\n> UNEXPECTED EXCEPTION: ValueError('Invalid classes inferred from unique values of `y`. Expected: [0 1], got [1 2]')\r\n\r\nThank you very much. That's so kind of you.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "@cclauss  Thank you with your help I removed the errors.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "comment body": "> Thanks massively for your persistence!!!\r\n\r\nThank you for your guidance and help.",
    "diff_length": 2954,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n#fixed issue #11804\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will no",
    "comment body": "@zixindh, I noticed the PR has been approved—do you know why it hasn't been merged yet? Any further actions required on my end?",
    "diff_length": 6817,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "Hey can you put a Hacktoberfest label into this pull request??",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "Please give me time to review the code without changing it.\r\n",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "> Please give me time to review the code without changing it.\r\n\r\nHey, while you do that , can I fix few typo error , and make the code more descriptive, \r\nI am new to open source , now after reading the bot's suggestion i found few loop holes like \" function hint \"problem, ",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "> Looks cool but I do not get all the details...\r\n> \r\n> I moved some tests from fuzzy_logic/test_fuzzy_logic.py into doctests and removed that file. I did several updates to the main file to make it pass our tests. If it does so then I will approve and merge it. If you see missing tests or other errors, please open a new pull request with changes and @mention me on it.\r\n\r\n\r\nsame , my PR started failing, once I added that test_fuzzy_logic.py , i did so to remove the \" required test \" label, \r\nBut sure , I shall work on it 😄😄😄(●'◡'●)  Thank you for merging the PR , Thank you Thank you Thank You so MUCH!!!!!!!!!!!!\r\n",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "pytest not finding tests is often about not having an empty `__init__.py` file in the same directory.  In this repo, we tend to use doctest because the tests live with the code and it is often easier for new contributions to understand doctests.\r\n\r\nPlease feel free to create pull requests to make this code what you want it to be.",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "**###hacktoberfest**\r\n\r\n### Description:\r\nThis pull request introduces the FuzzySet class, designed to represent and manipulate triangular fuzzy sets widely used in fuzzy logic and control systems. The creation of this class was motivated by the need for a versatile tool for fuzzy logic operations.\r\n\r\n### Features:\r\n- **FuzzySet Class**: The FuzzySet class is defined with attributes such as name, a (left boundary), b (peak), and c (right boundary) to describe the fuzzy set. It also provides meth",
    "comment body": "Also, Python `set()`\r\n* https://docs.python.org/3/library/stdtypes.html#set\r\n* https://docs.python.org/3/tutorial/datastructures.html#sets\r\n\r\nEnable the following notation: \r\nx in set  # **membership** but must return a bool --> __contains__(self, item)\r\nset & other  # **intersection** --> __and__(self, other)\r\nset | other  # **union** --> __or__(self, other)\r\n~set  # **complement** --> __invert__(self)\r\n\r\nIf you implemented `FuzzySet.__contains__()` you could enable `x in fuzzy_set` for membership.\r\nIf you implemented `FuzzySet.__and__()` you could enable `fuzzy_set_a & fuzzy_set_b` for intersection.\r\nIf you implemented `FuzzySet.__or__()` you could enable `fuzzy_set_a | fuzzy_set_b` for union.\r\nIf you implemented `FuzzySet.__contains__()` you could enable `~fuzzy_set` for complement.\r\n\r\nhttps://rszalski.github.io/magicmethods/#appendix1",
    "diff_length": 6402,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fai",
    "comment body": "if it gets accepted, please give me hacktober fest accepted tag. Thank you!",
    "diff_length": 19900,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "comment body": "For simplicity and conciseness, I named my variables the same as the variables used to represent certain values in kinematic equations. \r\nExamples: https://www.physicsclassroom.com/class/1dkin/Lesson-6/Kinematic-Equations\r\n(\"d\" or \"distance\" is represented by \"x-x0\" or \"final position minus initial position\")",
    "diff_length": 23262,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "comment body": "Don't do that.  Why are you forcing your reader to guess if `d` is `distance`, or `dimension` or `delta`?  We are not trying to be simple or concise.  We are trying to teach.  Guessing is not helpful to understanding.",
    "diff_length": 23262,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "comment body": "> Don't do that. Why are you forcing your reader to guess if `d` is `distance`, or `dimension` or `delta`? We are not trying to be simple or concise. We are trying to teach. Guessing is not helpful to understanding.\r\n\r\nFair point, I will add changes accordingly. And I also noticed that type hints failed as well and I assume I'm supposed to use the \"typing_extensions\" module rather than the \"typing\" module.",
    "diff_length": 23262,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "comment body": "`typing_extensions` is not used by programmers.  It is used by `mypy` so it can be ignored.",
    "diff_length": 23262,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "comment body": "In preparation for that denial-of-service attack that is [Hacktoberfest](https://hacktoberfest.com), I am closing all pull requests that do not have passing tests.",
    "diff_length": 23262,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\nNew pull request to replace #4245 since the old pull request ran into a branch conflict after updating. The changes to #4245 include better comments and more descriptive names.\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [ ] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have ",
    "comment body": "Several additional doctests were added for the methods of `Body` & `BodySystem`. I managed to simplify the `plot`-function by getting rid of the `init`-function. The `update`-function now calls the function `update_step`, which has its own doctests. I also refactored the examples into separate functions.",
    "diff_length": 12947,
    "label": null
  },
  {
    "pr body": "### **Describe your change:**\r\nNew pull request to replace #4245 since the old pull request ran into a branch conflict after updating. The changes to #4245 include better comments and more descriptive names.\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [ ] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have ",
    "comment body": "Thanks for helping with all the changes. It's definitely more elegantly handled this way.",
    "diff_length": 12947,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "I'll clear up the failed code quality test soon. First-time contributor so I didn't read the Contributor.md as closely as I should've regarding testing and quality.",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "I wrote a bunch of unit tests using the `unittest` framework rather than `doctest` because I didn't want to make my code super unnecessarily long. Is that okay?",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "Not yet, gonna push some comments and docs describing the implementation",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "Alright, all done. I wanted to store my tests in the `graphs/tests` folder but I couldn't find a way to import my graph classes without violated some type of `black` linter code quality. I wanted to do `sys.path.append(\"..\")` and then import the class but `black` and `ruff` wouldn't let me I think. Otherwise, let me know what I can fix!",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "Are y'all backlogged with work? Just checking in.",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "comment body": "Took a few too many commits to resolve the type hints issue **and** a new ruff issue that popped up about f-strings in exceptions that didn't show up on the local ruff check. As always, appreciate the feedback!\r\n\r\n**Edit:** Still ready for review, the commit below was just a minor fix I needed to make in my error messaging grammar.\r\n",
    "diff_length": 46307,
    "label": null
  },
  {
    "pr body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they",
    "comment body": "Closing require_type_hints PRs to prepare for Hacktoberfest",
    "diff_length": 4657,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "Note I have only added loading the profile key on the first post block, whilst I check im doing it the correct way.\r\n\r\nI need to add the frontend button next as well.",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "plz follow template with bot, once the ai reviewer is back online it'll deny the pr for this",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "Thank you for this thorough Ayrshare integration PR! The code looks well-structured with comprehensive implementation across both frontend and backend components.\n\nBefore this PR can be merged, there are a few items that need to be addressed:\n\n1. **Missing Checklist**: Please add the standard PR checklist from our template and check off the relevant items. Since this is a significant code change introducing new functionality, we need to ensure you've tested the implementation thoroughly.\n\n2. **Merge Conflicts**: The PR has the 'conflicts' label, indicating there are merge conflicts that need to be resolved before merging.\n\n3. **PR Title Scope**: Consider updating the PR title to use 'platform/blocks' as the scope instead of just 'block' to better align with our conventional commit format and labeled scopes.\n\n4. **Test Plan**: Please provide a test plan detailing how you've verified this integration works correctly. For example:\n   - Connecting to different social media platforms via Ayrshare\n   - Posting content to each supported platform\n   - Handling error cases (e.g., when profile key is missing)\n\nThe implementation itself looks solid, with proper security considerations and a clean architecture. Once the above items are addressed, this PR should be ready for final review.",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "❌ **Preview Environment Deployment Failed**\n\n🚨 The preview environment deployment encountered critical errors and has been rolled back.\n\n**Cleanup Completed:**\n- ☸️ Kubernetes namespace deleted\n- 🗃️ Database schema dropped\n- 🔌 All services terminated\n\n*Please check the workflow logs for details and try again.*",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "Thanks for this comprehensive PR adding Ayrshare integration for social media posting! The implementation looks solid with good support across multiple platforms.\n\nI've reviewed your changes and have a couple of items that need addressing before this can be merged:\n\n1. **PR Title Format**: The scope in your title should be `blocks` instead of `block` to match our conventional commit format standards. Please update to: `feat(blocks): Added Ayrshare integration for social media posting`\n\n2. **Missing Checklist**: Your PR description is very detailed, which is great, but it's missing the required checklist section. Please add the standard PR checklist that includes items like:\n   - Confirming you've tested your changes\n   - Your test plan\n   - Any configuration changes\n\nThe code implementation itself looks well-structured with comprehensive support for various social media platforms. I particularly like how you've organized the different posting blocks with platform-specific options and validations.\n\nOnce you've addressed these two items, this PR should be ready for another review.",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "Thanks for the comprehensive Ayrshare integration PR! The implementation looks well-designed and thoroughly documented.\n\n### What Looks Good\n- Great PR description with detailed explanations of all components\n- Clean implementation of both backend and frontend components\n- Good separation of concerns with platform-specific posting blocks\n- Environment variables correctly added to `.env.example`\n- Proper handling of user_id in credential store operations\n- The new AYRSHARE block type is added in the correct alphabetical location\n\n### What Needs Addressing\n- **Missing checklist**: Please add the required checklist to the PR description. As this is a code change, we need a complete checklist including a test plan to verify the functionality works correctly.\n\n### Testing Considerations\nSince this is a complex integration, please ensure your test plan includes:\n- Creating and connecting to Ayrshare accounts\n- Posting to various social media platforms\n- Handling error cases (e.g., invalid credentials, failed posts)\n- Verifying the SSO flow works correctly\n\nOnce you've added the checklist with a proper test plan, this PR should be ready for final review.",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "Waiting on preview envs to be fixed before this can be comprehensively tested. \r\nAlso there is difficulty testing all platforms as I don't have all the different social account.",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "![Screenshot 2025-06-16 at 11 57 40](https://github.com/user-attachments/assets/3bba19c2-4983-47e8-88f5-9f5a6c6da32f)\r\n![Screenshot 2025-06-16 at 11 55 17](https://github.com/user-attachments/assets/55e3e80c-8106-4b36-8a15-11f86536ac2e)\r\n\r\nI've tested linkedin and twitter both work. The others need testing",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "This PR implements a comprehensive Ayrshare social media integration for AutoGPT Platform, enabling users to post content across multiple social media platforms through a unified interface. Ayrshare provides a single API to manage posts across Facebook, Twitter/X, LinkedIn, Instagram, YouTube, TikTok, Pinterest, Reddit, Telegram, Google My Business, Bluesky, Snapchat, and Threads.\r\n\r\nThe integration addresses the need for social media automation and content distribution workflows within AutoGPT ",
    "comment body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "diff_length": 164852,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "The PR fails to meet some basic requirements but shows a good effort. Issues:\n1. The PR template is not properly filled out - missing test plan and checklist items\n2. While the scope is clear (frontend) and shown in the title correctly, documentation of changes could be clearer\n3. No clear explanation in PR body about 'why' these changes were needed\n4. No test plan or testing notes provided for such a large UI change\n\nHowever, the code itself looks well-structured with clear component organization and documentation. The TODO comments also show good forward planning.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "## Feedback for PR Improvement\n\n### Missing PR Template & Checklist\nPlease fill out the complete PR template, including the checklist section. This is required for all PRs and helps reviewers understand what's being changed and how it's been tested.\n\n### Scope Mismatch\nYour PR title mentions only frontend changes (`feat(frontend)`), but the diff shows significant backend additions including:\n- New API routes in `/api/builder/`\n- New DB functions and models\n- Changes to store routes\n\nPlease update your title to reflect both frontend and backend changes, or better explain in the description why backend changes were needed for this frontend redesign.\n\n### User ID Validation\nSome of the new backend functions in `backend/server/v2/builder/db.py` don't appear to validate user permissions via user_id. Please review these functions to ensure proper authorization is in place or provide an explanation for why user_id checks aren't needed.\n\n### Merge Conflicts\nThis PR has merge conflicts that need to be resolved before it can be merged.\n\n### Testing\nPlease include information about how you've tested these changes, particularly since they span both frontend and backend components.\n\nOnce you've addressed these issues, the PR should be ready for re-review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your work on redesigning the block menu. This looks like a substantial change that will improve the builder page experience. \n\nHowever, there are a few things that need to be addressed before this PR can be merged:\n\n1. **Missing checklist**: Please complete the PR template checklist. For code changes like these, we need to know that you've tested your changes with a clear test plan.\n\n2. **Scope discrepancy**: Your PR title mentions only frontend changes, but the diff includes significant backend changes - new routes, endpoints, and database access functions. Please update your PR title to reflect that this is both a frontend and backend feature, perhaps something like `feat(frontend,backend): Redesign block menu on builder page`.\n\n3. **Implementation details**: Your PR description lists the components you've added but doesn't explain how they work together or what specific improvements they bring. Please enhance the description with more details about the implementation and how it improves upon the previous design.\n\n4. **Test plan**: Please add a test plan to your PR description explaining how you've tested these changes.\n\nThe code itself looks well-structured with proper authentication handling and user_id checks. I particularly like how you've organized the new components and the backend routes to support them. Once you address the above points, this PR should be ready for another review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your work on redesigning the block menu! I have a few comments before this can be merged:\n\n## Description and Checklist\n- Please update your PR description to include a more detailed explanation of the changes you've made\n- The required PR checklist is missing. Please add the checklist from the PR template and check off the appropriate items\n\n## Scope Mismatch\nYour PR title indicates this is a frontend feature (`feat(frontend)`), but the changes include substantial backend code, including:\n- New backend routes in `/api/builder`\n- New database functions in `backend/server/v2/builder/db.py`\n- New models in `backend/server/v2/builder/model.py`\n\nConsider updating your PR title to reflect that this involves both frontend and backend changes, perhaps something like `feat(platform): Redesign block menu on builder page with backend support`\n\n## Test Plan\nPlease include a test plan in your PR description to explain how you've tested these changes.\n\nOnce these items are addressed, we can proceed with reviewing the technical aspects of the implementation. The component list and structure looks well-organized!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your work on redesigning the block menu! I have a few concerns about this PR that need to be addressed before it can be merged:\n\n1. **PR Description:** While you've listed the components you've added, the PR description should explain why these changes are needed and provide more context about the redesign goals.\n\n2. **Missing Checklist:** Your PR description is missing the required checklist section that outlines your test plan and confirms you've tested the changes appropriately. Please update your PR description to include the complete checklist.\n\n3. **Scope Mismatch:** The PR title indicates this is a frontend change, but the diff shows substantial backend changes including:\n   - New backend routes in `/api/builder`\n   - New database functions and models\n   - Changes to the store API\n\n   Please update either the PR title to reflect the full scope of changes (e.g., `feat(frontend,backend): Redesign block menu and add builder API endpoints`) or separate the backend changes into a different PR.\n\n4. **Dependencies:** You've added several new dependencies (`react-timeago`, `tailwind-scrollbar`, `tailwind-scrollbar-hide`). Please ensure these are necessary and document their purpose in the PR description.\n\n5. **Testing:** Please describe how you've tested these changes, especially the new backend routes and functionality.\n\nAdditionally, I see there's a conflicts label on this PR. Please resolve any merge conflicts before this can be approved.\n\nOnce you've addressed these issues, I'll be happy to review the PR again.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR to redesign the block menu! The component list you provided is helpful for understanding what's been added. I have some feedback to help get this PR ready for merging:\n\n1. **Missing checklist**: This PR contains significant code changes but is missing the required checklist. Please add the checklist from the PR template and ensure you've tested all changes appropriately.\n\n2. **Scope mismatch**: While your title mentions frontend changes, a significant portion of this PR adds backend functionality (new routes, models, and database operations for the builder). Please update your PR title to reflect both frontend and backend changes, e.g., `feat(frontend,backend): Redesign block menu and add builder API endpoints`.\n\n3. **PR description improvements**: Consider expanding your description to mention the backend API endpoints you've added to support the block menu functionality.\n\nOnce you've addressed these items, we'll be able to review your PR again. The code changes themselves look good - I like the organized approach with the reusable components and the proper handling of user_id in the backend routes.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for the PR to redesign the block menu! The implementation looks comprehensive with both frontend components and backend support.\n\n### Feedback\n\n1. **PR Description Improvements**:\n   - The PR description is missing the required checklist from the template. Please add the checklist sections for code changes and make sure all items are checked off.\n   - While you've described the frontend components well, please also mention the significant backend changes (new API routes in `/api/builder`, pagination model extensions, etc.) that support this feature.\n\n2. **Implementation Notes**:\n   - The changes include backend routes and models to support the block menu functionality, which is good but should be mentioned in the PR description.\n   - I notice you've added several new npm packages (`react-timeago`, `tailwind-scrollbar`, etc.) - please include these in your description of changes.\n\n3. **Code Quality**:\n   - The backend implementation looks solid with well-structured endpoints and models.\n   - Good job on the TODO markers for future work.\n\nPlease update the PR description to include the missing checklist and mention the backend changes that support this feature. Once these items are addressed, the PR will be ready for another review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR to redesign the block menu! I've identified a few issues that need to be addressed before this can be merged:\n\n1. **Scope mismatch**: While your PR title indicates this is a frontend change, approximately half of the changes are backend-related (new API endpoints, models, database functions). The PR title and description should accurately reflect all major components being changed.\n\n2. **Missing checklist**: For substantial code changes like this, the PR template checklist needs to be completed to ensure proper testing and quality checks. Please add the checklist and check off the appropriate items.\n\n3. **Backend changes documentation**: The PR description doesn't mention any of the backend changes. Please update the description to include details about the new backend/server/v2/builder files and endpoints you're adding.\n\nAdditionally, I notice you've marked some items with \"BLOCK MENU TODO:\" for future work. If these are part of this redesign effort but will be addressed in separate PRs, that's fine, but please make that clear in the description.\n\nOnce you've updated the PR title to accurately reflect both frontend and backend changes, completed the required checklist, and expanded the description to cover all major components being changed, we can proceed with the review process.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for your PR on redesigning the block menu. I noticed a few things that need to be addressed before this can be merged:\n\n1. **Missing Checklist**: Please include the complete PR checklist in your description. Since your changes include significant code modifications, you'll need to add the checklist with appropriate test plans.\n\n2. **Scope Mismatch**: Your PR title only mentions frontend changes (`feat(frontend)`), but the diff shows substantial backend additions including:\n   - New API routes in `/api/builder`\n   - New database functionality\n   - New models and response types\n\n   Please update your PR title to reflect both the frontend and backend changes, perhaps something like `feat(frontend,backend): Redesign block menu on builder page`.\n\n3. **PR Description**: Consider enhancing your description to explain more about the purpose of the backend changes and how they relate to the frontend block menu redesign.\n\nThe changes themselves look promising, but we need to ensure the PR follows our submission guidelines before proceeding with the review of the actual implementation. Please make these updates so we can move forward with the review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your work on redesigning the block menu! I have a few concerns that need to be addressed before this PR can be merged:\n\n1. **Missing Checklist**: The PR description is missing the required checklist. Please update your description to include the standard checklist and fill it out completely.\n\n2. **Scope Mismatch**: The PR title mentions only frontend changes (`feat(frontend)`), but the diff shows significant backend changes as well. Please update the PR title to accurately reflect the scope of your changes. Something like `feat(platform): Redesign block menu on builder page` or `feat(platform/frontend,platform/backend): Redesign block menu on builder page` would be more appropriate.\n\n3. **Backend Changes**: The PR includes substantial backend additions:\n   - New builder routes and endpoints\n   - New database functions and models\n   - Changes to the store API\n\nPlease make sure to include these backend changes in your test plan when you add the checklist.\n\nOnce these items are addressed, we can proceed with the review of the code itself. The overall direction of the redesign looks promising!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for working on redesigning the block menu. I see you've created several reusable components for this feature.\n\nI have two main concerns with this PR:\n\n1. **Missing Checklist**: Your PR description is missing the required checklist that should cover testing plan and other verification steps. Please update your description to include the standard checklist and fill it out appropriately.\n\n2. **Scope Mismatch**: Your PR title mentions only a frontend redesign, but the changes include significant backend work. I see new backend files for a builder API, including routes, models, and database functionality. The PR title should reflect both frontend and backend changes, something like: `feat(frontend,backend): Redesign block menu and add builder API`\n\nPlease update your PR to address these issues so we can proceed with the review. The code changes themselves look well-structured, but we need to ensure the PR follows our process requirements.\n\nAlso, I noticed you've marked some items with `BLOCK MENU TODO:` for future work. That's a good approach for tracking remaining tasks.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Hi @Abhi1992002, thanks for your work on redesigning the block menu. I have some feedback to help get this PR ready for merging:\n\n## Required Changes\n\n1. **PR Description & Checklist**\n   - Please include the complete PR checklist from our template, including your test plan\n   - The description should explain both the frontend and backend changes\n\n2. **PR Scope**\n   - Your PR title mentions only frontend changes, but there are significant backend changes\n   - Please update the title to reflect both (e.g., `feat(frontend,backend): Redesign block menu on builder page`)\n\n3. **Backend Testing**\n   - The new API endpoints should have proper testing documentation\n   - Please describe how you've tested the new endpoints\n\n4. **User ID Security**\n   - For the new backend routes, please confirm that user_id checks are properly implemented\n\n## Questions\n\n1. What testing have you done for both the frontend components and backend endpoints?\n2. Are there any configuration changes needed for these new components?\n3. How do the new endpoints interact with the redesigned block menu?\n\nOnce these items are addressed, I'd be happy to re-review the PR. Thanks!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for working on redesigning the block menu for the builder page! This is an important improvement that will enhance the user experience. However, there are a couple of issues that need to be addressed before we can merge this PR:\n\n1. **Missing Checklist**: The PR template requires a filled-out checklist for all code changes. Please update your PR description to include the checklist from the template with all applicable items checked.\n\n2. **Scope Mismatch**: Your PR title indicates this is a frontend change, but the diff contains significant backend changes including:\n   - Adding new backend routes under `/api/builder`\n   - Creating new backend models and database functions\n   - Modifying the store API\n\n   Please either:\n   - Update the PR title to something like `feat(platform): Redesign block menu with backend support` to accurately reflect both frontend and backend changes, or\n   - Split this into separate PRs for frontend and backend changes\n\nAdditionally, while your PR description lists the components you've added, it would be helpful to include a brief explanation of the backend changes as well.\n\nOnce these items are addressed, we can proceed with the review of the implementation details. The component organization looks good, and I appreciate your marking future tasks with the `BLOCK MENU TODO:` tag for easy reference.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for working on the block menu redesign! This PR adds important components and functionality for the builder page.\n\n### Key Issues to Address\n\n1. **Missing Checklist:** Please add the required checklist to your PR description. This is mandatory for code changes and should include details about your test plan.\n\n2. **Scope Clarification:** Your PR title focuses on frontend changes, but includes significant backend changes (new endpoints, models, DB functions). While these backend changes appear necessary to support the frontend redesign, consider either:\n   - Updating the PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu on builder page with supporting API`)  \n   - OR splitting the PR into separate frontend and backend PRs if that makes sense\n\n3. **PR Conflicts:** There's a conflicts label on your PR - please resolve these merge conflicts.\n\n### Additional Notes\n\n- The TODO comments you've marked with `BLOCK MENU TODO:` are fine as placeholders for future work.\n- Good job properly implementing auth middleware on the new API routes.\n- Consider adding more details about what the redesigned block menu includes and what improvements it brings.\n\nOnce you've addressed these issues, particularly adding the required checklist, the PR should be ready for another review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR to redesign the block menu! The implementation looks thorough with many new components created for the builder page.\n\nHowever, I've noticed a couple of issues that need to be addressed before this can be merged:\n\n1. **Missing checklist**: The PR description is missing the required checklist from our PR template. Since this is a significant code change, please update your PR description to include a completed checklist with items like:\n   - Confirmation that you've tested your changes\n   - A test plan outlining how you verified your implementation works correctly\n\n2. **Scope mismatch**: Your PR title mentions only frontend changes, but the PR includes substantial backend implementations including:\n   - A new backend/server/v2/builder module with model, db, and routes files\n   - New API endpoints\n   - Modifications to existing store functionality\n\n   Please update your PR title to reflect both frontend and backend changes, perhaps something like: `feat(frontend,backend): Redesign block menu and add builder API endpoints`\n\nOnce these issues are addressed, we can proceed with the review of your implementation. The code itself looks well-structured with appropriate user_id handling in the backend functions.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for your PR on redesigning the block menu! There are a few items that need to be addressed before this can be merged:\n\n## Missing Required Information\n\n1. **Checklist**: Your PR is missing the required checklist section. Since this PR involves significant code changes, we need to ensure all necessary checks have been completed.\n\n2. **Test Plan**: Please include details on how you've tested these changes.\n\n## Scope Clarification\n\nYour PR title mentions frontend redesign, but includes significant backend changes (new API endpoints, models, etc.). While these backend changes appear to support the frontend redesign, it would be helpful to:\n\n- Update your PR title to reflect both frontend and backend changes, e.g., `feat(platform): Redesign block menu with supporting backend APIs`\n- OR clarify in your description how the backend changes are necessary for the frontend redesign\n\n## Documentation\n\nPlease add some brief documentation on the new backend endpoints you've created to help other developers understand their purpose and how they relate to the block menu redesign.\n\nThe code itself looks good - I see you've properly protected all routes with auth middleware and correctly handle user_id passing where needed. Once you've addressed these items, we can proceed with the review.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for working on redesigning the block menu! This is an important improvement for the builder page UI. I've identified a couple of issues that need to be addressed before this PR can be merged:\n\n1. The PR description is missing the required checklist. Please update your description to include the checklist from our template, with all applicable items checked off.\n\n2. The PR title mentions only frontend changes (`feat(frontend)`), but the PR includes significant backend additions (new routes, models, and DB functions in `/backend/server/v2/builder/`). Either:\n   - Update the PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu with backend support`)\n   - Or split this into separate PRs for frontend and backend changes\n\nYour implementation looks good overall - I can see you've built reusable components and made sure the backend functions properly handle user_id for authentication. Please address the issues above so we can proceed with the review.\n\nNote: There's also a conflict label on this PR that will need to be resolved before merging.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR to redesign the block menu on the builder page! This looks like a substantial piece of work that adds many components and backend support.  \n\nHowever, I've noticed a few issues that need to be addressed before this can be merged:\n\n1. **Missing Checklist**: Your PR is missing the required checklist. Please add the complete checklist from the PR template and check off the items you've completed. Given the scope of your changes, the checklist is necessary to ensure everything has been properly tested.\n\n2. **PR Title/Scope Mismatch**: Your PR title only mentions frontend changes, but there are significant backend changes as well (new API routes, database functions, models). Please update your PR title to reflect both aspects, perhaps something like: `feat(frontend,backend): Redesign block menu on builder page with API support`\n\n3. **Test Plan**: Please provide a test plan detailing how you've verified that both the frontend components and backend API routes work correctly.\n\n4. **PR Description**: Consider expanding your description to briefly explain the purpose of the backend changes and how they support the frontend redesign.\n\nYour component organization looks good, and I appreciate that you've marked future tasks with `BLOCK MENU TODO:`. Once you address these items, we'll be able to move forward with the review process.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for your contribution to redesign the block menu! This is a substantial PR with changes across both frontend and backend.\n\n### Missing Required Checklist\n\nPlease add the standard PR checklist to your description and complete it. This is required for all PRs with material code changes. The checklist helps ensure you've tested your changes appropriately and considered all necessary factors.\n\n### Scope Consideration\n\nYour PR title mentions frontend changes, but there are significant backend changes as well (new API endpoints, database functions, models). Consider either:\n1. Updating the PR title to reflect both frontend and backend changes, or\n2. Splitting this into two PRs if the changes are separable (one for backend support, one for frontend implementation)\n\n### TODOs in Code\n\nYou mentioned \"Some tasks are planned for the near future. I've marked them with `BLOCK MENU TODO:` so they can be found easily.\" Please ensure that these TODOs are addressed before the PR is merged, or create follow-up issues to track them.\n\n### Other Notes\n\n- The new backend endpoints look well-structured with appropriate auth middleware\n- The implementation seems comprehensive with search functionality, filtering, and pagination\n- Good job on adding new dependencies in package.json for the enhanced UI components\n\nPlease update your PR description with the required checklist and consider the scope recommendation.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR! I noticed a few issues that need to be addressed before this can be merged:\n\n## Missing Checklist\nYour PR contains significant code changes but doesn't include the required checklist. Please add the standard checklist to your PR description and ensure all items are checked off.\n\n## Scope Mismatch\nYour PR title mentions only frontend changes (`feat(frontend): Redesign block menu on builder page`), but the actual changes include extensive backend work:\n- New backend routes in `/api/builder/`\n- New database functions and models for builder functionality\n- Changes to store and library endpoints\n\nPlease update your PR title to reflect both frontend and backend changes, for example: `feat(frontend,backend): Redesign block menu and add builder API endpoints`\n\n## PR Description Needs Expansion\nPlease provide more details in your PR description:\n- What problem does this redesign solve?\n- What are the key changes in both frontend and backend?\n- How should reviewers test these changes?\n\nThe current description lists small components but doesn't explain the overall architecture or the backend additions.\n\nOnce these issues are addressed, I'll be happy to review this PR again. Let me know if you need any clarification!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for your PR on redesigning the block menu! I have a couple of important issues that need to be addressed before this can be merged:\n\n## Required Changes\n\n1. **Missing Checklist**: The PR template requires a checklist to be completed for code changes. Please update your PR description to include the standard checklist and complete it.\n\n2. **PR Title/Scope Mismatch**: Your PR title indicates this is a frontend change (`feat(frontend)`), but the vast majority of changes are actually backend-related. The PR adds several new backend files (db.py, model.py, routes.py) and modifies existing backend code.\n\n   Please update your PR title to accurately reflect the scope of changes, such as `feat(platform): Redesign block menu with backend support` or similar that reflects both the frontend and backend work.\n\n3. **PR Description**: Consider expanding your PR description to explain why this redesign was needed and how it improves the current implementation. \n\n## Additional Notes\n\n- Your backend code changes look good from a security perspective - the functions properly use user_id for access control.\n- I noticed you've added a TODO comment \"BLOCK MENU TODO:\" for future work. Make sure these are tracked separately if they won't be addressed in this PR.\n- You've added some new dependencies in package.json (tailwind-scrollbar, react-timeago, etc.) - it would be helpful to mention these in the PR description.\n\nPlease update your PR with these changes so we can proceed with the review process. Let me know if you need any clarification!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for your work on redesigning the block menu! I noticed a few issues that need to be addressed before this PR can be merged:\n\n## Description and Scope\n\n- Your PR title indicates only frontend changes, but there are significant backend changes (new API routes, models, etc.). The scope in the title should reflect all areas being modified, such as `feat(platform)` or both frontend and backend.\n- The PR description focuses on frontend components but doesn't mention the backend API work. Please update your description to include details about all changes made.\n\n## Missing Required Checklist\n\n- The PR is missing the required checklist that should be filled out completely. Since this includes substantial code changes, please add the checklist and check off all applicable items.\n- Please include a test plan detailing how you've verified the changes work correctly.\n\n## Suggested Changes\n\n1. Update the PR title to correctly represent the scope of changes (e.g., `feat(platform): Redesign block menu on builder page`)\n2. Expand the PR description to include details about the backend API changes\n3. Add the required checklist template and fill it out completely\n4. Include a test plan that describes how you've tested these changes\n\nOnce these issues are addressed, we can proceed with reviewing the code changes in detail.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your PR to redesign the block menu! I've reviewed your changes and have a few concerns that need to be addressed before this can be merged:\n\n## Missing Checklist\nThe PR description is missing the required checklist for code changes. Please update your description to include the standard checklist that confirms you've tested your changes properly.\n\n## Scope Mismatch\nYour PR title indicates this is a frontend change (`feat(frontend): Redesign block menu on builder page`), but the changes include significant backend additions:\n- New builder API endpoints\n- New database functions\n- New models and data structures\n\nThese backend changes appear to be more than 20% of the total changes, which exceeds our scope guidelines. You have two options:\n\n1. Split this into two PRs: one for frontend and one for backend changes\n2. Update the PR title to reflect both areas (e.g., `feat(frontend,backend): Redesign block menu with supporting API endpoints`)\n\nThe new backend code looks good in terms of security and user_id handling, but we need to ensure the PR accurately represents the work being done.\n\nPlease update your PR accordingly, and let me know if you need any help or clarification!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thanks for the PR to redesign the block menu! The components structure you've listed looks well organized.\n\nI noticed a couple of issues that need to be addressed before this can be merged:\n\n1. **Missing checklist**: The PR template requires a checklist section to be completed for code changes. Please add the checklist from the template and fill it out appropriately, especially including your test plan.\n\n2. **Scope mismatch**: Your PR title indicates this is purely a frontend change (`feat(frontend)`), but the PR contains substantial backend changes including:\n   - New backend API routes in `/api/builder`\n   - New backend models and database methods\n   - Changes to existing backend services\n\nPlease update either:\n   - The PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu and add builder API endpoints`)\n   - OR split this into separate PRs for frontend and backend changes\n\nAlso, I notice you've marked some tasks with \"BLOCK MENU TODO\" for future work. It would be helpful to clarify in the PR description which parts are complete in this PR and which parts are planned for future PRs.\n\nLet me know if you need any help with these changes!",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "## Summary\r\n\r\nThis PR introduces a Redesigned Block Menu for the builder and all the relevant backend changes. The implementation includes a complete set of reusable UI components, state management, pagination hooks, and search/filter functionality to enhance the user experience when selecting and adding blocks and agents to their workflows.\r\n\r\n## Screenshot\r\n\r\n![Screenshot 2025-06-06 at 7 15 04 PM](https://github.com/user-attachments/assets/90476084-1996-4653-bcc1-d41e09a9dd84)\r\n\r\n## Design fil",
    "comment body": "Thank you for your work on redesigning the block menu for the builder page. However, there are a couple of issues that need to be addressed before this PR can be merged:\n\n1. **Missing Checklist**: Your PR is missing the required checklist section. Please update your PR description to include the standard checklist and fill it out completely. This helps ensure all necessary steps have been completed before merging.\n\n2. **Scope Mismatch**: Your PR title mentions only frontend changes (`feat(frontend): Redesign block menu on builder page`), but the PR includes extensive backend changes as well. I see new backend routes, models, and database functions being added in:\n   - `backend/server/v2/builder/db.py`\n   - `backend/server/v2/builder/model.py`\n   - `backend/server/v2/builder/routes.py`\n   - And modifications to several other backend files\n\nYou have two options to address this:\n   - Update your PR title to reflect both frontend and backend changes, such as `feat(platform): Redesign block menu with supporting backend APIs`\n   - Or split this into separate PRs - one for frontend and one for backend changes\n\nPlease make these adjustments so we can proceed with the review. The changes themselves look valuable, but we need to ensure the PR follows our standards.",
    "diff_length": 314421,
    "label": null
  },
  {
    "pr body": "This incremental re-architecture unifies Agent code and plugins, so everything is component-based.\r\n\r\n## Breaking changes\r\n\r\n- Removed command categories and `DISABLED_COMMAND_CATEGORIES` environment variable. Use `DISABLED_COMMANDS` environment variable to disable individual commands.\r\n- Changed `command` decorator; old-style commands are no longer supported. Implement `CommandProvider` on components instead.\r\n- Removed `CommandRegistry`, now all commands are provided by components implementing",
    "comment body": "## PR Review\n\n<table>\n<tr>\n<tr><td> ⏱️&nbsp;<strong>Estimated&nbsp;effort&nbsp;to&nbsp;review [1-5]</strong></td><td>\n\n4, because the PR introduces a significant re-architecture of the Agent system into a component-based model, affecting multiple files and introducing new patterns and abstractions. The complexity and breadth of changes require a thorough review to ensure compatibility, performance, and maintainability.\n\n\n</td></tr>\n<tr><td> 🧪&nbsp;<strong>Relevant tests</strong></td><td>\n\nNo\n\n\n</td></tr>\n<tr><td rowspan=2> 🔍&nbsp;<strong>Possible issues</strong></td>\n<td>\n\n<strong>Possible Bug:</strong> The use of `legacy_config` directly in components might lead to issues if the configuration is expected to change at runtime, as the components may not react to these changes.</td></tr>\n<tr>\n<td>\n\n<strong>Design Concern:</strong> The removal of the `CommandRegistry` and direct use of command methods in components might reduce the flexibility in managing commands, especially dynamically at runtime.</td></tr>\n<tr><td> 🔒&nbsp;<strong>Security concerns</strong></td><td>\n\nNo\n\n</td></tr>\n</table>\n\n\n<details><summary> <strong>Code feedback:</strong></summary>\n\n<hr><table><tr><td>relevant file</td><td>autogpts/autogpt/autogpt/commands/web_selenium.py\n</td></tr><tr><td>suggestion &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>\n\n<strong>\n\nConsider implementing error handling for `WebDriverException` in `open_page_in_browser` method to manage different types of browser errors more gracefully. This can help in providing more descriptive error messages to the user or taking specific actions based on different errors. [important]\n\n</strong>\n</td></tr><tr><td>relevant line</td><td><a href='https://github.com/Significant-Gravitas/AutoGPT/pull/7054/files#diff-543485d07f41c54e75a19468aba500f9c77714408119428b2b5f4bfcbef497f6R308'>EC.presence_of_element_located((By.TAG_NAME, \"body\"))</a></td></tr></table><hr>\n\n<table><tr><td>relevant file</td><td>autogpts/autogpt/autogpt/commands/web_selenium.py\n</td></tr><tr><td>suggestion &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>\n\n<strong>\n\nRefactor the `scrape_text_with_selenium` method to move the BeautifulSoup parsing logic to a separate method. This will improve modularity and make the method easier to maintain and test. [medium]\n\n</strong>\n</td></tr><tr><td>relevant line</td><td><a href='https://github.com/Significant-Gravitas/AutoGPT/pull/7054/files#diff-543485d07f41c54e75a19468aba500f9c77714408119428b2b5f4bfcbef497f6R201'>soup = BeautifulSoup(page_source, \"html.parser\")</a></td></tr></table><hr>\n\n<table><tr><td>relevant file</td><td>autogpts/autogpt/autogpt/commands/image_gen.py\n</td></tr><tr><td>suggestion &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>\n\n<strong>\n\nFor the `generate_image_with_hf` method, consider adding retry logic with exponential backoff instead of a fixed delay loop. This approach is more robust and can handle API rate limits or temporary network issues more effectively. [important]\n\n</strong>\n</td></tr><tr><td>relevant line</td><td><a href='https://github.com/Significant-Gravitas/AutoGPT/pull/7054/files#diff-28ec30c9b2ec06ea537f6e01e56638862eab9a663c952277cef40a426594ab7dR122'>time.sleep(delay)</a></td></tr></table><hr>\n\n<table><tr><td>relevant file</td><td>autogpts/autogpt/autogpt/commands/web_search.py\n</td></tr><tr><td>suggestion &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>\n\n<strong>\n\nIn the `google` method, add detailed error logging for different types of `HttpError`. This will help in debugging and understanding the specific reasons for request failures, especially in a production environment. [medium]\n\n</strong>\n</td></tr><tr><td>relevant line</td><td><a href='https://github.com/Significant-Gravitas/AutoGPT/pull/7054/files#diff-b4d21e52f10701dccbeb2772e2af022c3a3388194a87ab43ad7bd941c6626cb6R160'>except HttpError as e:</a></td></tr></table><hr>\n\n</details><hr>\n\n<details> <summary><strong>✨ Review tool usage guide:</strong></summary><hr> \n\n**Overview:**\nThe `review` tool scans the PR code changes, and generates a PR review which includes several types of feedbacks, such as possible PR issues, security threats and relevant test in the PR. More feedbacks can be [added](https://pr-agent-docs.codium.ai/tools/review/#general-configurations) by configuring the tool.\n\nThe tool can be triggered [automatically](https://pr-agent-docs.codium.ai/usage-guide/automations_and_usage/#github-app-automatic-tools-when-a-new-pr-is-opened) every time a new PR is opened, or can be invoked manually by commenting on any PR.\n- When commenting, to edit [configurations](https://github.com/Codium-ai/pr-agent/blob/main/pr_agent/settings/configuration.toml#L23) related to the review tool (`pr_reviewer` section), use the following template:\n```\n/review --pr_reviewer.some_config1=... --pr_reviewer.some_config2=...\n```\n- With a [configuration file](https://pr-agent-docs.codium.ai/usage-guide/configuration_options/), use the following template:\n```\n[pr_reviewer]\nsome_config1=...\nsome_config2=...\n```\n    \n\nSee the review [usage page](https://pr-agent-docs.codium.ai/tools/review/) for a comprehensive guide on using this tool.\n\n\n</details>\n",
    "diff_length": 305745,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "FYI I deleted all the comments with a script to clean up all the deployment testing",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "🧹 **Preview Environment Cleaned Up**\n\nAll resources for PR #10074 have been removed:\n- ☸️ Kubernetes namespace deleted\n- 🗃️ Database schema `pr10074` dropped\n\n*Cleanup completed successfully.*",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "❌ **Preview Environment Deployment Failed**\n\n🚨 The preview environment deployment encountered critical errors and has been rolled back.\n\n**Cleanup Completed:**\n- ☸️ Kubernetes namespace deleted\n- 🗃️ Database schema dropped\n- 🔌 All services terminated\n\n*Please check the workflow logs for details and try again.*",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "Note: I've only reviewed the backend side of this\r\n\r\nFor tests, I'd like to see the full extent of the builder implications tested. \r\nEX: we can do with API key, with OAuth, with extra config, etc, all in one go. It shouldn't be too bad to keep up with due to Claude\r\n\r\nIt's also not clear to me if the builder is order-dependent or if it contains its own internal state machine for stepping through the order as it decides. Do the two examples below behave the same?\r\n```\r\nblah\r\n.withOAuth()\r\n.withApiKey()\r\n.build()\r\n\r\nvs \r\n\r\nblah\r\n.withApiKey()\r\n.withOAuth()\r\n.build()\r\n```\r\n\r\nAlso suggested a few things that I think can make it easier for people / AI to work with",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "> Note: I've only reviewed the backend side of this\r\n> \r\n> For tests, I'd like to see the full extent of the builder implications tested. EX: we can do with API key, with OAuth, with extra config, etc, all in one go. It shouldn't be too bad to keep up with due to Claude\r\n> \r\n> It's also not clear to me if the builder is order-dependent or if it contains its own internal state machine for stepping through the order as it decides. Do the two examples below behave the same?\r\n> \r\n> ```\r\n> blah\r\n> .withOAuth()\r\n> .withApiKey()\r\n> .build()\r\n> \r\n> vs \r\n> \r\n> blah\r\n> .withApiKey()\r\n> .withOAuth()\r\n> .build()\r\n> ```\r\n> \r\n> Also suggested a few things that I think can make it easier for people / AI to work with\r\n\r\nThe order of builder functions does not matter other than build going at the end",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "comment body": "🧹 **Preview Environment Cleaned Up**\n\nAll resources for PR #10074 have been removed:\n- ☸️ Kubernetes namespace deleted\n- 🗃️ Database schema `pr_10074` dropped\n\n*Cleanup completed successfully.*",
    "diff_length": 298181,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thank you for your contribution to improve the scheduling UX in the platform library! I see that you've added several important features like API+backend data paths for scheduling, buttons for creating/deleting schedules, and updated the scheduling API.\n\nHowever, I cannot approve this PR yet because:\n\n1. **The checklist is incomplete** - Please check off all the items or remove sections that aren't applicable. At minimum, we need to see that you've:\n   - Clearly listed your changes (which you have)  \n   - Made and executed a test plan\n\n2. **Missing test plan** - Please add details about how you've tested these scheduling features. For example:\n   - Creating a schedule for an agent\n   - Verifying the schedule executes correctly\n   - Deleting a schedule\n   - Testing the UI components for scheduling\n\nOnce you've addressed these items, we can proceed with the review. The changes themselves look appropriate for the scope described in the PR title.",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "if you read this, it works! :rocket:",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thank you for working on the scheduling feature implementation! There are a few things that need to be addressed before this PR can be merged:\n\n### Missing Information\n\n1. **Checklist**: Please complete the checklist in the PR description. All items need to be checked off to indicate you've verified them.\n\n2. **Test Plan**: Please add a test plan explaining how you've tested these changes.\n\n3. **Backend Data Changes**: Since there are modifications to backend/data files, please explain how user_id checking is handled in the new/modified functions.\n\n### Scope Alignment\n\nThe PR title mentions \"platform/library\" but the changes span both frontend and backend components (which is also reflected in the PR labels). Consider updating the title to better reflect the scope of changes, perhaps something like: `feat(platform): Scheduling UX implementation`\n\n### Description Enhancements\n\nConsider expanding the description to better capture all the changes made. For example:\n- What specific API endpoints were updated/added?\n- How does the new scheduling flow work from a user perspective?\n- Are there any database changes or migrations needed?\n\nOnce these items are addressed, we'll be happy to review this PR again for merging. Thanks for your contribution to improving the scheduling feature!",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thank you for working on completing the scheduling feature implementation in the Library. There are a few items that need to be addressed before this PR can be merged:\n\n1. **Checklist Completion**: Please complete the checklist in the PR description. Each item needs to be checked off to confirm you've verified these aspects of your changes.\n\n2. **Test Plan**: Include a specific test plan that outlines how you've tested the scheduling functionality. This should cover creating schedules, deleting schedules, and verifying that scheduled runs execute as expected.\n\n3. **PR Scope**: The title mentions only 'platform/library' but your changes span across both frontend and backend components (as evidenced by the file changes and labels). Consider updating the title to better reflect the full scope of changes, such as 'feat(platform): Complete scheduling implementation in Library'.\n\n4. **More Detailed Description**: While your description lists the changes, it would be helpful to provide a bit more context about how these changes improve the scheduling UX and what the expected user experience will be after these changes.\n\nOnce these items are addressed, your PR will be ready for another review.",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thank you for your PR implementing scheduling features in the Library. I have a few points of feedback to help get this ready for merging:\n\n1. **Checklist not completed**: None of the checkboxes in the PR description are checked. Please complete the checklist by checking off all items or removing sections that are not applicable.\n\n2. **Scope in title doesn't match changes**: Your PR title indicates `feat(platform/library)`, but the changes span both frontend and backend components. Consider updating the title to better reflect the scope, perhaps something like `feat(platform): Scheduling UX` or `feat(platform/library,backend): Scheduling UX`.\n\n3. **Backend data modifications**: Since you're modifying files in `backend/data/`, please ensure that any added/changed functions pass the user_id and compare it correctly, or provide an explanation for why this isn't needed.\n\n4. **Test plan**: Please include a test plan that describes how you've tested these scheduling features.\n\nOnce you address these points, we can proceed with the review of the actual code changes.",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thank you for your detailed PR on enhancing the scheduling UX! The description and implementation plan look thorough and well-organized.\n\nHowever, I notice your checklist indicates you haven't completed testing according to your test plan yet. Before this PR can be merged, please:\n\n1. Complete the testing steps you've outlined in your checklist\n2. Check the box to confirm testing has been completed\n\nYour test plan looks comprehensive, covering schedule creation, execution, deletion, and UI state management. Once you've verified all these aspects work correctly, please update the PR.\n\nThe changes themselves look appropriate for the scope defined in your PR title (platform/library scheduling UX improvements), covering both frontend and backend components needed for this feature.",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "Thanks for this comprehensive PR improving the scheduling functionality! The changes look well-organized and clearly documented.\n\nHowever, I noticed that many of your test plan items are not checked off:\n- You've verified that newly created schedules appear in the list\n- But you haven't confirmed that scheduled runs execute successfully\n- You also haven't verified the deletion functionality works properly\n- And you haven't tested the UI behavior when the last schedule is deleted\n\nBefore we can merge this PR, please complete the testing according to your test plan and update the checklist to reflect the completed tests. This will ensure that all the functionality you've implemented works as expected.\n\nLet me know if you encounter any issues during testing that need to be addressed!",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "Complete the implementation of the Agent Run Scheduling UX in the Library.\r\n\r\nDemo:\r\n\r\nhttps://github.com/user-attachments/assets/701adc63-452c-4d37-aeea-51788b2774f2\r\n\r\n### Changes 🏗️\r\n\r\nFrontend:\r\n- Add \"Schedule\" button + dialog + logic to `AgentRunDraftView`\r\n  - Update corresponding logic on `AgentRunsPage`\r\n  - Add schedule name field to `CronSchedulerDialog`\r\n    - Amend Builder components `useAgentGraph`, `FlowEditor`, `RunnerUIWrapper` to also handle schedule name input\r\n    - Split `Cr",
    "comment body": "If you read this, the demo works 8)",
    "diff_length": 91656,
    "label": null
  },
  {
    "pr body": "### Background\r\n\r\nCurrently most agent and component configuration is stored in one class `Config` and loaded from environment variables.\r\n\r\n### Changes 🏗️\r\n\r\nThis PR introduces component-level configuration which decouples components from `Config` and mostly from env vars. Configs are pydantic models serialized as json because it's natively supported by pydantic. Credentials remain as env vars and those are `SecretVar`s excluded from serialization.\r\n\r\n### Changed\r\n\r\n- `BaseAgent` provides `seri",
    "comment body": "Is there a way to list all the config options dynamically?",
    "diff_length": 143579,
    "label": null
  },
  {
    "pr body": "### Background\r\n\r\nCurrently most agent and component configuration is stored in one class `Config` and loaded from environment variables.\r\n\r\n### Changes 🏗️\r\n\r\nThis PR introduces component-level configuration which decouples components from `Config` and mostly from env vars. Configs are pydantic models serialized as json because it's natively supported by pydantic. Credentials remain as env vars and those are `SecretVar`s excluded from serialization.\r\n\r\n### Changed\r\n\r\n- `BaseAgent` provides `seri",
    "comment body": "> Is there a way to list all the config options dynamically?\r\n\r\nYes, `BaseAgent` has function `dump_component_configs() -> str`",
    "diff_length": 143579,
    "label": null
  },
  {
    "pr body": "### Background\r\n\r\nCurrently most agent and component configuration is stored in one class `Config` and loaded from environment variables.\r\n\r\n### Changes 🏗️\r\n\r\nThis PR introduces component-level configuration which decouples components from `Config` and mostly from env vars. Configs are pydantic models serialized as json because it's natively supported by pydantic. Credentials remain as env vars and those are `SecretVar`s excluded from serialization.\r\n\r\n### Changed\r\n\r\n- `BaseAgent` provides `seri",
    "comment body": "@kcze can you do a final double-check on the change list? After that, LGTM! :)",
    "diff_length": 143579,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "Ready for review while I iron out the last few details",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "Convert this to an issue plz?\r\n> Nice-to-have: make a button on webhook blocks to trigger a ping and check its result. The API endpoints for this is already implemented.",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "![image](https://github.com/user-attachments/assets/f1d2b2a2-7550-456e-af11-1754fe3d1a5a)\r\ncredentials seems non compatible with #8516 \r\n\r\nAlso hit this issue \r\n```\r\nINFO:     127.0.0.1:64414 - \"POST /api/graphs HTTP/1.1\" 400 Bad Request\r\n2024-11-12 19:01:02,046 ERROR  POST /api/graphs failed: Failed to create GitHub webhook: Validation Failed\r\n* url is missing a scheme\r\nTraceback (most recent call last):\r\n  File \"/Users/ntindle/Library/Caches/pypoetry/virtualenvs/autogpt-platform-backend-LOXRIHzA-py3.12/lib/python3.12/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\r\n    await app(scope, receive, sender)\r\n  File \"/Users/ntindle/Library/Caches/pypoetry/virtualenvs/autogpt-platform-backend-LOXRIHzA-py3.12/lib/python3.12/site-packages/starlette/routing.py\", line 73, in app\r\n    response = await f(request)\r\n               ^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/Library/Caches/pypoetry/virtualenvs/autogpt-platform-backend-LOXRIHzA-py3.12/lib/python3.12/site-packages/sentry_sdk/integrations/fastapi.py\", line 143, in _sentry_app\r\n    return await old_app(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/Library/Caches/pypoetry/virtualenvs/autogpt-platform-backend-LOXRIHzA-py3.12/lib/python3.12/site-packages/fastapi/routing.py\", line 301, in app\r\n    raw_response = await run_endpoint_function(\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/Library/Caches/pypoetry/virtualenvs/autogpt-platform-backend-LOXRIHzA-py3.12/lib/python3.12/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\r\n    return await dependant.call(**values)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/server/routers/v1.py\", line 186, in create_new_graph\r\n    return await do_create_graph(create_graph, is_template=False, user_id=user_id)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/server/routers/v1.py\", line 221, in do_create_graph\r\n    graph = await on_graph_activate(\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/integrations/webhooks/graph_lifecycle_hooks.py\", line 43, in on_graph_activate\r\n    updated_node = await on_node_activate(\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/integrations/webhooks/graph_lifecycle_hooks.py\", line 140, in on_node_activate\r\n    new_webhook = await webhooks_manager.get_suitable_webhook(\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/integrations/webhooks/base.py\", line 40, in get_suitable_webhook\r\n    return await self._create_webhook(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/integrations/webhooks/base.py\", line 138, in _create_webhook\r\n    provider_webhook_id, config = await self._register_webhook(\r\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/ntindle/code/agpt/AutoGPT/autogpt_platform/backend/backend/integrations/webhooks/github.py\", line 122, in _register_webhook\r\n    raise ValueError(f\"Failed to create GitHub webhook: {error_msg}\")\r\nValueError: Failed to create GitHub webhook: Validation Failed\r\n* url is missing a scheme\r\nINFO:     127.0.0.1:64466 - \"POST /api/graphs HTTP/1.1\" 400 Bad Request\r\n```\r\n\r\n![image](https://github.com/user-attachments/assets/ebd92341-5b65-4221-8c79-837e8eb934ef)\r\n\r\n\r\nWe should probably have a better error message than that for saying \"set your .env correctly\"",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "\r\nhttps://github.com/user-attachments/assets/d9a71e7f-f6ae-4483-a770-9e6cf87d045f\r\n\r\nrunning this agent gets me the following \r\n\r\nNote the weird credentials fields",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "Not sure if related but also can't delete creds",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "> running this agent gets me the following\r\n> \r\n> [video demonstrating error on run]\r\n\r\nGood catch. I'm not sure how to deal with this. The graph can't be run manually because it relies on a webhook to trigger it. Should we hide the \"Run\" button if a graph can't be run manually? Should it just do nothing?\r\n\r\n> Note the weird credentials fields\r\n\r\nDo you mean it still shows the field title **Credentials** while hiding the actual input? That is a bug, possibly improperly resolved merge conflict. I'll look into it.",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "Github PR review split the convos, im sorry <3",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "> Good catch. I'm not sure how to deal with this. The graph can't be run manually because it relies on a webhook to trigger it. Should we hide the \"Run\" button if a graph can't be run manually? Should it just do nothing?\r\n\r\nwhat's toran and john think",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "> The graph can't be run manually because it relies on a webhook to trigger it. Should we hide the \"Run\" button if a graph can't be run manually? Should it just do nothing?\r\n\r\nSo there needs to be a way of saying that you want your Agent to be \"Running\" - in this case listening for a webhook - or \"Stopped\" - i.e not listening on a webhook. I was thinking the run button would do that here.\r\n\r\nWhat's the current UX for this? Let's sync on this one @Pwuts as it's a lot for a comment.\r\n",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "Created follow-up ticket #8671",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "- Resolves #8352\r\n\r\n## Changes 🏗️\r\n\r\n- feat(blocks): Add GitHub Pull Request Trigger block\r\n\r\n### feat(platform): Add support for Webhook-triggered blocks\r\n- ⚠️ Add `PLATFORM_BASE_URL` setting\r\n\r\n- Add webhook config option and `BlockType.WEBHOOK` to `Block`\r\n  - Add check to `Block.__init__` to enforce type and shape of webhook event filter\r\n  - Add check to `Block.__init__` to enforce `payload` input on webhook blocks\r\n  - Add check to `Block.__init__` to disable webhook blocks if `PLATFORM_BA",
    "comment body": "> The advanced button here does nothing?\r\n\r\nThat's because the block has no \"advanced\" inputs, and the toggle doesn't hide when there is nothing to toggle.\r\n\r\n> We probably want these to be able to trivially link\r\n\r\nYes, there are a few ways to do that but most of those are out of scope for this PR and the rest not a sustainable fix imo. We should do a QOL improvement on all of the GitHub blocks to address stuff like this.\r\n\r\n> How do I pass a variable to this block [picture of GitHub webhook trigger block]\r\n\r\nYou don't. Due to the system's architecture, the webhook trigger block can't accept input links and must be the starting node.\r\n\r\n> Why is the output not number type for number\r\n\r\nBecause `NodeHandle` doesn't know what an `integer` is apparently:\r\nhttps://github.com/Significant-Gravitas/AutoGPT/blob/86535b5811f8d1cc0bdde2232693919c4b1115e3/autogpt_platform/frontend/src/components/NodeHandle.tsx#L22-L29\r\n\r\n- [ ] Add `integer` type to `NodeHandle` type list\r\n\r\n> we should probably allow the block to output the repo, URL, etc too for the trigger if its not taking in inputs\r\n\r\nMy idea for a sustainable and scalable fix for that is: allow directly connecting links to nested properties of object outputs. That's way out of scope for this PR.\r\n\r\nDue to the block layout, I don't want to add a large number of outputs because that just fills up the screen very quickly.\r\n\r\n> We need to clarify Payload, Sender and Pull request for normal people\r\n\r\nIf you don't know what a pull request is, why would you be using this block?\r\n\r\n- [x] Improve description of `payload` output\r\n\r\n> I'm not sure the diff in pull request and Payload\r\n\r\ncan't parse, come again?\r\n\r\n> I assume sender is creator?\r\n\r\nSender already has the description *\"Object representing the user who triggered the event\"*. Do you think that output also needs a better name, and if so what?\r\n\r\n> I have no idea (as a dev, not even user) how to debug this via UI. As a dev, I checked the raw output of the block in the logs. It just \"didn't work\" but succeeded from the UI perspective\r\n\r\nI also just debug by looking at the backend logs. Suggestions welcome.\r\n\r\nWe could store all incoming webhook payloads and add a view for that, but that's a significant feature addition. WDYT?\r\n\r\n> If a user does a bad design (ex: leaving out a value on a comparison) the webhook rejects but they should probably know that when saving because it will be an issue they won't be able to diagnose.\r\n\r\nYeah the node needs an indicator for whether a webhook is attached or not. Determining why can usually be done client-side, because it depends directly on whether the user filled out all the required inputs on the node.\r\n\r\n- [x] Create issue for webhook status indicator on webhook-triggered nodes\r\n\r\n> The Run button throws an error when you run (this is better than crashing tho)\r\n\r\nWould you rather hide the button? I'm not sure how to properly fix this.\r\n\r\n> We may want to do something to require platform base URL to be set if someone uses a trigger because currently it just doesn't do anything.\r\n\r\n- [x] Disable webhook-triggered blocks if `PLATFORM_BASE_URL` is not set\r\n- [x] Raise error in `BaseWebhooksManager` on attempt to create webhook if `PLATFORM_BASE_URL` is not set\r\n\r\n> we currently don't actually check platform base URL on inbound webhooks so we just execute from anything lol.\r\n> \r\n> > Replicate by running ngrok and disabling the line in your .env\r\n\r\nWhy would we need to check it on inbound webhook payloads? If it arrives, that's a job done. The `PLATFORM_BASE_URL` is only necessary to configure the webhook in the first place.",
    "diff_length": 179892,
    "label": null
  },
  {
    "pr body": "## Background\r\nThe so-called _agent loop_ of Auto-GPT currently lacks structural planning and task management. This impedes its long-term performance and also hampers the implementation of retrieval augmentation (see #3536).\r\n\r\n## Changes & other to-do's\r\n**Part 1 - Refactoring (#4799):**\r\n- [x] Rename module `agent` -> `agents`\r\n- [x] Check out LangChain's \"Plan and execute\" tools ([docs](https://python.langchain.com/docs/modules/agents/agent_types/plan_and_execute), [code](https://github.com/h",
    "comment body": "The [Plan-and-Solve Prompting](https://arxiv.org/pdf/2305.04091.pdf) paper they cite is some good reading and has an [accompanying GitHub repo](https://github.com/AGI-Edgerunners/Plan-and-Solve-Prompting).",
    "diff_length": 79344,
    "label": null
  },
  {
    "pr body": "Rough sketching out of a hello world using our refactored autogpt library. See the tracking issue here: #4770.\r\n\r\n# Run instructions\r\n\r\nThere are two client applications for Auto-GPT included. \r\n\r\n## CLI Application\r\n\r\n:star2: **This is the reference application I'm working with for now** :star2: \r\n\r\nThe first app is a straight CLI application.  I have not done anything yet to port all the friendly display stuff from the `logger.typewriter_log` logic.  \r\n\r\n- [Entry Point](https://github.com/Sign",
    "comment body": "@merwanehamadi I'm assuming that this could potentially be used for regression testing.",
    "diff_length": 147687,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "@djh82 would appreciate a re-review. I think I've fixed up all the issues",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "@scorphus thanks for your feedback! I believe that this rule would be worthwhile as I encountered it enough times to choose to spend my time on creating a rule for it. I tutor a computer science class where we teach git and have observed that I'm far from the only person to make this mistake. Since there's a rule for handling `git clone git clone`, which is useful when I type `git clone` then paste the URL, only for it to include its own `git clone` (Bitbucket does this), I'd say that this particular rule is reasonable enough, since it handles the opposite case.\r\n\r\nRE: your feedback on output matching, it does seem to be a little pointless. If you're interested in merging this PR at some point then I'll absolutely get rid of it.\r\n\r\nPerhaps it could search for `'git'` within the URL as an additional measure to avoid false positives? This would still work for all most of the popular git servers I'm aware of, at least using SSH. Would that change make the addition be worthwhile? Can you think of any other methods I could use to reduce the number of false positives?",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "Thanks for sharing your testimonial. Let's get this merged.\r\n\r\nRegarding matching the output, I thought about disregarding output altogether and caring only about `output.script` or `output.script_parts`.\r\n\r\nAsserting `git` in the URL would blacklist bitbucket repos.",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "Thanks again for the feedback! I fixed up things as per your suggestion, and also removed the code that checked the output.\r\n\r\nDouble checking, since I'm not entirely sure, should it check the URL for the presence of `git` somewhere? The only case I can think of that wouldn't work would be cloning using HTTPS on Bitbucket where `.git` has been manually removed from the end of their copied URL. Their SSH username is `git`, and their copy clone button copies the `git clone` part anyway. It would be helpful for preventing false positives such as [YouTube videos](https://www.youtube.com/watch?v=dQw4w9WgXcQ) (I apologise in advance).\r\n\r\n",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "Pretty sure I've got everything fixed up now! Let me know if there's anything else you'd like me to do!",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "Just bumping this one again @scorphus \r\nIs there anything else you want me to do on it?",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "@MiguelGuthridge, please let me know your thoughts about the last change I submitted.",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "comment body": "@MiguelGuthridge, thanks for the complete patch! Much appreciated! 🙌 ",
    "diff_length": 4096,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199300/badge)](https://coveralls.io/builds/8199300)\n\nCoverage decreased (-2.8%) to 90.289% when pulling **01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199300/badge)](https://coveralls.io/builds/8199300)\n\nCoverage decreased (-2.8%) to 90.289% when pulling **01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199300/badge)](https://coveralls.io/builds/8199300)\n\nCoverage decreased (-2.8%) to 90.289% when pulling **01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199743/badge)](https://coveralls.io/builds/8199743)\n\nCoverage increased (+0.08%) to 93.2% when pulling **b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199743/badge)](https://coveralls.io/builds/8199743)\n\nCoverage increased (+0.08%) to 93.2% when pulling **b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199743/badge)](https://coveralls.io/builds/8199743)\n\nCoverage increased (+0.08%) to 93.2% when pulling **b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199743/badge)](https://coveralls.io/builds/8199743)\n\nCoverage increased (+0.08%) to 93.2% when pulling **b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8199743/badge)](https://coveralls.io/builds/8199743)\n\nCoverage increased (+0.08%) to 93.2% when pulling **b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Cheers @scorphus! It was your comments on #561 that inspired me to do this. I figured it might save some effort going forward.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Thanks again for the comments, @scorphus! I made some more changes addressing them :)\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8215085/badge)](https://coveralls.io/builds/8215085)\n\nCoverage increased (+0.08%) to 93.2% when pulling **31e127da1d47f290c81eac6aa82cddd0b8190ba4 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Awesome, @josephfrazier!\n\nWell, I feel I can push this even further 😃  As you're in the process of fixing these issues and changes haven't yet made into master, what would you say if I suggested you to remove a couple of commits and squash those which are logically similar/related?\n\nCommit 85a3e34 is a revert of 4d9f177, both could be removed. Also, all EXYZ-related commits could be joined together, leaving one single commit per violation – E123, E225, E231, E265, E302, E402, E711 and E731.\n\nWhat do you think about getting a cleaner history?\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Good call @scorphus, I did a lot more error-fixing and cleaned up the history :D \n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8221807/badge)](https://coveralls.io/builds/8221807)\n\nCoverage increased (+0.08%) to 93.2% when pulling **df8e5ecb40e3e2efa4d2004ad7d54ac6e54652ad on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8221807/badge)](https://coveralls.io/builds/8221807)\n\nCoverage increased (+0.08%) to 93.2% when pulling **df8e5ecb40e3e2efa4d2004ad7d54ac6e54652ad on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8243763/badge)](https://coveralls.io/builds/8243763)\n\nCoverage increased (+0.08%) to 93.232% when pulling **dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8** into **4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8243763/badge)](https://coveralls.io/builds/8243763)\n\nCoverage decreased (-2.8%) to 90.335% when pulling **dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8** into **4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "[![Coverage Status](https://coveralls.io/builds/8243763/badge)](https://coveralls.io/builds/8243763)\n\nCoverage decreased (-2.8%) to 90.335% when pulling **dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8** into **4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master**.\n",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "@nvbn, do you have any thoughts on this? Is there anything else that needs to be done to land it (other than fixing files that have been changed on the `master` branch)?",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "@josephfrazier, ooops, sorry, I just forgot about this pr.\r\n\r\nI'll check it in the nearest time and will merge it.\r\n\r\nThansk.",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Great, thanks! I just pushed some changes that fix the files that had been updated on the master branch, but haven't rebased them yet. If everything looks good to you, let me know and I can `git rebase -i --autosquash master` to combine the `fixup!` commits with their referents and get rid of that `Merge branch 'master' into flake8` commit.",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "",
    "comment body": "Cheers, hopefully this will make it easier to ensure future contributions adhere to the code style.",
    "diff_length": 44347,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "Also, the fix for Python 2.7 tests is already on current `master`, would you please rebase on top of that? 🙂 ",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "Howdy @storey247! Thanks for contributing. I'd really love to read your comments on my suggestions/questions above. I understand that you're probably busy with many stuff. But I thought I'd ping you 🙂 ",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "hi @scorphus thanks for all the feedback, yes I will action and get this PR split into two :smile: apologies for the delayed response, work is a bit crazy atm",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "Awesome! I already split the commit into three, so no need to create another PR, I can merge the changes regarding the new rule and we leave this PR for the devcontainer addition. What do you think?",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "Amazing! Nice work! 👏👏👏\r\n\r\nsounds like a plan, I’ll rebase this on Monday when the work is merged and I’ll tidy up the container so it’s nice and trim. \r\n\r\nThanks @scorphus ",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "There you go, @storey247. Sorry for the extra noise. To continue your work, I'd suggest you force-resetting to the `main_master` branch on your remote, that way you'll have exactly what this PR currently has. Please don't hesitate to ask me for help with that.",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "@scorphus I have now rebased my work from latest `master` and cleaned up the comments as discussed.\r\n\r\nI also added some notes into the `Contribute.md` to help people get up and running with the devcontainer setup if required.\r\n\r\nHopefully now this work can be merged in too. Let me know if there is anything else you need me to look at",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "comment body": "> Thats super, @storey247! Thanks so much for hanging in! Please consider my suggestion below.\r\n\r\nFeedback actioned, just waiting on the builds and then should be good to merge 👍 ",
    "diff_length": 4374,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "I made test_not_match fucntion. I hope that now it is better!",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "It feels like rather than solving this specifically for the git command, it might be prudent to try and solve the issue in the no_command rule?\r\n\r\nThe underlying issue is that https://github.com/nvbn/thefuck/blob/master/thefuck/shells/generic.py#L87 shlex removes the quotes when operating in posix mode (the default).\r\n\r\nWhat really needs to happen, is we need to use quote for each element of the new command, before calling join, i.e. we need to re-quote the split command.  So something like this:\r\n\r\n```python\r\n    return [' '.join(shell.quote(a) for a in [new_command] + command.script_parts[1:])\r\n            for new_command in new_cmds]\r\n```\r\n\r\nWhere quote is obtained from the current shell (`from thefuck.shells import shell`).  (Also, make my code less ugly, double list comprehension is unsightly!)",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "Thank you a lot for the review! Is this commit satisfying for the project?",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "You'll probably want to revert the readme change and add some further tests for no_command? ",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "Sorry for the too many commits. Is it now okay?\r\nThank you a lot!",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@djh82 \r\nIs there any problem with the Ubuntu version 3.9 and what the reason why is not running properly?\r\nIs this PR okay for merging?",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "Regarding the failure, please check #1310.",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@djh82 @scorphus\r\nAre there any other mistakes or missing cases?",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "I believe that now it is correct!",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@NikosKakonas, could you please rebase this on top of current `master`? Thanks!",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@scorphus  Is it now okay? Thanks!",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@scorphus Is it okay for merging?",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@nkakonas does this justify a new release? This has been bugging me for a while.",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "comment body": "@scorphus could you cut a new release for this?",
    "diff_length": 1668,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "@scorphus Is everything good with my pr, would you like me to enhance anything? :smile: ",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Yes I totally agree with all your points. My only thoughts lie on the matter of the global rule. Due to the almost identical commands of the env packages, my solution seemed really convenient. Though, if you think is better to make separate files for each command, I will work on it for sure. Probably the testing process will be more efficient in this way as well. ",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "The identical parts of the rules could be kept in a single, separate “`devenv`” submodule imported by all of the rules. Such submodule would reside under `thefuck/specific` along with other specific ones. This way there’s less repetition. What do you think?",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Yes, that' s a great idea! I will work on it, as well as the requested changes and come up with a new pr.",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Need to check why the tests fail, otherwise I think I managed to fullfill the requested changes and they seem really great!",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "@scorphus Hello again, everything seems to work pretty great! Unfortunately, your idea of integrating some of the common code of the rules to specific/devenv.py was making the tests to fail, so I decided to simplify it. Hope I find some extra time and manage to integrade more of the common code of the rules in a couple of weeks.\r\n\r\nThank you for your help!",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "You're on fire! 🔥 I hope I soon have time to review it more thoroughly. Thanks!",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Hello @scorphus I didn't have any time to enhance this commit, as I can understand you haven't found any time to review it in order to merge it as well. Let me know about your status :sunglasses: ",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Hey @scorphus,\r\n\r\nIt's okay don't worry! Let me know if you need any help, I will be glad to help 😃 ",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "I'd love if you could spare a review 🙌",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "comment body": "Sorry guys I was pretty busy and saw the updates just now, cheers @divykj for the review! Glad to help @scorphus 🙌",
    "diff_length": 4841,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "This solution works great, thanks.\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "Glad it works for you! It depends on `sed`, though. But I believe it's certain to be available.\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "Can it also include [solution for stdin](https://github.com/nvbn/thefuck/issues/76#issuecomment-96103809)?\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "@nvbn do you mean adopting the workaround as mentioned in https://github.com/nvbn/thefuck/issues/76#issuecomment-96103809?\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "@nvbn nice, 52f4852 does just that. Let's wait and see if anyone confirms it solves #76.\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "@scorphus, it solves both bugs for me. \n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "@scorphus One thing on the `$TMPDIR` thing, a lot of Linux distributions don't appear to have it set by default. OS X does but not every Linux distro does so there should be a fallback there to `/tmp` if it's not set.\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "Yeah, absolutely. First I read http://en.wikipedia.org/wiki/TMPDIR and changed it. But then I thought it over and decided to `vagrant up` Ubuntu 14.04, CentOS 6.4 and Debian 7 to test it and, no surprise. Now I'm testing with `mktemp` and it's working just fine in all cases.\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "Ouch, no... too bad. `mktemp`'s implementations differ amongst Linux and OS X\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "So, how about this:\n\n``` fish\nfunction __thefuck_repl --description 'Replace operators into fish-compatible'\n    set -l tmp (echo $argv | sed 's/ && / ; and /g')\n    echo $tmp | sed 's/ || / ; or /g'\nend\n\nfunction fuck --description 'Correct your previous console command'\n    set -l eval_script (mktemp 2>/dev/null ; or mktemp -t 'thefuck')\n    thefuck $history[1] > $eval_script\n    eval (__thefuck_repl (cat $eval_script))\n    rm $eval_script\nend\n```\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "Can I merge it? Or it's not a final solution?\n",
    "diff_length": 658,
    "label": null
  },
  {
    "pr body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "comment body": "I moved aliases to [wiki](https://github.com/nvbn/thefuck/wiki/Shell-aliases), it will be faster to change them there.\n",
    "diff_length": 658,
    "label": null
  }
]