[
  {
    "repository": "Significant-Gravitas/AutoGPT",
    "pr_number": 9946,
    "comments": [
      "Note I have only added loading the profile key on the first post block, whilst I check im doing it the correct way.\r\n\r\nI need to add the frontend button next as well.",
      "plz follow template with bot, once the ai reviewer is back online it'll deny the pr for this",
      "Thank you for this thorough Ayrshare integration PR! The code looks well-structured with comprehensive implementation across both frontend and backend components.\n\nBefore this PR can be merged, there are a few items that need to be addressed:\n\n1. **Missing Checklist**: Please add the standard PR checklist from our template and check off the relevant items. Since this is a significant code change introducing new functionality, we need to ensure you've tested the implementation thoroughly.\n\n2. **Merge Conflicts**: The PR has the 'conflicts' label, indicating there are merge conflicts that need to be resolved before merging.\n\n3. **PR Title Scope**: Consider updating the PR title to use 'platform/blocks' as the scope instead of just 'block' to better align with our conventional commit format and labeled scopes.\n\n4. **Test Plan**: Please provide a test plan detailing how you've verified this integration works correctly. For example:\n   - Connecting to different social media platforms via Ayrshare\n   - Posting content to each supported platform\n   - Handling error cases (e.g., when profile key is missing)\n\nThe implementation itself looks solid, with proper security considerations and a clean architecture. Once the above items are addressed, this PR should be ready for final review.",
      "‚ùå **Preview Environment Deployment Failed**\n\nüö® The preview environment deployment encountered critical errors and has been rolled back.\n\n**Cleanup Completed:**\n- ‚ò∏Ô∏è Kubernetes namespace deleted\n- üóÉÔ∏è Database schema dropped\n- üîå All services terminated\n\n*Please check the workflow logs for details and try again.*",
      "Thanks for this comprehensive PR adding Ayrshare integration for social media posting! The implementation looks solid with good support across multiple platforms.\n\nI've reviewed your changes and have a couple of items that need addressing before this can be merged:\n\n1. **PR Title Format**: The scope in your title should be `blocks` instead of `block` to match our conventional commit format standards. Please update to: `feat(blocks): Added Ayrshare integration for social media posting`\n\n2. **Missing Checklist**: Your PR description is very detailed, which is great, but it's missing the required checklist section. Please add the standard PR checklist that includes items like:\n   - Confirming you've tested your changes\n   - Your test plan\n   - Any configuration changes\n\nThe code implementation itself looks well-structured with comprehensive support for various social media platforms. I particularly like how you've organized the different posting blocks with platform-specific options and validations.\n\nOnce you've addressed these two items, this PR should be ready for another review.",
      "Thanks for the comprehensive Ayrshare integration PR! The implementation looks well-designed and thoroughly documented.\n\n### What Looks Good\n- Great PR description with detailed explanations of all components\n- Clean implementation of both backend and frontend components\n- Good separation of concerns with platform-specific posting blocks\n- Environment variables correctly added to `.env.example`\n- Proper handling of user_id in credential store operations\n- The new AYRSHARE block type is added in the correct alphabetical location\n\n### What Needs Addressing\n- **Missing checklist**: Please add the required checklist to the PR description. As this is a code change, we need a complete checklist including a test plan to verify the functionality works correctly.\n\n### Testing Considerations\nSince this is a complex integration, please ensure your test plan includes:\n- Creating and connecting to Ayrshare accounts\n- Posting to various social media platforms\n- Handling error cases (e.g., invalid credentials, failed posts)\n- Verifying the SSO flow works correctly\n\nOnce you've added the checklist with a proper test plan, this PR should be ready for final review.",
      "Waiting on preview envs to be fixed before this can be comprehensively tested. \r\nAlso there is difficulty testing all platforms as I don't have all the different social account.",
      "‚úÖ **Preview Environment Deployed Successfully**\n\nüìä **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ‚úÖ Success |\n| RabbitMQ | ‚úÖ Success |\n| Backend Server | ‚úÖ Success |\n| WebSocket Server | ‚úÖ Success |\n| Scheduler Server | ‚úÖ Success |\n| Frontend Builder | ‚úÖ Success |\n\nüîî Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
      "![Screenshot 2025-06-16 at 11 57 40](https://github.com/user-attachments/assets/3bba19c2-4983-47e8-88f5-9f5a6c6da32f)\r\n![Screenshot 2025-06-16 at 11 55 17](https://github.com/user-attachments/assets/55e3e80c-8106-4b36-8a15-11f86536ac2e)\r\n\r\nI've tested linkedin and twitter both work. The others need testing",
      "‚úÖ **Preview Environment Deployed Successfully**\n\nüìä **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ‚úÖ Success |\n| RabbitMQ | ‚úÖ Success |\n| Backend Server | ‚úÖ Success |\n| WebSocket Server | ‚úÖ Success |\n| Scheduler Server | ‚úÖ Success |\n| Frontend Builder | ‚úÖ Success |\n\nüîî Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
      "‚úÖ **Preview Environment Deployed Successfully**\n\nüìä **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ‚úÖ Success |\n| RabbitMQ | ‚úÖ Success |\n| Backend Server | ‚úÖ Success |\n| WebSocket Server | ‚úÖ Success |\n| Scheduler Server | ‚úÖ Success |\n| Frontend Builder | ‚úÖ Success |\n\nüîî Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*"
    ],
    "code_diff": "diff --git a/autogpt_platform/backend/.env.example b/autogpt_platform/backend/.env.example\nindex e223efa52557..21aef0c95fc9 100644\n--- a/autogpt_platform/backend/.env.example\n+++ b/autogpt_platform/backend/.env.example\n@@ -197,6 +197,10 @@ SMARTLEAD_API_KEY=\n # ZeroBounce\n ZEROBOUNCE_API_KEY=\n \n+# Ayrshare\n+AYRSHARE_API_KEY=\n+AYRSHARE_JWT_KEY=\n+\n ## ===== OPTIONAL API KEYS END ===== ##\n \n # Block Error Rate Monitoring\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/__init__.py b/autogpt_platform/backend/backend/blocks/ayrshare/__init__.py\nnew file mode 100644\nindex 000000000000..94a567109e60\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/__init__.py\n@@ -0,0 +1,15 @@\n+AYRSHARE_BLOCK_IDS = [\n+    \"cbd52c2a-06d2-43ed-9560-6576cc163283\",  # PostToBlueskyBlock\n+    \"3352f512-3524-49ed-a08f-003042da2fc1\",  # PostToFacebookBlock\n+    \"9e8f844e-b4a5-4b25-80f2-9e1dd7d67625\",  # PostToXBlock\n+    \"589af4e4-507f-42fd-b9ac-a67ecef25811\",  # PostToLinkedInBlock\n+    \"89b02b96-a7cb-46f4-9900-c48b32fe1552\",  # PostToInstagramBlock\n+    \"0082d712-ff1b-4c3d-8a8d-6c7721883b83\",  # PostToYouTubeBlock\n+    \"c7733580-3c72-483e-8e47-a8d58754d853\",  # PostToRedditBlock\n+    \"47bc74eb-4af2-452c-b933-af377c7287df\",  # PostToTelegramBlock\n+    \"2c38c783-c484-4503-9280-ef5d1d345a7e\",  # PostToGMBBlock\n+    \"3ca46e05-dbaa-4afb-9e95-5a429c4177e6\",  # PostToPinterestBlock\n+    \"7faf4b27-96b0-4f05-bf64-e0de54ae74e1\",  # PostToTikTokBlock\n+    \"f8c3b2e1-9d4a-4e5f-8c7b-6a9e8d2f1c3b\",  # PostToThreadsBlock\n+    \"a9d7f854-2c83-4e96-b3a1-7f2e9c5d4b8e\",  # PostToSnapchatBlock\n+]\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/_util.py b/autogpt_platform/backend/backend/blocks/ayrshare/_util.py\nnew file mode 100644\nindex 000000000000..1d2b24e67d76\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/_util.py\n@@ -0,0 +1,144 @@\n+from datetime import datetime\n+from typing import Optional\n+\n+from pydantic import BaseModel, Field\n+\n+from backend.data.block import BlockSchema\n+from backend.data.model import SchemaField\n+from backend.integrations.ayrshare import AyrshareClient\n+from backend.util.exceptions import MissingConfigError\n+\n+\n+class BaseAyrshareInput(BlockSchema):\n+    \"\"\"Base input model for Ayrshare social media posts with common fields.\"\"\"\n+\n+    post: str = SchemaField(\n+        description=\"The post text to be published\", default=\"\", advanced=False\n+    )\n+    media_urls: list[str] = SchemaField(\n+        description=\"Optional list of media URLs to include. Set is_video in advanced settings to true if you want to upload videos.\",\n+        default_factory=list,\n+        advanced=False,\n+    )\n+    is_video: bool = SchemaField(\n+        description=\"Whether the media is a video\", default=False, advanced=True\n+    )\n+    schedule_date: Optional[datetime] = SchemaField(\n+        description=\"UTC datetime for scheduling (YYYY-MM-DDThh:mm:ssZ)\",\n+        default=None,\n+        advanced=True,\n+    )\n+    disable_comments: bool = SchemaField(\n+        description=\"Whether to disable comments\", default=False, advanced=True\n+    )\n+    shorten_links: bool = SchemaField(\n+        description=\"Whether to shorten links\", default=False, advanced=True\n+    )\n+    unsplash: Optional[str] = SchemaField(\n+        description=\"Unsplash image configuration\", default=None, advanced=True\n+    )\n+    requires_approval: bool = SchemaField(\n+        description=\"Whether to enable approval workflow\",\n+        default=False,\n+        advanced=True,\n+    )\n+    random_post: bool = SchemaField(\n+        description=\"Whether to generate random post text\",\n+        default=False,\n+        advanced=True,\n+    )\n+    random_media_url: bool = SchemaField(\n+        description=\"Whether to generate random media\", default=False, advanced=True\n+    )\n+    notes: Optional[str] = SchemaField(\n+        description=\"Additional notes for the post\", default=None, advanced=True\n+    )\n+\n+\n+class CarouselItem(BaseModel):\n+    \"\"\"Model for Facebook carousel items.\"\"\"\n+\n+    name: str = Field(..., description=\"The name of the item\")\n+    link: str = Field(..., description=\"The link of the item\")\n+    picture: str = Field(..., description=\"The picture URL of the item\")\n+\n+\n+class CallToAction(BaseModel):\n+    \"\"\"Model for Google My Business Call to Action.\"\"\"\n+\n+    action_type: str = Field(\n+        ..., description=\"Type of action (book, order, shop, learn_more, sign_up, call)\"\n+    )\n+    url: Optional[str] = Field(\n+        description=\"URL for the action (not required for 'call' action)\"\n+    )\n+\n+\n+class EventDetails(BaseModel):\n+    \"\"\"Model for Google My Business Event details.\"\"\"\n+\n+    title: str = Field(..., description=\"Event title\")\n+    start_date: str = Field(..., description=\"Event start date (ISO format)\")\n+    end_date: str = Field(..., description=\"Event end date (ISO format)\")\n+\n+\n+class OfferDetails(BaseModel):\n+    \"\"\"Model for Google My Business Offer details.\"\"\"\n+\n+    title: str = Field(..., description=\"Offer title\")\n+    start_date: str = Field(..., description=\"Offer start date (ISO format)\")\n+    end_date: str = Field(..., description=\"Offer end date (ISO format)\")\n+    coupon_code: str = Field(..., description=\"Coupon code (max 58 characters)\")\n+    redeem_online_url: str = Field(..., description=\"URL to redeem the offer\")\n+    terms_conditions: str = Field(..., description=\"Terms and conditions\")\n+\n+\n+class InstagramUserTag(BaseModel):\n+    \"\"\"Model for Instagram user tags.\"\"\"\n+\n+    username: str = Field(..., description=\"Instagram username (without @)\")\n+    x: Optional[float] = Field(description=\"X coordinate (0.0-1.0) for image posts\")\n+    y: Optional[float] = Field(description=\"Y coordinate (0.0-1.0) for image posts\")\n+\n+\n+class LinkedInTargeting(BaseModel):\n+    \"\"\"Model for LinkedIn audience targeting.\"\"\"\n+\n+    countries: Optional[list[str]] = Field(\n+        description=\"Country codes (e.g., ['US', 'IN', 'DE', 'GB'])\"\n+    )\n+    seniorities: Optional[list[str]] = Field(\n+        description=\"Seniority levels (e.g., ['Senior', 'VP'])\"\n+    )\n+    degrees: Optional[list[str]] = Field(description=\"Education degrees\")\n+    fields_of_study: Optional[list[str]] = Field(description=\"Fields of study\")\n+    industries: Optional[list[str]] = Field(description=\"Industry categories\")\n+    job_functions: Optional[list[str]] = Field(description=\"Job function categories\")\n+    staff_count_ranges: Optional[list[str]] = Field(description=\"Company size ranges\")\n+\n+\n+class PinterestCarouselOption(BaseModel):\n+    \"\"\"Model for Pinterest carousel image options.\"\"\"\n+\n+    title: Optional[str] = Field(description=\"Image title\")\n+    link: Optional[str] = Field(description=\"External destination link for the image\")\n+    description: Optional[str] = Field(description=\"Image description\")\n+\n+\n+class YouTubeTargeting(BaseModel):\n+    \"\"\"Model for YouTube country targeting.\"\"\"\n+\n+    block: Optional[list[str]] = Field(\n+        description=\"Country codes to block (e.g., ['US', 'CA'])\"\n+    )\n+    allow: Optional[list[str]] = Field(\n+        description=\"Country codes to allow (e.g., ['GB', 'AU'])\"\n+    )\n+\n+\n+def create_ayrshare_client():\n+    \"\"\"Create an Ayrshare client instance.\"\"\"\n+    try:\n+        return AyrshareClient()\n+    except MissingConfigError:\n+        return None\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_bluesky.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_bluesky.py\nnew file mode 100644\nindex 000000000000..4f4a0683140c\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_bluesky.py\n@@ -0,0 +1,113 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToBlueskyBlock(Block):\n+    \"\"\"Block for posting to Bluesky with Bluesky-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Bluesky posts.\"\"\"\n+\n+        # Override post field to include character limit information\n+        post: str = SchemaField(\n+            description=\"The post text to be published (max 300 characters for Bluesky)\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Bluesky-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs to include. Bluesky supports up to 4 images or 1 video.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # Bluesky-specific options\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each media item (accessibility)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"cbd52c2a-06d2-43ed-9560-6576cc163283\",\n+            description=\"Post to Bluesky using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToBlueskyBlock.Input,\n+            output_schema=PostToBlueskyBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToBlueskyBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Bluesky with Bluesky-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate character limit for Bluesky\n+        if len(input_data.post) > 300:\n+            yield \"error\", f\"Post text exceeds Bluesky's 300 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        # Validate media constraints for Bluesky\n+        if len(input_data.media_urls) > 4:\n+            yield \"error\", \"Bluesky supports a maximum of 4 images or 1 video\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Bluesky-specific options\n+        bluesky_options = {}\n+        if input_data.alt_text:\n+            bluesky_options[\"altText\"] = input_data.alt_text\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.BLUESKY],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            bluesky_options=bluesky_options if bluesky_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_facebook.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_facebook.py\nnew file mode 100644\nindex 000000000000..250be5522fda\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_facebook.py\n@@ -0,0 +1,207 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, CarouselItem, create_ayrshare_client\n+\n+\n+class PostToFacebookBlock(Block):\n+    \"\"\"Block for posting to Facebook with Facebook-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Facebook posts.\"\"\"\n+\n+        # Facebook-specific options\n+        is_carousel: bool = SchemaField(\n+            description=\"Whether to post a carousel\", default=False, advanced=True\n+        )\n+        carousel_link: str = SchemaField(\n+            description=\"The URL for the 'See More At' button in the carousel\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        carousel_items: list[CarouselItem] = SchemaField(\n+            description=\"List of carousel items with name, link and picture URLs. Min 2, max 10 items.\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        is_reels: bool = SchemaField(\n+            description=\"Whether to post to Facebook Reels\",\n+            default=False,\n+            advanced=True,\n+        )\n+        reels_title: str = SchemaField(\n+            description=\"Title for the Reels video (max 255 chars)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        reels_thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL for Reels video (JPEG/PNG, <10MB)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        is_story: bool = SchemaField(\n+            description=\"Whether to post as a Facebook Story\",\n+            default=False,\n+            advanced=True,\n+        )\n+        media_captions: list[str] = SchemaField(\n+            description=\"Captions for each media item\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        location_id: str = SchemaField(\n+            description=\"Facebook Page ID or name for location tagging\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        age_min: int = SchemaField(\n+            description=\"Minimum age for audience targeting (13,15,18,21,25)\",\n+            default=0,\n+            advanced=True,\n+        )\n+        target_countries: list[str] = SchemaField(\n+            description=\"List of country codes to target (max 25)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each media item\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        video_title: str = SchemaField(\n+            description=\"Title for video post\", default=\"\", advanced=True\n+        )\n+        video_thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL for video post\", default=\"\", advanced=True\n+        )\n+        is_draft: bool = SchemaField(\n+            description=\"Save as draft in Meta Business Suite\",\n+            default=False,\n+            advanced=True,\n+        )\n+        scheduled_publish_date: str = SchemaField(\n+            description=\"Schedule publish time in Meta Business Suite (UTC)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        preview_link: str = SchemaField(\n+            description=\"URL for custom link preview\", default=\"\", advanced=True\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"3352f512-3524-49ed-a08f-003042da2fc1\",\n+            description=\"Post to Facebook using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToFacebookBlock.Input,\n+            output_schema=PostToFacebookBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToFacebookBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Facebook with Facebook-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Facebook-specific options\n+        facebook_options = {}\n+        if input_data.is_carousel:\n+            facebook_options[\"isCarousel\"] = True\n+            if input_data.carousel_link:\n+                facebook_options[\"carouselLink\"] = input_data.carousel_link\n+            if input_data.carousel_items:\n+                facebook_options[\"carouselItems\"] = [\n+                    item.dict() for item in input_data.carousel_items\n+                ]\n+\n+        if input_data.is_reels:\n+            facebook_options[\"isReels\"] = True\n+            if input_data.reels_title:\n+                facebook_options[\"reelsTitle\"] = input_data.reels_title\n+            if input_data.reels_thumbnail:\n+                facebook_options[\"reelsThumbnail\"] = input_data.reels_thumbnail\n+\n+        if input_data.is_story:\n+            facebook_options[\"isStory\"] = True\n+\n+        if input_data.media_captions:\n+            facebook_options[\"mediaCaptions\"] = input_data.media_captions\n+\n+        if input_data.location_id:\n+            facebook_options[\"locationId\"] = input_data.location_id\n+\n+        if input_data.age_min > 0:\n+            facebook_options[\"ageMin\"] = input_data.age_min\n+\n+        if input_data.target_countries:\n+            facebook_options[\"targetCountries\"] = input_data.target_countries\n+\n+        if input_data.alt_text:\n+            facebook_options[\"altText\"] = input_data.alt_text\n+\n+        if input_data.video_title:\n+            facebook_options[\"videoTitle\"] = input_data.video_title\n+\n+        if input_data.video_thumbnail:\n+            facebook_options[\"videoThumbnail\"] = input_data.video_thumbnail\n+\n+        if input_data.is_draft:\n+            facebook_options[\"isDraft\"] = True\n+\n+        if input_data.scheduled_publish_date:\n+            facebook_options[\"scheduledPublishDate\"] = input_data.scheduled_publish_date\n+\n+        if input_data.preview_link:\n+            facebook_options[\"previewLink\"] = input_data.preview_link\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.FACEBOOK],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            facebook_options=facebook_options if facebook_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_gmb.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_gmb.py\nnew file mode 100644\nindex 000000000000..d534a4ae2bf2\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_gmb.py\n@@ -0,0 +1,210 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToGMBBlock(Block):\n+    \"\"\"Block for posting to Google My Business with GMB-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Google My Business posts.\"\"\"\n+\n+        # Override media_urls to include GMB-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. GMB supports only one image or video per post.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # GMB-specific options\n+        is_photo_video: bool = SchemaField(\n+            description=\"Whether this is a photo/video post (appears in Photos section)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        photo_category: str = SchemaField(\n+            description=\"Category for photo/video: cover, profile, logo, exterior, interior, product, at_work, food_and_drink, menu, common_area, rooms, teams\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        # Call to action options (flattened from CallToAction object)\n+        call_to_action_type: str = SchemaField(\n+            description=\"Type of action button: 'book', 'order', 'shop', 'learn_more', 'sign_up', or 'call'\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        call_to_action_url: str = SchemaField(\n+            description=\"URL for the action button (not required for 'call' action)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        # Event details options (flattened from EventDetails object)\n+        event_title: str = SchemaField(\n+            description=\"Event title for event posts\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        event_start_date: str = SchemaField(\n+            description=\"Event start date in ISO format (e.g., '2024-03-15T09:00:00Z')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        event_end_date: str = SchemaField(\n+            description=\"Event end date in ISO format (e.g., '2024-03-15T17:00:00Z')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        # Offer details options (flattened from OfferDetails object)\n+        offer_title: str = SchemaField(\n+            description=\"Offer title for promotional posts\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        offer_start_date: str = SchemaField(\n+            description=\"Offer start date in ISO format (e.g., '2024-03-15T00:00:00Z')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        offer_end_date: str = SchemaField(\n+            description=\"Offer end date in ISO format (e.g., '2024-04-15T23:59:59Z')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        offer_coupon_code: str = SchemaField(\n+            description=\"Coupon code for the offer (max 58 characters)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        offer_redeem_online_url: str = SchemaField(\n+            description=\"URL where customers can redeem the offer online\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        offer_terms_conditions: str = SchemaField(\n+            description=\"Terms and conditions for the offer\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"2c38c783-c484-4503-9280-ef5d1d345a7e\",\n+            description=\"Post to Google My Business using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToGMBBlock.Input,\n+            output_schema=PostToGMBBlock.Output,\n+        )\n+\n+    async def run(\n+        self, input_data: \"PostToGMBBlock.Input\", *, profile_key: SecretStr, **kwargs\n+    ) -> BlockOutput:\n+        \"\"\"Post to Google My Business with GMB-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate GMB constraints\n+        if len(input_data.media_urls) > 1:\n+            yield \"error\", \"Google My Business supports only one image or video per post\"\n+            return\n+\n+        # Validate offer coupon code length\n+        if input_data.offer_coupon_code and len(input_data.offer_coupon_code) > 58:\n+            yield \"error\", \"GMB offer coupon code cannot exceed 58 characters\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build GMB-specific options\n+        gmb_options = {}\n+\n+        # Photo/Video post options\n+        if input_data.is_photo_video:\n+            gmb_options[\"isPhotoVideo\"] = True\n+            if input_data.photo_category:\n+                gmb_options[\"category\"] = input_data.photo_category\n+\n+        # Call to Action (from flattened fields)\n+        if input_data.call_to_action_type:\n+            cta_dict = {\"actionType\": input_data.call_to_action_type}\n+            # URL not required for 'call' action type\n+            if (\n+                input_data.call_to_action_type != \"call\"\n+                and input_data.call_to_action_url\n+            ):\n+                cta_dict[\"url\"] = input_data.call_to_action_url\n+            gmb_options[\"callToAction\"] = cta_dict\n+\n+        # Event details (from flattened fields)\n+        if (\n+            input_data.event_title\n+            and input_data.event_start_date\n+            and input_data.event_end_date\n+        ):\n+            gmb_options[\"event\"] = {\n+                \"title\": input_data.event_title,\n+                \"startDate\": input_data.event_start_date,\n+                \"endDate\": input_data.event_end_date,\n+            }\n+\n+        # Offer details (from flattened fields)\n+        if (\n+            input_data.offer_title\n+            and input_data.offer_start_date\n+            and input_data.offer_end_date\n+            and input_data.offer_coupon_code\n+            and input_data.offer_redeem_online_url\n+            and input_data.offer_terms_conditions\n+        ):\n+            gmb_options[\"offer\"] = {\n+                \"title\": input_data.offer_title,\n+                \"startDate\": input_data.offer_start_date,\n+                \"endDate\": input_data.offer_end_date,\n+                \"couponCode\": input_data.offer_coupon_code,\n+                \"redeemOnlineUrl\": input_data.offer_redeem_online_url,\n+                \"termsConditions\": input_data.offer_terms_conditions,\n+            }\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.GOOGLE_MY_BUSINESS],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            gmb_options=gmb_options if gmb_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_instagram.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_instagram.py\nnew file mode 100644\nindex 000000000000..77337a9568b6\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_instagram.py\n@@ -0,0 +1,221 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, InstagramUserTag, create_ayrshare_client\n+\n+\n+class PostToInstagramBlock(Block):\n+    \"\"\"Block for posting to Instagram with Instagram-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Instagram posts.\"\"\"\n+\n+        # Override post field to include Instagram-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (max 2,200 chars, up to 30 hashtags, 3 @mentions)\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Instagram-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. Instagram supports up to 10 images/videos in a carousel.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # Instagram-specific options\n+        is_story: bool = SchemaField(\n+            description=\"Whether to post as Instagram Story (24-hour expiration)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        share_reels_feed: bool = SchemaField(\n+            description=\"Whether Reel should appear in both Feed and Reels tabs\",\n+            default=True,\n+            advanced=True,\n+        )\n+        audio_name: str = SchemaField(\n+            description=\"Audio name for Reels (e.g., 'The Weeknd - Blinding Lights')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL for Reel video\", default=\"\", advanced=True\n+        )\n+        thumbnail_offset: int = SchemaField(\n+            description=\"Thumbnail frame offset in milliseconds (default: 0)\",\n+            default=0,\n+            advanced=True,\n+        )\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each media item (up to 1,000 chars each, accessibility feature)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        location_id: str = SchemaField(\n+            description=\"Facebook Page ID or name for location tagging (e.g., '7640348500' or '@guggenheimmuseum')\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        user_tags: list[InstagramUserTag] = SchemaField(\n+            description=\"List of users to tag with coordinates for images\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        collaborators: list[str] = SchemaField(\n+            description=\"Instagram usernames to invite as collaborators (max 3, public accounts only)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        auto_resize: bool = SchemaField(\n+            description=\"Auto-resize images to 1080x1080px for Instagram\",\n+            default=False,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"89b02b96-a7cb-46f4-9900-c48b32fe1552\",\n+            description=\"Post to Instagram using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToInstagramBlock.Input,\n+            output_schema=PostToInstagramBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToInstagramBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Instagram with Instagram-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate Instagram constraints\n+        if len(input_data.post) > 2200:\n+            yield \"error\", f\"Instagram post text exceeds 2,200 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if len(input_data.media_urls) > 10:\n+            yield \"error\", \"Instagram supports a maximum of 10 images/videos in a carousel\"\n+            return\n+\n+        if len(input_data.collaborators) > 3:\n+            yield \"error\", \"Instagram supports a maximum of 3 collaborators\"\n+            return\n+\n+        # Count hashtags and mentions\n+        hashtag_count = input_data.post.count(\"#\")\n+        mention_count = input_data.post.count(\"@\")\n+\n+        if hashtag_count > 30:\n+            yield \"error\", f\"Instagram allows maximum 30 hashtags ({hashtag_count} found)\"\n+            return\n+\n+        if mention_count > 3:\n+            yield \"error\", f\"Instagram allows maximum 3 @mentions ({mention_count} found)\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Instagram-specific options\n+        instagram_options = {}\n+\n+        # Stories\n+        if input_data.is_story:\n+            instagram_options[\"stories\"] = True\n+\n+        # Reels options\n+        if input_data.share_reels_feed is not None:\n+            instagram_options[\"shareReelsFeed\"] = input_data.share_reels_feed\n+\n+        if input_data.audio_name:\n+            instagram_options[\"audioName\"] = input_data.audio_name\n+\n+        if input_data.thumbnail:\n+            instagram_options[\"thumbNail\"] = input_data.thumbnail\n+        elif input_data.thumbnail_offset > 0:\n+            instagram_options[\"thumbNailOffset\"] = input_data.thumbnail_offset\n+\n+        # Alt text\n+        if input_data.alt_text:\n+            # Validate alt text length\n+            for i, alt in enumerate(input_data.alt_text):\n+                if len(alt) > 1000:\n+                    yield \"error\", f\"Alt text {i+1} exceeds 1,000 character limit ({len(alt)} characters)\"\n+                    return\n+            instagram_options[\"altText\"] = input_data.alt_text\n+\n+        # Location\n+        if input_data.location_id:\n+            instagram_options[\"locationId\"] = input_data.location_id\n+\n+        # User tags\n+        if input_data.user_tags:\n+            user_tags_list = []\n+            for tag in input_data.user_tags:\n+                tag_dict: dict[str, float | str] = {\"username\": tag.username}\n+                if tag.x is not None and tag.y is not None:\n+                    # Validate coordinates\n+                    if not (0.0 <= tag.x <= 1.0) or not (0.0 <= tag.y <= 1.0):\n+                        yield \"error\", f\"User tag coordinates must be between 0.0 and 1.0 (user: {tag.username})\"\n+                        return\n+                    tag_dict[\"x\"] = tag.x\n+                    tag_dict[\"y\"] = tag.y\n+                user_tags_list.append(tag_dict)\n+            instagram_options[\"userTags\"] = user_tags_list\n+\n+        # Collaborators\n+        if input_data.collaborators:\n+            instagram_options[\"collaborators\"] = input_data.collaborators\n+\n+        # Auto resize\n+        if input_data.auto_resize:\n+            instagram_options[\"autoResize\"] = True\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.INSTAGRAM],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            instagram_options=instagram_options if instagram_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_linkedin.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_linkedin.py\nnew file mode 100644\nindex 000000000000..c3b01989f0be\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_linkedin.py\n@@ -0,0 +1,222 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToLinkedInBlock(Block):\n+    \"\"\"Block for posting to LinkedIn with LinkedIn-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for LinkedIn posts.\"\"\"\n+\n+        # Override post field to include LinkedIn-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (max 3,000 chars, hashtags supported with #)\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include LinkedIn-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. LinkedIn supports up to 9 images, videos, or documents (PPT, PPTX, DOC, DOCX, PDF <100MB, <300 pages).\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # LinkedIn-specific options\n+        visibility: str = SchemaField(\n+            description=\"Post visibility: 'public' (default), 'connections' (personal only), 'loggedin'\",\n+            default=\"public\",\n+            advanced=True,\n+        )\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each image (accessibility feature, not supported for videos/documents)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        titles: list[str] = SchemaField(\n+            description=\"Title/caption for each image or video\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        document_title: str = SchemaField(\n+            description=\"Title for document posts (max 400 chars, uses filename if not specified)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL for video (PNG/JPG, same dimensions as video, <10MB)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        # LinkedIn targeting options (flattened from LinkedInTargeting object)\n+        targeting_countries: list[str] | None = SchemaField(\n+            description=\"Country codes for targeting (e.g., ['US', 'IN', 'DE', 'GB']). Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_seniorities: list[str] | None = SchemaField(\n+            description=\"Seniority levels for targeting (e.g., ['Senior', 'VP']). Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_degrees: list[str] | None = SchemaField(\n+            description=\"Education degrees for targeting. Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_fields_of_study: list[str] | None = SchemaField(\n+            description=\"Fields of study for targeting. Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_industries: list[str] | None = SchemaField(\n+            description=\"Industry categories for targeting. Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_job_functions: list[str] | None = SchemaField(\n+            description=\"Job function categories for targeting. Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_staff_count_ranges: list[str] | None = SchemaField(\n+            description=\"Company size ranges for targeting. Requires 300+ followers in target audience.\",\n+            default=None,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            id=\"589af4e4-507f-42fd-b9ac-a67ecef25811\",\n+            description=\"Post to LinkedIn using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToLinkedInBlock.Input,\n+            output_schema=PostToLinkedInBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToLinkedInBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to LinkedIn with LinkedIn-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate LinkedIn constraints\n+        if len(input_data.post) > 3000:\n+            yield \"error\", f\"LinkedIn post text exceeds 3,000 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if len(input_data.media_urls) > 9:\n+            yield \"error\", \"LinkedIn supports a maximum of 9 images/videos/documents\"\n+            return\n+\n+        if input_data.document_title and len(input_data.document_title) > 400:\n+            yield \"error\", f\"LinkedIn document title exceeds 400 character limit ({len(input_data.document_title)} characters)\"\n+            return\n+\n+        # Validate visibility option\n+        valid_visibility = [\"public\", \"connections\", \"loggedin\"]\n+        if input_data.visibility not in valid_visibility:\n+            yield \"error\", f\"LinkedIn visibility must be one of: {', '.join(valid_visibility)}\"\n+            return\n+\n+        # Check for document extensions\n+        document_extensions = [\".ppt\", \".pptx\", \".doc\", \".docx\", \".pdf\"]\n+        has_documents = any(\n+            any(url.lower().endswith(ext) for ext in document_extensions)\n+            for url in input_data.media_urls\n+        )\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build LinkedIn-specific options\n+        linkedin_options = {}\n+\n+        # Visibility\n+        if input_data.visibility != \"public\":\n+            linkedin_options[\"visibility\"] = input_data.visibility\n+\n+        # Alt text (not supported for videos or documents)\n+        if input_data.alt_text and not has_documents:\n+            linkedin_options[\"altText\"] = input_data.alt_text\n+\n+        # Titles/captions\n+        if input_data.titles:\n+            linkedin_options[\"titles\"] = input_data.titles\n+\n+        # Document title\n+        if input_data.document_title and has_documents:\n+            linkedin_options[\"title\"] = input_data.document_title\n+\n+        # Video thumbnail\n+        if input_data.thumbnail:\n+            linkedin_options[\"thumbNail\"] = input_data.thumbnail\n+\n+        # Audience targeting (from flattened fields)\n+        targeting_dict = {}\n+        if input_data.targeting_countries:\n+            targeting_dict[\"countries\"] = input_data.targeting_countries\n+        if input_data.targeting_seniorities:\n+            targeting_dict[\"seniorities\"] = input_data.targeting_seniorities\n+        if input_data.targeting_degrees:\n+            targeting_dict[\"degrees\"] = input_data.targeting_degrees\n+        if input_data.targeting_fields_of_study:\n+            targeting_dict[\"fieldsOfStudy\"] = input_data.targeting_fields_of_study\n+        if input_data.targeting_industries:\n+            targeting_dict[\"industries\"] = input_data.targeting_industries\n+        if input_data.targeting_job_functions:\n+            targeting_dict[\"jobFunctions\"] = input_data.targeting_job_functions\n+        if input_data.targeting_staff_count_ranges:\n+            targeting_dict[\"staffCountRanges\"] = input_data.targeting_staff_count_ranges\n+\n+        if targeting_dict:\n+            linkedin_options[\"targeting\"] = targeting_dict\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.LINKEDIN],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            linkedin_options=linkedin_options if linkedin_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_pinterest.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_pinterest.py\nnew file mode 100644\nindex 000000000000..c6fab03b32a9\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_pinterest.py\n@@ -0,0 +1,209 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, PinterestCarouselOption, create_ayrshare_client\n+\n+\n+class PostToPinterestBlock(Block):\n+    \"\"\"Block for posting to Pinterest with Pinterest-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Pinterest posts.\"\"\"\n+\n+        # Override post field to include Pinterest-specific information\n+        post: str = SchemaField(\n+            description=\"Pin description (max 500 chars, links not clickable - use link field instead)\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Pinterest-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Required image/video URLs. Pinterest requires at least one image. Videos need thumbnail. Up to 5 images for carousel.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # Pinterest-specific options\n+        pin_title: str = SchemaField(\n+            description=\"Pin title displayed in 'Add your title' section (max 100 chars)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        link: str = SchemaField(\n+            description=\"Clickable destination URL when users click the pin (max 2048 chars)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        board_id: str = SchemaField(\n+            description=\"Pinterest Board ID to post to (from /user/details endpoint, uses default board if not specified)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        note: str = SchemaField(\n+            description=\"Private note for the pin (only visible to you and board collaborators)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        thumbnail: str = SchemaField(\n+            description=\"Required thumbnail URL for video pins (must have valid image Content-Type)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        carousel_options: list[PinterestCarouselOption] = SchemaField(\n+            description=\"Options for each image in carousel (title, link, description per image)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each image/video (max 500 chars each, accessibility feature)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"3ca46e05-dbaa-4afb-9e95-5a429c4177e6\",\n+            description=\"Post to Pinterest using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToPinterestBlock.Input,\n+            output_schema=PostToPinterestBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToPinterestBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Pinterest with Pinterest-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate Pinterest constraints\n+        if len(input_data.post) > 500:\n+            yield \"error\", f\"Pinterest pin description exceeds 500 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if len(input_data.pin_title) > 100:\n+            yield \"error\", f\"Pinterest pin title exceeds 100 character limit ({len(input_data.pin_title)} characters)\"\n+            return\n+\n+        if len(input_data.link) > 2048:\n+            yield \"error\", f\"Pinterest link URL exceeds 2048 character limit ({len(input_data.link)} characters)\"\n+            return\n+\n+        if len(input_data.media_urls) == 0:\n+            yield \"error\", \"Pinterest requires at least one image or video\"\n+            return\n+\n+        if len(input_data.media_urls) > 5:\n+            yield \"error\", \"Pinterest supports a maximum of 5 images in a carousel\"\n+            return\n+\n+        # Check if video is included and thumbnail is provided\n+        video_extensions = [\".mp4\", \".mov\", \".avi\", \".mkv\", \".wmv\", \".flv\", \".webm\"]\n+        has_video = any(\n+            any(url.lower().endswith(ext) for ext in video_extensions)\n+            for url in input_data.media_urls\n+        )\n+\n+        if (has_video or input_data.is_video) and not input_data.thumbnail:\n+            yield \"error\", \"Pinterest video pins require a thumbnail URL\"\n+            return\n+\n+        # Validate alt text length\n+        for i, alt in enumerate(input_data.alt_text):\n+            if len(alt) > 500:\n+                yield \"error\", f\"Pinterest alt text {i+1} exceeds 500 character limit ({len(alt)} characters)\"\n+                return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Pinterest-specific options\n+        pinterest_options = {}\n+\n+        # Pin title\n+        if input_data.pin_title:\n+            pinterest_options[\"title\"] = input_data.pin_title\n+\n+        # Clickable link\n+        if input_data.link:\n+            pinterest_options[\"link\"] = input_data.link\n+\n+        # Board ID\n+        if input_data.board_id:\n+            pinterest_options[\"boardId\"] = input_data.board_id\n+\n+        # Private note\n+        if input_data.note:\n+            pinterest_options[\"note\"] = input_data.note\n+\n+        # Video thumbnail\n+        if input_data.thumbnail:\n+            pinterest_options[\"thumbNail\"] = input_data.thumbnail\n+\n+        # Carousel options\n+        if input_data.carousel_options:\n+            carousel_list = []\n+            for option in input_data.carousel_options:\n+                carousel_dict = {}\n+                if option.title:\n+                    carousel_dict[\"title\"] = option.title\n+                if option.link:\n+                    carousel_dict[\"link\"] = option.link\n+                if option.description:\n+                    carousel_dict[\"description\"] = option.description\n+                if carousel_dict:  # Only add if not empty\n+                    carousel_list.append(carousel_dict)\n+            if carousel_list:\n+                pinterest_options[\"carouselOptions\"] = carousel_list\n+\n+        # Alt text\n+        if input_data.alt_text:\n+            pinterest_options[\"altText\"] = input_data.alt_text\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.PINTEREST],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            pinterest_options=pinterest_options if pinterest_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_reddit.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_reddit.py\nnew file mode 100644\nindex 000000000000..519e7d0d3e9c\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_reddit.py\n@@ -0,0 +1,69 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToRedditBlock(Block):\n+    \"\"\"Block for posting to Reddit.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Reddit posts.\"\"\"\n+\n+        pass  # Uses all base fields\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"c7733580-3c72-483e-8e47-a8d58754d853\",\n+            description=\"Post to Reddit using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToRedditBlock.Input,\n+            output_schema=PostToRedditBlock.Output,\n+        )\n+\n+    async def run(\n+        self, input_data: \"PostToRedditBlock.Input\", *, profile_key: SecretStr, **kwargs\n+    ) -> BlockOutput:\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured.\"\n+            return\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.REDDIT],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_snapchat.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_snapchat.py\nnew file mode 100644\nindex 000000000000..819899d5e116\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_snapchat.py\n@@ -0,0 +1,129 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToSnapchatBlock(Block):\n+    \"\"\"Block for posting to Snapchat with Snapchat-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Snapchat posts.\"\"\"\n+\n+        # Override post field to include Snapchat-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (optional for video-only content)\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Snapchat-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Required video URL for Snapchat posts. Snapchat only supports video content.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # Snapchat-specific options\n+        story_type: str = SchemaField(\n+            description=\"Type of Snapchat content: 'story' (24-hour Stories), 'saved_story' (Saved Stories), or 'spotlight' (Spotlight posts)\",\n+            default=\"story\",\n+            advanced=True,\n+        )\n+        video_thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL for video content (optional, auto-generated if not provided)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"a9d7f854-2c83-4e96-b3a1-7f2e9c5d4b8e\",\n+            description=\"Post to Snapchat using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToSnapchatBlock.Input,\n+            output_schema=PostToSnapchatBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToSnapchatBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Snapchat with Snapchat-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate Snapchat constraints\n+        if not input_data.media_urls:\n+            yield \"error\", \"Snapchat requires at least one video URL\"\n+            return\n+\n+        if len(input_data.media_urls) > 1:\n+            yield \"error\", \"Snapchat supports only one video per post\"\n+            return\n+\n+        # Validate story type\n+        valid_story_types = [\"story\", \"saved_story\", \"spotlight\"]\n+        if input_data.story_type not in valid_story_types:\n+            yield \"error\", f\"Snapchat story type must be one of: {', '.join(valid_story_types)}\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Snapchat-specific options\n+        snapchat_options = {}\n+\n+        # Story type\n+        if input_data.story_type != \"story\":\n+            snapchat_options[\"storyType\"] = input_data.story_type\n+\n+        # Video thumbnail\n+        if input_data.video_thumbnail:\n+            snapchat_options[\"videoThumbnail\"] = input_data.video_thumbnail\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.SNAPCHAT],\n+            media_urls=input_data.media_urls,\n+            is_video=True,  # Snapchat only supports video\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            snapchat_options=snapchat_options if snapchat_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_telegram.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_telegram.py\nnew file mode 100644\nindex 000000000000..7ecf3c38d37d\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_telegram.py\n@@ -0,0 +1,116 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToTelegramBlock(Block):\n+    \"\"\"Block for posting to Telegram with Telegram-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Telegram posts.\"\"\"\n+\n+        # Override post field to include Telegram-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (empty string allowed). Use @handle to mention other Telegram users.\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Telegram-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. For animated GIFs, only one URL is allowed. Telegram will auto-preview links unless image/video is included.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # Override is_video to include GIF-specific information\n+        is_video: bool = SchemaField(\n+            description=\"Whether the media is a video. Set to true for animated GIFs that don't end in .gif/.GIF extension.\",\n+            default=False,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"47bc74eb-4af2-452c-b933-af377c7287df\",\n+            description=\"Post to Telegram using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToTelegramBlock.Input,\n+            output_schema=PostToTelegramBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToTelegramBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Telegram with Telegram-specific validation.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate Telegram constraints\n+        # Check for animated GIFs - only one URL allowed\n+        gif_extensions = [\".gif\", \".GIF\"]\n+        has_gif = any(\n+            any(url.endswith(ext) for ext in gif_extensions)\n+            for url in input_data.media_urls\n+        )\n+\n+        if has_gif and len(input_data.media_urls) > 1:\n+            yield \"error\", \"Telegram animated GIFs support only one URL per post\"\n+            return\n+\n+        # Auto-detect if we need to set is_video for GIFs without proper extension\n+        detected_is_video = input_data.is_video\n+        if input_data.media_urls and not has_gif and not input_data.is_video:\n+            # Check if this might be a GIF without proper extension\n+            # This is just informational - user needs to set is_video manually\n+            pass\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.TELEGRAM],\n+            media_urls=input_data.media_urls,\n+            is_video=detected_is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_threads.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_threads.py\nnew file mode 100644\nindex 000000000000..ac3ad2984cc3\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_threads.py\n@@ -0,0 +1,111 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToThreadsBlock(Block):\n+    \"\"\"Block for posting to Threads with Threads-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for Threads posts.\"\"\"\n+\n+        # Override post field to include Threads-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (max 500 chars, empty string allowed). Only 1 hashtag allowed. Use @handle to mention users.\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include Threads-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. Supports up to 20 images/videos in a carousel. Auto-preview links unless media is included.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"f8c3b2e1-9d4a-4e5f-8c7b-6a9e8d2f1c3b\",\n+            description=\"Post to Threads using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToThreadsBlock.Input,\n+            output_schema=PostToThreadsBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToThreadsBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to Threads with Threads-specific validation.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate Threads constraints\n+        if len(input_data.post) > 500:\n+            yield \"error\", f\"Threads post text exceeds 500 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if len(input_data.media_urls) > 20:\n+            yield \"error\", \"Threads supports a maximum of 20 images/videos in a carousel\"\n+            return\n+\n+        # Count hashtags (only 1 allowed)\n+        hashtag_count = input_data.post.count(\"#\")\n+        if hashtag_count > 1:\n+            yield \"error\", f\"Threads allows only 1 hashtag per post ({hashtag_count} found)\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build Threads-specific options\n+        threads_options = {}\n+        # Note: Based on the documentation, Threads doesn't seem to have specific options\n+        # beyond the standard ones. The main constraints are validation-based.\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.THREADS],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            threads_options=threads_options if threads_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_tiktok.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_tiktok.py\nnew file mode 100644\nindex 000000000000..ae0f9dc4b03a\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_tiktok.py\n@@ -0,0 +1,243 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToTikTokBlock(Block):\n+    \"\"\"Block for posting to TikTok with TikTok-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for TikTok posts.\"\"\"\n+\n+        # Override post field to include TikTok-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (max 2,200 chars, empty string allowed). Use @handle to mention users. Line breaks will be ignored.\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include TikTok-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Required media URLs. Either 1 video OR up to 35 images (JPG/JPEG/WEBP only). Cannot mix video and images.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # TikTok-specific options\n+        auto_add_music: bool = SchemaField(\n+            description=\"Automatically add recommended music to image posts\",\n+            default=False,\n+            advanced=True,\n+        )\n+        disable_comments: bool = SchemaField(\n+            description=\"Disable comments on the published post\",\n+            default=False,\n+            advanced=True,\n+        )\n+        disable_duet: bool = SchemaField(\n+            description=\"Disable duets on published video (video only)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        disable_stitch: bool = SchemaField(\n+            description=\"Disable stitch on published video (video only)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        is_ai_generated: bool = SchemaField(\n+            description=\"Label content as AI-generated (video only)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        is_branded_content: bool = SchemaField(\n+            description=\"Label as branded content (paid partnership)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        is_brand_organic: bool = SchemaField(\n+            description=\"Label as brand organic content (promotional)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        image_cover_index: int = SchemaField(\n+            description=\"Index of image to use as cover (0-based, image posts only)\",\n+            default=0,\n+            advanced=True,\n+        )\n+        title: str = SchemaField(\n+            description=\"Title for image posts\", default=\"\", advanced=True\n+        )\n+        thumbnail_offset: int = SchemaField(\n+            description=\"Video thumbnail frame offset in milliseconds (video only)\",\n+            default=0,\n+            advanced=True,\n+        )\n+        visibility: str = SchemaField(\n+            description=\"Post visibility: 'public', 'private', 'followers', or 'friends'\",\n+            default=\"public\",\n+            advanced=True,\n+        )\n+        draft: bool = SchemaField(\n+            description=\"Create as draft post (video only)\",\n+            default=False,\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"7faf4b27-96b0-4f05-bf64-e0de54ae74e1\",\n+            description=\"Post to TikTok using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToTikTokBlock.Input,\n+            output_schema=PostToTikTokBlock.Output,\n+        )\n+\n+    async def run(\n+        self, input_data: \"PostToTikTokBlock.Input\", *, profile_key: SecretStr, **kwargs\n+    ) -> BlockOutput:\n+        \"\"\"Post to TikTok with TikTok-specific validation and options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate TikTok constraints\n+        if len(input_data.post) > 2200:\n+            yield \"error\", f\"TikTok post text exceeds 2,200 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if not input_data.media_urls:\n+            yield \"error\", \"TikTok requires at least one media URL (either 1 video or up to 35 images)\"\n+            return\n+\n+        # Check for video vs image constraints\n+        video_extensions = [\".mp4\", \".mov\", \".avi\", \".mkv\", \".wmv\", \".flv\", \".webm\"]\n+        image_extensions = [\".jpg\", \".jpeg\", \".webp\"]\n+\n+        has_video = input_data.is_video or any(\n+            any(url.lower().endswith(ext) for ext in video_extensions)\n+            for url in input_data.media_urls\n+        )\n+\n+        has_images = any(\n+            any(url.lower().endswith(ext) for ext in image_extensions)\n+            for url in input_data.media_urls\n+        )\n+\n+        if has_video and has_images:\n+            yield \"error\", \"TikTok does not support mixing video and images in the same post\"\n+            return\n+\n+        if has_video and len(input_data.media_urls) > 1:\n+            yield \"error\", \"TikTok supports only 1 video per post\"\n+            return\n+\n+        if has_images and len(input_data.media_urls) > 35:\n+            yield \"error\", \"TikTok supports a maximum of 35 images per post\"\n+            return\n+\n+        # Validate image cover index\n+        if has_images and input_data.image_cover_index >= len(input_data.media_urls):\n+            yield \"error\", f\"Image cover index {input_data.image_cover_index} is out of range (max: {len(input_data.media_urls) - 1})\"\n+            return\n+\n+        # Validate visibility option\n+        valid_visibility = [\"public\", \"private\", \"followers\", \"friends\"]\n+        if input_data.visibility not in valid_visibility:\n+            yield \"error\", f\"TikTok visibility must be one of: {', '.join(valid_visibility)}\"\n+            return\n+\n+        # Check for PNG files (not supported)\n+        has_png = any(url.lower().endswith(\".png\") for url in input_data.media_urls)\n+        if has_png:\n+            yield \"error\", \"TikTok does not support PNG files. Please use JPG, JPEG, or WEBP for images.\"\n+            return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build TikTok-specific options\n+        tiktok_options = {}\n+\n+        # Common options\n+        if input_data.auto_add_music and has_images:\n+            tiktok_options[\"autoAddMusic\"] = True\n+\n+        if input_data.disable_comments:\n+            tiktok_options[\"disableComments\"] = True\n+\n+        if input_data.is_branded_content:\n+            tiktok_options[\"isBrandedContent\"] = True\n+\n+        if input_data.is_brand_organic:\n+            tiktok_options[\"isBrandOrganic\"] = True\n+\n+        # Video-specific options\n+        if has_video:\n+            if input_data.disable_duet:\n+                tiktok_options[\"disableDuet\"] = True\n+\n+            if input_data.disable_stitch:\n+                tiktok_options[\"disableStitch\"] = True\n+\n+            if input_data.is_ai_generated:\n+                tiktok_options[\"isAIGenerated\"] = True\n+\n+            if input_data.thumbnail_offset > 0:\n+                tiktok_options[\"thumbNailOffset\"] = input_data.thumbnail_offset\n+\n+            if input_data.draft:\n+                tiktok_options[\"draft\"] = True\n+\n+        # Image-specific options\n+        if has_images:\n+            if input_data.image_cover_index > 0:\n+                tiktok_options[\"imageCoverIndex\"] = input_data.image_cover_index\n+\n+            if input_data.title:\n+                tiktok_options[\"title\"] = input_data.title\n+\n+            if input_data.visibility != \"public\":\n+                tiktok_options[\"visibility\"] = input_data.visibility\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.TIKTOK],\n+            media_urls=input_data.media_urls,\n+            is_video=has_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            tiktok_options=tiktok_options if tiktok_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_x.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_x.py\nnew file mode 100644\nindex 000000000000..9c9fb760e6f5\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_x.py\n@@ -0,0 +1,241 @@\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToXBlock(Block):\n+    \"\"\"Block for posting to X / Twitter with Twitter-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for X / Twitter posts.\"\"\"\n+\n+        # Override post field to include X-specific information\n+        post: str = SchemaField(\n+            description=\"The post text (max 280 chars, up to 25,000 for Premium users). Use @handle to mention users. Use \\\\n\\\\n for thread breaks.\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include X-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Optional list of media URLs. X supports up to 4 images or videos per tweet. Auto-preview links unless media is included.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # X-specific options\n+        reply_to_id: str | None = SchemaField(\n+            description=\"ID of the tweet to reply to\",\n+            default=None,\n+            advanced=True,\n+        )\n+        quote_tweet_id: str | None = SchemaField(\n+            description=\"ID of the tweet to quote (low-level Tweet ID)\",\n+            default=None,\n+            advanced=True,\n+        )\n+        poll_options: list[str] = SchemaField(\n+            description=\"Poll options (2-4 choices)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        poll_duration: int = SchemaField(\n+            description=\"Poll duration in minutes (1-10080)\",\n+            default=1440,\n+            advanced=True,\n+        )\n+        alt_text: list[str] = SchemaField(\n+            description=\"Alt text for each image (max 1,000 chars each, not supported for videos)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        is_thread: bool = SchemaField(\n+            description=\"Whether to automatically break post into thread based on line breaks\",\n+            default=False,\n+            advanced=True,\n+        )\n+        thread_number: bool = SchemaField(\n+            description=\"Add thread numbers (1/n format) to each thread post\",\n+            default=False,\n+            advanced=True,\n+        )\n+        thread_media_urls: list[str] = SchemaField(\n+            description=\"Media URLs for thread posts (one per thread, use 'null' to skip)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        long_post: bool = SchemaField(\n+            description=\"Force long form post (requires Premium X account)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        long_video: bool = SchemaField(\n+            description=\"Enable long video upload (requires approval and Business/Enterprise plan)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        subtitle_url: str = SchemaField(\n+            description=\"URL to SRT subtitle file for videos (must be HTTPS and end in .srt)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        subtitle_language: str = SchemaField(\n+            description=\"Language code for subtitles (default: 'en')\",\n+            default=\"en\",\n+            advanced=True,\n+        )\n+        subtitle_name: str = SchemaField(\n+            description=\"Name of caption track (max 150 chars, default: 'English')\",\n+            default=\"English\",\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            id=\"9e8f844e-b4a5-4b25-80f2-9e1dd7d67625\",\n+            description=\"Post to X / Twitter using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToXBlock.Input,\n+            output_schema=PostToXBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToXBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to X / Twitter with enhanced X-specific options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate X constraints\n+        if not input_data.long_post and len(input_data.post) > 280:\n+            yield \"error\", f\"X post text exceeds 280 character limit ({len(input_data.post)} characters). Enable 'long_post' for Premium accounts.\"\n+            return\n+\n+        if input_data.long_post and len(input_data.post) > 25000:\n+            yield \"error\", f\"X long post text exceeds 25,000 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        if len(input_data.media_urls) > 4:\n+            yield \"error\", \"X supports a maximum of 4 images or videos per tweet\"\n+            return\n+\n+        # Validate poll options\n+        if input_data.poll_options:\n+            if len(input_data.poll_options) < 2 or len(input_data.poll_options) > 4:\n+                yield \"error\", \"X polls require 2-4 options\"\n+                return\n+\n+            if input_data.poll_duration < 1 or input_data.poll_duration > 10080:\n+                yield \"error\", \"X poll duration must be between 1 and 10,080 minutes (7 days)\"\n+                return\n+\n+        # Validate alt text\n+        if input_data.alt_text:\n+            for i, alt in enumerate(input_data.alt_text):\n+                if len(alt) > 1000:\n+                    yield \"error\", f\"X alt text {i+1} exceeds 1,000 character limit ({len(alt)} characters)\"\n+                    return\n+\n+        # Validate subtitle settings\n+        if input_data.subtitle_url:\n+            if not input_data.subtitle_url.startswith(\n+                \"https://\"\n+            ) or not input_data.subtitle_url.endswith(\".srt\"):\n+                yield \"error\", \"Subtitle URL must start with https:// and end with .srt\"\n+                return\n+\n+            if len(input_data.subtitle_name) > 150:\n+                yield \"error\", f\"Subtitle name exceeds 150 character limit ({len(input_data.subtitle_name)} characters)\"\n+                return\n+\n+        # Convert datetime to ISO format if provided\n+        iso_date = (\n+            input_data.schedule_date.isoformat() if input_data.schedule_date else None\n+        )\n+\n+        # Build X-specific options\n+        twitter_options = {}\n+\n+        # Basic options\n+        if input_data.reply_to_id:\n+            twitter_options[\"replyToId\"] = input_data.reply_to_id\n+\n+        if input_data.quote_tweet_id:\n+            twitter_options[\"quoteTweetId\"] = input_data.quote_tweet_id\n+\n+        if input_data.long_post:\n+            twitter_options[\"longPost\"] = True\n+\n+        if input_data.long_video:\n+            twitter_options[\"longVideo\"] = True\n+\n+        # Poll options\n+        if input_data.poll_options:\n+            twitter_options[\"poll\"] = {\n+                \"duration\": input_data.poll_duration,\n+                \"options\": input_data.poll_options,\n+            }\n+\n+        # Alt text for images\n+        if input_data.alt_text:\n+            twitter_options[\"altText\"] = input_data.alt_text\n+\n+        # Thread options\n+        if input_data.is_thread:\n+            twitter_options[\"thread\"] = True\n+\n+            if input_data.thread_number:\n+                twitter_options[\"threadNumber\"] = True\n+\n+            if input_data.thread_media_urls:\n+                twitter_options[\"mediaUrls\"] = input_data.thread_media_urls\n+\n+        # Video subtitle options\n+        if input_data.subtitle_url:\n+            twitter_options[\"subTitleUrl\"] = input_data.subtitle_url\n+            twitter_options[\"subTitleLanguage\"] = input_data.subtitle_language\n+            twitter_options[\"subTitleName\"] = input_data.subtitle_name\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.TWITTER],\n+            media_urls=input_data.media_urls,\n+            is_video=input_data.is_video,\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            twitter_options=twitter_options if twitter_options else None,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/ayrshare/post_to_youtube.py b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_youtube.py\nnew file mode 100644\nindex 000000000000..16dc945da1ce\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/blocks/ayrshare/post_to_youtube.py\n@@ -0,0 +1,305 @@\n+from typing import Any\n+\n+from backend.integrations.ayrshare import PostIds, PostResponse, SocialPlatform\n+from backend.sdk import (\n+    Block,\n+    BlockCategory,\n+    BlockOutput,\n+    BlockSchema,\n+    BlockType,\n+    SchemaField,\n+    SecretStr,\n+)\n+\n+from ._util import BaseAyrshareInput, create_ayrshare_client\n+\n+\n+class PostToYouTubeBlock(Block):\n+    \"\"\"Block for posting to YouTube with YouTube-specific options.\"\"\"\n+\n+    class Input(BaseAyrshareInput):\n+        \"\"\"Input schema for YouTube posts.\"\"\"\n+\n+        # Override post field to include YouTube-specific information\n+        post: str = SchemaField(\n+            description=\"Video description (max 5,000 chars, empty string allowed). Cannot contain < or > characters.\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # Override media_urls to include YouTube-specific constraints\n+        media_urls: list[str] = SchemaField(\n+            description=\"Required video URL. YouTube only supports 1 video per post.\",\n+            default_factory=list,\n+            advanced=False,\n+        )\n+\n+        # YouTube-specific required options\n+        title: str = SchemaField(\n+            description=\"Video title (max 100 chars, required). Cannot contain < or > characters.\",\n+            default=\"\",\n+            advanced=False,\n+        )\n+\n+        # YouTube-specific optional options\n+        visibility: str = SchemaField(\n+            description=\"Video visibility: 'private' (default), 'public', or 'unlisted'\",\n+            default=\"private\",\n+            advanced=True,\n+        )\n+        thumbnail: str = SchemaField(\n+            description=\"Thumbnail URL (JPEG/PNG under 2MB, must end in .png/.jpg/.jpeg). Requires phone verification.\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        playlist_id: str = SchemaField(\n+            description=\"Playlist ID to add video (user must own playlist)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        tags: list[str] = SchemaField(\n+            description=\"Video tags (min 2 chars each, max 500 chars total)\",\n+            default_factory=list,\n+            advanced=True,\n+        )\n+        made_for_kids: bool = SchemaField(\n+            description=\"Self-declared kids content\", default=False, advanced=True\n+        )\n+        is_shorts: bool = SchemaField(\n+            description=\"Post as YouTube Short (max 3 minutes, adds #shorts)\",\n+            default=False,\n+            advanced=True,\n+        )\n+        notify_subscribers: bool = SchemaField(\n+            description=\"Send notification to subscribers\", default=True, advanced=True\n+        )\n+        category_id: int = SchemaField(\n+            description=\"Video category ID (e.g., 24 = Entertainment)\",\n+            default=0,\n+            advanced=True,\n+        )\n+        contains_synthetic_media: bool = SchemaField(\n+            description=\"Disclose realistic AI/synthetic content\",\n+            default=False,\n+            advanced=True,\n+        )\n+        publish_at: str = SchemaField(\n+            description=\"UTC publish time (YouTube controlled, format: 2022-10-08T21:18:36Z)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        # YouTube targeting options (flattened from YouTubeTargeting object)\n+        targeting_block_countries: list[str] | None = SchemaField(\n+            description=\"Country codes to block from viewing (e.g., ['US', 'CA'])\",\n+            default=None,\n+            advanced=True,\n+        )\n+        targeting_allow_countries: list[str] | None = SchemaField(\n+            description=\"Country codes to allow viewing (e.g., ['GB', 'AU'])\",\n+            default=None,\n+            advanced=True,\n+        )\n+        subtitle_url: str = SchemaField(\n+            description=\"URL to SRT or SBV subtitle file (must be HTTPS and end in .srt/.sbv, under 100MB)\",\n+            default=\"\",\n+            advanced=True,\n+        )\n+        subtitle_language: str = SchemaField(\n+            description=\"Language code for subtitles (default: 'en')\",\n+            default=\"en\",\n+            advanced=True,\n+        )\n+        subtitle_name: str = SchemaField(\n+            description=\"Name of caption track (max 150 chars, default: 'English')\",\n+            default=\"English\",\n+            advanced=True,\n+        )\n+\n+    class Output(BlockSchema):\n+        post_result: PostResponse = SchemaField(description=\"The result of the post\")\n+        post: PostIds = SchemaField(description=\"The result of the post\")\n+\n+    def __init__(self):\n+        super().__init__(\n+            disabled=True,\n+            id=\"0082d712-ff1b-4c3d-8a8d-6c7721883b83\",\n+            description=\"Post to YouTube using Ayrshare\",\n+            categories={BlockCategory.SOCIAL},\n+            block_type=BlockType.AYRSHARE,\n+            input_schema=PostToYouTubeBlock.Input,\n+            output_schema=PostToYouTubeBlock.Output,\n+        )\n+\n+    async def run(\n+        self,\n+        input_data: \"PostToYouTubeBlock.Input\",\n+        *,\n+        profile_key: SecretStr,\n+        **kwargs,\n+    ) -> BlockOutput:\n+        \"\"\"Post to YouTube with YouTube-specific validation and options.\"\"\"\n+        if not profile_key:\n+            yield \"error\", \"Please link a social account via Ayrshare\"\n+            return\n+\n+        client = create_ayrshare_client()\n+        if not client:\n+            yield \"error\", \"Ayrshare integration is not configured. Please set up the AYRSHARE_API_KEY.\"\n+            return\n+\n+        # Validate YouTube constraints\n+        if not input_data.title:\n+            yield \"error\", \"YouTube requires a video title\"\n+            return\n+\n+        if len(input_data.title) > 100:\n+            yield \"error\", f\"YouTube title exceeds 100 character limit ({len(input_data.title)} characters)\"\n+            return\n+\n+        if len(input_data.post) > 5000:\n+            yield \"error\", f\"YouTube description exceeds 5,000 character limit ({len(input_data.post)} characters)\"\n+            return\n+\n+        # Check for forbidden characters\n+        forbidden_chars = [\"<\", \">\"]\n+        for char in forbidden_chars:\n+            if char in input_data.title:\n+                yield \"error\", f\"YouTube title cannot contain '{char}' character\"\n+                return\n+            if char in input_data.post:\n+                yield \"error\", f\"YouTube description cannot contain '{char}' character\"\n+                return\n+\n+        if not input_data.media_urls:\n+            yield \"error\", \"YouTube requires exactly one video URL\"\n+            return\n+\n+        if len(input_data.media_urls) > 1:\n+            yield \"error\", \"YouTube supports only 1 video per post\"\n+            return\n+\n+        # Validate visibility option\n+        valid_visibility = [\"private\", \"public\", \"unlisted\"]\n+        if input_data.visibility not in valid_visibility:\n+            yield \"error\", f\"YouTube visibility must be one of: {', '.join(valid_visibility)}\"\n+            return\n+\n+        # Validate thumbnail URL format\n+        if input_data.thumbnail:\n+            valid_extensions = [\".png\", \".jpg\", \".jpeg\"]\n+            if not any(\n+                input_data.thumbnail.lower().endswith(ext) for ext in valid_extensions\n+            ):\n+                yield \"error\", \"YouTube thumbnail must end in .png, .jpg, or .jpeg\"\n+                return\n+\n+        # Validate tags\n+        if input_data.tags:\n+            total_tag_length = sum(len(tag) for tag in input_data.tags)\n+            if total_tag_length > 500:\n+                yield \"error\", f\"YouTube tags total length exceeds 500 characters ({total_tag_length} characters)\"\n+                return\n+\n+            for tag in input_data.tags:\n+                if len(tag) < 2:\n+                    yield \"error\", f\"YouTube tag '{tag}' is too short (minimum 2 characters)\"\n+                    return\n+\n+        # Validate subtitle URL\n+        if input_data.subtitle_url:\n+            if not input_data.subtitle_url.startswith(\"https://\"):\n+                yield \"error\", \"YouTube subtitle URL must start with https://\"\n+                return\n+\n+            valid_subtitle_extensions = [\".srt\", \".sbv\"]\n+            if not any(\n+                input_data.subtitle_url.lower().endswith(ext)\n+                for ext in valid_subtitle_extensions\n+            ):\n+                yield \"error\", \"YouTube subtitle URL must end in .srt or .sbv\"\n+                return\n+\n+        if len(input_data.subtitle_name) > 150:\n+            yield \"error\", f\"YouTube subtitle name exceeds 150 character limit ({len(input_data.subtitle_name)} characters)\"\n+            return\n+\n+        # Validate publish_at format if provided\n+        if input_data.publish_at and input_data.schedule_date:\n+            yield \"error\", \"Cannot use both 'publish_at' and 'schedule_date'. Use 'publish_at' for YouTube-controlled publishing.\"\n+            return\n+\n+        # Convert datetime to ISO format if provided (only if not using publish_at)\n+        iso_date = None\n+        if not input_data.publish_at and input_data.schedule_date:\n+            iso_date = input_data.schedule_date.isoformat()\n+\n+        # Build YouTube-specific options\n+        youtube_options: dict[str, Any] = {\"title\": input_data.title}\n+\n+        # Basic options\n+        if input_data.visibility != \"private\":\n+            youtube_options[\"visibility\"] = input_data.visibility\n+\n+        if input_data.thumbnail:\n+            youtube_options[\"thumbNail\"] = input_data.thumbnail\n+\n+        if input_data.playlist_id:\n+            youtube_options[\"playListId\"] = input_data.playlist_id\n+\n+        if input_data.tags:\n+            youtube_options[\"tags\"] = input_data.tags\n+\n+        if input_data.made_for_kids:\n+            youtube_options[\"madeForKids\"] = True\n+\n+        if input_data.is_shorts:\n+            youtube_options[\"shorts\"] = True\n+\n+        if not input_data.notify_subscribers:\n+            youtube_options[\"notifySubscribers\"] = False\n+\n+        if input_data.category_id > 0:\n+            youtube_options[\"categoryId\"] = input_data.category_id\n+\n+        if input_data.contains_synthetic_media:\n+            youtube_options[\"containsSyntheticMedia\"] = True\n+\n+        if input_data.publish_at:\n+            youtube_options[\"publishAt\"] = input_data.publish_at\n+\n+        # Country targeting (from flattened fields)\n+        targeting_dict = {}\n+        if input_data.targeting_block_countries:\n+            targeting_dict[\"block\"] = input_data.targeting_block_countries\n+        if input_data.targeting_allow_countries:\n+            targeting_dict[\"allow\"] = input_data.targeting_allow_countries\n+\n+        if targeting_dict:\n+            youtube_options[\"targeting\"] = targeting_dict\n+\n+        # Subtitle options\n+        if input_data.subtitle_url:\n+            youtube_options[\"subTitleUrl\"] = input_data.subtitle_url\n+            youtube_options[\"subTitleLanguage\"] = input_data.subtitle_language\n+            youtube_options[\"subTitleName\"] = input_data.subtitle_name\n+\n+        response = await client.create_post(\n+            post=input_data.post,\n+            platforms=[SocialPlatform.YOUTUBE],\n+            media_urls=input_data.media_urls,\n+            is_video=True,  # YouTube only supports videos\n+            schedule_date=iso_date,\n+            disable_comments=input_data.disable_comments,\n+            shorten_links=input_data.shorten_links,\n+            unsplash=input_data.unsplash,\n+            requires_approval=input_data.requires_approval,\n+            random_post=input_data.random_post,\n+            random_media_url=input_data.random_media_url,\n+            notes=input_data.notes,\n+            youtube_options=youtube_options,\n+            profile_key=profile_key.get_secret_value(),\n+        )\n+        yield \"post_result\", response\n+        if response.postIds:\n+            for p in response.postIds:\n+                yield \"post\", p\ndiff --git a/autogpt_platform/backend/backend/blocks/exa/answers.py b/autogpt_platform/backend/backend/blocks/exa/answers.py\nindex 237edccd650f..fa3f6b403f44 100644\n--- a/autogpt_platform/backend/backend/blocks/exa/answers.py\n+++ b/autogpt_platform/backend/backend/blocks/exa/answers.py\n@@ -119,6 +119,3 @@ async def run(\n \n         except Exception as e:\n             yield \"error\", str(e)\n-            yield \"answer\", \"\"\n-            yield \"citations\", []\n-            yield \"cost_dollars\", {}\ndiff --git a/autogpt_platform/backend/backend/data/block.py b/autogpt_platform/backend/backend/data/block.py\nindex 5f28fefc879d..2d77cb04ebee 100644\n--- a/autogpt_platform/backend/backend/data/block.py\n+++ b/autogpt_platform/backend/backend/data/block.py\n@@ -55,6 +55,7 @@ class BlockType(Enum):\n     WEBHOOK_MANUAL = \"Webhook (manual)\"\n     AGENT = \"Agent\"\n     AI = \"AI\"\n+    AYRSHARE = \"Ayrshare\"\n \n \n class BlockCategory(Enum):\ndiff --git a/autogpt_platform/backend/backend/data/model.py b/autogpt_platform/backend/backend/data/model.py\nindex 17ba987f14f1..c750b80482b9 100644\n--- a/autogpt_platform/backend/backend/data/model.py\n+++ b/autogpt_platform/backend/backend/data/model.py\n@@ -14,7 +14,6 @@\n     Generic,\n     Literal,\n     Optional,\n-    TypedDict,\n     TypeVar,\n     cast,\n     get_args,\n@@ -38,6 +37,7 @@\n     ValidationError,\n     core_schema,\n )\n+from typing_extensions import TypedDict\n \n from backend.integrations.providers import ProviderName\n from backend.util.settings import Secrets\n@@ -316,15 +316,32 @@ class OAuthState(BaseModel):\n \n class UserMetadata(BaseModel):\n     integration_credentials: list[Credentials] = Field(default_factory=list)\n+    \"\"\"‚ö†Ô∏è Deprecated; use `UserIntegrations.credentials` instead\"\"\"\n     integration_oauth_states: list[OAuthState] = Field(default_factory=list)\n+    \"\"\"‚ö†Ô∏è Deprecated; use `UserIntegrations.oauth_states` instead\"\"\"\n \n \n class UserMetadataRaw(TypedDict, total=False):\n     integration_credentials: list[dict]\n+    \"\"\"‚ö†Ô∏è Deprecated; use `UserIntegrations.credentials` instead\"\"\"\n     integration_oauth_states: list[dict]\n+    \"\"\"‚ö†Ô∏è Deprecated; use `UserIntegrations.oauth_states` instead\"\"\"\n \n \n class UserIntegrations(BaseModel):\n+\n+    class ManagedCredentials(BaseModel):\n+        \"\"\"Integration credentials managed by us, rather than by the user\"\"\"\n+\n+        ayrshare_profile_key: Optional[SecretStr] = None\n+\n+        @field_serializer(\"*\")\n+        def dump_secret_strings(value: Any, _info):\n+            if isinstance(value, SecretStr):\n+                return value.get_secret_value()\n+            return value\n+\n+    managed_credentials: ManagedCredentials = Field(default_factory=ManagedCredentials)\n     credentials: list[Credentials] = Field(default_factory=list)\n     oauth_states: list[OAuthState] = Field(default_factory=list)\n \ndiff --git a/autogpt_platform/backend/backend/executor/manager.py b/autogpt_platform/backend/backend/executor/manager.py\nindex df246abb05a3..c9797ec77791 100644\n--- a/autogpt_platform/backend/backend/executor/manager.py\n+++ b/autogpt_platform/backend/backend/executor/manager.py\n@@ -35,6 +35,7 @@\n from prometheus_client import Gauge, start_http_server\n \n from backend.blocks.agent import AgentExecutorBlock\n+from backend.blocks.ayrshare import AYRSHARE_BLOCK_IDS\n from backend.data import redis_client as redis\n from backend.data.block import (\n     BlockData,\n@@ -182,6 +183,17 @@ async def execute_node(\n         )\n         extra_exec_kwargs[field_name] = credentials\n \n+    if node_block.id in AYRSHARE_BLOCK_IDS:\n+        profile_key = await creds_manager.store.get_ayrshare_profile_key(user_id)\n+        if not profile_key:\n+            logger.error(\n+                \"Ayrshare profile not configured. Please link a social account via Ayrshare integration first.\"\n+            )\n+            raise ValueError(\n+                \"Ayrshare profile not configured. Please link a social account via Ayrshare integration first.\"\n+            )\n+        extra_exec_kwargs[\"profile_key\"] = profile_key\n+\n     output_size = 0\n     try:\n         async for output_name, output_data in node_block.execute(\ndiff --git a/autogpt_platform/backend/backend/integrations/ayrshare.py b/autogpt_platform/backend/backend/integrations/ayrshare.py\nnew file mode 100644\nindex 000000000000..42e069b4aca5\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/integrations/ayrshare.py\n@@ -0,0 +1,515 @@\n+from __future__ import annotations\n+\n+import json\n+import logging\n+from enum import Enum\n+from typing import Any, Optional\n+\n+from pydantic import BaseModel\n+\n+from backend.util.exceptions import MissingConfigError\n+from backend.util.request import Requests\n+from backend.util.settings import Settings\n+\n+logger = logging.getLogger(__name__)\n+\n+settings = Settings()\n+\n+\n+class AyrshareAPIException(Exception):\n+    def __init__(self, message: str, status_code: int):\n+        super().__init__(message)\n+        self.status_code = status_code\n+\n+\n+class SocialPlatform(str, Enum):\n+    BLUESKY = \"bluesky\"\n+    FACEBOOK = \"facebook\"\n+    TWITTER = \"twitter\"\n+    LINKEDIN = \"linkedin\"\n+    INSTAGRAM = \"instagram\"\n+    YOUTUBE = \"youtube\"\n+    REDDIT = \"reddit\"\n+    TELEGRAM = \"telegram\"\n+    GOOGLE_MY_BUSINESS = \"gmb\"\n+    PINTEREST = \"pinterest\"\n+    TIKTOK = \"tiktok\"\n+    SNAPCHAT = \"snapchat\"\n+    THREADS = \"threads\"\n+\n+\n+class EmailConfig(BaseModel):\n+    to: str\n+    subject: Optional[str] = None\n+    body: Optional[str] = None\n+    from_name: Optional[str] = None\n+    from_email: Optional[str] = None\n+\n+\n+class JWTResponse(BaseModel):\n+    status: str\n+    title: str\n+    token: str\n+    url: str\n+    emailSent: Optional[bool] = None\n+    expiresIn: Optional[str] = None\n+\n+\n+class ProfileResponse(BaseModel):\n+    status: str\n+    title: str\n+    refId: str\n+    profileKey: str\n+    messagingActive: Optional[bool] = None\n+\n+\n+class PostResponse(BaseModel):\n+    status: str\n+    id: str\n+    refId: str\n+    profileTitle: str\n+    post: str\n+    postIds: Optional[list[PostIds]] = None\n+    scheduleDate: Optional[str] = None\n+    errors: Optional[list[str]] = None\n+\n+\n+class PostIds(BaseModel):\n+    status: str\n+    id: str\n+    postUrl: str\n+    platform: str\n+\n+\n+class AutoHashtag(BaseModel):\n+    max: Optional[int] = None\n+    position: Optional[str] = None\n+\n+\n+class FirstComment(BaseModel):\n+    text: str\n+    platforms: Optional[list[SocialPlatform]] = None\n+\n+\n+class AutoSchedule(BaseModel):\n+    interval: str\n+    platforms: Optional[list[SocialPlatform]] = None\n+    startDate: Optional[str] = None\n+    endDate: Optional[str] = None\n+\n+\n+class AutoRepost(BaseModel):\n+    interval: str\n+    platforms: Optional[list[SocialPlatform]] = None\n+    startDate: Optional[str] = None\n+    endDate: Optional[str] = None\n+\n+\n+class AyrshareClient:\n+    \"\"\"Client for the Ayrshare Social Media Post API\"\"\"\n+\n+    API_URL = \"https://api.ayrshare.com/api\"\n+    POST_ENDPOINT = f\"{API_URL}/post\"\n+    PROFILES_ENDPOINT = f\"{API_URL}/profiles\"\n+    JWT_ENDPOINT = f\"{PROFILES_ENDPOINT}/generateJWT\"\n+\n+    def __init__(\n+        self,\n+        custom_requests: Optional[Requests] = None,\n+    ):\n+        if not settings.secrets.ayrshare_api_key:\n+            raise MissingConfigError(\"AYRSHARE_API_KEY is not configured\")\n+\n+        headers: dict[str, str] = {\n+            \"Content-Type\": \"application/json\",\n+            \"Authorization\": f\"Bearer {settings.secrets.ayrshare_api_key}\",\n+        }\n+        self.headers = headers\n+\n+        if custom_requests:\n+            self._requests = custom_requests\n+        else:\n+            self._requests = Requests(\n+                extra_headers=headers,\n+                trusted_origins=[\"https://api.ayrshare.com\"],\n+            )\n+\n+    async def generate_jwt(\n+        self,\n+        private_key: str,\n+        profile_key: str,\n+        logout: Optional[bool] = None,\n+        redirect: Optional[str] = None,\n+        allowed_social: Optional[list[SocialPlatform]] = None,\n+        verify: Optional[bool] = None,\n+        base64: Optional[bool] = None,\n+        expires_in: Optional[int] = None,\n+        email: Optional[EmailConfig] = None,\n+    ) -> JWTResponse:\n+        \"\"\"\n+        Generate a JSON Web Token (JWT) for use with single sign on.\n+\n+        Docs: https://www.ayrshare.com/docs/apis/profiles/generate-jwt-overview\n+\n+        Args:\n+            domain: Domain of app. Must match the domain given during onboarding.\n+            private_key: Private Key used for encryption.\n+            profile_key: User Profile Key (not the API Key).\n+            logout: Automatically logout the current session.\n+            redirect: URL to redirect to when the \"Done\" button or logo is clicked.\n+            allowed_social: List of social networks to display in the linking page.\n+            verify: Verify that the generated token is valid (recommended for non-production).\n+            base64: Whether the private key is base64 encoded.\n+            expires_in: Token longevity in minutes (1-2880).\n+            email: Configuration for sending Connect Accounts email.\n+\n+        Returns:\n+            JWTResponse object containing the JWT token and URL.\n+\n+        Raises:\n+            AyrshareAPIException: If the API request fails or private key is invalid.\n+        \"\"\"\n+        payload: dict[str, Any] = {\n+            \"domain\": \"id-pojeg\",\n+            \"privateKey\": private_key,\n+            \"profileKey\": profile_key,\n+        }\n+\n+        headers = self.headers\n+        headers[\"Profile-Key\"] = profile_key\n+        if logout is not None:\n+            payload[\"logout\"] = logout\n+        if redirect is not None:\n+            payload[\"redirect\"] = redirect\n+        if allowed_social is not None:\n+            payload[\"allowedSocial\"] = [p.value for p in allowed_social]\n+        if verify is not None:\n+            payload[\"verify\"] = verify\n+        if base64 is not None:\n+            payload[\"base64\"] = base64\n+        if expires_in is not None:\n+            payload[\"expiresIn\"] = expires_in\n+        if email is not None:\n+            payload[\"email\"] = email.model_dump(exclude_none=True)\n+\n+        response = await self._requests.post(\n+            self.JWT_ENDPOINT, json=payload, headers=headers\n+        )\n+\n+        if not response.ok:\n+            try:\n+                error_data = response.json()\n+                error_message = error_data.get(\"message\", \"Unknown error\")\n+            except json.JSONDecodeError:\n+                error_message = response.text()\n+\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API request failed ({response.status}): {error_message}\",\n+                response.status,\n+            )\n+\n+        response_data = response.json()\n+        if response_data.get(\"status\") != \"success\":\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API returned error: {response_data.get('message', 'Unknown error')}\",\n+                response.status,\n+            )\n+\n+        return JWTResponse(**response_data)\n+\n+    async def create_profile(\n+        self,\n+        title: str,\n+        messaging_active: Optional[bool] = None,\n+        hide_top_header: Optional[bool] = None,\n+        top_header: Optional[str] = None,\n+        disable_social: Optional[list[SocialPlatform]] = None,\n+        team: Optional[bool] = None,\n+        email: Optional[str] = None,\n+        sub_header: Optional[str] = None,\n+        tags: Optional[list[str]] = None,\n+    ) -> ProfileResponse:\n+        \"\"\"\n+        Create a new User Profile under your Primary Profile.\n+\n+        Docs: https://www.ayrshare.com/docs/apis/profiles/create-profile\n+\n+        Args:\n+            title: Title of the new profile. Must be unique.\n+            messaging_active: Set to true to activate messaging for this user profile.\n+            hide_top_header: Hide the top header on the social accounts linkage page.\n+            top_header: Change the header on the social accounts linkage page.\n+            disable_social: Array of social networks that are disabled for this user's profile.\n+            team: Create a new user profile as a team member.\n+            email: Email address for team member invite (required if team is true).\n+            sub_header: Change the sub header on the social accounts linkage page.\n+            tags: Array of strings to tag user profiles.\n+\n+        Returns:\n+            ProfileResponse object containing the profile details and profile key.\n+\n+        Raises:\n+            AyrshareAPIException: If the API request fails or profile title already exists.\n+        \"\"\"\n+        payload: dict[str, Any] = {\n+            \"title\": title,\n+        }\n+\n+        if messaging_active is not None:\n+            payload[\"messagingActive\"] = messaging_active\n+        if hide_top_header is not None:\n+            payload[\"hideTopHeader\"] = hide_top_header\n+        if top_header is not None:\n+            payload[\"topHeader\"] = top_header\n+        if disable_social is not None:\n+            payload[\"disableSocial\"] = [p.value for p in disable_social]\n+        if team is not None:\n+            payload[\"team\"] = team\n+        if email is not None:\n+            payload[\"email\"] = email\n+        if sub_header is not None:\n+            payload[\"subHeader\"] = sub_header\n+        if tags is not None:\n+            payload[\"tags\"] = tags\n+\n+        response = await self._requests.post(self.PROFILES_ENDPOINT, json=payload)\n+\n+        if not response.ok:\n+            try:\n+                error_data = response.json()\n+                error_message = error_data.get(\"message\", \"Unknown error\")\n+            except json.JSONDecodeError:\n+                error_message = response.text()\n+\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API request failed ({response.status}): {error_message}\",\n+                response.status,\n+            )\n+\n+        response_data = response.json()\n+        if response_data.get(\"status\") != \"success\":\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API returned error: {response_data.get('message', 'Unknown error')}\",\n+                response.status,\n+            )\n+\n+        return ProfileResponse(**response_data)\n+\n+    async def create_post(\n+        self,\n+        post: str,\n+        platforms: list[SocialPlatform],\n+        *,\n+        media_urls: Optional[list[str]] = None,\n+        is_video: Optional[bool] = None,\n+        schedule_date: Optional[str] = None,\n+        validate_schedule: Optional[bool] = None,\n+        first_comment: Optional[FirstComment] = None,\n+        disable_comments: Optional[bool] = None,\n+        shorten_links: Optional[bool] = None,\n+        auto_schedule: Optional[AutoSchedule] = None,\n+        auto_repost: Optional[AutoRepost] = None,\n+        auto_hashtag: Optional[AutoHashtag | bool] = None,\n+        unsplash: Optional[str] = None,\n+        bluesky_options: Optional[dict[str, Any]] = None,\n+        facebook_options: Optional[dict[str, Any]] = None,\n+        gmb_options: Optional[dict[str, Any]] = None,\n+        instagram_options: Optional[dict[str, Any]] = None,\n+        linkedin_options: Optional[dict[str, Any]] = None,\n+        pinterest_options: Optional[dict[str, Any]] = None,\n+        reddit_options: Optional[dict[str, Any]] = None,\n+        snapchat_options: Optional[dict[str, Any]] = None,\n+        telegram_options: Optional[dict[str, Any]] = None,\n+        threads_options: Optional[dict[str, Any]] = None,\n+        tiktok_options: Optional[dict[str, Any]] = None,\n+        twitter_options: Optional[dict[str, Any]] = None,\n+        youtube_options: Optional[dict[str, Any]] = None,\n+        requires_approval: Optional[bool] = None,\n+        random_post: Optional[bool] = None,\n+        random_media_url: Optional[bool] = None,\n+        idempotency_key: Optional[str] = None,\n+        notes: Optional[str] = None,\n+        profile_key: Optional[str] = None,\n+    ) -> PostResponse:\n+        \"\"\"\n+        Create a post across multiple social media platforms.\n+\n+        Docs: https://www.ayrshare.com/docs/apis/post/post\n+\n+        Args:\n+            post: The post text to be published - required\n+            platforms: List of platforms to post to (e.g. [SocialPlatform.TWITTER, SocialPlatform.FACEBOOK]) - required\n+            media_urls: Optional list of media URLs to include - required if is_video is true\n+            is_video: Whether the media is a video - default is false (in api docs)\n+            schedule_date: UTC datetime for scheduling (YYYY-MM-DDThh:mm:ssZ) - default is None (in api docs)\n+            validate_schedule: Whether to validate the schedule date - default is false (in api docs)\n+            first_comment: Configuration for first comment - default is None (in api docs)\n+            disable_comments: Whether to disable comments - default is false (in api docs)\n+            shorten_links: Whether to shorten links - default is false (in api docs)\n+            auto_schedule: Configuration for automatic scheduling - default is None (in api docs https://www.ayrshare.com/docs/apis/auto-schedule/overview)\n+            auto_repost: Configuration for automatic reposting - default is None (in api docs https://www.ayrshare.com/docs/apis/post/overview#auto-repost)\n+            auto_hashtag: Configuration for automatic hashtags - default is None (in api docs https://www.ayrshare.com/docs/apis/post/overview#auto-hashtags)\n+            unsplash: Unsplash image configuration - default is None (in api docs https://www.ayrshare.com/docs/apis/post/overview#unsplash)\n+\n+            ------------------------------------------------------------\n+\n+            bluesky_options: Bluesky-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/bluesky\n+            facebook_options: Facebook-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/facebook\n+            gmb_options: Google Business Profile options - https://www.ayrshare.com/docs/apis/post/social-networks/google\n+            instagram_options: Instagram-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/instagram\n+            linkedin_options: LinkedIn-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/linkedin\n+            pinterest_options: Pinterest-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/pinterest\n+            reddit_options: Reddit-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/reddit\n+            snapchat_options: Snapchat-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/snapchat\n+            telegram_options: Telegram-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/telegram\n+            threads_options: Threads-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/threads\n+            tiktok_options: TikTok-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/tiktok\n+            twitter_options: Twitter-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/twitter\n+            youtube_options: YouTube-specific options - https://www.ayrshare.com/docs/apis/post/social-networks/youtube\n+\n+            ------------------------------------------------------------\n+\n+\n+            requires_approval: Whether to enable approval workflow - default is false (in api docs)\n+            random_post: Whether to generate random post text - default is false (in api docs)\n+            random_media_url: Whether to generate random media - default is false (in api docs)\n+            idempotency_key: Unique ID for the post - default is None (in api docs)\n+            notes: Additional notes for the post - default is None (in api docs)\n+\n+        Returns:\n+            PostResponse object containing the post details and status\n+\n+        Raises:\n+            AyrshareAPIException: If the API request fails\n+        \"\"\"\n+\n+        payload: dict[str, Any] = {\n+            \"post\": post,\n+            \"platforms\": [p.value for p in platforms],\n+        }\n+\n+        # Add optional parameters if provided\n+        if media_urls:\n+            payload[\"mediaUrls\"] = media_urls\n+        if is_video is not None:\n+            payload[\"isVideo\"] = is_video\n+        if schedule_date:\n+            payload[\"scheduleDate\"] = schedule_date\n+        if validate_schedule is not None:\n+            payload[\"validateSchedule\"] = validate_schedule\n+        if first_comment:\n+            first_comment_dict = first_comment.model_dump(exclude_none=True)\n+            if first_comment.platforms:\n+                first_comment_dict[\"platforms\"] = [\n+                    p.value for p in first_comment.platforms\n+                ]\n+            payload[\"firstComment\"] = first_comment_dict\n+        if disable_comments is not None:\n+            payload[\"disableComments\"] = disable_comments\n+        if shorten_links is not None:\n+            payload[\"shortenLinks\"] = shorten_links\n+        if auto_schedule:\n+            auto_schedule_dict = auto_schedule.model_dump(exclude_none=True)\n+            if auto_schedule.platforms:\n+                auto_schedule_dict[\"platforms\"] = [\n+                    p.value for p in auto_schedule.platforms\n+                ]\n+            payload[\"autoSchedule\"] = auto_schedule_dict\n+        if auto_repost:\n+            auto_repost_dict = auto_repost.model_dump(exclude_none=True)\n+            if auto_repost.platforms:\n+                auto_repost_dict[\"platforms\"] = [p.value for p in auto_repost.platforms]\n+            payload[\"autoRepost\"] = auto_repost_dict\n+        if auto_hashtag:\n+            payload[\"autoHashtag\"] = (\n+                auto_hashtag.model_dump(exclude_none=True)\n+                if isinstance(auto_hashtag, AutoHashtag)\n+                else auto_hashtag\n+            )\n+        if unsplash:\n+            payload[\"unsplash\"] = unsplash\n+        if bluesky_options:\n+            payload[\"blueskyOptions\"] = bluesky_options\n+        if facebook_options:\n+            payload[\"faceBookOptions\"] = facebook_options\n+        if gmb_options:\n+            payload[\"gmbOptions\"] = gmb_options\n+        if instagram_options:\n+            payload[\"instagramOptions\"] = instagram_options\n+        if linkedin_options:\n+            payload[\"linkedInOptions\"] = linkedin_options\n+        if pinterest_options:\n+            payload[\"pinterestOptions\"] = pinterest_options\n+        if reddit_options:\n+            payload[\"redditOptions\"] = reddit_options\n+        if snapchat_options:\n+            payload[\"snapchatOptions\"] = snapchat_options\n+        if telegram_options:\n+            payload[\"telegramOptions\"] = telegram_options\n+        if threads_options:\n+            payload[\"threadsOptions\"] = threads_options\n+        if tiktok_options:\n+            payload[\"tikTokOptions\"] = tiktok_options\n+        if twitter_options:\n+            payload[\"twitterOptions\"] = twitter_options\n+        if youtube_options:\n+            payload[\"youTubeOptions\"] = youtube_options\n+        if requires_approval is not None:\n+            payload[\"requiresApproval\"] = requires_approval\n+        if random_post is not None:\n+            payload[\"randomPost\"] = random_post\n+        if random_media_url is not None:\n+            payload[\"randomMediaUrl\"] = random_media_url\n+        if idempotency_key:\n+            payload[\"idempotencyKey\"] = idempotency_key\n+        if notes:\n+            payload[\"notes\"] = notes\n+\n+        headers = self.headers\n+        if profile_key:\n+            headers[\"Profile-Key\"] = profile_key\n+\n+        response = await self._requests.post(\n+            self.POST_ENDPOINT, json=payload, headers=headers\n+        )\n+        logger.warning(f\"Ayrshare request: {payload} and headers: {headers}\")\n+        if not response.ok:\n+            logger.error(\n+                f\"Ayrshare API request failed ({response.status}): {response.text()}\"\n+            )\n+            try:\n+                error_data = response.json()\n+                error_message = error_data.get(\"message\", \"Unknown error\")\n+            except json.JSONDecodeError:\n+                error_message = response.text()\n+\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API request failed ({response.status}): {error_message}\",\n+                response.status,\n+            )\n+\n+        response_data = response.json()\n+        if response_data.get(\"status\") != \"success\":\n+            logger.error(\n+                f\"Ayrshare API returned error: {response_data.get('message', 'Unknown error')}\"\n+            )\n+            raise AyrshareAPIException(\n+                f\"Ayrshare API returned error: {response_data.get('message', 'Unknown error')}\",\n+                response.status,\n+            )\n+\n+        # Ayrshare returns an array of posts even for single posts\n+        # It seems like there is only ever one post in the array, and within that\n+        # there are multiple postIds\n+\n+        # There is a seperate endpoint for bulk posting, so feels safe to just take\n+        # the first post from the array\n+\n+        if len(response_data[\"posts\"]) == 0:\n+            logger.error(\"Ayrshare API returned no posts\")\n+            raise AyrshareAPIException(\n+                \"Ayrshare API returned no posts\",\n+                response.status,\n+            )\n+        logger.warn(f\"Ayrshare API returned posts: {response_data['posts']}\")\n+        return PostResponse(**response_data[\"posts\"][0])\ndiff --git a/autogpt_platform/backend/backend/integrations/credentials_store.py b/autogpt_platform/backend/backend/integrations/credentials_store.py\nindex f321da82fabf..033bfa97fe33 100644\n--- a/autogpt_platform/backend/backend/integrations/credentials_store.py\n+++ b/autogpt_platform/backend/backend/integrations/credentials_store.py\n@@ -1,6 +1,7 @@\n import base64\n import hashlib\n import secrets\n+from contextlib import asynccontextmanager\n from datetime import datetime, timedelta, timezone\n from typing import Optional\n \n@@ -240,6 +241,7 @@ def db_manager(self):\n \n             return get_service_client(DatabaseManagerAsyncClient)\n \n+    # =============== USER-MANAGED CREDENTIALS =============== #\n     async def add_creds(self, user_id: str, credentials: Credentials) -> None:\n         async with await self.locked_user_integrations(user_id):\n             if await self.get_creds_by_id(user_id, credentials.id):\n@@ -359,6 +361,39 @@ async def delete_creds_by_id(self, user_id: str, credentials_id: str) -> None:\n             ]\n             await self._set_user_integration_creds(user_id, filtered_credentials)\n \n+    # ============== SYSTEM-MANAGED CREDENTIALS ============== #\n+\n+    async def get_ayrshare_profile_key(self, user_id: str) -> SecretStr | None:\n+        \"\"\"Get the Ayrshare profile key for a user.\n+\n+        The profile key is used to authenticate API requests to Ayrshare's social media posting service.\n+        See https://www.ayrshare.com/docs/apis/profiles/overview for more details.\n+\n+        Args:\n+            user_id: The ID of the user to get the profile key for\n+\n+        Returns:\n+            The profile key as a SecretStr if set, None otherwise\n+        \"\"\"\n+        user_integrations = await self._get_user_integrations(user_id)\n+        return user_integrations.managed_credentials.ayrshare_profile_key\n+\n+    async def set_ayrshare_profile_key(self, user_id: str, profile_key: str) -> None:\n+        \"\"\"Set the Ayrshare profile key for a user.\n+\n+        The profile key is used to authenticate API requests to Ayrshare's social media posting service.\n+        See https://www.ayrshare.com/docs/apis/profiles/overview for more details.\n+\n+        Args:\n+            user_id: The ID of the user to set the profile key for\n+            profile_key: The profile key to set\n+        \"\"\"\n+        _profile_key = SecretStr(profile_key)\n+        async with self.edit_user_integrations(user_id) as user_integrations:\n+            user_integrations.managed_credentials.ayrshare_profile_key = _profile_key\n+\n+    # ===================== OAUTH STATES ===================== #\n+\n     async def store_state_token(\n         self, user_id: str, provider: str, scopes: list[str], use_pkce: bool = False\n     ) -> tuple[str, str]:\n@@ -375,6 +410,9 @@ async def store_state_token(\n             scopes=scopes,\n         )\n \n+        async with self.edit_user_integrations(user_id) as user_integrations:\n+            user_integrations.oauth_states.append(state)\n+\n         async with await self.locked_user_integrations(user_id):\n \n             user_integrations = await self._get_user_integrations(user_id)\n@@ -428,6 +466,17 @@ async def verify_state_token(\n \n         return None\n \n+    # =================== GET/SET HELPERS =================== #\n+\n+    @asynccontextmanager\n+    async def edit_user_integrations(self, user_id: str):\n+        async with await self.locked_user_integrations(user_id):\n+            user_integrations = await self._get_user_integrations(user_id)\n+            yield user_integrations  # yield to allow edits\n+            await self.db_manager.update_user_integrations(\n+                user_id=user_id, data=user_integrations\n+            )\n+\n     async def _set_user_integration_creds(\n         self, user_id: str, credentials: list[Credentials]\n     ) -> None:\ndiff --git a/autogpt_platform/backend/backend/server/integrations/router.py b/autogpt_platform/backend/backend/server/integrations/router.py\nindex 0e71d7f0ceb4..c54a6fb8248e 100644\n--- a/autogpt_platform/backend/backend/server/integrations/router.py\n+++ b/autogpt_platform/backend/backend/server/integrations/router.py\n@@ -1,5 +1,6 @@\n import asyncio\n import logging\n+from datetime import datetime, timedelta, timezone\n from typing import TYPE_CHECKING, Annotated, Awaitable, List, Literal\n \n from fastapi import (\n@@ -12,7 +13,8 @@\n     Request,\n     status,\n )\n-from pydantic import BaseModel, Field\n+from pydantic import BaseModel, Field, SecretStr\n+from starlette.status import HTTP_500_INTERNAL_SERVER_ERROR, HTTP_502_BAD_GATEWAY\n \n from backend.data.graph import get_graph, set_node_webhook\n from backend.data.integrations import (\n@@ -29,6 +31,7 @@\n     OAuth2Credentials,\n )\n from backend.executor.utils import add_graph_execution\n+from backend.integrations.ayrshare import AyrshareClient, SocialPlatform\n from backend.integrations.creds_manager import IntegrationCredentialsManager\n from backend.integrations.oauth import CREDENTIALS_BY_PROVIDER, HANDLERS_BY_NAME\n from backend.integrations.providers import ProviderName\n@@ -39,7 +42,7 @@\n     get_all_provider_names,\n )\n from backend.server.v2.library.db import set_preset_webhook, update_preset\n-from backend.util.exceptions import NeedConfirmation, NotFoundError\n+from backend.util.exceptions import MissingConfigError, NeedConfirmation, NotFoundError\n from backend.util.settings import Settings\n \n if TYPE_CHECKING:\n@@ -271,6 +274,11 @@ class CredentialsDeletionNeedsConfirmationResponse(BaseModel):\n     message: str\n \n \n+class AyrshareSSOResponse(BaseModel):\n+    sso_url: str = Field(..., description=\"The SSO URL for Ayrshare integration\")\n+    expires_at: datetime = Field(..., description=\"ISO timestamp when the URL expires\")\n+\n+\n @router.delete(\"/{provider}/credentials/{cred_id}\")\n async def delete_credentials(\n     request: Request,\n@@ -548,9 +556,90 @@ def _get_provider_oauth_handler(\n     )\n \n \n-# === PROVIDER DISCOVERY ENDPOINTS ===\n+@router.get(\"/ayrshare/sso_url\")\n+async def get_ayrshare_sso_url(\n+    user_id: Annotated[str, Depends(get_user_id)],\n+) -> AyrshareSSOResponse:\n+    \"\"\"\n+    Generate an SSO URL for Ayrshare social media integration.\n+\n+    Returns:\n+        dict: Contains the SSO URL for Ayrshare integration\n+    \"\"\"\n+    try:\n+        client = AyrshareClient()\n+    except MissingConfigError:\n+        raise HTTPException(\n+            status_code=HTTP_500_INTERNAL_SERVER_ERROR,\n+            detail=\"Ayrshare integration is not configured\",\n+        )\n+\n+    # Ayrshare profile key is stored in the credentials store\n+    # It is generated when creating a new profile, if there is no profile key,\n+    # we create a new profile and store the profile key in the credentials store\n+    profile_key = await creds_manager.store.get_ayrshare_profile_key(user_id)\n+    if not profile_key:\n+        logger.debug(f\"Creating new Ayrshare profile for user {user_id}\")\n+        try:\n+            profile = await client.create_profile(\n+                title=f\"User {user_id}\", messaging_active=True\n+            )\n+            profile_key = profile.profileKey\n+            await creds_manager.store.set_ayrshare_profile_key(user_id, profile_key)\n+        except Exception as e:\n+            logger.error(f\"Error creating Ayrshare profile for user {user_id}: {e}\")\n+            raise HTTPException(\n+                status_code=HTTP_502_BAD_GATEWAY,\n+                detail=\"Failed to create Ayrshare profile\",\n+            )\n+    else:\n+        logger.debug(f\"Using existing Ayrshare profile for user {user_id}\")\n+\n+    profile_key_str = (\n+        profile_key.get_secret_value()\n+        if isinstance(profile_key, SecretStr)\n+        else str(profile_key)\n+    )\n+\n+    private_key = settings.secrets.ayrshare_jwt_key\n+    # Ayrshare JWT expiry is 2880 minutes (48 hours)\n+    max_expiry_minutes = 2880\n+    try:\n+        logger.debug(f\"Generating Ayrshare JWT for user {user_id}\")\n+        jwt_response = await client.generate_jwt(\n+            private_key=private_key,\n+            profile_key=profile_key_str,\n+            allowed_social=[\n+                # NOTE: We are enabling platforms one at a time\n+                # to speed up the development process\n+                # SocialPlatform.FACEBOOK,\n+                SocialPlatform.TWITTER,\n+                SocialPlatform.LINKEDIN,\n+                # SocialPlatform.INSTAGRAM,\n+                # SocialPlatform.YOUTUBE,\n+                # SocialPlatform.REDDIT,\n+                # SocialPlatform.TELEGRAM,\n+                # SocialPlatform.GOOGLE_MY_BUSINESS,\n+                # SocialPlatform.PINTEREST,\n+                # SocialPlatform.TIKTOK,\n+                # SocialPlatform.BLUESKY,\n+                # SocialPlatform.SNAPCHAT,\n+                # SocialPlatform.THREADS,\n+            ],\n+            expires_in=max_expiry_minutes,\n+            verify=True,\n+        )\n+    except Exception as e:\n+        logger.error(f\"Error generating Ayrshare JWT for user {user_id}: {e}\")\n+        raise HTTPException(\n+            status_code=HTTP_502_BAD_GATEWAY, detail=\"Failed to generate JWT\"\n+        )\n+\n+    expires_at = datetime.now(timezone.utc) + timedelta(minutes=max_expiry_minutes)\n+    return AyrshareSSOResponse(sso_url=jwt_response.url, expires_at=expires_at)\n \n \n+# === PROVIDER DISCOVERY ENDPOINTS ===\n @router.get(\"/providers\", response_model=List[str])\n async def list_providers() -> List[str]:\n     \"\"\"\ndiff --git a/autogpt_platform/backend/backend/util/settings.py b/autogpt_platform/backend/backend/util/settings.py\nindex fdf35128e572..c7685bfc7979 100644\n--- a/autogpt_platform/backend/backend/util/settings.py\n+++ b/autogpt_platform/backend/backend/util/settings.py\n@@ -495,7 +495,8 @@ class Secrets(UpdateTrackingModel[\"Secrets\"], BaseSettings):\n     apollo_api_key: str = Field(default=\"\", description=\"Apollo API Key\")\n     smartlead_api_key: str = Field(default=\"\", description=\"SmartLead API Key\")\n     zerobounce_api_key: str = Field(default=\"\", description=\"ZeroBounce API Key\")\n-\n+    ayrshare_api_key: str = Field(default=\"\", description=\"Ayrshare API Key\")\n+    ayrshare_jwt_key: str = Field(default=\"\", description=\"Ayrshare private Key\")\n     # Add more secret fields as needed\n \n     model_config = SettingsConfigDict(\ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/endpoints/files/files.ts b/autogpt_platform/frontend/src/app/api/__generated__/endpoints/files/files.ts\nnew file mode 100644\nindex 000000000000..71a103c17667\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/endpoints/files/files.ts\n@@ -0,0 +1,184 @@\n+/**\n+ * Generated by orval v7.10.0 üç∫\n+ * Do not edit manually.\n+ * AutoGPT Agent Server\n+ * This server is used to execute agents that are created by the AutoGPT system.\n+ * OpenAPI spec version: 0.1\n+ */\n+import { useMutation } from \"@tanstack/react-query\";\n+import type {\n+  MutationFunction,\n+  QueryClient,\n+  UseMutationOptions,\n+  UseMutationResult,\n+} from \"@tanstack/react-query\";\n+\n+import type { BodyPostV1UploadFileToCloudStorage } from \"../../models/bodyPostV1UploadFileToCloudStorage\";\n+\n+import type { HTTPValidationError } from \"../../models/hTTPValidationError\";\n+\n+import type { PostV1UploadFileToCloudStorageParams } from \"../../models/postV1UploadFileToCloudStorageParams\";\n+\n+import type { UploadFileResponse } from \"../../models/uploadFileResponse\";\n+\n+import { customMutator } from \"../../../mutators/custom-mutator\";\n+\n+type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];\n+\n+/**\n+ * Upload a file to cloud storage and return a storage key that can be used\n+with FileStoreBlock and AgentFileInputBlock.\n+\n+Args:\n+    file: The file to upload\n+    user_id: The user ID\n+    provider: Cloud storage provider (\"gcs\", \"s3\", \"azure\")\n+    expiration_hours: Hours until file expires (1-48)\n+\n+Returns:\n+    Dict containing the cloud storage path and signed URL\n+ * @summary Upload file to cloud storage\n+ */\n+export type postV1UploadFileToCloudStorageResponse200 = {\n+  data: UploadFileResponse;\n+  status: 200;\n+};\n+\n+export type postV1UploadFileToCloudStorageResponse422 = {\n+  data: HTTPValidationError;\n+  status: 422;\n+};\n+\n+export type postV1UploadFileToCloudStorageResponseComposite =\n+  | postV1UploadFileToCloudStorageResponse200\n+  | postV1UploadFileToCloudStorageResponse422;\n+\n+export type postV1UploadFileToCloudStorageResponse =\n+  postV1UploadFileToCloudStorageResponseComposite & {\n+    headers: Headers;\n+  };\n+\n+export const getPostV1UploadFileToCloudStorageUrl = (\n+  params?: PostV1UploadFileToCloudStorageParams,\n+) => {\n+  const normalizedParams = new URLSearchParams();\n+\n+  Object.entries(params || {}).forEach(([key, value]) => {\n+    if (value !== undefined) {\n+      normalizedParams.append(key, value === null ? \"null\" : value.toString());\n+    }\n+  });\n+\n+  const stringifiedParams = normalizedParams.toString();\n+\n+  return stringifiedParams.length > 0\n+    ? `/api/files/upload?${stringifiedParams}`\n+    : `/api/files/upload`;\n+};\n+\n+export const postV1UploadFileToCloudStorage = async (\n+  bodyPostV1UploadFileToCloudStorage: BodyPostV1UploadFileToCloudStorage,\n+  params?: PostV1UploadFileToCloudStorageParams,\n+  options?: RequestInit,\n+): Promise<postV1UploadFileToCloudStorageResponse> => {\n+  const formData = new FormData();\n+  formData.append(`file`, bodyPostV1UploadFileToCloudStorage.file);\n+\n+  return customMutator<postV1UploadFileToCloudStorageResponse>(\n+    getPostV1UploadFileToCloudStorageUrl(params),\n+    {\n+      ...options,\n+      method: \"POST\",\n+      body: formData,\n+    },\n+  );\n+};\n+\n+export const getPostV1UploadFileToCloudStorageMutationOptions = <\n+  TError = HTTPValidationError,\n+  TContext = unknown,\n+>(options?: {\n+  mutation?: UseMutationOptions<\n+    Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>,\n+    TError,\n+    {\n+      data: BodyPostV1UploadFileToCloudStorage;\n+      params?: PostV1UploadFileToCloudStorageParams;\n+    },\n+    TContext\n+  >;\n+  request?: SecondParameter<typeof customMutator>;\n+}): UseMutationOptions<\n+  Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>,\n+  TError,\n+  {\n+    data: BodyPostV1UploadFileToCloudStorage;\n+    params?: PostV1UploadFileToCloudStorageParams;\n+  },\n+  TContext\n+> => {\n+  const mutationKey = [\"postV1UploadFileToCloudStorage\"];\n+  const { mutation: mutationOptions, request: requestOptions } = options\n+    ? options.mutation &&\n+      \"mutationKey\" in options.mutation &&\n+      options.mutation.mutationKey\n+      ? options\n+      : { ...options, mutation: { ...options.mutation, mutationKey } }\n+    : { mutation: { mutationKey }, request: undefined };\n+\n+  const mutationFn: MutationFunction<\n+    Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>,\n+    {\n+      data: BodyPostV1UploadFileToCloudStorage;\n+      params?: PostV1UploadFileToCloudStorageParams;\n+    }\n+  > = (props) => {\n+    const { data, params } = props ?? {};\n+\n+    return postV1UploadFileToCloudStorage(data, params, requestOptions);\n+  };\n+\n+  return { mutationFn, ...mutationOptions };\n+};\n+\n+export type PostV1UploadFileToCloudStorageMutationResult = NonNullable<\n+  Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>\n+>;\n+export type PostV1UploadFileToCloudStorageMutationBody =\n+  BodyPostV1UploadFileToCloudStorage;\n+export type PostV1UploadFileToCloudStorageMutationError = HTTPValidationError;\n+\n+/**\n+ * @summary Upload file to cloud storage\n+ */\n+export const usePostV1UploadFileToCloudStorage = <\n+  TError = HTTPValidationError,\n+  TContext = unknown,\n+>(\n+  options?: {\n+    mutation?: UseMutationOptions<\n+      Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>,\n+      TError,\n+      {\n+        data: BodyPostV1UploadFileToCloudStorage;\n+        params?: PostV1UploadFileToCloudStorageParams;\n+      },\n+      TContext\n+    >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+  queryClient?: QueryClient,\n+): UseMutationResult<\n+  Awaited<ReturnType<typeof postV1UploadFileToCloudStorage>>,\n+  TError,\n+  {\n+    data: BodyPostV1UploadFileToCloudStorage;\n+    params?: PostV1UploadFileToCloudStorageParams;\n+  },\n+  TContext\n+> => {\n+  const mutationOptions =\n+    getPostV1UploadFileToCloudStorageMutationOptions(options);\n+\n+  return useMutation(mutationOptions, queryClient);\n+};\ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/endpoints/integrations/integrations.ts b/autogpt_platform/frontend/src/app/api/__generated__/endpoints/integrations/integrations.ts\nindex 9525a6a90e51..bdcdea8b323a 100644\n--- a/autogpt_platform/frontend/src/app/api/__generated__/endpoints/integrations/integrations.ts\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/endpoints/integrations/integrations.ts\n@@ -21,6 +21,8 @@ import type {\n   UseQueryResult,\n } from \"@tanstack/react-query\";\n \n+import type { AyrshareSSOResponse } from \"../../models/ayrshareSSOResponse\";\n+\n import type { BodyPostV1Callback } from \"../../models/bodyPostV1Callback\";\n \n import type { CredentialsMetaResponse } from \"../../models/credentialsMetaResponse\";\n@@ -1530,6 +1532,210 @@ export const usePostV1WebhookPing = <\n \n   return useMutation(mutationOptions, queryClient);\n };\n+/**\n+ * Generate an SSO URL for Ayrshare social media integration.\n+\n+Returns:\n+    dict: Contains the SSO URL for Ayrshare integration\n+ * @summary Get Ayrshare Sso Url\n+ */\n+export type getV1GetAyrshareSsoUrlResponse200 = {\n+  data: AyrshareSSOResponse;\n+  status: 200;\n+};\n+\n+export type getV1GetAyrshareSsoUrlResponseComposite =\n+  getV1GetAyrshareSsoUrlResponse200;\n+\n+export type getV1GetAyrshareSsoUrlResponse =\n+  getV1GetAyrshareSsoUrlResponseComposite & {\n+    headers: Headers;\n+  };\n+\n+export const getGetV1GetAyrshareSsoUrlUrl = () => {\n+  return `/api/integrations/ayrshare/sso_url`;\n+};\n+\n+export const getV1GetAyrshareSsoUrl = async (\n+  options?: RequestInit,\n+): Promise<getV1GetAyrshareSsoUrlResponse> => {\n+  return customMutator<getV1GetAyrshareSsoUrlResponse>(\n+    getGetV1GetAyrshareSsoUrlUrl(),\n+    {\n+      ...options,\n+      method: \"GET\",\n+    },\n+  );\n+};\n+\n+export const getGetV1GetAyrshareSsoUrlQueryKey = () => {\n+  return [`/api/integrations/ayrshare/sso_url`] as const;\n+};\n+\n+export const getGetV1GetAyrshareSsoUrlQueryOptions = <\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(options?: {\n+  query?: Partial<\n+    UseQueryOptions<\n+      Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+      TError,\n+      TData\n+    >\n+  >;\n+  request?: SecondParameter<typeof customMutator>;\n+}) => {\n+  const { query: queryOptions, request: requestOptions } = options ?? {};\n+\n+  const queryKey =\n+    queryOptions?.queryKey ?? getGetV1GetAyrshareSsoUrlQueryKey();\n+\n+  const queryFn: QueryFunction<\n+    Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>\n+  > = ({ signal }) => getV1GetAyrshareSsoUrl({ signal, ...requestOptions });\n+\n+  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<\n+    Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+    TError,\n+    TData\n+  > & { queryKey: DataTag<QueryKey, TData, TError> };\n+};\n+\n+export type GetV1GetAyrshareSsoUrlQueryResult = NonNullable<\n+  Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>\n+>;\n+export type GetV1GetAyrshareSsoUrlQueryError = unknown;\n+\n+export function useGetV1GetAyrshareSsoUrl<\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(\n+  options: {\n+    query: Partial<\n+      UseQueryOptions<\n+        Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+        TError,\n+        TData\n+      >\n+    > &\n+      Pick<\n+        DefinedInitialDataOptions<\n+          Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+          TError,\n+          Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>\n+        >,\n+        \"initialData\"\n+      >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+  queryClient?: QueryClient,\n+): DefinedUseQueryResult<TData, TError> & {\n+  queryKey: DataTag<QueryKey, TData, TError>;\n+};\n+export function useGetV1GetAyrshareSsoUrl<\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(\n+  options?: {\n+    query?: Partial<\n+      UseQueryOptions<\n+        Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+        TError,\n+        TData\n+      >\n+    > &\n+      Pick<\n+        UndefinedInitialDataOptions<\n+          Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+          TError,\n+          Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>\n+        >,\n+        \"initialData\"\n+      >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+  queryClient?: QueryClient,\n+): UseQueryResult<TData, TError> & {\n+  queryKey: DataTag<QueryKey, TData, TError>;\n+};\n+export function useGetV1GetAyrshareSsoUrl<\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(\n+  options?: {\n+    query?: Partial<\n+      UseQueryOptions<\n+        Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+        TError,\n+        TData\n+      >\n+    >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+  queryClient?: QueryClient,\n+): UseQueryResult<TData, TError> & {\n+  queryKey: DataTag<QueryKey, TData, TError>;\n+};\n+/**\n+ * @summary Get Ayrshare Sso Url\n+ */\n+\n+export function useGetV1GetAyrshareSsoUrl<\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(\n+  options?: {\n+    query?: Partial<\n+      UseQueryOptions<\n+        Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+        TError,\n+        TData\n+      >\n+    >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+  queryClient?: QueryClient,\n+): UseQueryResult<TData, TError> & {\n+  queryKey: DataTag<QueryKey, TData, TError>;\n+} {\n+  const queryOptions = getGetV1GetAyrshareSsoUrlQueryOptions(options);\n+\n+  const query = useQuery(queryOptions, queryClient) as UseQueryResult<\n+    TData,\n+    TError\n+  > & { queryKey: DataTag<QueryKey, TData, TError> };\n+\n+  query.queryKey = queryOptions.queryKey;\n+\n+  return query;\n+}\n+\n+/**\n+ * @summary Get Ayrshare Sso Url\n+ */\n+export const prefetchGetV1GetAyrshareSsoUrlQuery = async <\n+  TData = Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+  TError = unknown,\n+>(\n+  queryClient: QueryClient,\n+  options?: {\n+    query?: Partial<\n+      UseQueryOptions<\n+        Awaited<ReturnType<typeof getV1GetAyrshareSsoUrl>>,\n+        TError,\n+        TData\n+      >\n+    >;\n+    request?: SecondParameter<typeof customMutator>;\n+  },\n+): Promise<QueryClient> => {\n+  const queryOptions = getGetV1GetAyrshareSsoUrlQueryOptions(options);\n+\n+  await queryClient.prefetchQuery(queryOptions);\n+\n+  return queryClient;\n+};\n+\n /**\n  * Get a list of all available provider names.\n \ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/models/ayrshareSSOResponse.ts b/autogpt_platform/frontend/src/app/api/__generated__/models/ayrshareSSOResponse.ts\nnew file mode 100644\nindex 000000000000..bd05f62512be\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/models/ayrshareSSOResponse.ts\n@@ -0,0 +1,14 @@\n+/**\n+ * Generated by orval v7.10.0 üç∫\n+ * Do not edit manually.\n+ * AutoGPT Agent Server\n+ * This server is used to execute agents that are created by the AutoGPT system.\n+ * OpenAPI spec version: 0.1\n+ */\n+\n+export interface AyrshareSSOResponse {\n+  /** The SSO URL for Ayrshare integration */\n+  sso_url: string;\n+  /** ISO timestamp when the URL expires */\n+  expires_at: string;\n+}\ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/models/bodyPostV1UploadFileToCloudStorage.ts b/autogpt_platform/frontend/src/app/api/__generated__/models/bodyPostV1UploadFileToCloudStorage.ts\nnew file mode 100644\nindex 000000000000..46bfff9a7885\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/models/bodyPostV1UploadFileToCloudStorage.ts\n@@ -0,0 +1,11 @@\n+/**\n+ * Generated by orval v7.10.0 üç∫\n+ * Do not edit manually.\n+ * AutoGPT Agent Server\n+ * This server is used to execute agents that are created by the AutoGPT system.\n+ * OpenAPI spec version: 0.1\n+ */\n+\n+export interface BodyPostV1UploadFileToCloudStorage {\n+  file: Blob;\n+}\ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/models/postV1UploadFileToCloudStorageParams.ts b/autogpt_platform/frontend/src/app/api/__generated__/models/postV1UploadFileToCloudStorageParams.ts\nnew file mode 100644\nindex 000000000000..878eb768ec32\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/models/postV1UploadFileToCloudStorageParams.ts\n@@ -0,0 +1,12 @@\n+/**\n+ * Generated by orval v7.10.0 üç∫\n+ * Do not edit manually.\n+ * AutoGPT Agent Server\n+ * This server is used to execute agents that are created by the AutoGPT system.\n+ * OpenAPI spec version: 0.1\n+ */\n+\n+export type PostV1UploadFileToCloudStorageParams = {\n+  provider?: string;\n+  expiration_hours?: number;\n+};\ndiff --git a/autogpt_platform/frontend/src/app/api/__generated__/models/uploadFileResponse.ts b/autogpt_platform/frontend/src/app/api/__generated__/models/uploadFileResponse.ts\nnew file mode 100644\nindex 000000000000..78fa6c6c50aa\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/app/api/__generated__/models/uploadFileResponse.ts\n@@ -0,0 +1,15 @@\n+/**\n+ * Generated by orval v7.10.0 üç∫\n+ * Do not edit manually.\n+ * AutoGPT Agent Server\n+ * This server is used to execute agents that are created by the AutoGPT system.\n+ * OpenAPI spec version: 0.1\n+ */\n+\n+export interface UploadFileResponse {\n+  file_uri: string;\n+  file_name: string;\n+  size: number;\n+  content_type: string;\n+  expires_in_hours: number;\n+}\ndiff --git a/autogpt_platform/frontend/src/app/api/openapi.json b/autogpt_platform/frontend/src/app/api/openapi.json\nindex c63413e9ac01..a03f764e0de4 100644\n--- a/autogpt_platform/frontend/src/app/api/openapi.json\n+++ b/autogpt_platform/frontend/src/app/api/openapi.json\n@@ -443,6 +443,24 @@\n         }\n       }\n     },\n+    \"/api/integrations/ayrshare/sso_url\": {\n+      \"get\": {\n+        \"tags\": [\"v1\", \"integrations\"],\n+        \"summary\": \"Get Ayrshare Sso Url\",\n+        \"description\": \"Generate an SSO URL for Ayrshare social media integration.\\n\\nReturns:\\n    dict: Contains the SSO URL for Ayrshare integration\",\n+        \"operationId\": \"getV1GetAyrshareSsoUrl\",\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"Successful Response\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": { \"$ref\": \"#/components/schemas/AyrshareSSOResponse\" }\n+              }\n+            }\n+          }\n+        }\n+      }\n+    },\n     \"/api/integrations/providers\": {\n       \"get\": {\n         \"tags\": [\"v1\", \"integrations\"],\n@@ -823,6 +841,64 @@\n         }\n       }\n     },\n+    \"/api/files/upload\": {\n+      \"post\": {\n+        \"tags\": [\"v1\", \"files\"],\n+        \"summary\": \"Upload file to cloud storage\",\n+        \"description\": \"Upload a file to cloud storage and return a storage key that can be used\\nwith FileStoreBlock and AgentFileInputBlock.\\n\\nArgs:\\n    file: The file to upload\\n    user_id: The user ID\\n    provider: Cloud storage provider (\\\"gcs\\\", \\\"s3\\\", \\\"azure\\\")\\n    expiration_hours: Hours until file expires (1-48)\\n\\nReturns:\\n    Dict containing the cloud storage path and signed URL\",\n+        \"operationId\": \"postV1Upload file to cloud storage\",\n+        \"parameters\": [\n+          {\n+            \"name\": \"provider\",\n+            \"in\": \"query\",\n+            \"required\": false,\n+            \"schema\": {\n+              \"type\": \"string\",\n+              \"default\": \"gcs\",\n+              \"title\": \"Provider\"\n+            }\n+          },\n+          {\n+            \"name\": \"expiration_hours\",\n+            \"in\": \"query\",\n+            \"required\": false,\n+            \"schema\": {\n+              \"type\": \"integer\",\n+              \"default\": 24,\n+              \"title\": \"Expiration Hours\"\n+            }\n+          }\n+        ],\n+        \"requestBody\": {\n+          \"required\": true,\n+          \"content\": {\n+            \"multipart/form-data\": {\n+              \"schema\": {\n+                \"$ref\": \"#/components/schemas/Body_postV1Upload_file_to_cloud_storage\"\n+              }\n+            }\n+          }\n+        },\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"Successful Response\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": { \"$ref\": \"#/components/schemas/UploadFileResponse\" }\n+              }\n+            }\n+          },\n+          \"422\": {\n+            \"description\": \"Validation Error\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": { \"$ref\": \"#/components/schemas/HTTPValidationError\" }\n+              }\n+            }\n+          }\n+        }\n+      }\n+    },\n     \"/api/credits\": {\n       \"get\": {\n         \"tags\": [\"v1\", \"credits\"],\n@@ -3790,6 +3866,24 @@\n         \"required\": [\"amount\", \"threshold\"],\n         \"title\": \"AutoTopUpConfig\"\n       },\n+      \"AyrshareSSOResponse\": {\n+        \"properties\": {\n+          \"sso_url\": {\n+            \"type\": \"string\",\n+            \"title\": \"Sso Url\",\n+            \"description\": \"The SSO URL for Ayrshare integration\"\n+          },\n+          \"expires_at\": {\n+            \"type\": \"string\",\n+            \"format\": \"date-time\",\n+            \"title\": \"Expires At\",\n+            \"description\": \"ISO timestamp when the URL expires\"\n+          }\n+        },\n+        \"type\": \"object\",\n+        \"required\": [\"sso_url\", \"expires_at\"],\n+        \"title\": \"AyrshareSSOResponse\"\n+      },\n       \"BaseGraph-Input\": {\n         \"properties\": {\n           \"id\": { \"type\": \"string\", \"title\": \"Id\" },\n@@ -3934,6 +4028,14 @@\n         \"required\": [\"type\", \"data\", \"data_index\"],\n         \"title\": \"Body_postV1LogRawAnalytics\"\n       },\n+      \"Body_postV1Upload_file_to_cloud_storage\": {\n+        \"properties\": {\n+          \"file\": { \"type\": \"string\", \"format\": \"binary\", \"title\": \"File\" }\n+        },\n+        \"type\": \"object\",\n+        \"required\": [\"file\"],\n+        \"title\": \"Body_postV1Upload file to cloud storage\"\n+      },\n       \"Body_postV2Add_credits_to_user\": {\n         \"properties\": {\n           \"user_id\": { \"type\": \"string\", \"title\": \"User Id\" },\n@@ -6348,6 +6450,24 @@\n         \"required\": [\"permissions\"],\n         \"title\": \"UpdatePermissionsRequest\"\n       },\n+      \"UploadFileResponse\": {\n+        \"properties\": {\n+          \"file_uri\": { \"type\": \"string\", \"title\": \"File Uri\" },\n+          \"file_name\": { \"type\": \"string\", \"title\": \"File Name\" },\n+          \"size\": { \"type\": \"integer\", \"title\": \"Size\" },\n+          \"content_type\": { \"type\": \"string\", \"title\": \"Content Type\" },\n+          \"expires_in_hours\": { \"type\": \"integer\", \"title\": \"Expires In Hours\" }\n+        },\n+        \"type\": \"object\",\n+        \"required\": [\n+          \"file_uri\",\n+          \"file_name\",\n+          \"size\",\n+          \"content_type\",\n+          \"expires_in_hours\"\n+        ],\n+        \"title\": \"UploadFileResponse\"\n+      },\n       \"UserHistoryResponse\": {\n         \"properties\": {\n           \"history\": {\ndiff --git a/autogpt_platform/frontend/src/components/CustomNode.tsx b/autogpt_platform/frontend/src/components/CustomNode.tsx\nindex bf5df316c7c5..360689829418 100644\n--- a/autogpt_platform/frontend/src/components/CustomNode.tsx\n+++ b/autogpt_platform/frontend/src/components/CustomNode.tsx\n@@ -31,7 +31,7 @@ import {\n   parseKeys,\n   setNestedProperty,\n } from \"@/lib/utils\";\n-import { Button } from \"@/components/ui/button\";\n+import { Button } from \"@/components/atoms/Button/Button\";\n import { Switch } from \"@/components/ui/switch\";\n import { TextRenderer } from \"@/components/ui/render\";\n import { history } from \"./history\";\n@@ -54,8 +54,10 @@ import {\n   CopyIcon,\n   ExitIcon,\n } from \"@radix-ui/react-icons\";\n-\n+import { Key } from \"@phosphor-icons/react\";\n import useCredits from \"@/hooks/useCredits\";\n+import { getV1GetAyrshareSsoUrl } from \"@/app/api/__generated__/endpoints/integrations/integrations\";\n+import { toast } from \"@/components/molecules/Toast/use-toast\";\n \n export type ConnectionData = Array<{\n   edge_id: string;\n@@ -112,6 +114,8 @@ export const CustomNode = React.memo(\n     const flowContext = useContext(FlowContext);\n     const api = useBackendAPI();\n     const { formatCredits } = useCredits();\n+    const [isLoading, setIsLoading] = useState(false);\n+\n     let nodeFlowId = \"\";\n \n     if (data.uiType === BlockUIType.AGENT) {\n@@ -241,6 +245,59 @@ export const CustomNode = React.memo(\n       return renderHandles(schema.properties);\n     };\n \n+    const generateAyrshareSSOHandles = () => {\n+      const handleSSOLogin = async () => {\n+        setIsLoading(true);\n+        try {\n+          const {\n+            data: { sso_url },\n+          } = await getV1GetAyrshareSsoUrl();\n+          const popup = window.open(sso_url, \"_blank\", \"popup=true\");\n+          if (!popup) {\n+            throw new Error(\n+              \"Please allow popups for this site to be able to login with Ayrshare\",\n+            );\n+          }\n+        } catch (error) {\n+          toast({\n+            title: \"Error\",\n+            description: `Error getting SSO URL: ${error}`,\n+            variant: \"destructive\",\n+          });\n+        } finally {\n+          setIsLoading(false);\n+        }\n+      };\n+\n+      return (\n+        <div className=\"flex flex-col gap-2\">\n+          <Button\n+            type=\"button\"\n+            variant=\"outline\"\n+            className=\"w-full\"\n+            onClick={handleSSOLogin}\n+            disabled={isLoading}\n+          >\n+            {isLoading ? (\n+              \"Loading...\"\n+            ) : (\n+              <>\n+                <Key className=\"mr-2 h-4 w-4\" />\n+                Connect Social Media Accounts\n+              </>\n+            )}\n+          </Button>\n+          <NodeHandle\n+            title=\"SSO Token\"\n+            keyName=\"sso_token\"\n+            isConnected={false}\n+            schema={{ type: \"string\" }}\n+            side=\"right\"\n+          />\n+        </div>\n+      );\n+    };\n+\n     const generateInputHandles = (\n       schema: BlockIORootSchema,\n       nodeType: BlockUIType,\n@@ -827,8 +884,18 @@ export const CustomNode = React.memo(\n                       (A Webhook URL will be generated when you save the agent)\n                     </p>\n                   ))}\n-                {data.inputSchema &&\n-                  generateInputHandles(data.inputSchema, data.uiType)}\n+                {data.uiType === BlockUIType.AYRSHARE ? (\n+                  <>\n+                    {generateAyrshareSSOHandles()}\n+                    {generateInputHandles(\n+                      data.inputSchema,\n+                      BlockUIType.STANDARD,\n+                    )}\n+                  </>\n+                ) : (\n+                  data.inputSchema &&\n+                  generateInputHandles(data.inputSchema, data.uiType)\n+                )}\n               </div>\n             </div>\n           ) : (\ndiff --git a/autogpt_platform/frontend/src/components/integrations/credentials-provider.tsx b/autogpt_platform/frontend/src/components/integrations/credentials-provider.tsx\nindex b113aa22f5cb..abf081ab6d3b 100644\n--- a/autogpt_platform/frontend/src/components/integrations/credentials-provider.tsx\n+++ b/autogpt_platform/frontend/src/components/integrations/credentials-provider.tsx\n@@ -230,7 +230,7 @@ export default function CredentialsProvider({\n \n   useEffect(() => {\n     if (!isLoggedIn || providerNames.length === 0) {\n-      if (isLoggedIn == false) setProviders(null);\n+      if (isLoggedIn == false) setProviders({});\n       return;\n     }\n \ndiff --git a/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts b/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\nindex 4082f3839df9..dca88d90bedb 100644\n--- a/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\n+++ b/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\n@@ -604,6 +604,7 @@ export enum BlockUIType {\n   WEBHOOK_MANUAL = \"Webhook (manual)\",\n   AGENT = \"Agent\",\n   AI = \"AI\",\n+  AYRSHARE = \"Ayrshare\",\n }\n \n export enum SpecialBlockID {\n"
  },
  {
    "repository": "Significant-Gravitas/AutoGPT",
    "pr_number": 9956,
    "comments": [
      "The PR fails to meet some basic requirements but shows a good effort. Issues:\n1. The PR template is not properly filled out - missing test plan and checklist items\n2. While the scope is clear (frontend) and shown in the title correctly, documentation of changes could be clearer\n3. No clear explanation in PR body about 'why' these changes were needed\n4. No test plan or testing notes provided for such a large UI change\n\nHowever, the code itself looks well-structured with clear component organization and documentation. The TODO comments also show good forward planning.",
      "## Feedback for PR Improvement\n\n### Missing PR Template & Checklist\nPlease fill out the complete PR template, including the checklist section. This is required for all PRs and helps reviewers understand what's being changed and how it's been tested.\n\n### Scope Mismatch\nYour PR title mentions only frontend changes (`feat(frontend)`), but the diff shows significant backend additions including:\n- New API routes in `/api/builder/`\n- New DB functions and models\n- Changes to store routes\n\nPlease update your title to reflect both frontend and backend changes, or better explain in the description why backend changes were needed for this frontend redesign.\n\n### User ID Validation\nSome of the new backend functions in `backend/server/v2/builder/db.py` don't appear to validate user permissions via user_id. Please review these functions to ensure proper authorization is in place or provide an explanation for why user_id checks aren't needed.\n\n### Merge Conflicts\nThis PR has merge conflicts that need to be resolved before it can be merged.\n\n### Testing\nPlease include information about how you've tested these changes, particularly since they span both frontend and backend components.\n\nOnce you've addressed these issues, the PR should be ready for re-review.",
      "Thank you for your work on redesigning the block menu. This looks like a substantial change that will improve the builder page experience. \n\nHowever, there are a few things that need to be addressed before this PR can be merged:\n\n1. **Missing checklist**: Please complete the PR template checklist. For code changes like these, we need to know that you've tested your changes with a clear test plan.\n\n2. **Scope discrepancy**: Your PR title mentions only frontend changes, but the diff includes significant backend changes - new routes, endpoints, and database access functions. Please update your PR title to reflect that this is both a frontend and backend feature, perhaps something like `feat(frontend,backend): Redesign block menu on builder page`.\n\n3. **Implementation details**: Your PR description lists the components you've added but doesn't explain how they work together or what specific improvements they bring. Please enhance the description with more details about the implementation and how it improves upon the previous design.\n\n4. **Test plan**: Please add a test plan to your PR description explaining how you've tested these changes.\n\nThe code itself looks well-structured with proper authentication handling and user_id checks. I particularly like how you've organized the new components and the backend routes to support them. Once you address the above points, this PR should be ready for another review.",
      "Thank you for your work on redesigning the block menu! I have a few comments before this can be merged:\n\n## Description and Checklist\n- Please update your PR description to include a more detailed explanation of the changes you've made\n- The required PR checklist is missing. Please add the checklist from the PR template and check off the appropriate items\n\n## Scope Mismatch\nYour PR title indicates this is a frontend feature (`feat(frontend)`), but the changes include substantial backend code, including:\n- New backend routes in `/api/builder`\n- New database functions in `backend/server/v2/builder/db.py`\n- New models in `backend/server/v2/builder/model.py`\n\nConsider updating your PR title to reflect that this involves both frontend and backend changes, perhaps something like `feat(platform): Redesign block menu on builder page with backend support`\n\n## Test Plan\nPlease include a test plan in your PR description to explain how you've tested these changes.\n\nOnce these items are addressed, we can proceed with reviewing the technical aspects of the implementation. The component list and structure looks well-organized!",
      "Thank you for your work on redesigning the block menu! I have a few concerns about this PR that need to be addressed before it can be merged:\n\n1. **PR Description:** While you've listed the components you've added, the PR description should explain why these changes are needed and provide more context about the redesign goals.\n\n2. **Missing Checklist:** Your PR description is missing the required checklist section that outlines your test plan and confirms you've tested the changes appropriately. Please update your PR description to include the complete checklist.\n\n3. **Scope Mismatch:** The PR title indicates this is a frontend change, but the diff shows substantial backend changes including:\n   - New backend routes in `/api/builder`\n   - New database functions and models\n   - Changes to the store API\n\n   Please update either the PR title to reflect the full scope of changes (e.g., `feat(frontend,backend): Redesign block menu and add builder API endpoints`) or separate the backend changes into a different PR.\n\n4. **Dependencies:** You've added several new dependencies (`react-timeago`, `tailwind-scrollbar`, `tailwind-scrollbar-hide`). Please ensure these are necessary and document their purpose in the PR description.\n\n5. **Testing:** Please describe how you've tested these changes, especially the new backend routes and functionality.\n\nAdditionally, I see there's a conflicts label on this PR. Please resolve any merge conflicts before this can be approved.\n\nOnce you've addressed these issues, I'll be happy to review the PR again.",
      "Thank you for your PR to redesign the block menu! The component list you provided is helpful for understanding what's been added. I have some feedback to help get this PR ready for merging:\n\n1. **Missing checklist**: This PR contains significant code changes but is missing the required checklist. Please add the checklist from the PR template and ensure you've tested all changes appropriately.\n\n2. **Scope mismatch**: While your title mentions frontend changes, a significant portion of this PR adds backend functionality (new routes, models, and database operations for the builder). Please update your PR title to reflect both frontend and backend changes, e.g., `feat(frontend,backend): Redesign block menu and add builder API endpoints`.\n\n3. **PR description improvements**: Consider expanding your description to mention the backend API endpoints you've added to support the block menu functionality.\n\nOnce you've addressed these items, we'll be able to review your PR again. The code changes themselves look good - I like the organized approach with the reusable components and the proper handling of user_id in the backend routes.",
      "Thanks for the PR to redesign the block menu! The implementation looks comprehensive with both frontend components and backend support.\n\n### Feedback\n\n1. **PR Description Improvements**:\n   - The PR description is missing the required checklist from the template. Please add the checklist sections for code changes and make sure all items are checked off.\n   - While you've described the frontend components well, please also mention the significant backend changes (new API routes in `/api/builder`, pagination model extensions, etc.) that support this feature.\n\n2. **Implementation Notes**:\n   - The changes include backend routes and models to support the block menu functionality, which is good but should be mentioned in the PR description.\n   - I notice you've added several new npm packages (`react-timeago`, `tailwind-scrollbar`, etc.) - please include these in your description of changes.\n\n3. **Code Quality**:\n   - The backend implementation looks solid with well-structured endpoints and models.\n   - Good job on the TODO markers for future work.\n\nPlease update the PR description to include the missing checklist and mention the backend changes that support this feature. Once these items are addressed, the PR will be ready for another review.",
      "Thank you for your PR to redesign the block menu! I've identified a few issues that need to be addressed before this can be merged:\n\n1. **Scope mismatch**: While your PR title indicates this is a frontend change, approximately half of the changes are backend-related (new API endpoints, models, database functions). The PR title and description should accurately reflect all major components being changed.\n\n2. **Missing checklist**: For substantial code changes like this, the PR template checklist needs to be completed to ensure proper testing and quality checks. Please add the checklist and check off the appropriate items.\n\n3. **Backend changes documentation**: The PR description doesn't mention any of the backend changes. Please update the description to include details about the new backend/server/v2/builder files and endpoints you're adding.\n\nAdditionally, I notice you've marked some items with \"BLOCK MENU TODO:\" for future work. If these are part of this redesign effort but will be addressed in separate PRs, that's fine, but please make that clear in the description.\n\nOnce you've updated the PR title to accurately reflect both frontend and backend changes, completed the required checklist, and expanded the description to cover all major components being changed, we can proceed with the review process.",
      "Thanks for your PR on redesigning the block menu. I noticed a few things that need to be addressed before this can be merged:\n\n1. **Missing Checklist**: Please include the complete PR checklist in your description. Since your changes include significant code modifications, you'll need to add the checklist with appropriate test plans.\n\n2. **Scope Mismatch**: Your PR title only mentions frontend changes (`feat(frontend)`), but the diff shows substantial backend additions including:\n   - New API routes in `/api/builder`\n   - New database functionality\n   - New models and response types\n\n   Please update your PR title to reflect both the frontend and backend changes, perhaps something like `feat(frontend,backend): Redesign block menu on builder page`.\n\n3. **PR Description**: Consider enhancing your description to explain more about the purpose of the backend changes and how they relate to the frontend block menu redesign.\n\nThe changes themselves look promising, but we need to ensure the PR follows our submission guidelines before proceeding with the review of the actual implementation. Please make these updates so we can move forward with the review.",
      "Thank you for your work on redesigning the block menu! I have a few concerns that need to be addressed before this PR can be merged:\n\n1. **Missing Checklist**: The PR description is missing the required checklist. Please update your description to include the standard checklist and fill it out completely.\n\n2. **Scope Mismatch**: The PR title mentions only frontend changes (`feat(frontend)`), but the diff shows significant backend changes as well. Please update the PR title to accurately reflect the scope of your changes. Something like `feat(platform): Redesign block menu on builder page` or `feat(platform/frontend,platform/backend): Redesign block menu on builder page` would be more appropriate.\n\n3. **Backend Changes**: The PR includes substantial backend additions:\n   - New builder routes and endpoints\n   - New database functions and models\n   - Changes to the store API\n\nPlease make sure to include these backend changes in your test plan when you add the checklist.\n\nOnce these items are addressed, we can proceed with the review of the code itself. The overall direction of the redesign looks promising!",
      "Thank you for working on redesigning the block menu. I see you've created several reusable components for this feature.\n\nI have two main concerns with this PR:\n\n1. **Missing Checklist**: Your PR description is missing the required checklist that should cover testing plan and other verification steps. Please update your description to include the standard checklist and fill it out appropriately.\n\n2. **Scope Mismatch**: Your PR title mentions only a frontend redesign, but the changes include significant backend work. I see new backend files for a builder API, including routes, models, and database functionality. The PR title should reflect both frontend and backend changes, something like: `feat(frontend,backend): Redesign block menu and add builder API`\n\nPlease update your PR to address these issues so we can proceed with the review. The code changes themselves look well-structured, but we need to ensure the PR follows our process requirements.\n\nAlso, I noticed you've marked some items with `BLOCK MENU TODO:` for future work. That's a good approach for tracking remaining tasks.",
      "Hi @Abhi1992002, thanks for your work on redesigning the block menu. I have some feedback to help get this PR ready for merging:\n\n## Required Changes\n\n1. **PR Description & Checklist**\n   - Please include the complete PR checklist from our template, including your test plan\n   - The description should explain both the frontend and backend changes\n\n2. **PR Scope**\n   - Your PR title mentions only frontend changes, but there are significant backend changes\n   - Please update the title to reflect both (e.g., `feat(frontend,backend): Redesign block menu on builder page`)\n\n3. **Backend Testing**\n   - The new API endpoints should have proper testing documentation\n   - Please describe how you've tested the new endpoints\n\n4. **User ID Security**\n   - For the new backend routes, please confirm that user_id checks are properly implemented\n\n## Questions\n\n1. What testing have you done for both the frontend components and backend endpoints?\n2. Are there any configuration changes needed for these new components?\n3. How do the new endpoints interact with the redesigned block menu?\n\nOnce these items are addressed, I'd be happy to re-review the PR. Thanks!",
      "Thanks for working on redesigning the block menu for the builder page! This is an important improvement that will enhance the user experience. However, there are a couple of issues that need to be addressed before we can merge this PR:\n\n1. **Missing Checklist**: The PR template requires a filled-out checklist for all code changes. Please update your PR description to include the checklist from the template with all applicable items checked.\n\n2. **Scope Mismatch**: Your PR title indicates this is a frontend change, but the diff contains significant backend changes including:\n   - Adding new backend routes under `/api/builder`\n   - Creating new backend models and database functions\n   - Modifying the store API\n\n   Please either:\n   - Update the PR title to something like `feat(platform): Redesign block menu with backend support` to accurately reflect both frontend and backend changes, or\n   - Split this into separate PRs for frontend and backend changes\n\nAdditionally, while your PR description lists the components you've added, it would be helpful to include a brief explanation of the backend changes as well.\n\nOnce these items are addressed, we can proceed with the review of the implementation details. The component organization looks good, and I appreciate your marking future tasks with the `BLOCK MENU TODO:` tag for easy reference.",
      "Thanks for working on the block menu redesign! This PR adds important components and functionality for the builder page.\n\n### Key Issues to Address\n\n1. **Missing Checklist:** Please add the required checklist to your PR description. This is mandatory for code changes and should include details about your test plan.\n\n2. **Scope Clarification:** Your PR title focuses on frontend changes, but includes significant backend changes (new endpoints, models, DB functions). While these backend changes appear necessary to support the frontend redesign, consider either:\n   - Updating the PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu on builder page with supporting API`)  \n   - OR splitting the PR into separate frontend and backend PRs if that makes sense\n\n3. **PR Conflicts:** There's a conflicts label on your PR - please resolve these merge conflicts.\n\n### Additional Notes\n\n- The TODO comments you've marked with `BLOCK MENU TODO:` are fine as placeholders for future work.\n- Good job properly implementing auth middleware on the new API routes.\n- Consider adding more details about what the redesigned block menu includes and what improvements it brings.\n\nOnce you've addressed these issues, particularly adding the required checklist, the PR should be ready for another review.",
      "Thank you for your PR to redesign the block menu! The implementation looks thorough with many new components created for the builder page.\n\nHowever, I've noticed a couple of issues that need to be addressed before this can be merged:\n\n1. **Missing checklist**: The PR description is missing the required checklist from our PR template. Since this is a significant code change, please update your PR description to include a completed checklist with items like:\n   - Confirmation that you've tested your changes\n   - A test plan outlining how you verified your implementation works correctly\n\n2. **Scope mismatch**: Your PR title mentions only frontend changes, but the PR includes substantial backend implementations including:\n   - A new backend/server/v2/builder module with model, db, and routes files\n   - New API endpoints\n   - Modifications to existing store functionality\n\n   Please update your PR title to reflect both frontend and backend changes, perhaps something like: `feat(frontend,backend): Redesign block menu and add builder API endpoints`\n\nOnce these issues are addressed, we can proceed with the review of your implementation. The code itself looks well-structured with appropriate user_id handling in the backend functions.",
      "Thanks for your PR on redesigning the block menu! There are a few items that need to be addressed before this can be merged:\n\n## Missing Required Information\n\n1. **Checklist**: Your PR is missing the required checklist section. Since this PR involves significant code changes, we need to ensure all necessary checks have been completed.\n\n2. **Test Plan**: Please include details on how you've tested these changes.\n\n## Scope Clarification\n\nYour PR title mentions frontend redesign, but includes significant backend changes (new API endpoints, models, etc.). While these backend changes appear to support the frontend redesign, it would be helpful to:\n\n- Update your PR title to reflect both frontend and backend changes, e.g., `feat(platform): Redesign block menu with supporting backend APIs`\n- OR clarify in your description how the backend changes are necessary for the frontend redesign\n\n## Documentation\n\nPlease add some brief documentation on the new backend endpoints you've created to help other developers understand their purpose and how they relate to the block menu redesign.\n\nThe code itself looks good - I see you've properly protected all routes with auth middleware and correctly handle user_id passing where needed. Once you've addressed these items, we can proceed with the review.",
      "Thank you for working on redesigning the block menu! This is an important improvement for the builder page UI. I've identified a couple of issues that need to be addressed before this PR can be merged:\n\n1. The PR description is missing the required checklist. Please update your description to include the checklist from our template, with all applicable items checked off.\n\n2. The PR title mentions only frontend changes (`feat(frontend)`), but the PR includes significant backend additions (new routes, models, and DB functions in `/backend/server/v2/builder/`). Either:\n   - Update the PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu with backend support`)\n   - Or split this into separate PRs for frontend and backend changes\n\nYour implementation looks good overall - I can see you've built reusable components and made sure the backend functions properly handle user_id for authentication. Please address the issues above so we can proceed with the review.\n\nNote: There's also a conflict label on this PR that will need to be resolved before merging.",
      "Thank you for your PR to redesign the block menu on the builder page! This looks like a substantial piece of work that adds many components and backend support.  \n\nHowever, I've noticed a few issues that need to be addressed before this can be merged:\n\n1. **Missing Checklist**: Your PR is missing the required checklist. Please add the complete checklist from the PR template and check off the items you've completed. Given the scope of your changes, the checklist is necessary to ensure everything has been properly tested.\n\n2. **PR Title/Scope Mismatch**: Your PR title only mentions frontend changes, but there are significant backend changes as well (new API routes, database functions, models). Please update your PR title to reflect both aspects, perhaps something like: `feat(frontend,backend): Redesign block menu on builder page with API support`\n\n3. **Test Plan**: Please provide a test plan detailing how you've verified that both the frontend components and backend API routes work correctly.\n\n4. **PR Description**: Consider expanding your description to briefly explain the purpose of the backend changes and how they support the frontend redesign.\n\nYour component organization looks good, and I appreciate that you've marked future tasks with `BLOCK MENU TODO:`. Once you address these items, we'll be able to move forward with the review process.",
      "Thanks for your contribution to redesign the block menu! This is a substantial PR with changes across both frontend and backend.\n\n### Missing Required Checklist\n\nPlease add the standard PR checklist to your description and complete it. This is required for all PRs with material code changes. The checklist helps ensure you've tested your changes appropriately and considered all necessary factors.\n\n### Scope Consideration\n\nYour PR title mentions frontend changes, but there are significant backend changes as well (new API endpoints, database functions, models). Consider either:\n1. Updating the PR title to reflect both frontend and backend changes, or\n2. Splitting this into two PRs if the changes are separable (one for backend support, one for frontend implementation)\n\n### TODOs in Code\n\nYou mentioned \"Some tasks are planned for the near future. I've marked them with `BLOCK MENU TODO:` so they can be found easily.\" Please ensure that these TODOs are addressed before the PR is merged, or create follow-up issues to track them.\n\n### Other Notes\n\n- The new backend endpoints look well-structured with appropriate auth middleware\n- The implementation seems comprehensive with search functionality, filtering, and pagination\n- Good job on adding new dependencies in package.json for the enhanced UI components\n\nPlease update your PR description with the required checklist and consider the scope recommendation.",
      "Thank you for your PR! I noticed a few issues that need to be addressed before this can be merged:\n\n## Missing Checklist\nYour PR contains significant code changes but doesn't include the required checklist. Please add the standard checklist to your PR description and ensure all items are checked off.\n\n## Scope Mismatch\nYour PR title mentions only frontend changes (`feat(frontend): Redesign block menu on builder page`), but the actual changes include extensive backend work:\n- New backend routes in `/api/builder/`\n- New database functions and models for builder functionality\n- Changes to store and library endpoints\n\nPlease update your PR title to reflect both frontend and backend changes, for example: `feat(frontend,backend): Redesign block menu and add builder API endpoints`\n\n## PR Description Needs Expansion\nPlease provide more details in your PR description:\n- What problem does this redesign solve?\n- What are the key changes in both frontend and backend?\n- How should reviewers test these changes?\n\nThe current description lists small components but doesn't explain the overall architecture or the backend additions.\n\nOnce these issues are addressed, I'll be happy to review this PR again. Let me know if you need any clarification!",
      "Thanks for your PR on redesigning the block menu! I have a couple of important issues that need to be addressed before this can be merged:\n\n## Required Changes\n\n1. **Missing Checklist**: The PR template requires a checklist to be completed for code changes. Please update your PR description to include the standard checklist and complete it.\n\n2. **PR Title/Scope Mismatch**: Your PR title indicates this is a frontend change (`feat(frontend)`), but the vast majority of changes are actually backend-related. The PR adds several new backend files (db.py, model.py, routes.py) and modifies existing backend code.\n\n   Please update your PR title to accurately reflect the scope of changes, such as `feat(platform): Redesign block menu with backend support` or similar that reflects both the frontend and backend work.\n\n3. **PR Description**: Consider expanding your PR description to explain why this redesign was needed and how it improves the current implementation. \n\n## Additional Notes\n\n- Your backend code changes look good from a security perspective - the functions properly use user_id for access control.\n- I noticed you've added a TODO comment \"BLOCK MENU TODO:\" for future work. Make sure these are tracked separately if they won't be addressed in this PR.\n- You've added some new dependencies in package.json (tailwind-scrollbar, react-timeago, etc.) - it would be helpful to mention these in the PR description.\n\nPlease update your PR with these changes so we can proceed with the review process. Let me know if you need any clarification!",
      "Thanks for your work on redesigning the block menu! I noticed a few issues that need to be addressed before this PR can be merged:\n\n## Description and Scope\n\n- Your PR title indicates only frontend changes, but there are significant backend changes (new API routes, models, etc.). The scope in the title should reflect all areas being modified, such as `feat(platform)` or both frontend and backend.\n- The PR description focuses on frontend components but doesn't mention the backend API work. Please update your description to include details about all changes made.\n\n## Missing Required Checklist\n\n- The PR is missing the required checklist that should be filled out completely. Since this includes substantial code changes, please add the checklist and check off all applicable items.\n- Please include a test plan detailing how you've verified the changes work correctly.\n\n## Suggested Changes\n\n1. Update the PR title to correctly represent the scope of changes (e.g., `feat(platform): Redesign block menu on builder page`)\n2. Expand the PR description to include details about the backend API changes\n3. Add the required checklist template and fill it out completely\n4. Include a test plan that describes how you've tested these changes\n\nOnce these issues are addressed, we can proceed with reviewing the code changes in detail.",
      "Thank you for your PR to redesign the block menu! I've reviewed your changes and have a few concerns that need to be addressed before this can be merged:\n\n## Missing Checklist\nThe PR description is missing the required checklist for code changes. Please update your description to include the standard checklist that confirms you've tested your changes properly.\n\n## Scope Mismatch\nYour PR title indicates this is a frontend change (`feat(frontend): Redesign block menu on builder page`), but the changes include significant backend additions:\n- New builder API endpoints\n- New database functions\n- New models and data structures\n\nThese backend changes appear to be more than 20% of the total changes, which exceeds our scope guidelines. You have two options:\n\n1. Split this into two PRs: one for frontend and one for backend changes\n2. Update the PR title to reflect both areas (e.g., `feat(frontend,backend): Redesign block menu with supporting API endpoints`)\n\nThe new backend code looks good in terms of security and user_id handling, but we need to ensure the PR accurately represents the work being done.\n\nPlease update your PR accordingly, and let me know if you need any help or clarification!",
      "Thanks for the PR to redesign the block menu! The components structure you've listed looks well organized.\n\nI noticed a couple of issues that need to be addressed before this can be merged:\n\n1. **Missing checklist**: The PR template requires a checklist section to be completed for code changes. Please add the checklist from the template and fill it out appropriately, especially including your test plan.\n\n2. **Scope mismatch**: Your PR title indicates this is purely a frontend change (`feat(frontend)`), but the PR contains substantial backend changes including:\n   - New backend API routes in `/api/builder`\n   - New backend models and database methods\n   - Changes to existing backend services\n\nPlease update either:\n   - The PR title to reflect both frontend and backend changes (e.g., `feat(platform): Redesign block menu and add builder API endpoints`)\n   - OR split this into separate PRs for frontend and backend changes\n\nAlso, I notice you've marked some tasks with \"BLOCK MENU TODO\" for future work. It would be helpful to clarify in the PR description which parts are complete in this PR and which parts are planned for future PRs.\n\nLet me know if you need any help with these changes!",
      "Thank you for your work on redesigning the block menu for the builder page. However, there are a couple of issues that need to be addressed before this PR can be merged:\n\n1. **Missing Checklist**: Your PR is missing the required checklist section. Please update your PR description to include the standard checklist and fill it out completely. This helps ensure all necessary steps have been completed before merging.\n\n2. **Scope Mismatch**: Your PR title mentions only frontend changes (`feat(frontend): Redesign block menu on builder page`), but the PR includes extensive backend changes as well. I see new backend routes, models, and database functions being added in:\n   - `backend/server/v2/builder/db.py`\n   - `backend/server/v2/builder/model.py`\n   - `backend/server/v2/builder/routes.py`\n   - And modifications to several other backend files\n\nYou have two options to address this:\n   - Update your PR title to reflect both frontend and backend changes, such as `feat(platform): Redesign block menu with supporting backend APIs`\n   - Or split this into separate PRs - one for frontend and one for backend changes\n\nPlease make these adjustments so we can proceed with the review. The changes themselves look valuable, but we need to ensure the PR follows our standards."
    ],
    "code_diff": "diff --git a/autogpt_platform/backend/backend/blocks/agent.py b/autogpt_platform/backend/backend/blocks/agent.py\nindex c25d99458d6d..406bff9e06bf 100644\n--- a/autogpt_platform/backend/backend/blocks/agent.py\n+++ b/autogpt_platform/backend/backend/blocks/agent.py\n@@ -23,6 +23,9 @@ class Input(BlockSchema):\n         user_id: str = SchemaField(description=\"User ID\")\n         graph_id: str = SchemaField(description=\"Graph ID\")\n         graph_version: int = SchemaField(description=\"Graph Version\")\n+        agent_name: Optional[str] = SchemaField(\n+            default=None, description=\"Name to display in the Builder UI\"\n+        )\n \n         inputs: BlockInput = SchemaField(description=\"Input data for the graph\")\n         input_schema: dict = SchemaField(description=\"Input schema for the graph\")\ndiff --git a/autogpt_platform/backend/backend/server/model.py b/autogpt_platform/backend/backend/server/model.py\nindex 8b7293b65ae7..c7b63634729f 100644\n--- a/autogpt_platform/backend/backend/server/model.py\n+++ b/autogpt_platform/backend/backend/server/model.py\n@@ -74,6 +74,15 @@ class Pagination(pydantic.BaseModel):\n         description=\"Number of items per page.\", examples=[25]\n     )\n \n+    @staticmethod\n+    def empty() -> \"Pagination\":\n+        return Pagination(\n+            total_items=0,\n+            total_pages=0,\n+            current_page=0,\n+            page_size=0,\n+        )\n+\n \n class RequestTopUp(pydantic.BaseModel):\n     credit_amount: int\ndiff --git a/autogpt_platform/backend/backend/server/rest_api.py b/autogpt_platform/backend/backend/server/rest_api.py\nindex 7ebbab9c4a38..5a885b9606a1 100644\n--- a/autogpt_platform/backend/backend/server/rest_api.py\n+++ b/autogpt_platform/backend/backend/server/rest_api.py\n@@ -23,6 +23,8 @@\n import backend.server.routers.v1\n import backend.server.v2.admin.credit_admin_routes\n import backend.server.v2.admin.store_admin_routes\n+import backend.server.v2.builder\n+import backend.server.v2.builder.routes\n import backend.server.v2.library.db\n import backend.server.v2.library.model\n import backend.server.v2.library.routes\n@@ -144,6 +146,9 @@ async def validation_error_handler(\n app.include_router(\n     backend.server.v2.store.routes.router, tags=[\"v2\"], prefix=\"/api/store\"\n )\n+app.include_router(\n+    backend.server.v2.builder.routes.router, tags=[\"v2\"], prefix=\"/api/builder\"\n+)\n app.include_router(\n     backend.server.v2.admin.store_admin_routes.router,\n     tags=[\"v2\", \"admin\"],\ndiff --git a/autogpt_platform/backend/backend/server/v2/builder/db.py b/autogpt_platform/backend/backend/server/v2/builder/db.py\nnew file mode 100644\nindex 000000000000..8cdbf9d9d4c7\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/server/v2/builder/db.py\n@@ -0,0 +1,370 @@\n+import functools\n+import logging\n+\n+import prisma\n+\n+import backend.data.block\n+import backend.server.model as server_model\n+from backend.blocks import load_all_blocks\n+from backend.blocks.llm import LlmModel\n+from backend.data.block import Block, BlockCategory, BlockSchema\n+from backend.data.credit import get_block_costs\n+from backend.integrations.providers import ProviderName\n+from backend.server.v2.builder.model import (\n+    BlockCategoryResponse,\n+    BlockData,\n+    BlockResponse,\n+    BlockType,\n+    CountResponse,\n+    Provider,\n+    ProviderResponse,\n+    SearchBlocksResponse,\n+)\n+\n+logger = logging.getLogger(__name__)\n+llm_models = [name.name.lower().replace(\"_\", \" \") for name in LlmModel]\n+_static_counts_cache: dict | None = None\n+_suggested_blocks: list[BlockData] | None = None\n+\n+\n+def get_block_categories(category_blocks: int = 3) -> list[BlockCategoryResponse]:\n+    categories: dict[BlockCategory, BlockCategoryResponse] = {}\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        # Skip disabled blocks\n+        if block.disabled:\n+            continue\n+        # Skip blocks that don't have categories (all should have at least one)\n+        if not block.categories:\n+            continue\n+\n+        # Add block to the categories\n+        for category in block.categories:\n+            if category not in categories:\n+                categories[category] = BlockCategoryResponse(\n+                    name=category.name.lower(),\n+                    total_blocks=0,\n+                    blocks=[],\n+                )\n+\n+            categories[category].total_blocks += 1\n+\n+            # Append if the category has less than the specified number of blocks\n+            if len(categories[category].blocks) < category_blocks:\n+                categories[category].blocks.append(block.to_dict())\n+\n+    # Sort categories by name\n+    return sorted(categories.values(), key=lambda x: x.name)\n+\n+\n+def get_blocks(\n+    *,\n+    category: str | None = None,\n+    type: BlockType | None = None,\n+    provider: ProviderName | None = None,\n+    page: int = 1,\n+    page_size: int = 50,\n+) -> BlockResponse:\n+    \"\"\"\n+    Get blocks based on either category, type or provider.\n+    Providing nothing fetches all block types.\n+    \"\"\"\n+    # Only one of category, type, or provider can be specified\n+    if (category and type) or (category and provider) or (type and provider):\n+        raise ValueError(\"Only one of category, type, or provider can be specified\")\n+\n+    blocks: list[Block[BlockSchema, BlockSchema]] = []\n+    skip = (page - 1) * page_size\n+    take = page_size\n+    total = 0\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        # Skip disabled blocks\n+        if block.disabled:\n+            continue\n+        # Skip blocks that don't match the category\n+        if category and category not in {c.name.lower() for c in block.categories}:\n+            continue\n+        # Skip blocks that don't match the type\n+        if (\n+            (type == \"input\" and block.block_type.value != \"Input\")\n+            or (type == \"output\" and block.block_type.value != \"Output\")\n+            or (type == \"action\" and block.block_type.value in (\"Input\", \"Output\"))\n+        ):\n+            continue\n+        # Skip blocks that don't match the provider\n+        if provider:\n+            credentials_info = block.input_schema.get_credentials_fields_info().values()\n+            if not any(provider in info.provider for info in credentials_info):\n+                continue\n+\n+        total += 1\n+        if skip > 0:\n+            skip -= 1\n+            continue\n+        if take > 0:\n+            take -= 1\n+            blocks.append(block)\n+\n+    costs = get_block_costs()\n+\n+    return BlockResponse(\n+        blocks=[{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks],\n+        pagination=server_model.Pagination(\n+            total_items=total,\n+            total_pages=total // page_size + (1 if total % page_size > 0 else 0),\n+            current_page=page,\n+            page_size=page_size,\n+        ),\n+    )\n+\n+\n+def search_blocks(\n+    include_blocks: bool = True,\n+    include_integrations: bool = True,\n+    query: str = \"\",\n+    page: int = 1,\n+    page_size: int = 50,\n+) -> SearchBlocksResponse:\n+    \"\"\"\n+    Get blocks based on the filter and query.\n+    `providers` only applies for `integrations` filter.\n+    \"\"\"\n+    blocks: list[Block[BlockSchema, BlockSchema]] = []\n+    query = query.lower()\n+\n+    total = 0\n+    skip = (page - 1) * page_size\n+    take = page_size\n+    block_count = 0\n+    integration_count = 0\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        # Skip disabled blocks\n+        if block.disabled:\n+            continue\n+        # Skip blocks that don't match the query\n+        if (\n+            query not in block.name.lower()\n+            and query not in block.description.lower()\n+            and not _matches_llm_model(block.input_schema, query)\n+        ):\n+            continue\n+        keep = False\n+        credentials = list(block.input_schema.get_credentials_fields().values())\n+        if include_integrations and len(credentials) > 0:\n+            keep = True\n+            integration_count += 1\n+        if include_blocks and len(credentials) == 0:\n+            keep = True\n+            block_count += 1\n+\n+        if not keep:\n+            continue\n+\n+        total += 1\n+        if skip > 0:\n+            skip -= 1\n+            continue\n+        if take > 0:\n+            take -= 1\n+            blocks.append(block)\n+\n+    costs = get_block_costs()\n+\n+    return SearchBlocksResponse(\n+        blocks=BlockResponse(\n+            blocks=[{**b.to_dict(), \"costs\": costs.get(b.id, [])} for b in blocks],\n+            pagination=server_model.Pagination(\n+                total_items=total,\n+                total_pages=total // page_size + (1 if total % page_size > 0 else 0),\n+                current_page=page,\n+                page_size=page_size,\n+            ),\n+        ),\n+        total_block_count=block_count,\n+        total_integration_count=integration_count,\n+    )\n+\n+\n+def get_providers(\n+    query: str = \"\",\n+    page: int = 1,\n+    page_size: int = 50,\n+) -> ProviderResponse:\n+    providers = []\n+    query = query.lower()\n+\n+    skip = (page - 1) * page_size\n+    take = page_size\n+\n+    all_providers = _get_all_providers()\n+\n+    for provider in all_providers.values():\n+        if (\n+            query not in provider.name.value.lower()\n+            and query not in provider.description.lower()\n+        ):\n+            continue\n+        if skip > 0:\n+            skip -= 1\n+            continue\n+        if take > 0:\n+            take -= 1\n+            providers.append(provider)\n+\n+    total = len(all_providers)\n+\n+    return ProviderResponse(\n+        providers=providers,\n+        pagination=server_model.Pagination(\n+            total_items=total,\n+            total_pages=total // page_size + (1 if total % page_size > 0 else 0),\n+            current_page=page,\n+            page_size=page_size,\n+        ),\n+    )\n+\n+\n+async def get_counts(user_id: str) -> CountResponse:\n+    my_agents = await prisma.models.LibraryAgent.prisma().count(\n+        where={\n+            \"userId\": user_id,\n+            \"isDeleted\": False,\n+            \"isArchived\": False,\n+        }\n+    )\n+    counts = await _get_static_counts()\n+    return CountResponse(\n+        my_agents=my_agents,\n+        **counts,\n+    )\n+\n+\n+async def _get_static_counts():\n+    \"\"\"\n+    Get counts of blocks, integrations, and marketplace agents.\n+    This is cached to avoid unnecessary database queries and calculations.\n+    Can't use functools.cache here because the function is async.\n+    \"\"\"\n+    global _static_counts_cache\n+    if _static_counts_cache is not None:\n+        return _static_counts_cache\n+\n+    all_blocks = 0\n+    input_blocks = 0\n+    action_blocks = 0\n+    output_blocks = 0\n+    integrations = 0\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        if block.disabled:\n+            continue\n+\n+        all_blocks += 1\n+\n+        if block.block_type.value == \"Input\":\n+            input_blocks += 1\n+        elif block.block_type.value == \"Output\":\n+            output_blocks += 1\n+        else:\n+            action_blocks += 1\n+\n+        credentials = list(block.input_schema.get_credentials_fields().values())\n+        if len(credentials) > 0:\n+            integrations += 1\n+\n+    marketplace_agents = await prisma.models.StoreAgent.prisma().count()\n+\n+    _static_counts_cache = {\n+        \"all_blocks\": all_blocks,\n+        \"input_blocks\": input_blocks,\n+        \"action_blocks\": action_blocks,\n+        \"output_blocks\": output_blocks,\n+        \"integrations\": integrations,\n+        \"marketplace_agents\": marketplace_agents,\n+    }\n+\n+    return _static_counts_cache\n+\n+\n+def _matches_llm_model(schema_cls: type[BlockSchema], query: str) -> bool:\n+    for field in schema_cls.model_fields.values():\n+        if field.annotation == LlmModel:\n+            # Check if query matches any value in llm_models\n+            if any(query in name for name in llm_models):\n+                return True\n+    return False\n+\n+\n+@functools.cache\n+def _get_all_providers() -> dict[ProviderName, Provider]:\n+    providers: dict[ProviderName, Provider] = {}\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        if block.disabled:\n+            continue\n+\n+        credentials_info = block.input_schema.get_credentials_fields_info().values()\n+        for info in credentials_info:\n+            for provider in info.provider:  # provider is a ProviderName enum member\n+                if provider in providers:\n+                    providers[provider].integration_count += 1\n+                else:\n+                    providers[provider] = Provider(\n+                        name=provider, description=\"\", integration_count=1\n+                    )\n+    return providers\n+\n+\n+async def get_suggested_blocks(count: int = 5) -> list[BlockData]:\n+    global _suggested_blocks\n+\n+    if _suggested_blocks is not None and len(_suggested_blocks) >= count:\n+        return _suggested_blocks[:count]\n+\n+    _suggested_blocks = []\n+    # Sum the number of executions for each block type\n+    # Prisma cannot group by nested relations, so we do a raw query\n+    results = await prisma.get_client().query_raw(\n+        \"\"\"\n+        SELECT\n+            agent_node.\"agentBlockId\" AS block_id,\n+            COUNT(execution.id) AS execution_count\n+        FROM \"AgentNodeExecution\" execution\n+        JOIN \"AgentNode\" agent_node ON execution.\"agentNodeId\" = agent_node.id\n+        GROUP BY agent_node.\"agentBlockId\"\n+        ORDER BY execution_count DESC;\n+        \"\"\"\n+    )\n+\n+    # Get the top blocks based on execution count\n+    # But ignore Input and Output blocks\n+    blocks: list[tuple[BlockData, int]] = []\n+\n+    for block_type in load_all_blocks().values():\n+        block: Block[BlockSchema, BlockSchema] = block_type()\n+        if block.disabled or block.block_type in (\n+            backend.data.block.BlockType.INPUT,\n+            backend.data.block.BlockType.OUTPUT,\n+            backend.data.block.BlockType.AGENT,\n+        ):\n+            continue\n+        # Find the execution count for this block\n+        execution_count = next(\n+            (row[\"execution_count\"] for row in results if row[\"block_id\"] == block.id),\n+            0,\n+        )\n+        blocks.append((block.to_dict(), execution_count))\n+    # Sort blocks by execution count\n+    blocks.sort(key=lambda x: x[1], reverse=True)\n+\n+    _suggested_blocks = [block[0] for block in blocks]\n+\n+    # Return the top blocks\n+    return _suggested_blocks[:count]\ndiff --git a/autogpt_platform/backend/backend/server/v2/builder/model.py b/autogpt_platform/backend/backend/server/v2/builder/model.py\nnew file mode 100644\nindex 000000000000..475010642d59\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/server/v2/builder/model.py\n@@ -0,0 +1,87 @@\n+from typing import Any, Literal\n+\n+from pydantic import BaseModel\n+\n+import backend.server.model as server_model\n+import backend.server.v2.library.model as library_model\n+import backend.server.v2.store.model as store_model\n+from backend.integrations.providers import ProviderName\n+\n+FilterType = Literal[\n+    \"blocks\",\n+    \"integrations\",\n+    \"marketplace_agents\",\n+    \"my_agents\",\n+]\n+\n+BlockType = Literal[\"all\", \"input\", \"action\", \"output\"]\n+\n+BlockData = dict[str, Any]\n+\n+\n+# Suggestions\n+class SuggestionsResponse(BaseModel):\n+    otto_suggestions: list[str]\n+    recent_searches: list[str]\n+    providers: list[ProviderName]\n+    top_blocks: list[BlockData]\n+\n+\n+# All blocks\n+class BlockCategoryResponse(BaseModel):\n+    name: str\n+    total_blocks: int\n+    blocks: list[BlockData]\n+\n+    model_config = {\"use_enum_values\": False}  # <== use enum names like \"AI\"\n+\n+\n+# Input/Action/Output and see all for block categories\n+class BlockResponse(BaseModel):\n+    blocks: list[BlockData]\n+    pagination: server_model.Pagination\n+\n+\n+# Providers\n+class Provider(BaseModel):\n+    name: ProviderName\n+    description: str\n+    integration_count: int\n+\n+\n+class ProviderResponse(BaseModel):\n+    providers: list[Provider]\n+    pagination: server_model.Pagination\n+\n+\n+# Search\n+class SearchRequest(BaseModel):\n+    search_query: str | None = None\n+    filter: list[FilterType] | None = None\n+    by_creator: list[str] | None = None\n+    search_id: str | None = None\n+    page: int | None = None\n+    page_size: int | None = None\n+\n+\n+class SearchBlocksResponse(BaseModel):\n+    blocks: BlockResponse\n+    total_block_count: int\n+    total_integration_count: int\n+\n+\n+class SearchResponse(BaseModel):\n+    items: list[BlockData | library_model.LibraryAgent | store_model.StoreAgent]\n+    total_items: dict[FilterType, int]\n+    page: int\n+    more_pages: bool\n+\n+\n+class CountResponse(BaseModel):\n+    all_blocks: int\n+    input_blocks: int\n+    action_blocks: int\n+    output_blocks: int\n+    integrations: int\n+    marketplace_agents: int\n+    my_agents: int\ndiff --git a/autogpt_platform/backend/backend/server/v2/builder/routes.py b/autogpt_platform/backend/backend/server/v2/builder/routes.py\nnew file mode 100644\nindex 000000000000..57934203892a\n--- /dev/null\n+++ b/autogpt_platform/backend/backend/server/v2/builder/routes.py\n@@ -0,0 +1,227 @@\n+import logging\n+from typing import Annotated, Sequence\n+\n+import fastapi\n+from autogpt_libs.auth.depends import auth_middleware, get_user_id\n+\n+import backend.server.model as server_model\n+import backend.server.v2.builder.db as builder_db\n+import backend.server.v2.builder.model as builder_model\n+import backend.server.v2.library.db as library_db\n+import backend.server.v2.library.model as library_model\n+import backend.server.v2.store.db as store_db\n+import backend.server.v2.store.model as store_model\n+from backend.integrations.providers import ProviderName\n+\n+logger = logging.getLogger(__name__)\n+\n+router = fastapi.APIRouter()\n+\n+\n+# Taken from backend/server/v2/store/db.py\n+def sanitize_query(query: str | None) -> str | None:\n+    if query is None:\n+        return query\n+    query = query.strip()[:100]\n+    return (\n+        query.replace(\"\\\\\", \"\\\\\\\\\")\n+        .replace(\"%\", \"\\\\%\")\n+        .replace(\"_\", \"\\\\_\")\n+        .replace(\"[\", \"\\\\[\")\n+        .replace(\"]\", \"\\\\]\")\n+        .replace(\"'\", \"\\\\'\")\n+        .replace('\"', '\\\\\"')\n+        .replace(\";\", \"\\\\;\")\n+        .replace(\"--\", \"\\\\--\")\n+        .replace(\"/*\", \"\\\\/*\")\n+        .replace(\"*/\", \"\\\\*/\")\n+    )\n+\n+\n+@router.get(\n+    \"/suggestions\",\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def get_suggestions(\n+    user_id: Annotated[str, fastapi.Depends(get_user_id)],\n+) -> builder_model.SuggestionsResponse:\n+    \"\"\"\n+    Get all suggestions for the Blocks Menu.\n+    \"\"\"\n+    return builder_model.SuggestionsResponse(\n+        otto_suggestions=[\n+            \"What blocks do I need to get started?\",\n+            \"Help me create a list\",\n+            \"Help me feed my data to Google Maps\",\n+        ],\n+        recent_searches=[\n+            \"image generation\",\n+            \"deepfake\",\n+            \"competitor analysis\",\n+        ],\n+        providers=[\n+            ProviderName.TWITTER,\n+            ProviderName.GITHUB,\n+            ProviderName.NOTION,\n+            ProviderName.GOOGLE,\n+            ProviderName.DISCORD,\n+            ProviderName.GOOGLE_MAPS,\n+        ],\n+        top_blocks=await builder_db.get_suggested_blocks(),\n+    )\n+\n+\n+@router.get(\n+    \"/categories\",\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def get_block_categories(\n+    category_blocks: Annotated[int, fastapi.Query()] = 3,\n+) -> Sequence[builder_model.BlockCategoryResponse]:\n+    \"\"\"\n+    Get all block categories with a specified number of blocks per category.\n+    \"\"\"\n+    return builder_db.get_block_categories(category_blocks)\n+\n+\n+@router.get(\n+    \"/blocks\",\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def get_blocks(\n+    category: Annotated[str | None, fastapi.Query()] = None,\n+    type: Annotated[builder_model.BlockType | None, fastapi.Query()] = None,\n+    provider: Annotated[ProviderName | None, fastapi.Query()] = None,\n+    page: Annotated[int, fastapi.Query()] = 1,\n+    page_size: Annotated[int, fastapi.Query()] = 50,\n+) -> builder_model.BlockResponse:\n+    \"\"\"\n+    Get blocks based on either category, type, or provider.\n+    \"\"\"\n+    return builder_db.get_blocks(\n+        category=category,\n+        type=type,\n+        provider=provider,\n+        page=page,\n+        page_size=page_size,\n+    )\n+\n+\n+@router.get(\n+    \"/providers\",\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def get_providers(\n+    page: Annotated[int, fastapi.Query()] = 1,\n+    page_size: Annotated[int, fastapi.Query()] = 50,\n+) -> builder_model.ProviderResponse:\n+    \"\"\"\n+    Get all integration providers with their block counts.\n+    \"\"\"\n+    return builder_db.get_providers(\n+        page=page,\n+        page_size=page_size,\n+    )\n+\n+\n+@router.post(\n+    \"/search\",\n+    tags=[\"store\", \"private\"],\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def search(\n+    options: builder_model.SearchRequest,\n+    user_id: Annotated[str, fastapi.Depends(get_user_id)],\n+) -> builder_model.SearchResponse:\n+    \"\"\"\n+    Search for blocks (including integrations), marketplace agents, and user library agents.\n+    \"\"\"\n+    # If no filters are provided, then we will return all types\n+    if not options.filter:\n+        options.filter = [\n+            \"blocks\",\n+            \"integrations\",\n+            \"marketplace_agents\",\n+            \"my_agents\",\n+        ]\n+    options.search_query = sanitize_query(options.search_query)\n+    options.page = options.page or 1\n+    options.page_size = options.page_size or 50\n+\n+    # Blocks&Integrations\n+    blocks = builder_model.SearchBlocksResponse(\n+        blocks=builder_model.BlockResponse(\n+            blocks=[],\n+            pagination=server_model.Pagination.empty(),\n+        ),\n+        total_block_count=0,\n+        total_integration_count=0,\n+    )\n+    if \"blocks\" in options.filter or \"integrations\" in options.filter:\n+        blocks = builder_db.search_blocks(\n+            include_blocks=\"blocks\" in options.filter,\n+            include_integrations=\"integrations\" in options.filter,\n+            query=options.search_query or \"\",\n+            page=options.page,\n+            page_size=options.page_size,\n+        )\n+\n+    # Library Agents\n+    my_agents = library_model.LibraryAgentResponse(\n+        agents=[],\n+        pagination=server_model.Pagination.empty(),\n+    )\n+    if \"my_agents\" in options.filter:\n+        my_agents = await library_db.list_library_agents(\n+            user_id=user_id,\n+            search_term=options.search_query,\n+            page=options.page,\n+            page_size=options.page_size,\n+        )\n+\n+    # Marketplace Agents\n+    marketplace_agents = store_model.StoreAgentsResponse(\n+        agents=[],\n+        pagination=server_model.Pagination.empty(),\n+    )\n+    if \"marketplace_agents\" in options.filter:\n+        marketplace_agents = await store_db.get_store_agents(\n+            creators=options.by_creator,\n+            search_query=options.search_query,\n+            page=options.page,\n+            page_size=options.page_size,\n+        )\n+\n+    more_pages = False\n+    if (\n+        blocks.blocks.pagination.current_page < blocks.blocks.pagination.total_pages\n+        or my_agents.pagination.current_page < my_agents.pagination.total_pages\n+        or marketplace_agents.pagination.current_page\n+        < marketplace_agents.pagination.total_pages\n+    ):\n+        more_pages = True\n+\n+    return builder_model.SearchResponse(\n+        items=blocks.blocks.blocks + my_agents.agents + marketplace_agents.agents,\n+        total_items={\n+            \"blocks\": blocks.total_block_count,\n+            \"integrations\": blocks.total_integration_count,\n+            \"marketplace_agents\": marketplace_agents.pagination.total_items,\n+            \"my_agents\": my_agents.pagination.total_items,\n+        },\n+        page=options.page,\n+        more_pages=more_pages,\n+    )\n+\n+\n+@router.get(\n+    \"/counts\",\n+    dependencies=[fastapi.Depends(auth_middleware)],\n+)\n+async def get_counts(\n+    user_id: Annotated[str, fastapi.Depends(get_user_id)],\n+) -> builder_model.CountResponse:\n+    \"\"\"\n+    Get item counts for the menu categories in the Blocks Menu.\n+    \"\"\"\n+    return await builder_db.get_counts(user_id)\ndiff --git a/autogpt_platform/backend/backend/server/v2/library/db.py b/autogpt_platform/backend/backend/server/v2/library/db.py\nindex b0f8f7a755c9..d4e6d4f4a476 100644\n--- a/autogpt_platform/backend/backend/server/v2/library/db.py\n+++ b/autogpt_platform/backend/backend/server/v2/library/db.py\n@@ -448,7 +448,7 @@ async def add_store_agent_to_library(\n                             \"agentGraphVersion\": graph.version,\n                         }\n                     },\n-                    include={\"AgentGraph\": True},\n+                    include=library_agent_include(user_id),\n                 )\n             )\n             if existing_library_agent:\ndiff --git a/autogpt_platform/backend/backend/server/v2/library/model.py b/autogpt_platform/backend/backend/server/v2/library/model.py\nindex 8c39f3dc3b04..2ea8798361eb 100644\n--- a/autogpt_platform/backend/backend/server/v2/library/model.py\n+++ b/autogpt_platform/backend/backend/server/v2/library/model.py\n@@ -42,6 +42,7 @@ class LibraryAgent(pydantic.BaseModel):\n \n     # Made input_schema and output_schema match GraphMeta's type\n     input_schema: dict[str, Any]  # Should be BlockIOObjectSubSchema in frontend\n+    output_schema: dict[str, Any]\n \n     # Indicates whether there's a new output (based on recent runs)\n     new_output: bool\n@@ -106,6 +107,7 @@ def from_db(agent: prisma.models.LibraryAgent) -> \"LibraryAgent\":\n             name=graph.name,\n             description=graph.description,\n             input_schema=graph.input_schema,\n+            output_schema=graph.output_schema,\n             new_output=new_output,\n             can_access_graph=can_access_graph,\n             is_latest_version=is_latest_version,\ndiff --git a/autogpt_platform/backend/backend/server/v2/library/routes_test.py b/autogpt_platform/backend/backend/server/v2/library/routes_test.py\nindex 6cfb1ffce035..99d9bd4f1af2 100644\n--- a/autogpt_platform/backend/backend/server/v2/library/routes_test.py\n+++ b/autogpt_platform/backend/backend/server/v2/library/routes_test.py\n@@ -50,6 +50,7 @@ async def test_get_library_agents_success(\n                 creator_name=\"Test Creator\",\n                 creator_image_url=\"\",\n                 input_schema={\"type\": \"object\", \"properties\": {}},\n+                output_schema={\"type\": \"object\", \"properties\": {}},\n                 status=library_model.LibraryAgentStatus.COMPLETED,\n                 new_output=False,\n                 can_access_graph=True,\n@@ -66,6 +67,7 @@ async def test_get_library_agents_success(\n                 creator_name=\"Test Creator\",\n                 creator_image_url=\"\",\n                 input_schema={\"type\": \"object\", \"properties\": {}},\n+                output_schema={\"type\": \"object\", \"properties\": {}},\n                 status=library_model.LibraryAgentStatus.COMPLETED,\n                 new_output=False,\n                 can_access_graph=False,\ndiff --git a/autogpt_platform/backend/backend/server/v2/store/db.py b/autogpt_platform/backend/backend/server/v2/store/db.py\nindex dac8cce8a520..707e20befd9b 100644\n--- a/autogpt_platform/backend/backend/server/v2/store/db.py\n+++ b/autogpt_platform/backend/backend/server/v2/store/db.py\n@@ -37,7 +37,7 @@ def sanitize_query(query: str | None) -> str | None:\n \n async def get_store_agents(\n     featured: bool = False,\n-    creator: str | None = None,\n+    creators: list[str] | None = None,\n     sorted_by: str | None = None,\n     search_query: str | None = None,\n     category: str | None = None,\n@@ -48,15 +48,15 @@ async def get_store_agents(\n     Get PUBLIC store agents from the StoreAgent view\n     \"\"\"\n     logger.debug(\n-        f\"Getting store agents. featured={featured}, creator={creator}, sorted_by={sorted_by}, search={search_query}, category={category}, page={page}\"\n+        f\"Getting store agents. featured={featured}, creator={creators}, sorted_by={sorted_by}, search={search_query}, category={category}, page={page}\"\n     )\n     sanitized_query = sanitize_query(search_query)\n \n     where_clause = {}\n     if featured:\n         where_clause[\"featured\"] = featured\n-    if creator:\n-        where_clause[\"creator_username\"] = creator\n+    if creators:\n+        where_clause[\"creator_username\"] = {\"in\": creators}\n     if category:\n         where_clause[\"categories\"] = {\"has\": category}\n \ndiff --git a/autogpt_platform/backend/backend/server/v2/store/routes.py b/autogpt_platform/backend/backend/server/v2/store/routes.py\nindex 41795f5d887b..f71665d93794 100644\n--- a/autogpt_platform/backend/backend/server/v2/store/routes.py\n+++ b/autogpt_platform/backend/backend/server/v2/store/routes.py\n@@ -158,7 +158,7 @@ async def get_agents(\n     try:\n         agents = await backend.server.v2.store.db.get_store_agents(\n             featured=featured,\n-            creator=creator,\n+            creators=[creator] if creator else None,\n             sorted_by=sorted_by,\n             search_query=search_query,\n             category=category,\ndiff --git a/autogpt_platform/frontend/package.json b/autogpt_platform/frontend/package.json\nindex b8abd0baf04c..60e79c2472b1 100644\n--- a/autogpt_platform/frontend/package.json\n+++ b/autogpt_platform/frontend/package.json\n@@ -82,9 +82,12 @@\n     \"react-markdown\": \"9.0.3\",\n     \"react-modal\": \"3.16.3\",\n     \"react-shepherd\": \"6.1.8\",\n+    \"react-timeago\": \"^8.2.0\",\n     \"recharts\": \"2.15.3\",\n     \"shepherd.js\": \"14.5.0\",\n     \"tailwind-merge\": \"2.6.0\",\n+    \"tailwind-scrollbar\": \"^4.0.2\",\n+    \"tailwind-scrollbar-hide\": \"^2.0.0\",\n     \"tailwindcss-animate\": \"1.0.7\",\n     \"uuid\": \"11.1.0\",\n     \"zod\": \"3.25.56\"\ndiff --git a/autogpt_platform/frontend/pnpm-lock.yaml b/autogpt_platform/frontend/pnpm-lock.yaml\nindex e418b8bb879f..e6bea7076a8f 100644\n--- a/autogpt_platform/frontend/pnpm-lock.yaml\n+++ b/autogpt_platform/frontend/pnpm-lock.yaml\n@@ -79,7 +79,7 @@ importers:\n         version: 1.2.7(@types/react-dom@18.3.5(@types/react@18.3.17))(@types/react@18.3.17)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       '@sentry/nextjs':\n         specifier: 9.27.0\n-        version: 9.27.0(@opentelemetry/context-async-hooks@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/core@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/instrumentation@0.57.2(@opentelemetry/api@1.9.0))(@opentelemetry/sdk-trace-base@1.30.1(@opentelemetry/api@1.9.0))(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+        version: 9.27.0(@opentelemetry/context-async-hooks@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/core@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/instrumentation@0.57.2(@opentelemetry/api@1.9.0))(@opentelemetry/sdk-trace-base@1.30.1(@opentelemetry/api@1.9.0))(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       '@supabase/ssr':\n         specifier: 0.6.1\n         version: 0.6.1(@supabase/supabase-js@2.50.0)\n@@ -182,6 +182,9 @@ importers:\n       react-shepherd:\n         specifier: 6.1.8\n         version: 6.1.8(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(typescript@5.8.3)\n+      react-timeago:\n+        specifier: ^8.2.0\n+        version: 8.2.0(react@18.3.1)\n       recharts:\n         specifier: 2.15.3\n         version: 2.15.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n@@ -191,6 +194,12 @@ importers:\n       tailwind-merge:\n         specifier: 2.6.0\n         version: 2.6.0\n+      tailwind-scrollbar:\n+        specifier: ^4.0.2\n+        version: 4.0.2(react@18.3.1)(tailwindcss@3.4.17)\n+      tailwind-scrollbar-hide:\n+        specifier: ^2.0.0\n+        version: 2.0.0(tailwindcss@3.4.17)\n       tailwindcss-animate:\n         specifier: 1.0.7\n         version: 1.0.7(tailwindcss@3.4.17)\n@@ -233,7 +242,7 @@ importers:\n         version: 8.6.14(storybook@8.6.14(prettier@3.5.3))\n       '@storybook/nextjs':\n         specifier: 8.6.14\n-        version: 8.6.14(@swc/core@1.12.1)(esbuild@0.25.5)(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(type-fest@4.41.0)(typescript@5.8.3)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+        version: 8.6.14(@swc/core@1.11.31)(esbuild@0.24.2)(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(type-fest@4.41.0)(typescript@5.8.3)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       '@storybook/react':\n         specifier: 8.6.14\n         version: 8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n@@ -269,7 +278,7 @@ importers:\n         version: 3.16.3\n       axe-playwright:\n         specifier: 2.1.0\n-        version: 2.1.0(playwright@1.53.0)\n+        version: 2.1.0(playwright@1.52.0)\n       chromatic:\n         specifier: 11.25.2\n         version: 11.25.2\n@@ -991,152 +1000,152 @@ packages:\n   '@emotion/unitless@0.8.1':\n     resolution: {integrity: sha512-KOEGMu6dmJZtpadb476IsZBclKvILjopjUii3V+7MnXIQCYh8W3NgNcgwo21n9LXZX6EDIKvqfjYxXebDwxKmQ==}\n \n-  '@esbuild/aix-ppc64@0.25.5':\n-    resolution: {integrity: sha512-9o3TMmpmftaCMepOdA5k/yDw8SfInyzWWTjYTFCX3kPSDJMROQTb8jg+h9Cnwnmm1vOzvxN7gIfB5V2ewpjtGA==}\n+  '@esbuild/aix-ppc64@0.24.2':\n+    resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}\n     engines: {node: '>=18'}\n     cpu: [ppc64]\n     os: [aix]\n \n-  '@esbuild/android-arm64@0.25.5':\n-    resolution: {integrity: sha512-VGzGhj4lJO+TVGV1v8ntCZWJktV7SGCs3Pn1GRWI1SBFtRALoomm8k5E9Pmwg3HOAal2VDc2F9+PM/rEY6oIDg==}\n+  '@esbuild/android-arm64@0.24.2':\n+    resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [android]\n \n-  '@esbuild/android-arm@0.25.5':\n-    resolution: {integrity: sha512-AdJKSPeEHgi7/ZhuIPtcQKr5RQdo6OO2IL87JkianiMYMPbCtot9fxPbrMiBADOWWm3T2si9stAiVsGbTQFkbA==}\n+  '@esbuild/android-arm@0.24.2':\n+    resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}\n     engines: {node: '>=18'}\n     cpu: [arm]\n     os: [android]\n \n-  '@esbuild/android-x64@0.25.5':\n-    resolution: {integrity: sha512-D2GyJT1kjvO//drbRT3Hib9XPwQeWd9vZoBJn+bu/lVsOZ13cqNdDeqIF/xQ5/VmWvMduP6AmXvylO/PIc2isw==}\n+  '@esbuild/android-x64@0.24.2':\n+    resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [android]\n \n-  '@esbuild/darwin-arm64@0.25.5':\n-    resolution: {integrity: sha512-GtaBgammVvdF7aPIgH2jxMDdivezgFu6iKpmT+48+F8Hhg5J/sfnDieg0aeG/jfSvkYQU2/pceFPDKlqZzwnfQ==}\n+  '@esbuild/darwin-arm64@0.24.2':\n+    resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [darwin]\n \n-  '@esbuild/darwin-x64@0.25.5':\n-    resolution: {integrity: sha512-1iT4FVL0dJ76/q1wd7XDsXrSW+oLoquptvh4CLR4kITDtqi2e/xwXwdCVH8hVHU43wgJdsq7Gxuzcs6Iq/7bxQ==}\n+  '@esbuild/darwin-x64@0.24.2':\n+    resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [darwin]\n \n-  '@esbuild/freebsd-arm64@0.25.5':\n-    resolution: {integrity: sha512-nk4tGP3JThz4La38Uy/gzyXtpkPW8zSAmoUhK9xKKXdBCzKODMc2adkB2+8om9BDYugz+uGV7sLmpTYzvmz6Sw==}\n+  '@esbuild/freebsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [freebsd]\n \n-  '@esbuild/freebsd-x64@0.25.5':\n-    resolution: {integrity: sha512-PrikaNjiXdR2laW6OIjlbeuCPrPaAl0IwPIaRv+SMV8CiM8i2LqVUHFC1+8eORgWyY7yhQY+2U2fA55mBzReaw==}\n+  '@esbuild/freebsd-x64@0.24.2':\n+    resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [freebsd]\n \n-  '@esbuild/linux-arm64@0.25.5':\n-    resolution: {integrity: sha512-Z9kfb1v6ZlGbWj8EJk9T6czVEjjq2ntSYLY2cw6pAZl4oKtfgQuS4HOq41M/BcoLPzrUbNd+R4BXFyH//nHxVg==}\n+  '@esbuild/linux-arm64@0.24.2':\n+    resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [linux]\n \n-  '@esbuild/linux-arm@0.25.5':\n-    resolution: {integrity: sha512-cPzojwW2okgh7ZlRpcBEtsX7WBuqbLrNXqLU89GxWbNt6uIg78ET82qifUy3W6OVww6ZWobWub5oqZOVtwolfw==}\n+  '@esbuild/linux-arm@0.24.2':\n+    resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}\n     engines: {node: '>=18'}\n     cpu: [arm]\n     os: [linux]\n \n-  '@esbuild/linux-ia32@0.25.5':\n-    resolution: {integrity: sha512-sQ7l00M8bSv36GLV95BVAdhJ2QsIbCuCjh/uYrWiMQSUuV+LpXwIqhgJDcvMTj+VsQmqAHL2yYaasENvJ7CDKA==}\n+  '@esbuild/linux-ia32@0.24.2':\n+    resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}\n     engines: {node: '>=18'}\n     cpu: [ia32]\n     os: [linux]\n \n-  '@esbuild/linux-loong64@0.25.5':\n-    resolution: {integrity: sha512-0ur7ae16hDUC4OL5iEnDb0tZHDxYmuQyhKhsPBV8f99f6Z9KQM02g33f93rNH5A30agMS46u2HP6qTdEt6Q1kg==}\n+  '@esbuild/linux-loong64@0.24.2':\n+    resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}\n     engines: {node: '>=18'}\n     cpu: [loong64]\n     os: [linux]\n \n-  '@esbuild/linux-mips64el@0.25.5':\n-    resolution: {integrity: sha512-kB/66P1OsHO5zLz0i6X0RxlQ+3cu0mkxS3TKFvkb5lin6uwZ/ttOkP3Z8lfR9mJOBk14ZwZ9182SIIWFGNmqmg==}\n+  '@esbuild/linux-mips64el@0.24.2':\n+    resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}\n     engines: {node: '>=18'}\n     cpu: [mips64el]\n     os: [linux]\n \n-  '@esbuild/linux-ppc64@0.25.5':\n-    resolution: {integrity: sha512-UZCmJ7r9X2fe2D6jBmkLBMQetXPXIsZjQJCjgwpVDz+YMcS6oFR27alkgGv3Oqkv07bxdvw7fyB71/olceJhkQ==}\n+  '@esbuild/linux-ppc64@0.24.2':\n+    resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}\n     engines: {node: '>=18'}\n     cpu: [ppc64]\n     os: [linux]\n \n-  '@esbuild/linux-riscv64@0.25.5':\n-    resolution: {integrity: sha512-kTxwu4mLyeOlsVIFPfQo+fQJAV9mh24xL+y+Bm6ej067sYANjyEw1dNHmvoqxJUCMnkBdKpvOn0Ahql6+4VyeA==}\n+  '@esbuild/linux-riscv64@0.24.2':\n+    resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}\n     engines: {node: '>=18'}\n     cpu: [riscv64]\n     os: [linux]\n \n-  '@esbuild/linux-s390x@0.25.5':\n-    resolution: {integrity: sha512-K2dSKTKfmdh78uJ3NcWFiqyRrimfdinS5ErLSn3vluHNeHVnBAFWC8a4X5N+7FgVE1EjXS1QDZbpqZBjfrqMTQ==}\n+  '@esbuild/linux-s390x@0.24.2':\n+    resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}\n     engines: {node: '>=18'}\n     cpu: [s390x]\n     os: [linux]\n \n-  '@esbuild/linux-x64@0.25.5':\n-    resolution: {integrity: sha512-uhj8N2obKTE6pSZ+aMUbqq+1nXxNjZIIjCjGLfsWvVpy7gKCOL6rsY1MhRh9zLtUtAI7vpgLMK6DxjO8Qm9lJw==}\n+  '@esbuild/linux-x64@0.24.2':\n+    resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [linux]\n \n-  '@esbuild/netbsd-arm64@0.25.5':\n-    resolution: {integrity: sha512-pwHtMP9viAy1oHPvgxtOv+OkduK5ugofNTVDilIzBLpoWAM16r7b/mxBvfpuQDpRQFMfuVr5aLcn4yveGvBZvw==}\n+  '@esbuild/netbsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [netbsd]\n \n-  '@esbuild/netbsd-x64@0.25.5':\n-    resolution: {integrity: sha512-WOb5fKrvVTRMfWFNCroYWWklbnXH0Q5rZppjq0vQIdlsQKuw6mdSihwSo4RV/YdQ5UCKKvBy7/0ZZYLBZKIbwQ==}\n+  '@esbuild/netbsd-x64@0.24.2':\n+    resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [netbsd]\n \n-  '@esbuild/openbsd-arm64@0.25.5':\n-    resolution: {integrity: sha512-7A208+uQKgTxHd0G0uqZO8UjK2R0DDb4fDmERtARjSHWxqMTye4Erz4zZafx7Di9Cv+lNHYuncAkiGFySoD+Mw==}\n+  '@esbuild/openbsd-arm64@0.24.2':\n+    resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [openbsd]\n \n-  '@esbuild/openbsd-x64@0.25.5':\n-    resolution: {integrity: sha512-G4hE405ErTWraiZ8UiSoesH8DaCsMm0Cay4fsFWOOUcz8b8rC6uCvnagr+gnioEjWn0wC+o1/TAHt+It+MpIMg==}\n+  '@esbuild/openbsd-x64@0.24.2':\n+    resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [openbsd]\n \n-  '@esbuild/sunos-x64@0.25.5':\n-    resolution: {integrity: sha512-l+azKShMy7FxzY0Rj4RCt5VD/q8mG/e+mDivgspo+yL8zW7qEwctQ6YqKX34DTEleFAvCIUviCFX1SDZRSyMQA==}\n+  '@esbuild/sunos-x64@0.24.2':\n+    resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [sunos]\n \n-  '@esbuild/win32-arm64@0.25.5':\n-    resolution: {integrity: sha512-O2S7SNZzdcFG7eFKgvwUEZ2VG9D/sn/eIiz8XRZ1Q/DO5a3s76Xv0mdBzVM5j5R639lXQmPmSo0iRpHqUUrsxw==}\n+  '@esbuild/win32-arm64@0.24.2':\n+    resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}\n     engines: {node: '>=18'}\n     cpu: [arm64]\n     os: [win32]\n \n-  '@esbuild/win32-ia32@0.25.5':\n-    resolution: {integrity: sha512-onOJ02pqs9h1iMJ1PQphR+VZv8qBMQ77Klcsqv9CNW2w6yLqoURLcgERAIurY6QE63bbLuqgP9ATqajFLK5AMQ==}\n+  '@esbuild/win32-ia32@0.24.2':\n+    resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}\n     engines: {node: '>=18'}\n     cpu: [ia32]\n     os: [win32]\n \n-  '@esbuild/win32-x64@0.25.5':\n-    resolution: {integrity: sha512-TXv6YnJ8ZMVdX+SXWVBo/0p8LTcrUYngpWjvm91TMjjBQii7Oz11Lw5lbDV5Y0TzuhSJHwiH4hEtC1I42mMS0g==}\n+  '@esbuild/win32-x64@0.24.2':\n+    resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}\n     engines: {node: '>=18'}\n     cpu: [x64]\n     os: [win32]\n@@ -1567,8 +1576,8 @@ packages:\n     resolution: {integrity: sha512-RuzCup9Ct91Y7V79xwCb146RaBRHZ7NBbrIUySumd1rpKqHL5OonaqrGIbug5hNwP/fRyxFMA6ISgw4FTtYFYg==}\n     engines: {node: '>=18'}\n \n-  '@napi-rs/wasm-runtime@0.2.11':\n-    resolution: {integrity: sha512-9DPkXtvHydrcOsopiYpUgPHpmj0HWZKMUnL2dZqpvC42lsratuBG06V5ipyno0fUek5VlFsNQ+AcFATSrJXgMA==}\n+  '@napi-rs/wasm-runtime@0.2.10':\n+    resolution: {integrity: sha512-bCsCyeZEwVErsGmyPNSzwfwFn4OdxBj0mmv6hOFucB/k81Ojdu68RbZdxYsRQUPc9l6SU5F/cG+bXgWs3oUgsQ==}\n \n   '@next/env@15.3.3':\n     resolution: {integrity: sha512-OdiMrzCl2Xi0VTjiQQUK0Xh7bJHnOuET2s+3V+Y40WJBAXrJeGA3f+I8MZJ/YQ3mVGi5XGR1L66oFlgqXhQ4Vw==}\n@@ -2907,68 +2916,68 @@ packages:\n   '@supabase/supabase-js@2.50.0':\n     resolution: {integrity: sha512-M1Gd5tPaaghYZ9OjeO1iORRqbTWFEz/cF3pPubRnMPzA+A8SiUsXXWDP+DWsASZcjEcVEcVQIAF38i5wrijYOg==}\n \n-  '@swc/core-darwin-arm64@1.12.1':\n-    resolution: {integrity: sha512-nUjWVcJ3YS2N40ZbKwYO2RJ4+o2tWYRzNOcIQp05FqW0+aoUCVMdAUUzQinPDynfgwVshDAXCKemY8X7nN5MaA==}\n+  '@swc/core-darwin-arm64@1.11.31':\n+    resolution: {integrity: sha512-NTEaYOts0OGSbJZc0O74xsji+64JrF1stmBii6D5EevWEtrY4wlZhm8SiP/qPrOB+HqtAihxWIukWkP2aSdGSQ==}\n     engines: {node: '>=10'}\n     cpu: [arm64]\n     os: [darwin]\n \n-  '@swc/core-darwin-x64@1.12.1':\n-    resolution: {integrity: sha512-OGm4a4d3OeJn+tRt8H/eiHgTFrJbS6r8mi/Ob65tAEXZGHN900T2kR7c5ALr0V2hBOQ8BfhexwPoQlGQP/B95w==}\n+  '@swc/core-darwin-x64@1.11.31':\n+    resolution: {integrity: sha512-THSGaSwT96JwXDwuXQ6yFBbn+xDMdyw7OmBpnweAWsh5DhZmQkALEm1DgdQO3+rrE99MkmzwAfclc0UmYro/OA==}\n     engines: {node: '>=10'}\n     cpu: [x64]\n     os: [darwin]\n \n-  '@swc/core-linux-arm-gnueabihf@1.12.1':\n-    resolution: {integrity: sha512-76YeeQKyK0EtNkQiNBZ0nbVGooPf9IucY0WqVXVpaU4wuG7ZyLEE2ZAIgXafIuzODGQoLfetue7I8boMxh1/MA==}\n+  '@swc/core-linux-arm-gnueabihf@1.11.31':\n+    resolution: {integrity: sha512-laKtQFnW7KHgE57Hx32os2SNAogcuIDxYE+3DYIOmDMqD7/1DCfJe6Rln2N9WcOw6HuDbDpyQavIwZNfSAa8vQ==}\n     engines: {node: '>=10'}\n     cpu: [arm]\n     os: [linux]\n \n-  '@swc/core-linux-arm64-gnu@1.12.1':\n-    resolution: {integrity: sha512-BxJDIJPq1+aCh9UsaSAN6wo3tuln8UhNXruOrzTI8/ElIig/3sAueDM6Eq7GvZSGGSA7ljhNATMJ0elD7lFatQ==}\n+  '@swc/core-linux-arm64-gnu@1.11.31':\n+    resolution: {integrity: sha512-T+vGw9aPE1YVyRxRr1n7NAdkbgzBzrXCCJ95xAZc/0+WUwmL77Z+js0J5v1KKTRxw4FvrslNCOXzMWrSLdwPSA==}\n     engines: {node: '>=10'}\n     cpu: [arm64]\n     os: [linux]\n \n-  '@swc/core-linux-arm64-musl@1.12.1':\n-    resolution: {integrity: sha512-NhLdbffSXvY0/FwUSAl4hKBlpe5GHQGXK8DxTo3HHjLsD9sCPYieo3vG0NQoUYAy4ZUY1WeGjyxeq4qZddJzEQ==}\n+  '@swc/core-linux-arm64-musl@1.11.31':\n+    resolution: {integrity: sha512-Mztp5NZkyd5MrOAG+kl+QSn0lL4Uawd4CK4J7wm97Hs44N9DHGIG5nOz7Qve1KZo407Y25lTxi/PqzPKHo61zQ==}\n     engines: {node: '>=10'}\n     cpu: [arm64]\n     os: [linux]\n \n-  '@swc/core-linux-x64-gnu@1.12.1':\n-    resolution: {integrity: sha512-CrYnV8SZIgArQ9LKH0xEF95PKXzX9WkRSc5j55arOSBeDCeDUQk1Bg/iKdnDiuj5HC1hZpvzwMzSBJjv+Z70jA==}\n+  '@swc/core-linux-x64-gnu@1.11.31':\n+    resolution: {integrity: sha512-DDVE0LZcXOWwOqFU1Xi7gdtiUg3FHA0vbGb3trjWCuI1ZtDZHEQYL4M3/2FjqKZtIwASrDvO96w91okZbXhvMg==}\n     engines: {node: '>=10'}\n     cpu: [x64]\n     os: [linux]\n \n-  '@swc/core-linux-x64-musl@1.12.1':\n-    resolution: {integrity: sha512-BQMl3d0HaGB0/h2xcKlGtjk/cGRn2tnbsaChAKcjFdCepblKBCz1pgO/mL7w5iXq3s57wMDUn++71/a5RAkZOA==}\n+  '@swc/core-linux-x64-musl@1.11.31':\n+    resolution: {integrity: sha512-mJA1MzPPRIfaBUHZi0xJQ4vwL09MNWDeFtxXb0r4Yzpf0v5Lue9ymumcBPmw/h6TKWms+Non4+TDquAsweuKSw==}\n     engines: {node: '>=10'}\n     cpu: [x64]\n     os: [linux]\n \n-  '@swc/core-win32-arm64-msvc@1.12.1':\n-    resolution: {integrity: sha512-b7NeGnpqTfmIGtUqXBl0KqoSmOnH64nRZoT5l4BAGdvwY7nxitWR94CqZuwyLPty/bLywmyDA9uO12Kvgb3+gg==}\n+  '@swc/core-win32-arm64-msvc@1.11.31':\n+    resolution: {integrity: sha512-RdtakUkNVAb/FFIMw3LnfNdlH1/ep6KgiPDRlmyUfd0WdIQ3OACmeBegEFNFTzi7gEuzy2Yxg4LWf4IUVk8/bg==}\n     engines: {node: '>=10'}\n     cpu: [arm64]\n     os: [win32]\n \n-  '@swc/core-win32-ia32-msvc@1.12.1':\n-    resolution: {integrity: sha512-iU/29X2D7cHBp1to62cUg/5Xk8K+lyOJiKIGGW5rdzTW/c2zz3d/ehgpzVP/rqC4NVr88MXspqHU4il5gmDajw==}\n+  '@swc/core-win32-ia32-msvc@1.11.31':\n+    resolution: {integrity: sha512-hErXdCGsg7swWdG1fossuL8542I59xV+all751mYlBoZ8kOghLSKObGQTkBbuNvc0sUKWfWg1X0iBuIhAYar+w==}\n     engines: {node: '>=10'}\n     cpu: [ia32]\n     os: [win32]\n \n-  '@swc/core-win32-x64-msvc@1.12.1':\n-    resolution: {integrity: sha512-+Zh+JKDwiFqV5N9yAd2DhYVGPORGh9cfenu1ptr9yge+eHAf7vZJcC3rnj6QMR1QJh0Y5VC9+YBjRFjZVA7XDw==}\n+  '@swc/core-win32-x64-msvc@1.11.31':\n+    resolution: {integrity: sha512-5t7SGjUBMMhF9b5j17ml/f/498kiBJNf4vZFNM421UGUEETdtjPN9jZIuQrowBkoFGJTCVL/ECM4YRtTH30u/A==}\n     engines: {node: '>=10'}\n     cpu: [x64]\n     os: [win32]\n \n-  '@swc/core@1.12.1':\n-    resolution: {integrity: sha512-aKXdDTqxTVFl/bKQZ3EQUjEMBEoF6JBv29moMZq0kbVO43na6u/u+3Vcbhbrh+A2N0X5OL4RaveuWfAjEgOmeA==}\n+  '@swc/core@1.11.31':\n+    resolution: {integrity: sha512-mAby9aUnKRjMEA7v8cVZS9Ah4duoRBnX7X6r5qrhTxErx+68MoY1TPrVwj/66/SWN3Bl+jijqAqoB8Qx0QE34A==}\n     engines: {node: '>=10'}\n     peerDependencies:\n       '@swc/helpers': '>=0.5.17'\n@@ -2988,8 +2997,8 @@ packages:\n     peerDependencies:\n       '@swc/core': '*'\n \n-  '@swc/types@0.1.23':\n-    resolution: {integrity: sha512-u1iIVZV9Q0jxY+yM2vw/hZGDNudsN85bBpTqzAQ9rzkxW9D+e3aEM4Han+ow518gSewkXgjmEK0BD79ZcNVgPw==}\n+  '@swc/types@0.1.21':\n+    resolution: {integrity: sha512-2YEtj5HJVbKivud9N4bpPBAyZhj4S2Ipe5LkUG94alTpr7in/GU/EARgPAd3BwU+YOmFVJC2+kjqhGRi3r0ZpQ==}\n \n   '@tanstack/react-table@8.21.3':\n     resolution: {integrity: sha512-5nNMTSETP4ykGegmVkhjcS8tTLW6Vl4axfEGQN3v0zdHYbK4UfoqfPChclTrJ4EoK9QynqAu9oUf8VEmrpZ5Ww==}\n@@ -3100,8 +3109,8 @@ packages:\n   '@types/estree@1.0.6':\n     resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n \n-  '@types/estree@1.0.8':\n-    resolution: {integrity: sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==}\n+  '@types/estree@1.0.7':\n+    resolution: {integrity: sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==}\n \n   '@types/graceful-fs@4.1.9':\n     resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}\n@@ -3166,8 +3175,11 @@ packages:\n   '@types/phoenix@1.6.6':\n     resolution: {integrity: sha512-PIzZZlEppgrpoT2QgbnDU+MMzuR6BbCjllj0bM70lWoejMeNJAxCchxnv7J3XFkI8MpygtRpzXrIlmWUBclP5A==}\n \n-  '@types/prop-types@15.7.15':\n-    resolution: {integrity: sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==}\n+  '@types/prismjs@1.26.5':\n+    resolution: {integrity: sha512-AUZTa7hQ2KY5L7AmtSiqxlhWxb4ina0yd8hNbl4TWuqnv/pFP0nDMb3YrfSBf4hJVGLh2YEIBfKaBW/9UEl6IQ==}\n+\n+  '@types/prop-types@15.7.14':\n+    resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}\n \n   '@types/react-dom@18.3.5':\n     resolution: {integrity: sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==}\n@@ -3192,8 +3204,8 @@ packages:\n   '@types/stack-utils@2.0.3':\n     resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}\n \n-  '@types/statuses@2.0.6':\n-    resolution: {integrity: sha512-xMAgYwceFhRA2zY+XbEA7mxYbA093wdiW8Vu6gZPGWy9cmOyU9XesH1tNcEWsKFd5Vzrqx5T3D38PWx1FIIXkA==}\n+  '@types/statuses@2.0.5':\n+    resolution: {integrity: sha512-jmIUGWrAiwu3dZpxntxieC+1n/5c3mjrImkmOSQ2NC5uP6cYO4aAZDdSmRcI5C1oiTmqlZGHC+/NmJrKogbP5A==}\n \n   '@types/stylis@4.2.5':\n     resolution: {integrity: sha512-1Xve+NMN7FWjY14vLoY5tL3BVEQ/n42YLwaqJIPYhotZ9uBHt87VceMwWQpzmdEt2TNXIorIFG+YeCUUW7RInw==}\n@@ -3225,160 +3237,150 @@ packages:\n   '@types/yargs@17.0.33':\n     resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}\n \n-  '@typescript-eslint/eslint-plugin@8.34.1':\n-    resolution: {integrity: sha512-STXcN6ebF6li4PxwNeFnqF8/2BNDvBupf2OPx2yWNzr6mKNGF7q49VM00Pz5FaomJyqvbXpY6PhO+T9w139YEQ==}\n+  '@typescript-eslint/eslint-plugin@8.33.1':\n+    resolution: {integrity: sha512-TDCXj+YxLgtvxvFlAvpoRv9MAncDLBV2oT9Bd7YBGC/b/sEURoOYuIwLI99rjWOfY3QtDzO+mk0n4AmdFExW8A==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n-      '@typescript-eslint/parser': ^8.34.1\n+      '@typescript-eslint/parser': ^8.33.1\n       eslint: ^8.57.0 || ^9.0.0\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/parser@8.34.1':\n-    resolution: {integrity: sha512-4O3idHxhyzjClSMJ0a29AcoK0+YwnEqzI6oz3vlRf3xw0zbzt15MzXwItOlnr5nIth6zlY2RENLsOPvhyrKAQA==}\n+  '@typescript-eslint/parser@8.33.1':\n+    resolution: {integrity: sha512-qwxv6dq682yVvgKKp2qWwLgRbscDAYktPptK4JPojCwwi3R9cwrvIxS4lvBpzmcqzR4bdn54Z0IG1uHFskW4dA==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       eslint: ^8.57.0 || ^9.0.0\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/project-service@8.34.1':\n-    resolution: {integrity: sha512-nuHlOmFZfuRwLJKDGQOVc0xnQrAmuq1Mj/ISou5044y1ajGNp2BNliIqp7F2LPQ5sForz8lempMFCovfeS1XoA==}\n+  '@typescript-eslint/project-service@8.33.1':\n+    resolution: {integrity: sha512-DZR0efeNklDIHHGRpMpR5gJITQpu6tLr9lDJnKdONTC7vvzOlLAG/wcfxcdxEWrbiZApcoBCzXqU/Z458Za5Iw==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/scope-manager@8.34.1':\n-    resolution: {integrity: sha512-beu6o6QY4hJAgL1E8RaXNC071G4Kso2MGmJskCFQhRhg8VOH/FDbC8soP8NHN7e/Hdphwp8G8cE6OBzC8o41ZA==}\n+  '@typescript-eslint/scope-manager@8.33.1':\n+    resolution: {integrity: sha512-dM4UBtgmzHR9bS0Rv09JST0RcHYearoEoo3pG5B6GoTR9XcyeqX87FEhPo+5kTvVfKCvfHaHrcgeJQc6mrDKrA==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n \n-  '@typescript-eslint/tsconfig-utils@8.34.1':\n-    resolution: {integrity: sha512-K4Sjdo4/xF9NEeA2khOb7Y5nY6NSXBnod87uniVYW9kHP+hNlDV8trUSFeynA2uxWam4gIWgWoygPrv9VMWrYg==}\n+  '@typescript-eslint/tsconfig-utils@8.33.1':\n+    resolution: {integrity: sha512-STAQsGYbHCF0/e+ShUQ4EatXQ7ceh3fBCXkNU7/MZVKulrlq1usH7t2FhxvCpuCi5O5oi1vmVaAjrGeL71OK1g==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/type-utils@8.34.1':\n-    resolution: {integrity: sha512-Tv7tCCr6e5m8hP4+xFugcrwTOucB8lshffJ6zf1mF1TbU67R+ntCc6DzLNKM+s/uzDyv8gLq7tufaAhIBYeV8g==}\n+  '@typescript-eslint/type-utils@8.33.1':\n+    resolution: {integrity: sha512-1cG37d9xOkhlykom55WVwG2QRNC7YXlxMaMzqw2uPeJixBFfKWZgaP/hjAObqMN/u3fr5BrTwTnc31/L9jQ2ww==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       eslint: ^8.57.0 || ^9.0.0\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/types@8.34.1':\n-    resolution: {integrity: sha512-rjLVbmE7HR18kDsjNIZQHxmv9RZwlgzavryL5Lnj2ujIRTeXlKtILHgRNmQ3j4daw7zd+mQgy+uyt6Zo6I0IGA==}\n+  '@typescript-eslint/types@8.33.1':\n+    resolution: {integrity: sha512-xid1WfizGhy/TKMTwhtVOgalHwPtV8T32MS9MaH50Cwvz6x6YqRIPdD2WvW0XaqOzTV9p5xdLY0h/ZusU5Lokg==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n \n-  '@typescript-eslint/typescript-estree@8.34.1':\n-    resolution: {integrity: sha512-rjCNqqYPuMUF5ODD+hWBNmOitjBWghkGKJg6hiCHzUvXRy6rK22Jd3rwbP2Xi+R7oYVvIKhokHVhH41BxPV5mA==}\n+  '@typescript-eslint/typescript-estree@8.33.1':\n+    resolution: {integrity: sha512-+s9LYcT8LWjdYWu7IWs7FvUxpQ/DGkdjZeE/GGulHvv8rvYwQvVaUZ6DE+j5x/prADUgSbbCWZ2nPI3usuVeOA==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/utils@8.34.1':\n-    resolution: {integrity: sha512-mqOwUdZ3KjtGk7xJJnLbHxTuWVn3GO2WZZuM+Slhkun4+qthLdXx32C8xIXbO1kfCECb3jIs3eoxK3eryk7aoQ==}\n+  '@typescript-eslint/utils@8.33.1':\n+    resolution: {integrity: sha512-52HaBiEQUaRYqAXpfzWSR2U3gxk92Kw006+xZpElaPMg3C4PgM+A5LqwoQI1f9E5aZ/qlxAZxzm42WX+vn92SQ==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n     peerDependencies:\n       eslint: ^8.57.0 || ^9.0.0\n       typescript: '>=4.8.4 <5.9.0'\n \n-  '@typescript-eslint/visitor-keys@8.34.1':\n-    resolution: {integrity: sha512-xoh5rJ+tgsRKoXnkBPFRLZ7rjKM0AfVbC68UZ/ECXoDbfggb9RbEySN359acY1vS3qZ0jVTVWzbtfapwm5ztxw==}\n+  '@typescript-eslint/visitor-keys@8.33.1':\n+    resolution: {integrity: sha512-3i8NrFcZeeDHJ+7ZUuDkGT+UHq+XoFGsymNK2jZCOHcfEzRQ0BdpRtdpSx/Iyf3MHLWIcLS0COuOPibKQboIiQ==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n \n   '@ungap/structured-clone@1.3.0':\n     resolution: {integrity: sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==}\n \n-  '@unrs/resolver-binding-android-arm-eabi@1.9.0':\n-    resolution: {integrity: sha512-h1T2c2Di49ekF2TE8ZCoJkb+jwETKUIPDJ/nO3tJBKlLFPu+fyd93f0rGP/BvArKx2k2HlRM4kqkNarj3dvZlg==}\n-    cpu: [arm]\n-    os: [android]\n-\n-  '@unrs/resolver-binding-android-arm64@1.9.0':\n-    resolution: {integrity: sha512-sG1NHtgXtX8owEkJ11yn34vt0Xqzi3k9TJ8zppDmyG8GZV4kVWw44FHwKwHeEFl07uKPeC4ZoyuQaGh5ruJYPA==}\n-    cpu: [arm64]\n-    os: [android]\n-\n-  '@unrs/resolver-binding-darwin-arm64@1.9.0':\n-    resolution: {integrity: sha512-nJ9z47kfFnCxN1z/oYZS7HSNsFh43y2asePzTEZpEvK7kGyuShSl3RRXnm/1QaqFL+iP+BjMwuB+DYUymOkA5A==}\n+  '@unrs/resolver-binding-darwin-arm64@1.7.10':\n+    resolution: {integrity: sha512-ABsM3eEiL3yu903G0uxgvGAoIw011XjTzyEk//gGtuVY1PuXP2IJG6novd6DBjm7MaWmRV/CZFY1rWBXSlSVVw==}\n     cpu: [arm64]\n     os: [darwin]\n \n-  '@unrs/resolver-binding-darwin-x64@1.9.0':\n-    resolution: {integrity: sha512-TK+UA1TTa0qS53rjWn7cVlEKVGz2B6JYe0C++TdQjvWYIyx83ruwh0wd4LRxYBM5HeuAzXcylA9BH2trARXJTw==}\n+  '@unrs/resolver-binding-darwin-x64@1.7.10':\n+    resolution: {integrity: sha512-lGVWy4FQEDo/PuI1VQXaQCY0XUg4xUJilf3fQ8NY4wtsQTm9lbasbUYf3nkoma+O2/do90jQTqkb02S3meyTDg==}\n     cpu: [x64]\n     os: [darwin]\n \n-  '@unrs/resolver-binding-freebsd-x64@1.9.0':\n-    resolution: {integrity: sha512-6uZwzMRFcD7CcCd0vz3Hp+9qIL2jseE/bx3ZjaLwn8t714nYGwiE84WpaMCYjU+IQET8Vu/+BNAGtYD7BG/0yA==}\n+  '@unrs/resolver-binding-freebsd-x64@1.7.10':\n+    resolution: {integrity: sha512-g9XLCHzNGatY79JJNgxrUH6uAAfBDj2NWIlTnqQN5odwGKjyVfFZ5tFL1OxYPcxTHh384TY5lvTtF+fuEZNvBQ==}\n     cpu: [x64]\n     os: [freebsd]\n \n-  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':\n-    resolution: {integrity: sha512-bPUBksQfrgcfv2+mm+AZinaKq8LCFvt5PThYqRotqSuuZK1TVKkhbVMS/jvSRfYl7jr3AoZLYbDkItxgqMKRkg==}\n+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.7.10':\n+    resolution: {integrity: sha512-zV0ZMNy50sJFJapsjec8onyL9YREQKT88V8KwMoOA+zki/duFUP0oyTlbax1jGKdh8rQnruvW9VYkovGvdBAsw==}\n     cpu: [arm]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':\n-    resolution: {integrity: sha512-uT6E7UBIrTdCsFQ+y0tQd3g5oudmrS/hds5pbU3h4s2t/1vsGWbbSKhBSCD9mcqaqkBwoqlECpUrRJCmldl8PA==}\n+  '@unrs/resolver-binding-linux-arm-musleabihf@1.7.10':\n+    resolution: {integrity: sha512-jQxgb1DIDI7goyrabh4uvyWWBrFRfF+OOnS9SbF15h52g3Qjn/u8zG7wOQ0NjtcSMftzO75TITu9aHuI7FcqQQ==}\n     cpu: [arm]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':\n-    resolution: {integrity: sha512-vdqBh911wc5awE2bX2zx3eflbyv8U9xbE/jVKAm425eRoOVv/VseGZsqi3A3SykckSpF4wSROkbQPvbQFn8EsA==}\n+  '@unrs/resolver-binding-linux-arm64-gnu@1.7.10':\n+    resolution: {integrity: sha512-9wVVlO6+aNlm90YWitwSI++HyCyBkzYCwMi7QbuGrTxDFm2pAgtpT0OEliaI7tLS8lAWYuDbzRRCJDgsdm6nwg==}\n     cpu: [arm64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':\n-    resolution: {integrity: sha512-/8JFZ/SnuDr1lLEVsxsuVwrsGquTvT51RZGvyDB/dOK3oYK2UqeXzgeyq6Otp8FZXQcEYqJwxb9v+gtdXn03eQ==}\n+  '@unrs/resolver-binding-linux-arm64-musl@1.7.10':\n+    resolution: {integrity: sha512-FtFweORChdXOes0RAAyTZp6I4PodU2cZiSILAbGaEKDXp378UOumD2vaAkWHNxpsreQUKRxG5O1uq9EoV1NiVQ==}\n     cpu: [arm64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':\n-    resolution: {integrity: sha512-FkJjybtrl+rajTw4loI3L6YqSOpeZfDls4SstL/5lsP2bka9TiHUjgMBjygeZEis1oC8LfJTS8FSgpKPaQx2tQ==}\n+  '@unrs/resolver-binding-linux-ppc64-gnu@1.7.10':\n+    resolution: {integrity: sha512-B+hOjpG2ncCR96a9d9ww1dWVuRVC2NChD0bITgrUhEWBhpdv2o/Mu2l8MsB2fzjdV/ku+twaQhr8iLHBoZafZQ==}\n     cpu: [ppc64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':\n-    resolution: {integrity: sha512-w/NZfHNeDusbqSZ8r/hp8iL4S39h4+vQMc9/vvzuIKMWKppyUGKm3IST0Qv0aOZ1rzIbl9SrDeIqK86ZpUK37w==}\n+  '@unrs/resolver-binding-linux-riscv64-gnu@1.7.10':\n+    resolution: {integrity: sha512-DS6jFDoQCFsnsdLXlj3z3THakQLBic63B6A0rpQ1kpkyKa3OzEfqhwRNVaywuUuOKP9bX55Jk2uqpvn/hGjKCg==}\n     cpu: [riscv64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':\n-    resolution: {integrity: sha512-bEPBosut8/8KQbUixPry8zg/fOzVOWyvwzOfz0C0Rw6dp+wIBseyiHKjkcSyZKv/98edrbMknBaMNJfA/UEdqw==}\n+  '@unrs/resolver-binding-linux-riscv64-musl@1.7.10':\n+    resolution: {integrity: sha512-A82SB6yEaA8EhIW2r0I7P+k5lg7zPscFnGs1Gna5rfPwoZjeUAGX76T55+DiyTiy08VFKUi79PGCulXnfjDq0g==}\n     cpu: [riscv64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':\n-    resolution: {integrity: sha512-LDtMT7moE3gK753gG4pc31AAqGUC86j3AplaFusc717EUGF9ZFJ356sdQzzZzkBk1XzMdxFyZ4f/i35NKM/lFA==}\n+  '@unrs/resolver-binding-linux-s390x-gnu@1.7.10':\n+    resolution: {integrity: sha512-J+VmOPH16U69QshCp9WS+Zuiuu9GWTISKchKIhLbS/6JSCEfw2A4N02whv2VmrkXE287xxZbhW1p6xlAXNzwqg==}\n     cpu: [s390x]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':\n-    resolution: {integrity: sha512-WmFd5KINHIXj8o1mPaT8QRjA9HgSXhN1gl9Da4IZihARihEnOylu4co7i/yeaIpcfsI6sYs33cNZKyHYDh0lrA==}\n+  '@unrs/resolver-binding-linux-x64-gnu@1.7.10':\n+    resolution: {integrity: sha512-bYTdDltcB/V3fEqpx8YDwDw8ta9uEg8TUbJOtek6JM42u9ciJ7R/jBjNeAOs+QbyxGDd2d6xkBaGwty1HzOz3Q==}\n     cpu: [x64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-linux-x64-musl@1.9.0':\n-    resolution: {integrity: sha512-CYuXbANW+WgzVRIl8/QvZmDaZxrqvOldOwlbUjIM4pQ46FJ0W5cinJ/Ghwa/Ng1ZPMJMk1VFdsD/XwmCGIXBWg==}\n+  '@unrs/resolver-binding-linux-x64-musl@1.7.10':\n+    resolution: {integrity: sha512-NYZ1GvSuTokJ28lqcjrMTnGMySoo4dVcNK/nsNCKCXT++1zekZtJaE+N+4jc1kR7EV0fc1OhRrOGcSt7FT9t8w==}\n     cpu: [x64]\n     os: [linux]\n \n-  '@unrs/resolver-binding-wasm32-wasi@1.9.0':\n-    resolution: {integrity: sha512-6Rp2WH0OoitMYR57Z6VE8Y6corX8C6QEMWLgOV6qXiJIeZ1F9WGXY/yQ8yDC4iTraotyLOeJ2Asea0urWj2fKQ==}\n+  '@unrs/resolver-binding-wasm32-wasi@1.7.10':\n+    resolution: {integrity: sha512-MRjJhTaQzLoX8OtzRBQDJ84OJ8IX1FqpRAUSxp/JtPeak+fyDfhXaEjcA/fhfgrACUnvC+jWC52f/V6MixSKCQ==}\n     engines: {node: '>=14.0.0'}\n     cpu: [wasm32]\n \n-  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':\n-    resolution: {integrity: sha512-rknkrTRuvujprrbPmGeHi8wYWxmNVlBoNW8+4XF2hXUnASOjmuC9FNF1tGbDiRQWn264q9U/oGtixyO3BT8adQ==}\n+  '@unrs/resolver-binding-win32-arm64-msvc@1.7.10':\n+    resolution: {integrity: sha512-Cgw6qhdsfzXJnHb006CzqgaX8mD445x5FGKuueaLeH1ptCxDbzRs8wDm6VieOI7rdbstfYBaFtaYN7zBT5CUPg==}\n     cpu: [arm64]\n     os: [win32]\n \n-  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':\n-    resolution: {integrity: sha512-Ceymm+iBl+bgAICtgiHyMLz6hjxmLJKqBim8tDzpX61wpZOx2bPK6Gjuor7I2RiUynVjvvkoRIkrPyMwzBzF3A==}\n+  '@unrs/resolver-binding-win32-ia32-msvc@1.7.10':\n+    resolution: {integrity: sha512-Z7oECyIT2/HsrWpJ6wi2b+lVbPmWqQHuW5zeatafoRXizk1+2wUl+aSop1PF58XcyBuwPP2YpEUUpMZ8ILV4fA==}\n     cpu: [ia32]\n     os: [win32]\n \n-  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':\n-    resolution: {integrity: sha512-k59o9ZyeyS0hAlcaKFezYSH2agQeRFEB7KoQLXl3Nb3rgkqT1NY9Vwy+SqODiLmYnEjxWJVRE/yq2jFVqdIxZw==}\n+  '@unrs/resolver-binding-win32-x64-msvc@1.7.10':\n+    resolution: {integrity: sha512-DGAOo5asNvDsmFgwkb7xsgxNyN0If6XFYwDIC1QlRE7kEYWIMRChtWJyHDf30XmGovDNOs/37krxhnga/nm/4w==}\n     cpu: [x64]\n     os: [win32]\n \n@@ -3474,8 +3476,8 @@ packages:\n     peerDependencies:\n       acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n \n-  acorn@8.15.0:\n-    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}\n+  acorn@8.14.1:\n+    resolution: {integrity: sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==}\n     engines: {node: '>=0.4.0'}\n     hasBin: true\n \n@@ -3666,8 +3668,8 @@ packages:\n     peerDependencies:\n       playwright: '>1.0.0'\n \n-  axios@1.10.0:\n-    resolution: {integrity: sha512-/1xYAC4MP/HEG+3duIhFr4ZQXR4sQXOIe+o6sdqzeykGLx6Upp/1p8MHqhINOvGeP7xyNHe7tsiJByc4SSVUxw==}\n+  axios@1.9.0:\n+    resolution: {integrity: sha512-re4CqKTJaURpzbLHtIi6XpDv20/CnpXOtjRY5/CU32L8gU8ek9UIivcfvSWvmKEngmVbrUtPpdDwWDWL7DNHvg==}\n \n   axobject-query@4.1.0:\n     resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}\n@@ -3752,11 +3754,11 @@ packages:\n   boring-avatars@1.11.2:\n     resolution: {integrity: sha512-3+wkwPeObwS4R37FGXMYViqc4iTrIRj5yzfX9Qy4mnpZ26sX41dGMhsAgmKks1r/uufY1pl4vpgzMWHYfJRb2A==}\n \n-  brace-expansion@1.1.12:\n-    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}\n+  brace-expansion@1.1.11:\n+    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n \n-  brace-expansion@2.0.2:\n-    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}\n+  brace-expansion@2.0.1:\n+    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n \n   braces@3.0.3:\n     resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n@@ -3850,8 +3852,8 @@ packages:\n   camelize@1.0.1:\n     resolution: {integrity: sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ==}\n \n-  caniuse-lite@1.0.30001723:\n-    resolution: {integrity: sha512-1R/elMjtehrFejxwmexeXAtae5UO9iSyFn6G/I806CYC/BLyyBk1EPhrKBkWhy6wM6Xnm47dSJQec+tLJ39WHw==}\n+  caniuse-lite@1.0.30001721:\n+    resolution: {integrity: sha512-cOuvmUVtKrtEaoKiO0rSc29jcjwMwX5tOHDy4MgVFEWiUXj4uBMJkwI8MDySkgXidpMiHUcviogAvFi4pA2hDQ==}\n \n   case-sensitive-paths-webpack-plugin@2.4.0:\n     resolution: {integrity: sha512-roIFONhcxog0JSSWbvVAh3OocukmSgpqOH6YpMkCvav/ySIV3JKg4Dc8vYtQjYi/UxpNE36r/9v+VqTQqgkYmw==}\n@@ -4062,11 +4064,11 @@ packages:\n     resolution: {integrity: sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==}\n     engines: {node: '>=18'}\n \n-  core-js-compat@3.43.0:\n-    resolution: {integrity: sha512-2GML2ZsCc5LR7hZYz4AXmjQw8zuy2T//2QntwdnpuYI7jteT6GVYJL7F6C2C57R7gSYrcqVW3lAALefdbhBLDA==}\n+  core-js-compat@3.42.0:\n+    resolution: {integrity: sha512-bQasjMfyDGyaeWKBIu33lHh9qlSR0MFE/Nmc6nMjf/iU9b3rSMdAYz1Baxrv4lPdGUsTqZudHA4jIGSJy0SWZQ==}\n \n-  core-js-pure@3.43.0:\n-    resolution: {integrity: sha512-i/AgxU2+A+BbJdMxh3v7/vxi2SbFqxiFmg6VsDwYB4jkucrd1BZNA9a9gphC0fYMG5IBSgQcbQnk865VCLe7xA==}\n+  core-js-pure@3.42.0:\n+    resolution: {integrity: sha512-007bM04u91fF4kMgwom2I5cQxAFIy8jVulgr9eozILl/SZE53QOqnW/+vviC+wQWLv+AunBG+8Q0TLoeSsSxRQ==}\n \n   core-util-is@1.0.3:\n     resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}\n@@ -4258,8 +4260,8 @@ packages:\n   decimal.js-light@2.5.1:\n     resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}\n \n-  decode-named-character-reference@1.2.0:\n-    resolution: {integrity: sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==}\n+  decode-named-character-reference@1.1.0:\n+    resolution: {integrity: sha512-Wy+JTSbFThEOXQIR2L6mxJvEs+veIzpmqD7ynWxMXGpnk3smkHQOp6forLdHsKpAMW9iJpaBBIxz285t1n1C3w==}\n \n   dedent@0.7.0:\n     resolution: {integrity: sha512-Q6fKUPqnAHAyhiUgFU7BUzLiv0kd8saH9al7tnu5Q/okj6dnupxyTgFIBjVzJATdfIAm9NAsvXNzjaKa+bxVyA==}\n@@ -4407,8 +4409,8 @@ packages:\n   eastasianwidth@0.2.0:\n     resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n \n-  electron-to-chromium@1.5.169:\n-    resolution: {integrity: sha512-q7SQx6mkLy0GTJK9K9OiWeaBMV4XQtBSdf6MJUzDB/H/5tFXfIiX38Lci1Kl6SsgiEhz1SQI1ejEOU5asWEhwQ==}\n+  electron-to-chromium@1.5.165:\n+    resolution: {integrity: sha512-naiMx1Z6Nb2TxPU6fiFrUrDTjyPMLdTtaOd2oLmG8zVSg2hCWGkhPyxwk+qRmZ1ytwVqUv0u7ZcDA5+ALhaUtw==}\n \n   elliptic@6.6.1:\n     resolution: {integrity: sha512-RaddvvMatK2LJHqFJ+YA4WysVN5Ita9E35botqIYspQ4TkRAlCicdzKOjlyv/1Za5RyTNn7di//eEV0uTAfe3g==}\n@@ -4506,8 +4508,8 @@ packages:\n     peerDependencies:\n       esbuild: '>=0.12 <1'\n \n-  esbuild@0.25.5:\n-    resolution: {integrity: sha512-P8OtKZRv/5J5hhz0cUAdu/cLuPIKXpQl1R9pZtvmHWQvrAUVd0UNIPT4IB4W3rNOqVO0rlqHmCIbSwxh/c9yUQ==}\n+  esbuild@0.24.2:\n+    resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}\n     engines: {node: '>=18'}\n     hasBin: true\n \n@@ -4619,8 +4621,8 @@ packages:\n     resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n \n-  eslint-visitor-keys@4.2.1:\n-    resolution: {integrity: sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==}\n+  eslint-visitor-keys@4.2.0:\n+    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}\n     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n \n   eslint@8.57.1:\n@@ -4742,8 +4744,8 @@ packages:\n   fb-watchman@2.0.2:\n     resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}\n \n-  fdir@6.4.6:\n-    resolution: {integrity: sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==}\n+  fdir@6.4.5:\n+    resolution: {integrity: sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==}\n     peerDependencies:\n       picomatch: ^3 || ^4\n     peerDependenciesMeta:\n@@ -4833,8 +4835,8 @@ packages:\n       typescript: '>3.6.0'\n       webpack: ^5.11.0\n \n-  form-data@4.0.3:\n-    resolution: {integrity: sha512-qsITQPfmvMOSAdeyZ+12I1c+CKSstAFAwu+97zrnWAbIr5u8wfsExUzCesVLC8NgHuRUqNN4Zy6UPWUTRGslcA==}\n+  form-data@4.0.2:\n+    resolution: {integrity: sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==}\n     engines: {node: '>= 6'}\n \n   forwarded-parse@2.1.2:\n@@ -5711,8 +5713,8 @@ packages:\n     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n     hasBin: true\n \n-  loupe@3.1.4:\n-    resolution: {integrity: sha512-wJzkKwJrheKtknCOKNEtDK4iqg/MxmZheEMtSTYvnzRdEYaZzmgH976nenp8WdJRdx5Vc1X/9MO0Oszl6ezeXg==}\n+  loupe@3.1.3:\n+    resolution: {integrity: sha512-kkIp7XSkP78ZxJEsSxW3712C6teJVoeHHwgo9zJ380de7IYyJ2ISlxojcH2pC5OFLewESmnRi/+XCDIEEVyoug==}\n \n   lower-case@2.0.2:\n     resolution: {integrity: sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==}\n@@ -5924,11 +5926,11 @@ packages:\n   moment@2.30.1:\n     resolution: {integrity: sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==}\n \n-  motion-dom@12.18.1:\n-    resolution: {integrity: sha512-dR/4EYT23Snd+eUSLrde63Ws3oXQtJNw/krgautvTfwrN/2cHfCZMdu6CeTxVfRRWREW3Fy1f5vobRDiBb/q+w==}\n+  motion-dom@12.16.0:\n+    resolution: {integrity: sha512-Z2nGwWrrdH4egLEtgYMCEN4V2qQt1qxlKy/uV7w691ztyA41Q5Rbn0KNGbsNVDZr9E8PD2IOQ3hSccRnB6xWzw==}\n \n-  motion-utils@12.18.1:\n-    resolution: {integrity: sha512-az26YDU4WoDP0ueAkUtABLk2BIxe28d8NH1qWT8jPGhPyf44XTdDUh8pDk9OPphaSrR9McgpcJlgwSOIw/sfkA==}\n+  motion-utils@12.12.1:\n+    resolution: {integrity: sha512-f9qiqUHm7hWSLlNW8gS9pisnsN7CRFRD58vNjptKdsqFLpkVnX00TNeD6Q0d27V9KzT7ySFyK1TZ/DShfVOv6w==}\n \n   ms@2.1.3:\n     resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n@@ -6275,21 +6277,11 @@ packages:\n     engines: {node: '>=18'}\n     hasBin: true\n \n-  playwright-core@1.53.0:\n-    resolution: {integrity: sha512-mGLg8m0pm4+mmtB7M89Xw/GSqoNC+twivl8ITteqvAndachozYe2ZA7srU6uleV1vEdAHYqjq+SV8SNxRRFYBw==}\n-    engines: {node: '>=18'}\n-    hasBin: true\n-\n   playwright@1.52.0:\n     resolution: {integrity: sha512-JAwMNMBlxJ2oD1kce4KPtMkDeKGHQstdpFPcPH3maElAXon/QZeTvtsfXmTMRyO9TslfoYOXkSsvao2nE1ilTw==}\n     engines: {node: '>=18'}\n     hasBin: true\n \n-  playwright@1.53.0:\n-    resolution: {integrity: sha512-ghGNnIEYZC4E+YtclRn4/p6oYbdPiASELBIYkBXfaTVKreQUYbMUYQDwS12a8F0/HtIjr/CkGjtwABeFPGcS4Q==}\n-    engines: {node: '>=18'}\n-    hasBin: true\n-\n   pnp-webpack-plugin@1.7.0:\n     resolution: {integrity: sha512-2Rb3vm+EXble/sMXNSu6eoBx8e79gKqhNq9F5ZWW6ERNCTE/Q0wQNne5541tE5vKjfM8hpNCYL+LGc1YTfI0dg==}\n     engines: {node: '>=6'}\n@@ -6483,6 +6475,11 @@ packages:\n     resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}\n     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}\n \n+  prism-react-renderer@2.4.1:\n+    resolution: {integrity: sha512-ey8Ls/+Di31eqzUxC46h8MksNuGx/n0AAC8uKpwFau4RPDYLuE3EXTp8N8G2vX2N7UC/+IXeNUnlWBGGcAG+Ig==}\n+    peerDependencies:\n+      react: '>=16.0.0'\n+\n   process-nextick-args@2.0.1:\n     resolution: {integrity: sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==}\n \n@@ -6566,8 +6563,8 @@ packages:\n     peerDependencies:\n       react: '>=16.8.0'\n \n-  react-docgen-typescript@2.4.0:\n-    resolution: {integrity: sha512-ZtAp5XTO5HRzQctjPU0ybY0RRCQO19X/8fxn3w7y2VVTUbGHDKULPTL4ky3vB05euSgG5NpALhEhDPvQ56wvXg==}\n+  react-docgen-typescript@2.2.2:\n+    resolution: {integrity: sha512-tvg2ZtOpOi6QDwsb3GZhOjDkkX0h8Z2gipvTg6OVMUyoYoURhEiRNePT8NZItTVCDh39JJHnLdfCOkzoLbFnTg==}\n     peerDependencies:\n       typescript: '>= 4.3.x'\n \n@@ -6668,6 +6665,11 @@ packages:\n       '@types/react':\n         optional: true\n \n+  react-timeago@8.2.0:\n+    resolution: {integrity: sha512-RWDlG3Jj+iwv+yNEDweA/Qk1mxE8i/Oc4oW8Irp29ZfBp+eNpqqYPMLPYQJyfRMJcGB8CmWkEGMYhB4fW8eZlQ==}\n+    peerDependencies:\n+      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n+\n   react-transition-group@4.4.5:\n     resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}\n     peerDependencies:\n@@ -7037,8 +7039,8 @@ packages:\n     resolution: {integrity: sha512-WjlahMgHmCJpqzU8bIBy4qtsZdU9lRlcZE3Lvyej6t4tuOuv1vk57OW3MBrj6hXBFx/nNoC9MPMTcr5YA7NQbg==}\n     engines: {node: '>=6'}\n \n-  statuses@2.0.2:\n-    resolution: {integrity: sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==}\n+  statuses@2.0.1:\n+    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}\n     engines: {node: '>= 0.8'}\n \n   stop-iteration-iterator@1.1.0:\n@@ -7153,14 +7155,14 @@ packages:\n     peerDependencies:\n       webpack: ^5.0.0\n \n-  style-to-js@1.1.17:\n-    resolution: {integrity: sha512-xQcBGDxJb6jjFCTzvQtfiPn6YvvP2O8U1MDIPNfJQlWMYfktPy+iGsHE7cssjs7y84d9fQaK4UF3RIJaAHSoYA==}\n+  style-to-js@1.1.16:\n+    resolution: {integrity: sha512-/Q6ld50hKYPH3d/r6nr117TZkHR0w0kGGIVfpG9N6D8NymRPM9RqCUv4pRpJ62E5DqOYx2AFpbZMyCPnjQCnOw==}\n \n-  style-to-object@1.0.9:\n-    resolution: {integrity: sha512-G4qppLgKu/k6FwRpHiGiKPaPTFcG3g4wNVX/Qsfu+RqQM30E7Tyu/TEgxcL9PNLF5pdRLwQdE3YKKf+KF2Dzlw==}\n+  style-to-object@1.0.8:\n+    resolution: {integrity: sha512-xT47I/Eo0rwJmaXC4oilDGDWLohVhR6o/xAQcPQN8q6QBuZVL8qMYL85kLmST5cPjAorwvqIA4qXTRQoYHaL6g==}\n \n-  styled-components@6.1.19:\n-    resolution: {integrity: sha512-1v/e3Dl1BknC37cXMhwGomhO8AkYmN41CqyX9xhUDxry1ns3BFQy2lLDRQXJRdVVWB9OHemv/53xaStimvWyuA==}\n+  styled-components@6.1.18:\n+    resolution: {integrity: sha512-Mvf3gJFzZCkhjY2Y/Fx9z1m3dxbza0uI9H1CbNZm/jSHCojzJhQ0R7bByrlFJINnMzz/gPulpoFFGymNwrsMcw==}\n     engines: {node: '>= 16'}\n     peerDependencies:\n       react: '>= 16.8.0'\n@@ -7219,6 +7221,17 @@ packages:\n   tailwind-merge@2.6.0:\n     resolution: {integrity: sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==}\n \n+  tailwind-scrollbar-hide@2.0.0:\n+    resolution: {integrity: sha512-lqiIutHliEiODwBRHy4G2+Tcayo2U7+3+4frBmoMETD72qtah+XhOk5XcPzC1nJvXhXUdfl2ajlMhUc2qC6CIg==}\n+    peerDependencies:\n+      tailwindcss: '>=3.0.0 || >= 4.0.0 || >= 4.0.0-beta.8 || >= 4.0.0-alpha.20'\n+\n+  tailwind-scrollbar@4.0.2:\n+    resolution: {integrity: sha512-wAQiIxAPqk0MNTPptVe/xoyWi27y+NRGnTwvn4PQnbvB9kp8QUBiGl/wsfoVBHnQxTmhXJSNt9NHTmcz9EivFA==}\n+    engines: {node: '>=12.13.0'}\n+    peerDependencies:\n+      tailwindcss: 4.x\n+\n   tailwindcss-animate@1.0.7:\n     resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n     peerDependencies:\n@@ -7249,8 +7262,8 @@ packages:\n       uglify-js:\n         optional: true\n \n-  terser@5.42.0:\n-    resolution: {integrity: sha512-UYCvU9YQW2f/Vwl+P0GfhxJxbUGLwd+5QrrGgLajzWAtC/23AX0vcise32kkP7Eu0Wu9VlzzHAXkLObgjQfFlQ==}\n+  terser@5.41.0:\n+    resolution: {integrity: sha512-H406eLPXpZbAX14+B8psIuvIr8+3c+2hkuYzpMkoE0ij+NdsVATbA78vb8neA/eqrj7rywa2pIkdmWRsXW6wmw==}\n     engines: {node: '>=10'}\n     hasBin: true\n \n@@ -7471,8 +7484,8 @@ packages:\n     resolution: {integrity: sha512-4/u/j4FrCKdi17jaxuJA0jClGxB1AvU2hw/IuayPc4ay1XGaJs/rbb4v5WKwAjNifjmXK9PIFyuPiaK8azyR9w==}\n     engines: {node: '>=14.0.0'}\n \n-  unrs-resolver@1.9.0:\n-    resolution: {integrity: sha512-wqaRu4UnzBD2ABTC1kLfBjAqIDZ5YUTr/MLGa7By47JV1bJDSW7jq/ZSLigB7enLe7ubNaJhtnBXgrc/50cEhg==}\n+  unrs-resolver@1.7.10:\n+    resolution: {integrity: sha512-CJEMJcz6vuwRK6xxWc+uf8AGi0OyfoVtHs5mExtNecS0HZq3a3Br1JC/InwwTn6uy+qkAdAdK+nJUYO9FPtgZw==}\n \n   update-browserslist-db@1.1.3:\n     resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}\n@@ -8503,7 +8516,7 @@ snapshots:\n       babel-plugin-polyfill-corejs2: 0.4.13(@babel/core@7.27.4)\n       babel-plugin-polyfill-corejs3: 0.11.1(@babel/core@7.27.4)\n       babel-plugin-polyfill-regenerator: 0.6.4(@babel/core@7.27.4)\n-      core-js-compat: 3.43.0\n+      core-js-compat: 3.42.0\n       semver: 6.3.1\n     transitivePeerDependencies:\n       - supports-color\n@@ -8571,7 +8584,7 @@ snapshots:\n \n   '@bundled-es-modules/statuses@1.0.1':\n     dependencies:\n-      statuses: 2.0.2\n+      statuses: 2.0.1\n \n   '@bundled-es-modules/tough-cookie@0.1.6':\n     dependencies:\n@@ -8617,79 +8630,79 @@ snapshots:\n \n   '@emotion/unitless@0.8.1': {}\n \n-  '@esbuild/aix-ppc64@0.25.5':\n+  '@esbuild/aix-ppc64@0.24.2':\n     optional: true\n \n-  '@esbuild/android-arm64@0.25.5':\n+  '@esbuild/android-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/android-arm@0.25.5':\n+  '@esbuild/android-arm@0.24.2':\n     optional: true\n \n-  '@esbuild/android-x64@0.25.5':\n+  '@esbuild/android-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/darwin-arm64@0.25.5':\n+  '@esbuild/darwin-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/darwin-x64@0.25.5':\n+  '@esbuild/darwin-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/freebsd-arm64@0.25.5':\n+  '@esbuild/freebsd-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/freebsd-x64@0.25.5':\n+  '@esbuild/freebsd-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-arm64@0.25.5':\n+  '@esbuild/linux-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-arm@0.25.5':\n+  '@esbuild/linux-arm@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-ia32@0.25.5':\n+  '@esbuild/linux-ia32@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-loong64@0.25.5':\n+  '@esbuild/linux-loong64@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-mips64el@0.25.5':\n+  '@esbuild/linux-mips64el@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-ppc64@0.25.5':\n+  '@esbuild/linux-ppc64@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-riscv64@0.25.5':\n+  '@esbuild/linux-riscv64@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-s390x@0.25.5':\n+  '@esbuild/linux-s390x@0.24.2':\n     optional: true\n \n-  '@esbuild/linux-x64@0.25.5':\n+  '@esbuild/linux-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/netbsd-arm64@0.25.5':\n+  '@esbuild/netbsd-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/netbsd-x64@0.25.5':\n+  '@esbuild/netbsd-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/openbsd-arm64@0.25.5':\n+  '@esbuild/openbsd-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/openbsd-x64@0.25.5':\n+  '@esbuild/openbsd-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/sunos-x64@0.25.5':\n+  '@esbuild/sunos-x64@0.24.2':\n     optional: true\n \n-  '@esbuild/win32-arm64@0.25.5':\n+  '@esbuild/win32-arm64@0.24.2':\n     optional: true\n \n-  '@esbuild/win32-ia32@0.25.5':\n+  '@esbuild/win32-ia32@0.24.2':\n     optional: true\n \n-  '@esbuild/win32-x64@0.25.5':\n+  '@esbuild/win32-x64@0.24.2':\n     optional: true\n \n   '@eslint-community/eslint-utils@4.7.0(eslint@8.57.1)':\n@@ -9161,7 +9174,7 @@ snapshots:\n       outvariant: 1.4.3\n       strict-event-emitter: 0.5.1\n \n-  '@napi-rs/wasm-runtime@0.2.11':\n+  '@napi-rs/wasm-runtime@0.2.10':\n     dependencies:\n       '@emnapi/core': 1.4.3\n       '@emnapi/runtime': 1.4.3\n@@ -9481,17 +9494,17 @@ snapshots:\n     dependencies:\n       playwright: 1.52.0\n \n-  '@pmmmwh/react-refresh-webpack-plugin@0.5.16(react-refresh@0.14.2)(type-fest@4.41.0)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))':\n+  '@pmmmwh/react-refresh-webpack-plugin@0.5.16(react-refresh@0.14.2)(type-fest@4.41.0)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))':\n     dependencies:\n       ansi-html: 0.0.9\n-      core-js-pure: 3.43.0\n+      core-js-pure: 3.42.0\n       error-stack-parser: 2.1.4\n       html-entities: 2.6.0\n       loader-utils: 2.0.4\n       react-refresh: 0.14.2\n       schema-utils: 4.3.2\n       source-map: 0.7.4\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     optionalDependencies:\n       type-fest: 4.41.0\n       webpack-hot-middleware: 2.26.1\n@@ -10047,7 +10060,7 @@ snapshots:\n       '@rollup/pluginutils': 5.1.4(rollup@4.35.0)\n       commondir: 1.0.1\n       estree-walker: 2.0.2\n-      fdir: 6.4.6(picomatch@4.0.2)\n+      fdir: 6.4.5(picomatch@4.0.2)\n       is-reference: 1.2.1\n       magic-string: 0.30.17\n       picomatch: 4.0.2\n@@ -10056,7 +10069,7 @@ snapshots:\n \n   '@rollup/pluginutils@5.1.4(rollup@4.35.0)':\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n       estree-walker: 2.0.2\n       picomatch: 4.0.2\n     optionalDependencies:\n@@ -10209,7 +10222,7 @@ snapshots:\n \n   '@sentry/core@9.27.0': {}\n \n-  '@sentry/nextjs@9.27.0(@opentelemetry/context-async-hooks@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/core@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/instrumentation@0.57.2(@opentelemetry/api@1.9.0))(@opentelemetry/sdk-trace-base@1.30.1(@opentelemetry/api@1.9.0))(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))':\n+  '@sentry/nextjs@9.27.0(@opentelemetry/context-async-hooks@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/core@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/instrumentation@0.57.2(@opentelemetry/api@1.9.0))(@opentelemetry/sdk-trace-base@1.30.1(@opentelemetry/api@1.9.0))(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))':\n     dependencies:\n       '@opentelemetry/api': 1.9.0\n       '@opentelemetry/semantic-conventions': 1.34.0\n@@ -10220,7 +10233,7 @@ snapshots:\n       '@sentry/opentelemetry': 9.27.0(@opentelemetry/api@1.9.0)(@opentelemetry/context-async-hooks@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/core@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/instrumentation@0.57.2(@opentelemetry/api@1.9.0))(@opentelemetry/sdk-trace-base@1.30.1(@opentelemetry/api@1.9.0))(@opentelemetry/semantic-conventions@1.34.0)\n       '@sentry/react': 9.27.0(react@18.3.1)\n       '@sentry/vercel-edge': 9.27.0\n-      '@sentry/webpack-plugin': 3.5.0(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      '@sentry/webpack-plugin': 3.5.0(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       chalk: 3.0.0\n       next: 15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n       resolve: 1.22.8\n@@ -10297,12 +10310,12 @@ snapshots:\n       '@opentelemetry/api': 1.9.0\n       '@sentry/core': 9.27.0\n \n-  '@sentry/webpack-plugin@3.5.0(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))':\n+  '@sentry/webpack-plugin@3.5.0(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))':\n     dependencies:\n       '@sentry/bundler-plugin-core': 3.5.0\n       unplugin: 1.0.1\n       uuid: 9.0.1\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     transitivePeerDependencies:\n       - encoding\n       - supports-color\n@@ -10443,7 +10456,7 @@ snapshots:\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n \n-  '@storybook/builder-webpack5@8.6.14(@swc/core@1.12.1)(esbuild@0.25.5)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)':\n+  '@storybook/builder-webpack5@8.6.14(@swc/core@1.11.31)(esbuild@0.24.2)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)':\n     dependencies:\n       '@storybook/core-webpack': 8.6.14(storybook@8.6.14(prettier@3.5.3))\n       '@types/semver': 7.7.0\n@@ -10451,23 +10464,23 @@ snapshots:\n       case-sensitive-paths-webpack-plugin: 2.4.0\n       cjs-module-lexer: 1.4.3\n       constants-browserify: 1.0.0\n-      css-loader: 6.11.0(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      css-loader: 6.11.0(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       es-module-lexer: 1.7.0\n-      fork-ts-checker-webpack-plugin: 8.0.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n-      html-webpack-plugin: 5.6.3(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      fork-ts-checker-webpack-plugin: 8.0.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n+      html-webpack-plugin: 5.6.3(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       magic-string: 0.30.17\n       path-browserify: 1.0.1\n       process: 0.11.10\n       semver: 7.7.2\n       storybook: 8.6.14(prettier@3.5.3)\n-      style-loader: 3.3.4(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n-      terser-webpack-plugin: 5.3.14(@swc/core@1.12.1)(esbuild@0.25.5)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      style-loader: 3.3.4(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n+      terser-webpack-plugin: 5.3.14(@swc/core@1.11.31)(esbuild@0.24.2)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       ts-dedent: 2.2.0\n       url: 0.11.4\n       util: 0.12.5\n       util-deprecate: 1.0.2\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n-      webpack-dev-middleware: 6.1.3(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n+      webpack-dev-middleware: 6.1.3(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       webpack-hot-middleware: 2.26.1\n       webpack-virtual-modules: 0.6.2\n     optionalDependencies:\n@@ -10493,8 +10506,8 @@ snapshots:\n       '@storybook/theming': 8.6.14(storybook@8.6.14(prettier@3.5.3))\n       better-opn: 3.0.2\n       browser-assert: 1.2.1\n-      esbuild: 0.25.5\n-      esbuild-register: 3.6.0(esbuild@0.25.5)\n+      esbuild: 0.24.2\n+      esbuild-register: 3.6.0(esbuild@0.24.2)\n       jsdoc-type-pratt-parser: 4.1.0\n       process: 0.11.10\n       recast: 0.23.11\n@@ -10535,7 +10548,7 @@ snapshots:\n     dependencies:\n       storybook: 8.6.14(prettier@3.5.3)\n \n-  '@storybook/nextjs@8.6.14(@swc/core@1.12.1)(esbuild@0.25.5)(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(type-fest@4.41.0)(typescript@5.8.3)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))':\n+  '@storybook/nextjs@8.6.14(@swc/core@1.11.31)(esbuild@0.24.2)(next@15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(type-fest@4.41.0)(typescript@5.8.3)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))':\n     dependencies:\n       '@babel/core': 7.27.4\n       '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.27.4)\n@@ -10550,30 +10563,30 @@ snapshots:\n       '@babel/preset-react': 7.27.1(@babel/core@7.27.4)\n       '@babel/preset-typescript': 7.27.1(@babel/core@7.27.4)\n       '@babel/runtime': 7.27.6\n-      '@pmmmwh/react-refresh-webpack-plugin': 0.5.16(react-refresh@0.14.2)(type-fest@4.41.0)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n-      '@storybook/builder-webpack5': 8.6.14(@swc/core@1.12.1)(esbuild@0.25.5)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n-      '@storybook/preset-react-webpack': 8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(@swc/core@1.12.1)(esbuild@0.25.5)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n+      '@pmmmwh/react-refresh-webpack-plugin': 0.5.16(react-refresh@0.14.2)(type-fest@4.41.0)(webpack-hot-middleware@2.26.1)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n+      '@storybook/builder-webpack5': 8.6.14(@swc/core@1.11.31)(esbuild@0.24.2)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n+      '@storybook/preset-react-webpack': 8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(@swc/core@1.11.31)(esbuild@0.24.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n       '@storybook/react': 8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n       '@storybook/test': 8.6.14(storybook@8.6.14(prettier@3.5.3))\n       '@types/semver': 7.7.0\n-      babel-loader: 9.2.1(@babel/core@7.27.4)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n-      css-loader: 6.11.0(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      babel-loader: 9.2.1(@babel/core@7.27.4)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n+      css-loader: 6.11.0(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       find-up: 5.0.0\n       image-size: 1.2.1\n       loader-utils: 3.3.1\n       next: 15.3.3(@babel/core@7.27.4)(@opentelemetry/api@1.9.0)(@playwright/test@1.52.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n-      node-polyfill-webpack-plugin: 2.0.1(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      node-polyfill-webpack-plugin: 2.0.1(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       pnp-webpack-plugin: 1.7.0(typescript@5.8.3)\n       postcss: 8.5.4\n-      postcss-loader: 8.1.1(postcss@8.5.4)(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      postcss-loader: 8.1.1(postcss@8.5.4)(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n       react-refresh: 0.14.2\n       resolve-url-loader: 5.0.0\n-      sass-loader: 14.2.1(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      sass-loader: 14.2.1(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       semver: 7.7.2\n       storybook: 8.6.14(prettier@3.5.3)\n-      style-loader: 3.3.4(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      style-loader: 3.3.4(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       styled-jsx: 5.1.7(@babel/core@7.27.4)(react@18.3.1)\n       ts-dedent: 2.2.0\n       tsconfig-paths: 4.2.0\n@@ -10581,7 +10594,7 @@ snapshots:\n     optionalDependencies:\n       sharp: 0.33.5\n       typescript: 5.8.3\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     transitivePeerDependencies:\n       - '@rspack/core'\n       - '@swc/core'\n@@ -10600,11 +10613,11 @@ snapshots:\n       - webpack-hot-middleware\n       - webpack-plugin-serve\n \n-  '@storybook/preset-react-webpack@8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(@swc/core@1.12.1)(esbuild@0.25.5)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)':\n+  '@storybook/preset-react-webpack@8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(@swc/core@1.11.31)(esbuild@0.24.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)':\n     dependencies:\n       '@storybook/core-webpack': 8.6.14(storybook@8.6.14(prettier@3.5.3))\n       '@storybook/react': 8.6.14(@storybook/test@8.6.14(storybook@8.6.14(prettier@3.5.3)))(react-dom@18.3.1(react@18.3.1))(react@18.3.1)(storybook@8.6.14(prettier@3.5.3))(typescript@5.8.3)\n-      '@storybook/react-docgen-typescript-plugin': 1.0.6--canary.9.0c3f3b7.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      '@storybook/react-docgen-typescript-plugin': 1.0.6--canary.9.0c3f3b7.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       '@types/semver': 7.7.0\n       find-up: 5.0.0\n       magic-string: 0.30.17\n@@ -10615,7 +10628,7 @@ snapshots:\n       semver: 7.7.2\n       storybook: 8.6.14(prettier@3.5.3)\n       tsconfig-paths: 4.2.0\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     optionalDependencies:\n       typescript: 5.8.3\n     transitivePeerDependencies:\n@@ -10630,17 +10643,17 @@ snapshots:\n     dependencies:\n       storybook: 8.6.14(prettier@3.5.3)\n \n-  '@storybook/react-docgen-typescript-plugin@1.0.6--canary.9.0c3f3b7.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))':\n+  '@storybook/react-docgen-typescript-plugin@1.0.6--canary.9.0c3f3b7.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))':\n     dependencies:\n       debug: 4.4.1\n       endent: 2.1.0\n       find-cache-dir: 3.3.2\n       flat-cache: 3.2.0\n       micromatch: 4.0.8\n-      react-docgen-typescript: 2.4.0(typescript@5.8.3)\n+      react-docgen-typescript: 2.2.2(typescript@5.8.3)\n       tslib: 2.8.1\n       typescript: 5.8.3\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     transitivePeerDependencies:\n       - supports-color\n \n@@ -10673,8 +10686,8 @@ snapshots:\n       '@babel/types': 7.27.6\n       '@jest/types': 29.6.3\n       '@storybook/csf': 0.1.13\n-      '@swc/core': 1.12.1\n-      '@swc/jest': 0.2.38(@swc/core@1.12.1)\n+      '@swc/core': 1.11.31\n+      '@swc/jest': 0.2.38(@swc/core@1.11.31)\n       expect-playwright: 0.8.0\n       jest: 29.7.0(@types/node@22.15.30)\n       jest-circus: 29.7.0\n@@ -10685,7 +10698,7 @@ snapshots:\n       jest-serializer-html: 7.1.0\n       jest-watch-typeahead: 2.2.2(jest@29.7.0(@types/node@22.15.30))\n       nyc: 15.1.0\n-      playwright: 1.53.0\n+      playwright: 1.52.0\n       storybook: 8.6.14(prettier@3.5.3)\n     transitivePeerDependencies:\n       - '@swc/helpers'\n@@ -10758,51 +10771,51 @@ snapshots:\n       - bufferutil\n       - utf-8-validate\n \n-  '@swc/core-darwin-arm64@1.12.1':\n+  '@swc/core-darwin-arm64@1.11.31':\n     optional: true\n \n-  '@swc/core-darwin-x64@1.12.1':\n+  '@swc/core-darwin-x64@1.11.31':\n     optional: true\n \n-  '@swc/core-linux-arm-gnueabihf@1.12.1':\n+  '@swc/core-linux-arm-gnueabihf@1.11.31':\n     optional: true\n \n-  '@swc/core-linux-arm64-gnu@1.12.1':\n+  '@swc/core-linux-arm64-gnu@1.11.31':\n     optional: true\n \n-  '@swc/core-linux-arm64-musl@1.12.1':\n+  '@swc/core-linux-arm64-musl@1.11.31':\n     optional: true\n \n-  '@swc/core-linux-x64-gnu@1.12.1':\n+  '@swc/core-linux-x64-gnu@1.11.31':\n     optional: true\n \n-  '@swc/core-linux-x64-musl@1.12.1':\n+  '@swc/core-linux-x64-musl@1.11.31':\n     optional: true\n \n-  '@swc/core-win32-arm64-msvc@1.12.1':\n+  '@swc/core-win32-arm64-msvc@1.11.31':\n     optional: true\n \n-  '@swc/core-win32-ia32-msvc@1.12.1':\n+  '@swc/core-win32-ia32-msvc@1.11.31':\n     optional: true\n \n-  '@swc/core-win32-x64-msvc@1.12.1':\n+  '@swc/core-win32-x64-msvc@1.11.31':\n     optional: true\n \n-  '@swc/core@1.12.1':\n+  '@swc/core@1.11.31':\n     dependencies:\n       '@swc/counter': 0.1.3\n-      '@swc/types': 0.1.23\n+      '@swc/types': 0.1.21\n     optionalDependencies:\n-      '@swc/core-darwin-arm64': 1.12.1\n-      '@swc/core-darwin-x64': 1.12.1\n-      '@swc/core-linux-arm-gnueabihf': 1.12.1\n-      '@swc/core-linux-arm64-gnu': 1.12.1\n-      '@swc/core-linux-arm64-musl': 1.12.1\n-      '@swc/core-linux-x64-gnu': 1.12.1\n-      '@swc/core-linux-x64-musl': 1.12.1\n-      '@swc/core-win32-arm64-msvc': 1.12.1\n-      '@swc/core-win32-ia32-msvc': 1.12.1\n-      '@swc/core-win32-x64-msvc': 1.12.1\n+      '@swc/core-darwin-arm64': 1.11.31\n+      '@swc/core-darwin-x64': 1.11.31\n+      '@swc/core-linux-arm-gnueabihf': 1.11.31\n+      '@swc/core-linux-arm64-gnu': 1.11.31\n+      '@swc/core-linux-arm64-musl': 1.11.31\n+      '@swc/core-linux-x64-gnu': 1.11.31\n+      '@swc/core-linux-x64-musl': 1.11.31\n+      '@swc/core-win32-arm64-msvc': 1.11.31\n+      '@swc/core-win32-ia32-msvc': 1.11.31\n+      '@swc/core-win32-x64-msvc': 1.11.31\n \n   '@swc/counter@0.1.3': {}\n \n@@ -10810,14 +10823,14 @@ snapshots:\n     dependencies:\n       tslib: 2.8.1\n \n-  '@swc/jest@0.2.38(@swc/core@1.12.1)':\n+  '@swc/jest@0.2.38(@swc/core@1.11.31)':\n     dependencies:\n       '@jest/create-cache-key-function': 29.7.0\n-      '@swc/core': 1.12.1\n+      '@swc/core': 1.11.31\n       '@swc/counter': 0.1.3\n       jsonc-parser: 3.3.1\n \n-  '@swc/types@0.1.23':\n+  '@swc/types@0.1.21':\n     dependencies:\n       '@swc/counter': 0.1.3\n \n@@ -10938,20 +10951,20 @@ snapshots:\n   '@types/eslint-scope@3.7.7':\n     dependencies:\n       '@types/eslint': 9.6.1\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n \n   '@types/eslint@9.6.1':\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n       '@types/json-schema': 7.0.15\n \n   '@types/estree-jsx@1.0.5':\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n \n   '@types/estree@1.0.6': {}\n \n-  '@types/estree@1.0.8': {}\n+  '@types/estree@1.0.7': {}\n \n   '@types/graceful-fs@4.1.9':\n     dependencies:\n@@ -11015,7 +11028,9 @@ snapshots:\n \n   '@types/phoenix@1.6.6': {}\n \n-  '@types/prop-types@15.7.15': {}\n+  '@types/prismjs@1.26.5': {}\n+\n+  '@types/prop-types@15.7.14': {}\n \n   '@types/react-dom@18.3.5(@types/react@18.3.17)':\n     dependencies:\n@@ -11027,7 +11042,7 @@ snapshots:\n \n   '@types/react@18.3.17':\n     dependencies:\n-      '@types/prop-types': 15.7.15\n+      '@types/prop-types': 15.7.14\n       csstype: 3.1.3\n \n   '@types/resolve@1.20.6': {}\n@@ -11038,7 +11053,7 @@ snapshots:\n \n   '@types/stack-utils@2.0.3': {}\n \n-  '@types/statuses@2.0.6': {}\n+  '@types/statuses@2.0.5': {}\n \n   '@types/stylis@4.2.5': {}\n \n@@ -11068,14 +11083,14 @@ snapshots:\n     dependencies:\n       '@types/yargs-parser': 21.0.3\n \n-  '@typescript-eslint/eslint-plugin@8.34.1(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint@8.57.1)(typescript@5.8.3)':\n+  '@typescript-eslint/eslint-plugin@8.33.1(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint@8.57.1)(typescript@5.8.3)':\n     dependencies:\n       '@eslint-community/regexpp': 4.12.1\n-      '@typescript-eslint/parser': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n-      '@typescript-eslint/scope-manager': 8.34.1\n-      '@typescript-eslint/type-utils': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n-      '@typescript-eslint/utils': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n-      '@typescript-eslint/visitor-keys': 8.34.1\n+      '@typescript-eslint/parser': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/scope-manager': 8.33.1\n+      '@typescript-eslint/type-utils': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/utils': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/visitor-keys': 8.33.1\n       eslint: 8.57.1\n       graphemer: 1.4.0\n       ignore: 7.0.5\n@@ -11085,40 +11100,40 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3)':\n+  '@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3)':\n     dependencies:\n-      '@typescript-eslint/scope-manager': 8.34.1\n-      '@typescript-eslint/types': 8.34.1\n-      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)\n-      '@typescript-eslint/visitor-keys': 8.34.1\n+      '@typescript-eslint/scope-manager': 8.33.1\n+      '@typescript-eslint/types': 8.33.1\n+      '@typescript-eslint/typescript-estree': 8.33.1(typescript@5.8.3)\n+      '@typescript-eslint/visitor-keys': 8.33.1\n       debug: 4.4.1\n       eslint: 8.57.1\n       typescript: 5.8.3\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/project-service@8.34.1(typescript@5.8.3)':\n+  '@typescript-eslint/project-service@8.33.1(typescript@5.8.3)':\n     dependencies:\n-      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)\n-      '@typescript-eslint/types': 8.34.1\n+      '@typescript-eslint/tsconfig-utils': 8.33.1(typescript@5.8.3)\n+      '@typescript-eslint/types': 8.33.1\n       debug: 4.4.1\n       typescript: 5.8.3\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/scope-manager@8.34.1':\n+  '@typescript-eslint/scope-manager@8.33.1':\n     dependencies:\n-      '@typescript-eslint/types': 8.34.1\n-      '@typescript-eslint/visitor-keys': 8.34.1\n+      '@typescript-eslint/types': 8.33.1\n+      '@typescript-eslint/visitor-keys': 8.33.1\n \n-  '@typescript-eslint/tsconfig-utils@8.34.1(typescript@5.8.3)':\n+  '@typescript-eslint/tsconfig-utils@8.33.1(typescript@5.8.3)':\n     dependencies:\n       typescript: 5.8.3\n \n-  '@typescript-eslint/type-utils@8.34.1(eslint@8.57.1)(typescript@5.8.3)':\n+  '@typescript-eslint/type-utils@8.33.1(eslint@8.57.1)(typescript@5.8.3)':\n     dependencies:\n-      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)\n-      '@typescript-eslint/utils': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/typescript-estree': 8.33.1(typescript@5.8.3)\n+      '@typescript-eslint/utils': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n       debug: 4.4.1\n       eslint: 8.57.1\n       ts-api-utils: 2.1.0(typescript@5.8.3)\n@@ -11126,14 +11141,14 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/types@8.34.1': {}\n+  '@typescript-eslint/types@8.33.1': {}\n \n-  '@typescript-eslint/typescript-estree@8.34.1(typescript@5.8.3)':\n+  '@typescript-eslint/typescript-estree@8.33.1(typescript@5.8.3)':\n     dependencies:\n-      '@typescript-eslint/project-service': 8.34.1(typescript@5.8.3)\n-      '@typescript-eslint/tsconfig-utils': 8.34.1(typescript@5.8.3)\n-      '@typescript-eslint/types': 8.34.1\n-      '@typescript-eslint/visitor-keys': 8.34.1\n+      '@typescript-eslint/project-service': 8.33.1(typescript@5.8.3)\n+      '@typescript-eslint/tsconfig-utils': 8.33.1(typescript@5.8.3)\n+      '@typescript-eslint/types': 8.33.1\n+      '@typescript-eslint/visitor-keys': 8.33.1\n       debug: 4.4.1\n       fast-glob: 3.3.3\n       is-glob: 4.0.3\n@@ -11144,81 +11159,75 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/utils@8.34.1(eslint@8.57.1)(typescript@5.8.3)':\n+  '@typescript-eslint/utils@8.33.1(eslint@8.57.1)(typescript@5.8.3)':\n     dependencies:\n       '@eslint-community/eslint-utils': 4.7.0(eslint@8.57.1)\n-      '@typescript-eslint/scope-manager': 8.34.1\n-      '@typescript-eslint/types': 8.34.1\n-      '@typescript-eslint/typescript-estree': 8.34.1(typescript@5.8.3)\n+      '@typescript-eslint/scope-manager': 8.33.1\n+      '@typescript-eslint/types': 8.33.1\n+      '@typescript-eslint/typescript-estree': 8.33.1(typescript@5.8.3)\n       eslint: 8.57.1\n       typescript: 5.8.3\n     transitivePeerDependencies:\n       - supports-color\n \n-  '@typescript-eslint/visitor-keys@8.34.1':\n+  '@typescript-eslint/visitor-keys@8.33.1':\n     dependencies:\n-      '@typescript-eslint/types': 8.34.1\n-      eslint-visitor-keys: 4.2.1\n+      '@typescript-eslint/types': 8.33.1\n+      eslint-visitor-keys: 4.2.0\n \n   '@ungap/structured-clone@1.3.0': {}\n \n-  '@unrs/resolver-binding-android-arm-eabi@1.9.0':\n-    optional: true\n-\n-  '@unrs/resolver-binding-android-arm64@1.9.0':\n+  '@unrs/resolver-binding-darwin-arm64@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-darwin-arm64@1.9.0':\n+  '@unrs/resolver-binding-darwin-x64@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-darwin-x64@1.9.0':\n+  '@unrs/resolver-binding-freebsd-x64@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-freebsd-x64@1.9.0':\n+  '@unrs/resolver-binding-linux-arm-gnueabihf@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-arm-gnueabihf@1.9.0':\n+  '@unrs/resolver-binding-linux-arm-musleabihf@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-arm-musleabihf@1.9.0':\n+  '@unrs/resolver-binding-linux-arm64-gnu@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-arm64-gnu@1.9.0':\n+  '@unrs/resolver-binding-linux-arm64-musl@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-arm64-musl@1.9.0':\n+  '@unrs/resolver-binding-linux-ppc64-gnu@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-ppc64-gnu@1.9.0':\n+  '@unrs/resolver-binding-linux-riscv64-gnu@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-riscv64-gnu@1.9.0':\n+  '@unrs/resolver-binding-linux-riscv64-musl@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-riscv64-musl@1.9.0':\n+  '@unrs/resolver-binding-linux-s390x-gnu@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-s390x-gnu@1.9.0':\n+  '@unrs/resolver-binding-linux-x64-gnu@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-x64-gnu@1.9.0':\n+  '@unrs/resolver-binding-linux-x64-musl@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-linux-x64-musl@1.9.0':\n-    optional: true\n-\n-  '@unrs/resolver-binding-wasm32-wasi@1.9.0':\n+  '@unrs/resolver-binding-wasm32-wasi@1.7.10':\n     dependencies:\n-      '@napi-rs/wasm-runtime': 0.2.11\n+      '@napi-rs/wasm-runtime': 0.2.10\n     optional: true\n \n-  '@unrs/resolver-binding-win32-arm64-msvc@1.9.0':\n+  '@unrs/resolver-binding-win32-arm64-msvc@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-win32-ia32-msvc@1.9.0':\n+  '@unrs/resolver-binding-win32-ia32-msvc@1.7.10':\n     optional: true\n \n-  '@unrs/resolver-binding-win32-x64-msvc@1.9.0':\n+  '@unrs/resolver-binding-win32-x64-msvc@1.7.10':\n     optional: true\n \n   '@vitest/expect@2.0.5':\n@@ -11244,13 +11253,13 @@ snapshots:\n     dependencies:\n       '@vitest/pretty-format': 2.0.5\n       estree-walker: 3.0.3\n-      loupe: 3.1.4\n+      loupe: 3.1.3\n       tinyrainbow: 1.2.0\n \n   '@vitest/utils@2.1.9':\n     dependencies:\n       '@vitest/pretty-format': 2.1.9\n-      loupe: 3.1.4\n+      loupe: 3.1.3\n       tinyrainbow: 1.2.0\n \n   '@webassemblyjs/ast@1.14.1':\n@@ -11358,15 +11367,15 @@ snapshots:\n     dependencies:\n       event-target-shim: 5.0.1\n \n-  acorn-import-attributes@1.9.5(acorn@8.15.0):\n+  acorn-import-attributes@1.9.5(acorn@8.14.1):\n     dependencies:\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n \n-  acorn-jsx@5.3.2(acorn@8.15.0):\n+  acorn-jsx@5.3.2(acorn@8.14.1):\n     dependencies:\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n \n-  acorn@8.15.0: {}\n+  acorn@8.14.1: {}\n \n   adjust-sourcemap-loader@4.0.0:\n     dependencies:\n@@ -11572,19 +11581,19 @@ snapshots:\n       axe-core: 4.10.3\n       mustache: 4.2.0\n \n-  axe-playwright@2.1.0(playwright@1.53.0):\n+  axe-playwright@2.1.0(playwright@1.52.0):\n     dependencies:\n       '@types/junit-report-builder': 3.0.2\n       axe-core: 4.10.3\n       axe-html-reporter: 2.2.11(axe-core@4.10.3)\n       junit-report-builder: 5.1.1\n       picocolors: 1.1.1\n-      playwright: 1.53.0\n+      playwright: 1.52.0\n \n-  axios@1.10.0:\n+  axios@1.9.0:\n     dependencies:\n       follow-redirects: 1.15.9\n-      form-data: 4.0.3\n+      form-data: 4.0.2\n       proxy-from-env: 1.1.0\n     transitivePeerDependencies:\n       - debug\n@@ -11604,12 +11613,12 @@ snapshots:\n     transitivePeerDependencies:\n       - supports-color\n \n-  babel-loader@9.2.1(@babel/core@7.27.4)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  babel-loader@9.2.1(@babel/core@7.27.4)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       '@babel/core': 7.27.4\n       find-cache-dir: 4.0.0\n       schema-utils: 4.3.2\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   babel-plugin-istanbul@6.1.1:\n     dependencies:\n@@ -11641,7 +11650,7 @@ snapshots:\n     dependencies:\n       '@babel/core': 7.27.4\n       '@babel/helper-define-polyfill-provider': 0.6.4(@babel/core@7.27.4)\n-      core-js-compat: 3.43.0\n+      core-js-compat: 3.42.0\n     transitivePeerDependencies:\n       - supports-color\n \n@@ -11699,12 +11708,12 @@ snapshots:\n \n   boring-avatars@1.11.2: {}\n \n-  brace-expansion@1.1.12:\n+  brace-expansion@1.1.11:\n     dependencies:\n       balanced-match: 1.0.2\n       concat-map: 0.0.1\n \n-  brace-expansion@2.0.2:\n+  brace-expansion@2.0.1:\n     dependencies:\n       balanced-match: 1.0.2\n \n@@ -11763,8 +11772,8 @@ snapshots:\n \n   browserslist@4.25.0:\n     dependencies:\n-      caniuse-lite: 1.0.30001723\n-      electron-to-chromium: 1.5.169\n+      caniuse-lite: 1.0.30001721\n+      electron-to-chromium: 1.5.165\n       node-releases: 2.0.19\n       update-browserslist-db: 1.1.3(browserslist@4.25.0)\n \n@@ -11826,7 +11835,7 @@ snapshots:\n \n   camelize@1.0.1: {}\n \n-  caniuse-lite@1.0.30001723: {}\n+  caniuse-lite@1.0.30001721: {}\n \n   case-sensitive-paths-webpack-plugin@2.4.0: {}\n \n@@ -11837,7 +11846,7 @@ snapshots:\n       assertion-error: 2.0.1\n       check-error: 2.1.1\n       deep-eql: 5.0.2\n-      loupe: 3.1.4\n+      loupe: 3.1.3\n       pathval: 2.0.0\n \n   chalk@2.4.2:\n@@ -12013,11 +12022,11 @@ snapshots:\n \n   cookie@1.0.2: {}\n \n-  core-js-compat@3.43.0:\n+  core-js-compat@3.42.0:\n     dependencies:\n       browserslist: 4.25.0\n \n-  core-js-pure@3.43.0: {}\n+  core-js-pure@3.42.0: {}\n \n   core-util-is@1.0.3: {}\n \n@@ -12098,7 +12107,7 @@ snapshots:\n \n   css-color-keywords@1.0.0: {}\n \n-  css-loader@6.11.0(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  css-loader@6.11.0(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       icss-utils: 5.1.0(postcss@8.5.4)\n       postcss: 8.5.4\n@@ -12109,7 +12118,7 @@ snapshots:\n       postcss-value-parser: 4.2.0\n       semver: 7.7.2\n     optionalDependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   css-select@4.3.0:\n     dependencies:\n@@ -12238,7 +12247,7 @@ snapshots:\n \n   decimal.js-light@2.5.1: {}\n \n-  decode-named-character-reference@1.2.0:\n+  decode-named-character-reference@1.1.0:\n     dependencies:\n       character-entities: 2.0.2\n \n@@ -12380,7 +12389,7 @@ snapshots:\n \n   eastasianwidth@0.2.0: {}\n \n-  electron-to-chromium@1.5.169: {}\n+  electron-to-chromium@1.5.165: {}\n \n   elliptic@6.6.1:\n     dependencies:\n@@ -12542,40 +12551,40 @@ snapshots:\n \n   es6-error@4.1.1: {}\n \n-  esbuild-register@3.6.0(esbuild@0.25.5):\n+  esbuild-register@3.6.0(esbuild@0.24.2):\n     dependencies:\n       debug: 4.4.1\n-      esbuild: 0.25.5\n+      esbuild: 0.24.2\n     transitivePeerDependencies:\n       - supports-color\n \n-  esbuild@0.25.5:\n+  esbuild@0.24.2:\n     optionalDependencies:\n-      '@esbuild/aix-ppc64': 0.25.5\n-      '@esbuild/android-arm': 0.25.5\n-      '@esbuild/android-arm64': 0.25.5\n-      '@esbuild/android-x64': 0.25.5\n-      '@esbuild/darwin-arm64': 0.25.5\n-      '@esbuild/darwin-x64': 0.25.5\n-      '@esbuild/freebsd-arm64': 0.25.5\n-      '@esbuild/freebsd-x64': 0.25.5\n-      '@esbuild/linux-arm': 0.25.5\n-      '@esbuild/linux-arm64': 0.25.5\n-      '@esbuild/linux-ia32': 0.25.5\n-      '@esbuild/linux-loong64': 0.25.5\n-      '@esbuild/linux-mips64el': 0.25.5\n-      '@esbuild/linux-ppc64': 0.25.5\n-      '@esbuild/linux-riscv64': 0.25.5\n-      '@esbuild/linux-s390x': 0.25.5\n-      '@esbuild/linux-x64': 0.25.5\n-      '@esbuild/netbsd-arm64': 0.25.5\n-      '@esbuild/netbsd-x64': 0.25.5\n-      '@esbuild/openbsd-arm64': 0.25.5\n-      '@esbuild/openbsd-x64': 0.25.5\n-      '@esbuild/sunos-x64': 0.25.5\n-      '@esbuild/win32-arm64': 0.25.5\n-      '@esbuild/win32-ia32': 0.25.5\n-      '@esbuild/win32-x64': 0.25.5\n+      '@esbuild/aix-ppc64': 0.24.2\n+      '@esbuild/android-arm': 0.24.2\n+      '@esbuild/android-arm64': 0.24.2\n+      '@esbuild/android-x64': 0.24.2\n+      '@esbuild/darwin-arm64': 0.24.2\n+      '@esbuild/darwin-x64': 0.24.2\n+      '@esbuild/freebsd-arm64': 0.24.2\n+      '@esbuild/freebsd-x64': 0.24.2\n+      '@esbuild/linux-arm': 0.24.2\n+      '@esbuild/linux-arm64': 0.24.2\n+      '@esbuild/linux-ia32': 0.24.2\n+      '@esbuild/linux-loong64': 0.24.2\n+      '@esbuild/linux-mips64el': 0.24.2\n+      '@esbuild/linux-ppc64': 0.24.2\n+      '@esbuild/linux-riscv64': 0.24.2\n+      '@esbuild/linux-s390x': 0.24.2\n+      '@esbuild/linux-x64': 0.24.2\n+      '@esbuild/netbsd-arm64': 0.24.2\n+      '@esbuild/netbsd-x64': 0.24.2\n+      '@esbuild/openbsd-arm64': 0.24.2\n+      '@esbuild/openbsd-x64': 0.24.2\n+      '@esbuild/sunos-x64': 0.24.2\n+      '@esbuild/win32-arm64': 0.24.2\n+      '@esbuild/win32-ia32': 0.24.2\n+      '@esbuild/win32-x64': 0.24.2\n \n   escalade@3.2.0: {}\n \n@@ -12589,12 +12598,12 @@ snapshots:\n     dependencies:\n       '@next/eslint-plugin-next': 15.3.3\n       '@rushstack/eslint-patch': 1.11.0\n-      '@typescript-eslint/eslint-plugin': 8.34.1(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint@8.57.1)(typescript@5.8.3)\n-      '@typescript-eslint/parser': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/eslint-plugin': 8.33.1(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/parser': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n       eslint: 8.57.1\n       eslint-import-resolver-node: 0.3.9\n       eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@8.57.1)\n-      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n+      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n       eslint-plugin-jsx-a11y: 6.10.2(eslint@8.57.1)\n       eslint-plugin-react: 7.37.5(eslint@8.57.1)\n       eslint-plugin-react-hooks: 5.2.0(eslint@8.57.1)\n@@ -12622,24 +12631,24 @@ snapshots:\n       is-bun-module: 2.0.0\n       stable-hash: 0.0.5\n       tinyglobby: 0.2.14\n-      unrs-resolver: 1.9.0\n+      unrs-resolver: 1.7.10\n     optionalDependencies:\n-      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n+      eslint-plugin-import: 2.31.0(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n     transitivePeerDependencies:\n       - supports-color\n \n-  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1):\n+  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1):\n     dependencies:\n       debug: 3.2.7\n     optionalDependencies:\n-      '@typescript-eslint/parser': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/parser': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n       eslint: 8.57.1\n       eslint-import-resolver-node: 0.3.9\n       eslint-import-resolver-typescript: 3.10.1(eslint-plugin-import@2.31.0)(eslint@8.57.1)\n     transitivePeerDependencies:\n       - supports-color\n \n-  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1):\n+  eslint-plugin-import@2.31.0(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1):\n     dependencies:\n       '@rtsao/scc': 1.1.0\n       array-includes: 3.1.9\n@@ -12650,7 +12659,7 @@ snapshots:\n       doctrine: 2.1.0\n       eslint: 8.57.1\n       eslint-import-resolver-node: 0.3.9\n-      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.34.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n+      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.33.1(eslint@8.57.1)(typescript@5.8.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.10.1)(eslint@8.57.1)\n       hasown: 2.0.2\n       is-core-module: 2.16.1\n       is-glob: 4.0.3\n@@ -12662,7 +12671,7 @@ snapshots:\n       string.prototype.trimend: 1.0.9\n       tsconfig-paths: 3.15.0\n     optionalDependencies:\n-      '@typescript-eslint/parser': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/parser': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n     transitivePeerDependencies:\n       - eslint-import-resolver-typescript\n       - eslint-import-resolver-webpack\n@@ -12716,7 +12725,7 @@ snapshots:\n   eslint-plugin-storybook@0.12.0(eslint@8.57.1)(typescript@5.8.3):\n     dependencies:\n       '@storybook/csf': 0.1.13\n-      '@typescript-eslint/utils': 8.34.1(eslint@8.57.1)(typescript@5.8.3)\n+      '@typescript-eslint/utils': 8.33.1(eslint@8.57.1)(typescript@5.8.3)\n       eslint: 8.57.1\n       ts-dedent: 2.2.0\n     transitivePeerDependencies:\n@@ -12735,7 +12744,7 @@ snapshots:\n \n   eslint-visitor-keys@3.4.3: {}\n \n-  eslint-visitor-keys@4.2.1: {}\n+  eslint-visitor-keys@4.2.0: {}\n \n   eslint@8.57.1:\n     dependencies:\n@@ -12782,8 +12791,8 @@ snapshots:\n \n   espree@9.6.1:\n     dependencies:\n-      acorn: 8.15.0\n-      acorn-jsx: 5.3.2(acorn@8.15.0)\n+      acorn: 8.14.1\n+      acorn-jsx: 5.3.2(acorn@8.14.1)\n       eslint-visitor-keys: 3.4.3\n \n   esprima@4.0.1: {}\n@@ -12806,7 +12815,7 @@ snapshots:\n \n   estree-walker@3.0.3:\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n \n   esutils@2.0.3: {}\n \n@@ -12891,7 +12900,7 @@ snapshots:\n     dependencies:\n       bser: 2.1.1\n \n-  fdir@6.4.6(picomatch@4.0.2):\n+  fdir@6.4.5(picomatch@4.0.2):\n     optionalDependencies:\n       picomatch: 4.0.2\n \n@@ -12972,7 +12981,7 @@ snapshots:\n       cross-spawn: 7.0.6\n       signal-exit: 4.1.0\n \n-  fork-ts-checker-webpack-plugin@8.0.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  fork-ts-checker-webpack-plugin@8.0.0(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       '@babel/code-frame': 7.27.1\n       chalk: 4.1.2\n@@ -12987,22 +12996,21 @@ snapshots:\n       semver: 7.7.2\n       tapable: 2.2.2\n       typescript: 5.8.3\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n-  form-data@4.0.3:\n+  form-data@4.0.2:\n     dependencies:\n       asynckit: 0.4.0\n       combined-stream: 1.0.8\n       es-set-tostringtag: 2.1.0\n-      hasown: 2.0.2\n       mime-types: 2.1.35\n \n   forwarded-parse@2.1.2: {}\n \n   framer-motion@12.16.0(@emotion/is-prop-valid@1.2.2)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n-      motion-dom: 12.18.1\n-      motion-utils: 12.18.1\n+      motion-dom: 12.16.0\n+      motion-utils: 12.12.1\n       tslib: 2.8.1\n     optionalDependencies:\n       '@emotion/is-prop-valid': 1.2.2\n@@ -13191,7 +13199,7 @@ snapshots:\n \n   hast-util-to-jsx-runtime@2.3.6:\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n       '@types/hast': 3.0.4\n       '@types/unist': 3.0.3\n       comma-separated-tokens: 2.0.3\n@@ -13203,7 +13211,7 @@ snapshots:\n       mdast-util-mdxjs-esm: 2.0.1\n       property-information: 7.1.0\n       space-separated-tokens: 2.0.2\n-      style-to-js: 1.1.17\n+      style-to-js: 1.1.16\n       unist-util-position: 5.0.0\n       vfile-message: 4.0.2\n     transitivePeerDependencies:\n@@ -13243,11 +13251,11 @@ snapshots:\n       he: 1.2.0\n       param-case: 3.0.4\n       relateurl: 0.2.7\n-      terser: 5.42.0\n+      terser: 5.41.0\n \n   html-url-attributes@3.0.1: {}\n \n-  html-webpack-plugin@5.6.3(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  html-webpack-plugin@5.6.3(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       '@types/html-minifier-terser': 6.1.0\n       html-minifier-terser: 6.1.0\n@@ -13255,7 +13263,7 @@ snapshots:\n       pretty-error: 4.0.0\n       tapable: 2.2.2\n     optionalDependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   htmlparser2@3.10.1:\n     dependencies:\n@@ -13305,8 +13313,8 @@ snapshots:\n \n   import-in-the-middle@1.14.0:\n     dependencies:\n-      acorn: 8.15.0\n-      acorn-import-attributes: 1.9.5(acorn@8.15.0)\n+      acorn: 8.14.1\n+      acorn-import-attributes: 1.9.5(acorn@8.14.1)\n       cjs-module-lexer: 1.4.3\n       module-details-from-path: 1.0.4\n \n@@ -13454,7 +13462,7 @@ snapshots:\n \n   is-reference@1.2.1:\n     dependencies:\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n \n   is-regex@1.2.1:\n     dependencies:\n@@ -13766,7 +13774,7 @@ snapshots:\n       jest-process-manager: 0.4.0\n       jest-runner: 29.7.0\n       nyc: 15.1.0\n-      playwright-core: 1.53.0\n+      playwright-core: 1.52.0\n       rimraf: 3.0.2\n       uuid: 8.3.2\n     transitivePeerDependencies:\n@@ -14107,7 +14115,7 @@ snapshots:\n     dependencies:\n       js-tokens: 4.0.0\n \n-  loupe@3.1.4: {}\n+  loupe@3.1.3: {}\n \n   lower-case@2.0.2:\n     dependencies:\n@@ -14159,7 +14167,7 @@ snapshots:\n     dependencies:\n       '@types/mdast': 4.0.4\n       '@types/unist': 3.0.3\n-      decode-named-character-reference: 1.2.0\n+      decode-named-character-reference: 1.1.0\n       devlop: 1.1.0\n       mdast-util-to-string: 4.0.0\n       micromark: 4.0.2\n@@ -14258,7 +14266,7 @@ snapshots:\n \n   micromark-core-commonmark@2.0.3:\n     dependencies:\n-      decode-named-character-reference: 1.2.0\n+      decode-named-character-reference: 1.1.0\n       devlop: 1.1.0\n       micromark-factory-destination: 2.0.1\n       micromark-factory-label: 2.0.1\n@@ -14333,7 +14341,7 @@ snapshots:\n \n   micromark-util-decode-string@2.0.1:\n     dependencies:\n-      decode-named-character-reference: 1.2.0\n+      decode-named-character-reference: 1.1.0\n       micromark-util-character: 2.1.1\n       micromark-util-decode-numeric-character-reference: 2.0.2\n       micromark-util-symbol: 2.0.1\n@@ -14371,7 +14379,7 @@ snapshots:\n     dependencies:\n       '@types/debug': 4.1.12\n       debug: 4.4.1\n-      decode-named-character-reference: 1.2.0\n+      decode-named-character-reference: 1.1.0\n       devlop: 1.1.0\n       micromark-core-commonmark: 2.0.3\n       micromark-factory-space: 2.0.1\n@@ -14415,15 +14423,15 @@ snapshots:\n \n   minimatch@3.1.2:\n     dependencies:\n-      brace-expansion: 1.1.12\n+      brace-expansion: 1.1.11\n \n   minimatch@8.0.4:\n     dependencies:\n-      brace-expansion: 2.0.2\n+      brace-expansion: 2.0.1\n \n   minimatch@9.0.5:\n     dependencies:\n-      brace-expansion: 2.0.2\n+      brace-expansion: 2.0.1\n \n   minimist@1.2.8: {}\n \n@@ -14437,11 +14445,11 @@ snapshots:\n \n   moment@2.30.1: {}\n \n-  motion-dom@12.18.1:\n+  motion-dom@12.16.0:\n     dependencies:\n-      motion-utils: 12.18.1\n+      motion-utils: 12.12.1\n \n-  motion-utils@12.18.1: {}\n+  motion-utils@12.12.1: {}\n \n   ms@2.1.3: {}\n \n@@ -14460,7 +14468,7 @@ snapshots:\n       '@open-draft/deferred-promise': 2.2.0\n       '@open-draft/until': 2.1.0\n       '@types/cookie': 0.6.0\n-      '@types/statuses': 2.0.6\n+      '@types/statuses': 2.0.5\n       graphql: 16.11.0\n       headers-polyfill: 4.0.3\n       is-node-process: 1.2.0\n@@ -14504,7 +14512,7 @@ snapshots:\n       '@swc/counter': 0.1.3\n       '@swc/helpers': 0.5.15\n       busboy: 1.6.0\n-      caniuse-lite: 1.0.30001723\n+      caniuse-lite: 1.0.30001721\n       postcss: 8.4.31\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n@@ -14538,7 +14546,7 @@ snapshots:\n \n   node-int64@0.4.0: {}\n \n-  node-polyfill-webpack-plugin@2.0.1(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  node-polyfill-webpack-plugin@2.0.1(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       assert: 2.1.0\n       browserify-zlib: 0.2.0\n@@ -14565,7 +14573,7 @@ snapshots:\n       url: 0.11.4\n       util: 0.12.5\n       vm-browserify: 1.1.2\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   node-preload@0.2.1:\n     dependencies:\n@@ -14765,7 +14773,7 @@ snapshots:\n       '@types/unist': 2.0.11\n       character-entities-legacy: 3.0.0\n       character-reference-invalid: 2.0.1\n-      decode-named-character-reference: 1.2.0\n+      decode-named-character-reference: 1.1.0\n       is-alphanumerical: 2.0.1\n       is-decimal: 2.0.1\n       is-hexadecimal: 2.0.1\n@@ -14849,20 +14857,12 @@ snapshots:\n \n   playwright-core@1.52.0: {}\n \n-  playwright-core@1.53.0: {}\n-\n   playwright@1.52.0:\n     dependencies:\n       playwright-core: 1.52.0\n     optionalDependencies:\n       fsevents: 2.3.2\n \n-  playwright@1.53.0:\n-    dependencies:\n-      playwright-core: 1.53.0\n-    optionalDependencies:\n-      fsevents: 2.3.2\n-\n   pnp-webpack-plugin@1.7.0(typescript@5.8.3):\n     dependencies:\n       ts-pnp: 1.2.0(typescript@5.8.3)\n@@ -14894,14 +14894,14 @@ snapshots:\n     optionalDependencies:\n       postcss: 8.5.4\n \n-  postcss-loader@8.1.1(postcss@8.5.4)(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  postcss-loader@8.1.1(postcss@8.5.4)(typescript@5.8.3)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       cosmiconfig: 9.0.0(typescript@5.8.3)\n       jiti: 1.21.7\n       postcss: 8.5.4\n       semver: 7.7.2\n     optionalDependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     transitivePeerDependencies:\n       - typescript\n \n@@ -14996,6 +14996,12 @@ snapshots:\n       ansi-styles: 5.2.0\n       react-is: 18.3.1\n \n+  prism-react-renderer@2.4.1(react@18.3.1):\n+    dependencies:\n+      '@types/prismjs': 1.26.5\n+      clsx: 2.1.1\n+      react: 18.3.1\n+\n   process-nextick-args@2.0.1: {}\n \n   process-on-spawn@1.1.0:\n@@ -15077,7 +15083,7 @@ snapshots:\n       date-fns-jalali: 4.1.0-0\n       react: 18.3.1\n \n-  react-docgen-typescript@2.4.0(typescript@5.8.3):\n+  react-docgen-typescript@2.2.2(typescript@5.8.3):\n     dependencies:\n       typescript: 5.8.3\n \n@@ -15107,7 +15113,7 @@ snapshots:\n       prop-types: 15.8.1\n       react: 18.3.1\n       react-dom: 18.3.1(react@18.3.1)\n-      styled-components: 6.1.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n+      styled-components: 6.1.18(react-dom@18.3.1(react@18.3.1))(react@18.3.1)\n \n   react-hook-form@7.57.0(react@18.3.1):\n     dependencies:\n@@ -15195,6 +15201,10 @@ snapshots:\n     optionalDependencies:\n       '@types/react': 18.3.17\n \n+  react-timeago@8.2.0(react@18.3.1):\n+    dependencies:\n+      react: 18.3.1\n+\n   react-transition-group@4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       '@babel/runtime': 7.27.6\n@@ -15470,11 +15480,11 @@ snapshots:\n       es-errors: 1.3.0\n       is-regex: 1.2.1\n \n-  sass-loader@14.2.1(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  sass-loader@14.2.1(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       neo-async: 2.6.2\n     optionalDependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   scheduler@0.23.2:\n     dependencies:\n@@ -15699,7 +15709,7 @@ snapshots:\n     dependencies:\n       type-fest: 0.7.1\n \n-  statuses@2.0.2: {}\n+  statuses@2.0.1: {}\n \n   stop-iteration-iterator@1.1.0:\n     dependencies:\n@@ -15841,19 +15851,19 @@ snapshots:\n \n   strip-json-comments@3.1.1: {}\n \n-  style-loader@3.3.4(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  style-loader@3.3.4(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n-  style-to-js@1.1.17:\n+  style-to-js@1.1.16:\n     dependencies:\n-      style-to-object: 1.0.9\n+      style-to-object: 1.0.8\n \n-  style-to-object@1.0.9:\n+  style-to-object@1.0.8:\n     dependencies:\n       inline-style-parser: 0.2.4\n \n-  styled-components@6.1.19(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n+  styled-components@6.1.18(react-dom@18.3.1(react@18.3.1))(react@18.3.1):\n     dependencies:\n       '@emotion/is-prop-valid': 1.2.2\n       '@emotion/unitless': 0.8.1\n@@ -15909,6 +15919,17 @@ snapshots:\n \n   tailwind-merge@2.6.0: {}\n \n+  tailwind-scrollbar-hide@2.0.0(tailwindcss@3.4.17):\n+    dependencies:\n+      tailwindcss: 3.4.17\n+\n+  tailwind-scrollbar@4.0.2(react@18.3.1)(tailwindcss@3.4.17):\n+    dependencies:\n+      prism-react-renderer: 2.4.1(react@18.3.1)\n+      tailwindcss: 3.4.17\n+    transitivePeerDependencies:\n+      - react\n+\n   tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n     dependencies:\n       tailwindcss: 3.4.17\n@@ -15942,22 +15963,22 @@ snapshots:\n \n   tapable@2.2.2: {}\n \n-  terser-webpack-plugin@5.3.14(@swc/core@1.12.1)(esbuild@0.25.5)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  terser-webpack-plugin@5.3.14(@swc/core@1.11.31)(esbuild@0.24.2)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       '@jridgewell/trace-mapping': 0.3.25\n       jest-worker: 27.5.1\n       schema-utils: 4.3.2\n       serialize-javascript: 6.0.2\n-      terser: 5.42.0\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      terser: 5.41.0\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n     optionalDependencies:\n-      '@swc/core': 1.12.1\n-      esbuild: 0.25.5\n+      '@swc/core': 1.11.31\n+      esbuild: 0.24.2\n \n-  terser@5.42.0:\n+  terser@5.41.0:\n     dependencies:\n       '@jridgewell/source-map': 0.3.6\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n       commander: 2.20.3\n       source-map-support: 0.5.21\n \n@@ -15987,7 +16008,7 @@ snapshots:\n \n   tinyglobby@0.2.14:\n     dependencies:\n-      fdir: 6.4.6(picomatch@4.0.2)\n+      fdir: 6.4.5(picomatch@4.0.2)\n       picomatch: 4.0.2\n \n   tinyrainbow@1.2.0: {}\n@@ -16171,39 +16192,37 @@ snapshots:\n \n   unplugin@1.0.1:\n     dependencies:\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n       chokidar: 3.6.0\n       webpack-sources: 3.3.2\n       webpack-virtual-modules: 0.5.0\n \n   unplugin@1.16.1:\n     dependencies:\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n       webpack-virtual-modules: 0.6.2\n \n-  unrs-resolver@1.9.0:\n+  unrs-resolver@1.7.10:\n     dependencies:\n       napi-postinstall: 0.2.4\n     optionalDependencies:\n-      '@unrs/resolver-binding-android-arm-eabi': 1.9.0\n-      '@unrs/resolver-binding-android-arm64': 1.9.0\n-      '@unrs/resolver-binding-darwin-arm64': 1.9.0\n-      '@unrs/resolver-binding-darwin-x64': 1.9.0\n-      '@unrs/resolver-binding-freebsd-x64': 1.9.0\n-      '@unrs/resolver-binding-linux-arm-gnueabihf': 1.9.0\n-      '@unrs/resolver-binding-linux-arm-musleabihf': 1.9.0\n-      '@unrs/resolver-binding-linux-arm64-gnu': 1.9.0\n-      '@unrs/resolver-binding-linux-arm64-musl': 1.9.0\n-      '@unrs/resolver-binding-linux-ppc64-gnu': 1.9.0\n-      '@unrs/resolver-binding-linux-riscv64-gnu': 1.9.0\n-      '@unrs/resolver-binding-linux-riscv64-musl': 1.9.0\n-      '@unrs/resolver-binding-linux-s390x-gnu': 1.9.0\n-      '@unrs/resolver-binding-linux-x64-gnu': 1.9.0\n-      '@unrs/resolver-binding-linux-x64-musl': 1.9.0\n-      '@unrs/resolver-binding-wasm32-wasi': 1.9.0\n-      '@unrs/resolver-binding-win32-arm64-msvc': 1.9.0\n-      '@unrs/resolver-binding-win32-ia32-msvc': 1.9.0\n-      '@unrs/resolver-binding-win32-x64-msvc': 1.9.0\n+      '@unrs/resolver-binding-darwin-arm64': 1.7.10\n+      '@unrs/resolver-binding-darwin-x64': 1.7.10\n+      '@unrs/resolver-binding-freebsd-x64': 1.7.10\n+      '@unrs/resolver-binding-linux-arm-gnueabihf': 1.7.10\n+      '@unrs/resolver-binding-linux-arm-musleabihf': 1.7.10\n+      '@unrs/resolver-binding-linux-arm64-gnu': 1.7.10\n+      '@unrs/resolver-binding-linux-arm64-musl': 1.7.10\n+      '@unrs/resolver-binding-linux-ppc64-gnu': 1.7.10\n+      '@unrs/resolver-binding-linux-riscv64-gnu': 1.7.10\n+      '@unrs/resolver-binding-linux-riscv64-musl': 1.7.10\n+      '@unrs/resolver-binding-linux-s390x-gnu': 1.7.10\n+      '@unrs/resolver-binding-linux-x64-gnu': 1.7.10\n+      '@unrs/resolver-binding-linux-x64-musl': 1.7.10\n+      '@unrs/resolver-binding-wasm32-wasi': 1.7.10\n+      '@unrs/resolver-binding-win32-arm64-msvc': 1.7.10\n+      '@unrs/resolver-binding-win32-ia32-msvc': 1.7.10\n+      '@unrs/resolver-binding-win32-x64-msvc': 1.7.10\n \n   update-browserslist-db@1.1.3(browserslist@4.25.0):\n     dependencies:\n@@ -16299,7 +16318,7 @@ snapshots:\n \n   wait-on@7.2.0:\n     dependencies:\n-      axios: 1.10.0\n+      axios: 1.9.0\n       joi: 17.13.3\n       lodash: 4.17.21\n       minimist: 1.2.8\n@@ -16330,7 +16349,7 @@ snapshots:\n \n   webidl-conversions@3.0.1: {}\n \n-  webpack-dev-middleware@6.1.3(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)):\n+  webpack-dev-middleware@6.1.3(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)):\n     dependencies:\n       colorette: 2.0.20\n       memfs: 3.5.3\n@@ -16338,7 +16357,7 @@ snapshots:\n       range-parser: 1.2.1\n       schema-utils: 4.3.2\n     optionalDependencies:\n-      webpack: 5.99.9(@swc/core@1.12.1)(esbuild@0.25.5)\n+      webpack: 5.99.9(@swc/core@1.11.31)(esbuild@0.24.2)\n \n   webpack-hot-middleware@2.26.1:\n     dependencies:\n@@ -16352,15 +16371,15 @@ snapshots:\n \n   webpack-virtual-modules@0.6.2: {}\n \n-  webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5):\n+  webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2):\n     dependencies:\n       '@types/eslint-scope': 3.7.7\n-      '@types/estree': 1.0.8\n+      '@types/estree': 1.0.7\n       '@types/json-schema': 7.0.15\n       '@webassemblyjs/ast': 1.14.1\n       '@webassemblyjs/wasm-edit': 1.14.1\n       '@webassemblyjs/wasm-parser': 1.14.1\n-      acorn: 8.15.0\n+      acorn: 8.14.1\n       browserslist: 4.25.0\n       chrome-trace-event: 1.0.4\n       enhanced-resolve: 5.18.1\n@@ -16375,7 +16394,7 @@ snapshots:\n       neo-async: 2.6.2\n       schema-utils: 4.3.2\n       tapable: 2.2.2\n-      terser-webpack-plugin: 5.3.14(@swc/core@1.12.1)(esbuild@0.25.5)(webpack@5.99.9(@swc/core@1.12.1)(esbuild@0.25.5))\n+      terser-webpack-plugin: 5.3.14(@swc/core@1.11.31)(esbuild@0.24.2)(webpack@5.99.9(@swc/core@1.11.31)(esbuild@0.24.2))\n       watchpack: 2.4.4\n       webpack-sources: 3.3.2\n     transitivePeerDependencies:\ndiff --git a/autogpt_platform/frontend/public/integrations/anthropic.png b/autogpt_platform/frontend/public/integrations/anthropic.png\nnew file mode 100644\nindex 000000000000..23cc3ddb9d83\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/anthropic.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/apollo.png b/autogpt_platform/frontend/public/integrations/apollo.png\nnew file mode 100644\nindex 000000000000..cb3750356b32\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/apollo.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/d-id.png b/autogpt_platform/frontend/public/integrations/d-id.png\nindex 17ebf2ddb478..977cd679ceac 100644\nBinary files a/autogpt_platform/frontend/public/integrations/d-id.png and b/autogpt_platform/frontend/public/integrations/d-id.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/d_id.png b/autogpt_platform/frontend/public/integrations/d_id.png\nnew file mode 100644\nindex 000000000000..5a41621838ad\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/d_id.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/discord.png b/autogpt_platform/frontend/public/integrations/discord.png\nindex 4e4ed4662d91..e440b11672b8 100644\nBinary files a/autogpt_platform/frontend/public/integrations/discord.png and b/autogpt_platform/frontend/public/integrations/discord.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/e2b.png b/autogpt_platform/frontend/public/integrations/e2b.png\nnew file mode 100644\nindex 000000000000..986e7cc60ef7\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/e2b.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/exa.png b/autogpt_platform/frontend/public/integrations/exa.png\nnew file mode 100644\nindex 000000000000..35b25b48f827\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/exa.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/fal.png b/autogpt_platform/frontend/public/integrations/fal.png\nnew file mode 100644\nindex 000000000000..95ae1079e574\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/fal.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/github.png b/autogpt_platform/frontend/public/integrations/github.png\nindex 5e0778732890..1b4e59693628 100644\nBinary files a/autogpt_platform/frontend/public/integrations/github.png and b/autogpt_platform/frontend/public/integrations/github.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/google.png b/autogpt_platform/frontend/public/integrations/google.png\nindex 49cc06b98077..5b8b6e658ce3 100644\nBinary files a/autogpt_platform/frontend/public/integrations/google.png and b/autogpt_platform/frontend/public/integrations/google.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/google_maps.png b/autogpt_platform/frontend/public/integrations/google_maps.png\nnew file mode 100644\nindex 000000000000..928c5a558527\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/google_maps.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/groq.png b/autogpt_platform/frontend/public/integrations/groq.png\nnew file mode 100644\nindex 000000000000..4953c67a3547\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/groq.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/hubspot.png b/autogpt_platform/frontend/public/integrations/hubspot.png\nindex de4fb1dbe998..5f25ce0a3ddd 100644\nBinary files a/autogpt_platform/frontend/public/integrations/hubspot.png and b/autogpt_platform/frontend/public/integrations/hubspot.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/ideogram.png b/autogpt_platform/frontend/public/integrations/ideogram.png\nnew file mode 100644\nindex 000000000000..049cee4b28c7\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/ideogram.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/jina.png b/autogpt_platform/frontend/public/integrations/jina.png\nnew file mode 100644\nindex 000000000000..aec95773298e\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/jina.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/linear.png b/autogpt_platform/frontend/public/integrations/linear.png\nindex 5e3a0ccfe1c5..fe64191e6d98 100644\nBinary files a/autogpt_platform/frontend/public/integrations/linear.png and b/autogpt_platform/frontend/public/integrations/linear.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/llama_api.png b/autogpt_platform/frontend/public/integrations/llama_api.png\nnew file mode 100644\nindex 000000000000..5d48d62c1919\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/llama_api.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/maps.png b/autogpt_platform/frontend/public/integrations/maps.png\nindex 70a707dcd986..8bc9fddcb747 100644\nBinary files a/autogpt_platform/frontend/public/integrations/maps.png and b/autogpt_platform/frontend/public/integrations/maps.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/medium.png b/autogpt_platform/frontend/public/integrations/medium.png\nindex 41228fcdce3f..c0eec340d51c 100644\nBinary files a/autogpt_platform/frontend/public/integrations/medium.png and b/autogpt_platform/frontend/public/integrations/medium.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/mem0.png b/autogpt_platform/frontend/public/integrations/mem0.png\nindex 953ae47f3def..21ba2452c501 100644\nBinary files a/autogpt_platform/frontend/public/integrations/mem0.png and b/autogpt_platform/frontend/public/integrations/mem0.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/notion.png b/autogpt_platform/frontend/public/integrations/notion.png\nindex 9b95380a9380..a1e535fe0cb9 100644\nBinary files a/autogpt_platform/frontend/public/integrations/notion.png and b/autogpt_platform/frontend/public/integrations/notion.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/nvidia.jpg b/autogpt_platform/frontend/public/integrations/nvidia.jpg\nindex 46956b6de3fa..77513386f4c7 100644\nBinary files a/autogpt_platform/frontend/public/integrations/nvidia.jpg and b/autogpt_platform/frontend/public/integrations/nvidia.jpg differ\ndiff --git a/autogpt_platform/frontend/public/integrations/nvidia.png b/autogpt_platform/frontend/public/integrations/nvidia.png\nnew file mode 100644\nindex 000000000000..c5bf936fd304\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/nvidia.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/ollama.png b/autogpt_platform/frontend/public/integrations/ollama.png\nnew file mode 100644\nindex 000000000000..7c5f003b495b\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/ollama.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/open_router.png b/autogpt_platform/frontend/public/integrations/open_router.png\nnew file mode 100644\nindex 000000000000..62fe66752836\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/open_router.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/openai.png b/autogpt_platform/frontend/public/integrations/openai.png\nnew file mode 100644\nindex 000000000000..6f16d37ea07d\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/openai.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/openweathermap.png b/autogpt_platform/frontend/public/integrations/openweathermap.png\nindex ae4e47b8bfa9..80ae46e053e8 100644\nBinary files a/autogpt_platform/frontend/public/integrations/openweathermap.png and b/autogpt_platform/frontend/public/integrations/openweathermap.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/pinecone.png b/autogpt_platform/frontend/public/integrations/pinecone.png\nindex ec25827f7aa7..1378c6522270 100644\nBinary files a/autogpt_platform/frontend/public/integrations/pinecone.png and b/autogpt_platform/frontend/public/integrations/pinecone.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/reddit.png b/autogpt_platform/frontend/public/integrations/reddit.png\nindex 6f5777a78963..976a157866e0 100644\nBinary files a/autogpt_platform/frontend/public/integrations/reddit.png and b/autogpt_platform/frontend/public/integrations/reddit.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/replicate.png b/autogpt_platform/frontend/public/integrations/replicate.png\nnew file mode 100644\nindex 000000000000..8e70d93c8a4f\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/replicate.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/revid.png b/autogpt_platform/frontend/public/integrations/revid.png\nnew file mode 100644\nindex 000000000000..a49151b22fa1\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/revid.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/screenshotone.png b/autogpt_platform/frontend/public/integrations/screenshotone.png\nnew file mode 100644\nindex 000000000000..c3c1f9930727\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/screenshotone.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/slant3d.jpeg b/autogpt_platform/frontend/public/integrations/slant3d.jpeg\nindex 8071a6a0b90f..43b3ef88d0a8 100644\nBinary files a/autogpt_platform/frontend/public/integrations/slant3d.jpeg and b/autogpt_platform/frontend/public/integrations/slant3d.jpeg differ\ndiff --git a/autogpt_platform/frontend/public/integrations/slant3d.png b/autogpt_platform/frontend/public/integrations/slant3d.png\nnew file mode 100644\nindex 000000000000..958a30d4f4be\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/slant3d.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/smartlead.png b/autogpt_platform/frontend/public/integrations/smartlead.png\nnew file mode 100644\nindex 000000000000..30ea5d5b6f78\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/smartlead.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/smtp.png b/autogpt_platform/frontend/public/integrations/smtp.png\nindex 1e7c5dd4f045..eea99b046ef4 100644\nBinary files a/autogpt_platform/frontend/public/integrations/smtp.png and b/autogpt_platform/frontend/public/integrations/smtp.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/todoist.png b/autogpt_platform/frontend/public/integrations/todoist.png\nindex 70cc564a11b3..40aa9480d12e 100644\nBinary files a/autogpt_platform/frontend/public/integrations/todoist.png and b/autogpt_platform/frontend/public/integrations/todoist.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/twitter.png b/autogpt_platform/frontend/public/integrations/twitter.png\nnew file mode 100644\nindex 000000000000..8262c4b9cc06\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/twitter.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/unreal-speech.png b/autogpt_platform/frontend/public/integrations/unreal-speech.png\ndeleted file mode 100644\nindex 1baaf64f922f..000000000000\nBinary files a/autogpt_platform/frontend/public/integrations/unreal-speech.png and /dev/null differ\ndiff --git a/autogpt_platform/frontend/public/integrations/unreal_speech.png b/autogpt_platform/frontend/public/integrations/unreal_speech.png\nnew file mode 100644\nindex 000000000000..1446eac432ab\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/unreal_speech.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/x.png b/autogpt_platform/frontend/public/integrations/x.png\nindex 25bbe2c0585d..8262c4b9cc06 100644\nBinary files a/autogpt_platform/frontend/public/integrations/x.png and b/autogpt_platform/frontend/public/integrations/x.png differ\ndiff --git a/autogpt_platform/frontend/public/integrations/zerobounce.png b/autogpt_platform/frontend/public/integrations/zerobounce.png\nnew file mode 100644\nindex 000000000000..78168a853a27\nBinary files /dev/null and b/autogpt_platform/frontend/public/integrations/zerobounce.png differ\ndiff --git a/autogpt_platform/frontend/src/components/Flow.tsx b/autogpt_platform/frontend/src/components/Flow.tsx\nindex 345fc60b5ae8..af5469061c01 100644\n--- a/autogpt_platform/frontend/src/components/Flow.tsx\n+++ b/autogpt_platform/frontend/src/components/Flow.tsx\n@@ -28,6 +28,7 @@ import \"@xyflow/react/dist/style.css\";\n import { CustomNode } from \"./CustomNode\";\n import \"./flow.css\";\n import {\n+  Block,\n   BlockUIType,\n   formatEdgeID,\n   GraphExecutionID,\n@@ -39,7 +40,6 @@ import { CustomEdge } from \"./CustomEdge\";\n import ConnectionLine from \"./ConnectionLine\";\n import { Control, ControlPanel } from \"@/components/edit/control/ControlPanel\";\n import { SaveControl } from \"@/components/edit/control/SaveControl\";\n-import { BlocksControl } from \"@/components/edit/control/BlocksControl\";\n import { IconUndo2, IconRedo2 } from \"@/components/ui/icons\";\n import { startTutorial } from \"./tutorial\";\n import useAgentGraph from \"@/hooks/useAgentGraph\";\n@@ -53,6 +53,7 @@ import OttoChatWidget from \"@/components/OttoChatWidget\";\n import { useToast } from \"@/components/ui/use-toast\";\n import { useCopyPaste } from \"../hooks/useCopyPaste\";\n import { CronScheduler } from \"./cronScheduler\";\n+import { BlockMenu } from \"./builder/block-menu/BlockMenu\";\n \n // This is for the history, this is the minimum distance a block must move before it is logged\n // It helps to prevent spamming the history with small movements especially when pressing on a input in a block\n@@ -101,7 +102,6 @@ const FlowEditor: React.FC<{\n     setAgentDescription,\n     savedAgent,\n     availableNodes,\n-    availableFlows,\n     getOutputType,\n     requestSave,\n     requestSaveAndRun,\n@@ -136,6 +136,10 @@ const FlowEditor: React.FC<{\n   // State to control if save popover should be pinned open\n   const [pinSavePopover, setPinSavePopover] = useState(false);\n \n+  const [blockMenuSelected, setBlockMenuSelected] = useState<\n+    \"save\" | \"block\" | \"\"\n+  >(\"\");\n+\n   const runnerUIRef = useRef<RunnerUIWrapperRef>(null);\n \n   const [openCron, setOpenCron] = useState(false);\n@@ -466,13 +470,7 @@ const FlowEditor: React.FC<{\n   }, [nodes, setViewport, x, y]);\n \n   const addNode = useCallback(\n-    (blockId: string, nodeType: string, hardcodedValues: any = {}) => {\n-      const nodeSchema = availableNodes.find((node) => node.id === blockId);\n-      if (!nodeSchema) {\n-        console.error(`Schema not found for block ID: ${blockId}`);\n-        return;\n-      }\n-\n+    (block: Block) => {\n       /*\n        Calculate a position to the right of the newly added block, allowing for some margin.\n        If adding to the right side causes the new block to collide with an existing block, attempt to place it at the bottom or left.\n@@ -489,7 +487,7 @@ const FlowEditor: React.FC<{\n           ? // we will get all the dimension of nodes, then store\n             findNewlyAddedBlockCoordinates(\n               nodeDimensions,\n-              nodeSchema.uiType == BlockUIType.NOTE ? 300 : 500,\n+              block.uiType == BlockUIType.NOTE ? 300 : 500,\n               60,\n               1.0,\n             )\n@@ -504,19 +502,19 @@ const FlowEditor: React.FC<{\n         type: \"custom\",\n         position: viewportCoordinates, // Set the position to the calculated viewport center\n         data: {\n-          blockType: nodeType,\n-          blockCosts: nodeSchema.costs,\n-          title: `${nodeType} ${nodeId}`,\n-          description: nodeSchema.description,\n-          categories: nodeSchema.categories,\n-          inputSchema: nodeSchema.inputSchema,\n-          outputSchema: nodeSchema.outputSchema,\n-          hardcodedValues: hardcodedValues,\n+          blockType: block.name,\n+          blockCosts: block.costs,\n+          title: `${block.name} ${nodeId}`,\n+          description: block.description,\n+          categories: block.categories,\n+          inputSchema: block.inputSchema,\n+          outputSchema: block.outputSchema,\n+          hardcodedValues: block.hardcodedValues || {},\n           connections: [],\n           isOutputOpen: false,\n-          block_id: blockId,\n-          isOutputStatic: nodeSchema.staticOutput,\n-          uiType: nodeSchema.uiType,\n+          block_id: block.id,\n+          isOutputStatic: block.staticOutput,\n+          uiType: block.uiType,\n         },\n       };\n \n@@ -545,7 +543,6 @@ const FlowEditor: React.FC<{\n     [\n       nodeId,\n       setViewport,\n-      availableNodes,\n       addNodes,\n       nodeDimensions,\n       deleteElements,\n@@ -627,12 +624,12 @@ const FlowEditor: React.FC<{\n   const editorControls: Control[] = [\n     {\n       label: \"Undo\",\n-      icon: <IconUndo2 />,\n+      icon: <IconUndo2 className=\"h-5 w-5\" strokeWidth={2} />,\n       onClick: handleUndo,\n     },\n     {\n       label: \"Redo\",\n-      icon: <IconRedo2 />,\n+      icon: <IconRedo2 className=\"h-5 w-5\" strokeWidth={2} />,\n       onClick: handleRedo,\n     },\n   ];\n@@ -680,15 +677,13 @@ const FlowEditor: React.FC<{\n           <Controls />\n           <Background className=\"dark:bg-slate-800\" />\n           <ControlPanel\n-            className=\"absolute z-20\"\n             controls={editorControls}\n             topChildren={\n-              <BlocksControl\n-                pinBlocksPopover={pinBlocksPopover} // Pass the state to BlocksControl\n-                blocks={availableNodes}\n-                addBlock={addNode}\n-                flows={availableFlows}\n-                nodes={nodes}\n+              <BlockMenu\n+                pinBlocksPopover={pinBlocksPopover}\n+                addNode={addNode}\n+                blockMenuSelected={blockMenuSelected}\n+                setBlockMenuSelected={setBlockMenuSelected}\n               />\n             }\n             botChildren={\n@@ -701,6 +696,8 @@ const FlowEditor: React.FC<{\n                 agentName={agentName}\n                 onNameChange={setAgentName}\n                 pinSavePopover={pinSavePopover}\n+                blockMenuSelected={blockMenuSelected}\n+                setBlockMenuSelected={setBlockMenuSelected}\n               />\n             }\n           ></ControlPanel>\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/Block.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/Block.tsx\nnew file mode 100644\nindex 000000000000..4b4c04f858a5\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/Block.tsx\n@@ -0,0 +1,77 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { beautifyString, cn } from \"@/lib/utils\";\n+import { Plus } from \"lucide-react\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+import { highlightText } from \"./IntegrationBlock\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  description?: string;\n+  highlightedText?: string;\n+}\n+\n+interface BlockComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const Block: BlockComponent = ({\n+  title,\n+  description,\n+  highlightedText,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-16 w-full min-w-[7.5rem] items-center justify-start space-x-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 px-[0.875rem] py-[0.625rem] text-start shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300 disabled:cursor-not-allowed\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        {title && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(beautifyString(title), highlightedText)}\n+          </span>\n+        )}\n+        {description && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(description, highlightedText)}\n+          </span>\n+        )}\n+      </div>\n+      <div\n+        className={cn(\n+          \"flex h-7 w-7 items-center justify-center rounded-[0.5rem] bg-zinc-700 group-disabled:bg-zinc-400\",\n+        )}\n+      >\n+        <Plus className=\"h-5 w-5 text-zinc-50\" strokeWidth={2} />\n+      </div>\n+    </Button>\n+  );\n+};\n+\n+const BlockSkeleton = () => {\n+  return (\n+    <Skeleton className=\"flex h-16 w-full min-w-[7.5rem] animate-pulse items-center justify-start space-x-3 rounded-[0.75rem] bg-zinc-100 px-[0.875rem] py-[0.625rem]\">\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        <Skeleton className=\"h-[1.375rem] w-24 rounded bg-zinc-200\" />\n+        <Skeleton className=\"h-5 w-32 rounded bg-zinc-200\" />\n+      </div>\n+      <Skeleton className=\"h-7 w-7 rounded-[0.5rem] bg-zinc-200\" />\n+    </Skeleton>\n+  );\n+};\n+\n+Block.Skeleton = BlockSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenu.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenu.tsx\nnew file mode 100644\nindex 000000000000..d3f16b8fe4c4\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenu.tsx\n@@ -0,0 +1,62 @@\n+import React, { useState } from \"react\";\n+import {\n+  Popover,\n+  PopoverContent,\n+  PopoverTrigger,\n+} from \"@/components/ui/popover\";\n+import { ControlPanelButton } from \"@/components/builder/block-menu/ControlPanelButton\";\n+import { ToyBrick } from \"lucide-react\";\n+import { BlockMenuContent } from \"./BlockMenuContent\";\n+import { BlockMenuStateProvider } from \"./block-menu-provider\";\n+import { Block } from \"@/lib/autogpt-server-api\";\n+\n+interface BlockMenuProps {\n+  addNode: (block: Block) => void;\n+  pinBlocksPopover: boolean;\n+  blockMenuSelected: \"save\" | \"block\" | \"\";\n+  setBlockMenuSelected: React.Dispatch<\n+    React.SetStateAction<\"\" | \"save\" | \"block\">\n+  >;\n+}\n+\n+export const BlockMenu: React.FC<BlockMenuProps> = ({\n+  addNode,\n+  pinBlocksPopover,\n+  blockMenuSelected,\n+  setBlockMenuSelected,\n+}) => {\n+  const [open, setOpen] = useState(false);\n+  const onOpen = (newOpen: boolean) => {\n+    if (!pinBlocksPopover) {\n+      setOpen(newOpen);\n+      setBlockMenuSelected(newOpen ? \"block\" : \"\");\n+    }\n+  };\n+\n+  return (\n+    <Popover open={pinBlocksPopover ? true : open} onOpenChange={onOpen}>\n+      <PopoverTrigger className=\"hover:cursor-pointer\">\n+        <ControlPanelButton\n+          data-id=\"blocks-control-popover-trigger\"\n+          data-testid=\"blocks-control-blocks-button\"\n+          selected={blockMenuSelected === \"block\"}\n+          className=\"rounded-none\"\n+        >\n+          <ToyBrick className=\"h-5 w-6\" strokeWidth={2} />\n+        </ControlPanelButton>\n+      </PopoverTrigger>\n+\n+      <PopoverContent\n+        side=\"right\"\n+        align=\"start\"\n+        sideOffset={16}\n+        className=\"absolute h-[75vh] w-[46.625rem] overflow-hidden rounded-[1rem] border-none p-0 shadow-[0_2px_6px_0_rgba(0,0,0,0.05)]\"\n+        data-id=\"blocks-control-popover-content\"\n+      >\n+        <BlockMenuStateProvider addNode={addNode}>\n+          <BlockMenuContent />\n+        </BlockMenuStateProvider>\n+      </PopoverContent>\n+    </Popover>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuContent.tsx\nnew file mode 100644\nindex 000000000000..dc7aeb562e3d\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuContent.tsx\n@@ -0,0 +1,18 @@\n+\"use client\";\n+import React from \"react\";\n+import { BlockMenuSearchBar } from \"./BlockMenuSearchBar\";\n+import { BlockMenuSearch } from \"./search-and-filter//BlockMenuSearch\";\n+import { BlockMenuDefault } from \"./default/BlockMenuDefault\";\n+import { Separator } from \"@/components/ui/separator\";\n+import { useBlockMenuContext } from \"./block-menu-provider\";\n+\n+export const BlockMenuContent = () => {\n+  const { searchQuery } = useBlockMenuContext();\n+  return (\n+    <div className=\"flex h-full w-full flex-col\">\n+      <BlockMenuSearchBar />\n+      <Separator className=\"h-[1px] w-full text-zinc-300\" />\n+      {searchQuery ? <BlockMenuSearch /> : <BlockMenuDefault />}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuSearchBar.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuSearchBar.tsx\nnew file mode 100644\nindex 000000000000..3e4e05119b5b\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/BlockMenuSearchBar.tsx\n@@ -0,0 +1,90 @@\n+import { cn } from \"@/lib/utils\";\n+import { Search, X } from \"lucide-react\";\n+import React, { useRef, useState, useEffect, useMemo } from \"react\";\n+import { useBlockMenuContext } from \"./block-menu-provider\";\n+import { Button } from \"@/components/ui/button\";\n+import debounce from \"lodash/debounce\";\n+import { Input } from \"@/components/ui/input\";\n+import { getDefaultFilters } from \"./helpers\";\n+\n+const SEARCH_DEBOUNCE_MS = 500;\n+\n+interface BlockMenuSearchBarProps {\n+  className?: string;\n+}\n+\n+export const BlockMenuSearchBar: React.FC<BlockMenuSearchBarProps> = ({\n+  className = \"\",\n+}) => {\n+  const inputRef = useRef<HTMLInputElement>(null);\n+  const [localQuery, setLocalQuery] = useState(\"\");\n+  const { setSearchQuery, searchId, setSearchId, setFilters } =\n+    useBlockMenuContext();\n+\n+  const searchIdRef = useRef(searchId);\n+  useEffect(() => {\n+    searchIdRef.current = searchId;\n+  }, [searchId]);\n+\n+  const debouncedSetSearchQuery = useMemo(\n+    () =>\n+      debounce((value: string) => {\n+        setSearchQuery(value);\n+        if (value.length === 0) {\n+          setSearchId(undefined);\n+        } else if (!searchIdRef.current) {\n+          setSearchId(crypto.randomUUID());\n+        }\n+      }, SEARCH_DEBOUNCE_MS),\n+    [setSearchQuery, setSearchId],\n+  );\n+\n+  useEffect(() => {\n+    return () => {\n+      debouncedSetSearchQuery.cancel();\n+    };\n+  }, [debouncedSetSearchQuery]);\n+\n+  const handleClear = () => {\n+    setLocalQuery(\"\");\n+    setSearchQuery(\"\");\n+    setSearchId(undefined);\n+    setFilters(getDefaultFilters());\n+    debouncedSetSearchQuery.cancel();\n+  };\n+\n+  return (\n+    <div\n+      className={cn(\n+        \"flex min-h-[3.5625rem] items-center gap-2.5 px-4\",\n+        className,\n+      )}\n+    >\n+      <Search className=\"h-6 w-6 text-zinc-700\" strokeWidth={2} />\n+      <Input\n+        ref={inputRef}\n+        type=\"text\"\n+        value={localQuery}\n+        onChange={(e) => {\n+          setLocalQuery(e.target.value);\n+          debouncedSetSearchQuery(e.target.value);\n+        }}\n+        placeholder={\"Blocks, Agents, Integrations or Keywords...\"}\n+        className={cn(\n+          \"m-0 border-none p-0 font-sans text-base font-normal text-zinc-800 shadow-none outline-none\",\n+          \"placeholder:text-zinc-400 focus:shadow-none focus:outline-none focus:ring-0\",\n+        )}\n+      />\n+      {localQuery.length > 0 && (\n+        <Button\n+          variant=\"ghost\"\n+          size=\"sm\"\n+          onClick={handleClear}\n+          className=\"p-0 hover:bg-transparent\"\n+        >\n+          <X className=\"h-6 w-6 text-zinc-700\" strokeWidth={2} />\n+        </Button>\n+      )}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/ControlPanelButton.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/ControlPanelButton.tsx\nnew file mode 100644\nindex 000000000000..8bf8f2bb5aaa\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/ControlPanelButton.tsx\n@@ -0,0 +1,34 @@\n+// BLOCK MENU TODO: We need a disable state in this, currently it's not in design.\n+\n+import { cn } from \"@/lib/utils\";\n+import React from \"react\";\n+\n+interface Props extends React.HTMLAttributes<HTMLDivElement> {\n+  selected?: boolean;\n+  children?: React.ReactNode; // For icon purpose\n+  disabled?: boolean;\n+}\n+\n+export const ControlPanelButton: React.FC<Props> = ({\n+  selected = false,\n+  children,\n+  disabled,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    // Using div instead of button, because it's only for design purposes. We are using this to give design to PopoverTrigger.\n+    <div\n+      className={cn(\n+        \"flex h-[4.25rem] w-[4.25rem] items-center justify-center whitespace-normal bg-white p-[1.38rem] text-zinc-800 shadow-none hover:cursor-pointer hover:bg-zinc-100 hover:text-zinc-950 focus:ring-0\",\n+        selected &&\n+          \"bg-violet-50 text-violet-700 hover:cursor-default hover:bg-violet-50 hover:text-violet-700 active:bg-violet-50 active:text-violet-700\",\n+        disabled && \"cursor-not-allowed\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      {children}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/ErrorState.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/ErrorState.tsx\nnew file mode 100644\nindex 000000000000..ae59e923dea1\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/ErrorState.tsx\n@@ -0,0 +1,54 @@\n+import { Button } from \"@/components/ui/button\";\n+import { cn, parseErrorMessage } from \"@/lib/utils\";\n+import { AlertCircle, RefreshCw } from \"lucide-react\";\n+import React from \"react\";\n+\n+interface ErrorStateProps {\n+  title?: string;\n+  message?: string;\n+  error?: string | Error | null;\n+  onRetry?: () => void;\n+  retryLabel?: string;\n+  className?: string;\n+  showIcon?: boolean;\n+}\n+\n+export const ErrorState: React.FC<ErrorStateProps> = ({\n+  title = \"Something went wrong\",\n+  message,\n+  error,\n+  onRetry,\n+  retryLabel = \"Retry\",\n+  className,\n+  showIcon = true,\n+}) => {\n+  return (\n+    <div\n+      className={cn(\n+        \"flex h-full w-full flex-col items-center justify-center space-y-4 text-center\",\n+        className,\n+      )}\n+    >\n+      {showIcon && <AlertCircle className=\"h-12 w-12\" strokeWidth={1.5} />}\n+\n+      <div className=\"space-y-2\">\n+        <p className=\"text-sm font-medium text-zinc-800\">{title}</p>\n+        <p className=\"text-sm text-zinc-600\">\n+          {parseErrorMessage(error, message)}\n+        </p>\n+      </div>\n+\n+      {onRetry && (\n+        <Button\n+          variant=\"default\"\n+          size=\"sm\"\n+          onClick={onRetry}\n+          className=\"mt-2 h-7 bg-zinc-800 text-xs\"\n+        >\n+          <RefreshCw className=\"mr-1 h-3 w-3\" />\n+          {retryLabel}\n+        </Button>\n+      )}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/FilterChip.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/FilterChip.tsx\nnew file mode 100644\nindex 000000000000..214e5e8b25d2\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/FilterChip.tsx\n@@ -0,0 +1,54 @@\n+import { Button } from \"@/components/ui/button\";\n+import { cn } from \"@/lib/utils\";\n+import { X } from \"lucide-react\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  selected?: boolean;\n+  number?: number;\n+  name?: string;\n+}\n+\n+export const FilterChip: React.FC<Props> = ({\n+  selected = false,\n+  number,\n+  name,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group w-fit space-x-1 rounded-[1.5rem] border border-zinc-300 bg-transparent px-[0.625rem] py-[0.375rem] shadow-none transition-transform duration-300 ease-in-out\",\n+        \"hover:border-violet-500 hover:bg-transparent focus:ring-0 disabled:cursor-not-allowed\",\n+        selected && \"border-0 bg-violet-700 hover:border\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <span\n+        className={cn(\n+          \"font-sans text-sm font-medium leading-[1.375rem] text-zinc-600 group-hover:text-zinc-600 group-disabled:text-zinc-400\",\n+          selected && \"text-zinc-50\",\n+        )}\n+      >\n+        {name}\n+      </span>\n+      {selected && (\n+        <>\n+          <span className=\"flex h-4 w-4 items-center justify-center rounded-full bg-zinc-50 transition-all duration-300 ease-in-out group-hover:hidden\">\n+            <X\n+              className=\"h-3 w-3 rounded-full text-violet-700\"\n+              strokeWidth={2}\n+            />\n+          </span>\n+          {number !== undefined && (\n+            <span className=\"hidden h-[1.375rem] items-center rounded-[1.25rem] bg-violet-700 p-[0.375rem] text-zinc-50 transition-all duration-300 ease-in-out animate-in fade-in zoom-in group-hover:flex\">\n+              {number > 100 ? \"100+\" : number}\n+            </span>\n+          )}\n+        </>\n+      )}\n+    </Button>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/Integration.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/Integration.tsx\nnew file mode 100644\nindex 000000000000..6082df97c847\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/Integration.tsx\n@@ -0,0 +1,88 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { beautifyString, cn } from \"@/lib/utils\";\n+import Image from \"next/image\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  description?: string;\n+  icon_url?: string;\n+  number_of_blocks?: number;\n+}\n+\n+interface IntegrationComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const Integration: IntegrationComponent = ({\n+  title,\n+  icon_url,\n+  description,\n+  className,\n+  number_of_blocks,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-16 w-full min-w-[7.5rem] items-center justify-start space-x-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 px-[0.875rem] py-[0.625rem] text-start shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-50 active:ring-1 active:ring-zinc-300 disabled:pointer-events-none\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"relative h-[2.625rem] w-[2.625rem] overflow-hidden rounded-[0.5rem] bg-white\">\n+        {icon_url && (\n+          <Image\n+            src={icon_url}\n+            alt=\"integration-icon\"\n+            fill\n+            sizes=\"2.25rem\"\n+            className=\"w-full rounded-[0.5rem] object-contain group-disabled:opacity-50\"\n+          />\n+        )}\n+      </div>\n+\n+      <div className=\"w-full\">\n+        <div className=\"flex items-center justify-between gap-2\">\n+          {title && (\n+            <p className=\"line-clamp-1 flex-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-700 group-disabled:text-zinc-400\">\n+              {beautifyString(title)}\n+            </p>\n+          )}\n+          <span className=\"flex h-[1.375rem] w-[1.6875rem] items-center justify-center rounded-[1.25rem] bg-[#f0f0f0] p-1.5 font-sans text-sm leading-[1.375rem] text-zinc-500 group-disabled:text-zinc-400\">\n+            {number_of_blocks}\n+          </span>\n+        </div>\n+        <span className=\"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\">\n+          {description}\n+        </span>\n+      </div>\n+    </Button>\n+  );\n+};\n+\n+const IntegrationSkeleton: React.FC<{ className?: string }> = ({\n+  className,\n+}) => {\n+  return (\n+    <Skeleton\n+      className={cn(\n+        \"flex h-16 w-full min-w-[7.5rem] animate-pulse items-center justify-start space-x-3 rounded-[0.75rem] bg-zinc-100 px-[0.875rem] py-[0.625rem]\",\n+        className,\n+      )}\n+    >\n+      <Skeleton className=\"h-[2.625rem] w-[2.625rem] rounded-[0.5rem] bg-zinc-200\" />\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        <div className=\"flex w-full items-center justify-between\">\n+          <Skeleton className=\"h-[1.375rem] w-24 rounded bg-zinc-200\" />\n+          <Skeleton className=\"h-[1.375rem] w-[1.6875rem] rounded-[1.25rem] bg-zinc-200\" />\n+        </div>\n+        <Skeleton className=\"h-5 w-[80%] rounded bg-zinc-200\" />\n+      </div>\n+    </Skeleton>\n+  );\n+};\n+\n+Integration.Skeleton = IntegrationSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationBlock.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationBlock.tsx\nnew file mode 100644\nindex 000000000000..b621e805ce9a\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationBlock.tsx\n@@ -0,0 +1,119 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { beautifyString, cn } from \"@/lib/utils\";\n+import { Plus } from \"lucide-react\";\n+import Image from \"next/image\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  description?: string;\n+  icon_url?: string;\n+  highlightedText?: string;\n+}\n+\n+interface IntegrationBlockComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const highlightText = (\n+  text: string | undefined,\n+  highlight: string | undefined,\n+) => {\n+  if (!text || !highlight) return text;\n+\n+  function escapeRegExp(s: string) {\n+    return s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n+  }\n+\n+  const escaped = escapeRegExp(highlight);\n+  const parts = text.split(new RegExp(`(${escaped})`, \"gi\"));\n+  return parts.map((part, i) =>\n+    part.toLowerCase() === highlight?.toLowerCase() ? (\n+      <mark key={i} className=\"bg-transparent font-bold\">\n+        {part}\n+      </mark>\n+    ) : (\n+      part\n+    ),\n+  );\n+};\n+\n+export const IntegrationBlock: IntegrationBlockComponent = ({\n+  title,\n+  icon_url,\n+  description,\n+  className,\n+  highlightedText,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-16 w-full min-w-[7.5rem] items-center justify-start gap-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 px-[0.875rem] py-[0.625rem] text-start shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300 disabled:cursor-not-allowed\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"relative h-[2.625rem] w-[2.625rem] rounded-[0.5rem] bg-white\">\n+        {icon_url && (\n+          <Image\n+            src={icon_url}\n+            alt=\"integration-icon\"\n+            fill\n+            sizes=\"2.25rem\"\n+            className=\"w-full object-contain group-disabled:opacity-50\"\n+          />\n+        )}\n+      </div>\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        {title && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(beautifyString(title), highlightedText)}\n+          </span>\n+        )}\n+        {description && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(description, highlightedText)}\n+          </span>\n+        )}\n+      </div>\n+      <div\n+        className={cn(\n+          \"flex h-7 w-7 items-center justify-center rounded-[0.5rem] bg-zinc-700 group-disabled:bg-zinc-400\",\n+        )}\n+      >\n+        <Plus className=\"h-5 w-5 text-zinc-50\" strokeWidth={2} />\n+      </div>\n+    </Button>\n+  );\n+};\n+\n+const IntegrationBlockSkeleton = ({ className }: { className?: string }) => {\n+  return (\n+    <Skeleton\n+      className={cn(\n+        \"flex h-16 w-full min-w-[7.5rem] animate-pulse items-center justify-start gap-3 rounded-[0.75rem] bg-zinc-100 px-[0.875rem] py-[0.625rem]\",\n+        className,\n+      )}\n+    >\n+      <Skeleton className=\"h-[2.625rem] w-[2.625rem] rounded-[0.5rem] bg-zinc-200\" />\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        <Skeleton className=\"h-[1.375rem] w-24 rounded bg-zinc-200\" />\n+        <Skeleton className=\"h-5 w-32 rounded bg-zinc-200\" />\n+      </div>\n+      <Skeleton className=\"h-7 w-7 rounded-[0.5rem] bg-zinc-200\" />\n+    </Skeleton>\n+  );\n+};\n+\n+IntegrationBlock.Skeleton = IntegrationBlockSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationChip.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationChip.tsx\nnew file mode 100644\nindex 000000000000..611e283bdb1a\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/IntegrationChip.tsx\n@@ -0,0 +1,60 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { beautifyString, cn } from \"@/lib/utils\";\n+import Image from \"next/image\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  name?: string;\n+  icon_url?: string;\n+}\n+\n+interface IntegrationChipComponent extends React.FC<Props> {\n+  Skeleton: React.FC;\n+}\n+\n+export const IntegrationChip: IntegrationChipComponent = ({\n+  icon_url,\n+  name,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"flex h-[3.25rem] w-full min-w-[7.5rem] justify-start gap-2 whitespace-normal rounded-[0.5rem] bg-zinc-50 p-2 pr-3 shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"relative h-9 w-9 rounded-[0.5rem] bg-transparent\">\n+        {icon_url && (\n+          <Image\n+            src={icon_url}\n+            alt=\"integration-icon\"\n+            fill\n+            sizes=\"2.25rem\"\n+            className=\"w-full object-contain\"\n+          />\n+        )}\n+      </div>\n+      {name && (\n+        <span className=\"truncate font-sans text-sm font-normal leading-[1.375rem] text-zinc-800\">\n+          {beautifyString(name)}\n+        </span>\n+      )}\n+    </Button>\n+  );\n+};\n+\n+const IntegrationChipSkeleton: React.FC = () => {\n+  return (\n+    <Skeleton className=\"flex h-[3.25rem] w-full min-w-[7.5rem] gap-2 rounded-[0.5rem] bg-zinc-100 p-2 pr-3\">\n+      <Skeleton className=\"h-9 w-12 rounded-[0.5rem] bg-zinc-200\" />\n+      <Skeleton className=\"h-5 w-24 self-center rounded-sm bg-zinc-200\" />\n+    </Skeleton>\n+  );\n+};\n+\n+IntegrationChip.Skeleton = IntegrationChipSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/MarketplaceAgentBlock.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/MarketplaceAgentBlock.tsx\nnew file mode 100644\nindex 000000000000..84184e40d074\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/MarketplaceAgentBlock.tsx\n@@ -0,0 +1,135 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { cn } from \"@/lib/utils\";\n+import { ExternalLink, Loader2, Plus } from \"lucide-react\";\n+import Image from \"next/image\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+import { highlightText } from \"./IntegrationBlock\";\n+import Link from \"next/link\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  creator_name?: string;\n+  number_of_runs?: number;\n+  image_url?: string;\n+  highlightedText?: string;\n+  slug: string;\n+  loading: boolean;\n+}\n+\n+interface MarketplaceAgentBlockComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const MarketplaceAgentBlock: MarketplaceAgentBlockComponent = ({\n+  title,\n+  image_url,\n+  creator_name,\n+  number_of_runs,\n+  className,\n+  loading,\n+  highlightedText,\n+  slug,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-[4.375rem] w-full min-w-[7.5rem] items-center justify-start gap-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 p-[0.625rem] pr-[0.875rem] text-start shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300 disabled:pointer-events-none\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"relative h-[3.125rem] w-[5.625rem] overflow-hidden rounded-[0.375rem] bg-white\">\n+        {image_url && (\n+          <Image\n+            src={image_url}\n+            alt=\"integration-icon\"\n+            fill\n+            sizes=\"5.625rem\"\n+            className=\"w-full object-contain group-disabled:opacity-50\"\n+          />\n+        )}\n+      </div>\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        {title && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(title, highlightedText)}\n+          </span>\n+        )}\n+        <div className=\"flex items-center space-x-2.5\">\n+          <span\n+            className={cn(\n+              \"truncate font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            By {creator_name}\n+          </span>\n+\n+          <span className=\"font-sans text-zinc-400\">‚Ä¢</span>\n+\n+          <span\n+            className={cn(\n+              \"truncate font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {number_of_runs} runs\n+          </span>\n+          <span className=\"font-sans text-zinc-400\">‚Ä¢</span>\n+          <Link\n+            href={`/marketplace/agent/${creator_name}/${slug}`}\n+            className=\"flex gap-0.5 truncate\"\n+            onClick={(e) => e.stopPropagation()}\n+          >\n+            <span className=\"font-sans text-xs leading-5 text-blue-700 underline\">\n+              Agent page\n+            </span>\n+            <ExternalLink className=\"h-4 w-4 text-blue-700\" strokeWidth={1} />\n+          </Link>\n+        </div>\n+      </div>\n+      <div\n+        className={cn(\n+          \"flex h-7 min-w-7 items-center justify-center rounded-[0.5rem] bg-zinc-700 group-disabled:bg-zinc-400\",\n+        )}\n+      >\n+        {!loading ? (\n+          <Plus className=\"h-5 w-5 text-zinc-50\" strokeWidth={2} />\n+        ) : (\n+          <Loader2 className=\"h-5 w-5 animate-spin\" />\n+        )}\n+      </div>\n+    </Button>\n+  );\n+};\n+\n+const MarketplaceAgentBlockSkeleton: React.FC<{ className?: string }> = ({\n+  className,\n+}) => {\n+  return (\n+    <Skeleton\n+      className={cn(\n+        \"flex h-[4.375rem] w-full min-w-[7.5rem] animate-pulse items-center justify-start gap-3 rounded-[0.75rem] bg-zinc-100 p-[0.625rem] pr-[0.875rem]\",\n+        className,\n+      )}\n+    >\n+      <Skeleton className=\"h-[3.125rem] w-[5.625rem] rounded-[0.375rem] bg-zinc-200\" />\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        <Skeleton className=\"h-[1.375rem] w-24 rounded bg-zinc-200\" />\n+        <div className=\"flex items-center gap-1\">\n+          <Skeleton className=\"h-5 w-16 rounded bg-zinc-200\" />\n+\n+          <Skeleton className=\"h-5 w-16 rounded bg-zinc-200\" />\n+        </div>\n+      </div>\n+      <Skeleton className=\"h-7 w-7 rounded-[0.5rem] bg-zinc-200\" />\n+    </Skeleton>\n+  );\n+};\n+\n+MarketplaceAgentBlock.Skeleton = MarketplaceAgentBlockSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/MenuItem.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/MenuItem.tsx\nnew file mode 100644\nindex 000000000000..89407ccfbdc1\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/MenuItem.tsx\n@@ -0,0 +1,40 @@\n+// BLOCK MENU TODO: We need to add a better hover state to it; currently it's not in the design either.\n+\n+import { Button } from \"@/components/ui/button\";\n+import { cn } from \"@/lib/utils\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  selected?: boolean;\n+  number?: number;\n+  name?: string;\n+}\n+\n+export const MenuItem: React.FC<Props> = ({\n+  selected = false,\n+  number,\n+  name,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"flex h-[2.375rem] w-[12.875rem] justify-between whitespace-normal rounded-[0.5rem] bg-transparent p-2 pl-3 shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0\",\n+        selected && \"bg-zinc-100\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <span className=\"truncate font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+        {name}\n+      </span>\n+      {number && (\n+        <span className=\"font-sans text-sm font-normal leading-[1.375rem] text-zinc-600\">\n+          {number > 100 ? \"100+\" : number}\n+        </span>\n+      )}\n+    </Button>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/SearchHistoryChip.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/SearchHistoryChip.tsx\nnew file mode 100644\nindex 000000000000..77cad6443a99\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/SearchHistoryChip.tsx\n@@ -0,0 +1,47 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { cn } from \"@/lib/utils\";\n+import { ArrowUpRight } from \"lucide-react\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  content?: string;\n+}\n+\n+interface SearchHistoryChipComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const SearchHistoryChip: SearchHistoryChipComponent = ({\n+  content,\n+  className,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"my-[1px] h-[2.25rem] space-x-1 rounded-[1.5rem] bg-zinc-50 p-[0.375rem] pr-[0.625rem] shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <ArrowUpRight className=\"h-6 w-6 text-zinc-500\" strokeWidth={1.25} />\n+      <span className=\"font-sans text-sm font-normal leading-[1.375rem] text-zinc-800\">\n+        {content}\n+      </span>\n+    </Button>\n+  );\n+};\n+\n+const SearchHistoryChipSkeleton: React.FC<{ className?: string }> = ({\n+  className,\n+}) => {\n+  return (\n+    <Skeleton\n+      className={cn(\"h-[2.25rem] w-32 rounded-[1.5rem] bg-zinc-100\", className)}\n+    />\n+  );\n+};\n+\n+SearchHistoryChip.Skeleton = SearchHistoryChipSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/UGCAgentBlock.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/UGCAgentBlock.tsx\nnew file mode 100644\nindex 000000000000..7244deae886b\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/UGCAgentBlock.tsx\n@@ -0,0 +1,117 @@\n+import { Button } from \"@/components/ui/button\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { cn } from \"@/lib/utils\";\n+import { Plus } from \"lucide-react\";\n+import Image from \"next/image\";\n+import React, { ButtonHTMLAttributes } from \"react\";\n+import { highlightText } from \"./IntegrationBlock\";\n+import TimeAgo from \"react-timeago\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  edited_time?: Date;\n+  version?: number;\n+  image_url?: string;\n+  highlightedText?: string;\n+}\n+\n+interface UGCAgentBlockComponent extends React.FC<Props> {\n+  Skeleton: React.FC<{ className?: string }>;\n+}\n+\n+export const UGCAgentBlock: UGCAgentBlockComponent = ({\n+  title,\n+  image_url,\n+  edited_time,\n+  version,\n+  className,\n+  highlightedText,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-[4.375rem] w-full min-w-[7.5rem] items-center justify-start gap-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 p-[0.625rem] pr-[0.875rem] text-start shadow-none\",\n+        \"hover:cursor-default hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300 disabled:cursor-not-allowed\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      {image_url && (\n+        <div className=\"relative h-[3.125rem] w-[5.625rem] overflow-hidden rounded-[0.375rem] bg-white\">\n+          <Image\n+            src={image_url}\n+            alt=\"integration-icon\"\n+            fill\n+            sizes=\"5.625rem\"\n+            className=\"w-full object-contain group-disabled:opacity-50\"\n+          />\n+        </div>\n+      )}\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        {title && (\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {highlightText(title, highlightedText)}\n+          </span>\n+        )}\n+        <div className=\"flex items-center space-x-1.5\">\n+          {edited_time && (\n+            <span\n+              className={cn(\n+                \"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+              )}\n+            >\n+              Edited {<TimeAgo date={edited_time} />}\n+            </span>\n+          )}\n+\n+          <span className=\"font-sans text-zinc-400\">‚Ä¢</span>\n+\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            Version {version}\n+          </span>\n+        </div>\n+      </div>\n+      <div\n+        className={cn(\n+          \"flex h-7 w-7 items-center justify-center rounded-[0.5rem] bg-zinc-700 group-disabled:bg-zinc-400\",\n+        )}\n+      >\n+        <Plus className=\"h-5 w-5 text-zinc-50\" strokeWidth={2} />\n+      </div>\n+    </Button>\n+  );\n+};\n+\n+const UGCAgentBlockSkeleton: React.FC<{ className?: string }> = ({\n+  className,\n+}) => {\n+  return (\n+    <Skeleton\n+      className={cn(\n+        \"flex h-[4.375rem] w-full min-w-[7.5rem] animate-pulse items-center justify-start gap-3 rounded-[0.75rem] bg-zinc-100 p-[0.625rem] pr-[0.875rem]\",\n+        className,\n+      )}\n+    >\n+      <Skeleton className=\"h-[3.125rem] w-[5.625rem] rounded-[0.375rem] bg-zinc-200\" />\n+      <div className=\"flex flex-1 flex-col items-start gap-0.5\">\n+        <Skeleton className=\"h-[1.375rem] w-24 rounded bg-zinc-200\" />\n+        <div className=\"flex items-center gap-1\">\n+          <Skeleton className=\"h-5 w-16 rounded bg-zinc-200\" />\n+          <Skeleton className=\"h-5 w-16 rounded bg-zinc-200\" />\n+        </div>\n+      </div>\n+      <Skeleton className=\"h-7 w-7 rounded-[0.5rem] bg-zinc-200\" />\n+    </Skeleton>\n+  );\n+};\n+\n+UGCAgentBlock.Skeleton = UGCAgentBlockSkeleton;\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/block-menu-provider.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/block-menu-provider.tsx\nnew file mode 100644\nindex 000000000000..8820a3a239eb\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/block-menu-provider.tsx\n@@ -0,0 +1,176 @@\n+\"use client\";\n+\n+import {\n+  Block,\n+  CredentialsProviderName,\n+  LibraryAgent,\n+  Provider,\n+  StoreAgent,\n+} from \"@/lib/autogpt-server-api\";\n+import { createContext, ReactNode, useContext, useState } from \"react\";\n+import { convertLibraryAgentIntoBlock } from \"@/lib/utils\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { getDefaultFilters } from \"./helpers\";\n+\n+export type SearchItem = Block | Provider | LibraryAgent | StoreAgent;\n+\n+export type DefaultStateType =\n+  | \"suggestion\"\n+  | \"all_blocks\"\n+  | \"input_blocks\"\n+  | \"action_blocks\"\n+  | \"output_blocks\"\n+  | \"integrations\"\n+  | \"marketplace_agents\"\n+  | \"my_agents\";\n+\n+export type CategoryKey =\n+  | \"blocks\"\n+  | \"integrations\"\n+  | \"marketplace_agents\"\n+  | \"my_agents\";\n+\n+export interface Filters {\n+  categories: {\n+    blocks: boolean;\n+    integrations: boolean;\n+    marketplace_agents: boolean;\n+    my_agents: boolean;\n+    providers: boolean;\n+  };\n+  createdBy: string[];\n+}\n+\n+export type CategoryCounts = Record<CategoryKey, number>;\n+\n+interface BlockMenuContextType {\n+  defaultState: DefaultStateType;\n+  setDefaultState: React.Dispatch<React.SetStateAction<DefaultStateType>>;\n+  integration: CredentialsProviderName | null;\n+  setIntegration: React.Dispatch<\n+    React.SetStateAction<CredentialsProviderName | null>\n+  >;\n+  searchQuery: string;\n+  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n+  searchId: string | undefined;\n+  setSearchId: React.Dispatch<React.SetStateAction<string | undefined>>;\n+  filters: Filters;\n+  setFilters: React.Dispatch<React.SetStateAction<Filters>>;\n+  searchData: SearchItem[];\n+  setSearchData: React.Dispatch<React.SetStateAction<SearchItem[]>>;\n+  categoryCounts: CategoryCounts;\n+  setCategoryCounts: React.Dispatch<React.SetStateAction<CategoryCounts>>;\n+  addNode: (block: Block) => void;\n+  handleAddStoreAgent: ({\n+    creator_name,\n+    slug,\n+  }: {\n+    creator_name: string;\n+    slug: string;\n+  }) => Promise<void>;\n+  loadingSlug: string | null;\n+  setLoadingSlug: React.Dispatch<React.SetStateAction<string | null>>;\n+}\n+\n+export const BlockMenuContext = createContext<BlockMenuContextType>(\n+  {} as BlockMenuContextType,\n+);\n+\n+interface BlockMenuStateProviderProps {\n+  children: ReactNode;\n+  addNode: (block: Block) => void;\n+}\n+\n+export function BlockMenuStateProvider({\n+  children,\n+  addNode,\n+}: BlockMenuStateProviderProps) {\n+  const [defaultState, setDefaultState] =\n+    useState<DefaultStateType>(\"suggestion\");\n+  const [integration, setIntegration] =\n+    useState<CredentialsProviderName | null>(null);\n+  const [searchQuery, setSearchQuery] = useState(\"\");\n+  const [filters, setFilters] = useState<Filters>(getDefaultFilters());\n+  const [searchData, setSearchData] = useState<SearchItem[]>([]);\n+\n+  const [searchId, setSearchId] = useState<string | undefined>(undefined);\n+\n+  const [categoryCounts, setCategoryCounts] = useState<CategoryCounts>({\n+    blocks: 0,\n+    integrations: 0,\n+    marketplace_agents: 0,\n+    my_agents: 0,\n+  });\n+\n+  const [loadingSlug, setLoadingSlug] = useState<string | null>(null);\n+\n+  const api = useBackendAPI();\n+\n+  const handleAddStoreAgent = async ({\n+    creator_name,\n+    slug,\n+  }: {\n+    creator_name: string;\n+    slug: string;\n+  }) => {\n+    try {\n+      setLoadingSlug(slug);\n+      const details = await api.getStoreAgent(creator_name, slug);\n+\n+      if (!details.active_version_id) {\n+        console.error(\n+          \"Cannot add store agent to library: active version ID is missing or undefined\",\n+        );\n+        return;\n+      }\n+\n+      const libraryAgent = await api.addMarketplaceAgentToLibrary(\n+        details.active_version_id,\n+      );\n+\n+      const block = convertLibraryAgentIntoBlock(libraryAgent);\n+      addNode(block);\n+    } catch (error) {\n+      console.error(\"Failed to add store agent:\", error);\n+    } finally {\n+      setLoadingSlug(null);\n+    }\n+  };\n+\n+  return (\n+    <BlockMenuContext.Provider\n+      value={{\n+        defaultState,\n+        setDefaultState,\n+        integration,\n+        setIntegration,\n+        searchQuery,\n+        setSearchQuery,\n+        searchId,\n+        setSearchId,\n+        filters,\n+        setFilters,\n+        searchData,\n+        setSearchData,\n+        categoryCounts,\n+        setCategoryCounts,\n+        addNode,\n+        handleAddStoreAgent,\n+        loadingSlug,\n+        setLoadingSlug,\n+      }}\n+    >\n+      {children}\n+    </BlockMenuContext.Provider>\n+  );\n+}\n+\n+export function useBlockMenuContext(): BlockMenuContextType {\n+  const context = useContext(BlockMenuContext);\n+  if (!context) {\n+    throw new Error(\n+      \"useBlockMenuContext must be used within a BlockMenuStateProvider\",\n+    );\n+  }\n+  return context;\n+}\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/AllBlocksContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/AllBlocksContent.tsx\nnew file mode 100644\nindex 000000000000..fdfb66d75df5\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/AllBlocksContent.tsx\n@@ -0,0 +1,162 @@\n+import React, { useState, useEffect, Fragment, useCallback } from \"react\";\n+import { Block } from \"../Block\";\n+import { Button } from \"@/components/ui/button\";\n+import { Separator } from \"@/components/ui/separator\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { BlockCategoryResponse } from \"@/lib/autogpt-server-api\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { ErrorState } from \"../ErrorState\";\n+import { beautifyString } from \"@/lib/utils\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const AllBlocksContent = () => {\n+  const { addNode } = useBlockMenuContext();\n+  const [categories, setCategories] = useState<BlockCategoryResponse[]>([]);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState<string | null>(null);\n+  const [loadingCategories, setLoadingCategories] = useState<Set<string>>(\n+    new Set(),\n+  );\n+\n+  const api = useBackendAPI();\n+\n+  const fetchBlocks = useCallback(async () => {\n+    try {\n+      setLoading(true);\n+      setError(null);\n+      const response = await api.getBlockCategories();\n+      setCategories(response);\n+    } catch (err) {\n+      console.error(\"Failed to fetch block categories:\", err);\n+      setError(\n+        err instanceof Error ? err.message : \"Failed to load block categories\",\n+      );\n+    } finally {\n+      setLoading(false);\n+    }\n+  }, [api]);\n+\n+  useEffect(() => {\n+    fetchBlocks();\n+  }, [fetchBlocks]);\n+\n+  const fetchMoreBlockOfACategory = async (category: string) => {\n+    try {\n+      setLoadingCategories((prev) => new Set(prev).add(category));\n+      const response = await api.getBuilderBlocks({ category: category });\n+      const updatedCategories = categories.map((cat) => {\n+        if (cat.name === category) {\n+          return {\n+            ...cat,\n+            blocks: [...response.blocks],\n+          };\n+        }\n+        return cat;\n+      });\n+\n+      setCategories(updatedCategories);\n+    } catch (error) {\n+      console.error(`Failed to fetch blocks for category ${category}:`, error);\n+    } finally {\n+      setLoadingCategories((prev) => {\n+        const newSet = new Set(prev);\n+        newSet.delete(category);\n+        return newSet;\n+      });\n+    }\n+  };\n+\n+  if (loading) {\n+    return (\n+      <div className={scrollbarStyles}>\n+        <div className=\"w-full space-y-3 px-4 pb-4\">\n+          {Array.from({ length: 3 }).map((_, categoryIndex) => (\n+            <Fragment key={categoryIndex}>\n+              {categoryIndex > 0 && (\n+                <Skeleton className=\"my-4 h-[1px] w-full text-zinc-100\" />\n+              )}\n+              {[0, 1, 2].map((blockIndex) => (\n+                <Block.Skeleton key={`${categoryIndex}-${blockIndex}`} />\n+              ))}\n+            </Fragment>\n+          ))}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load blocks\"\n+          error={error}\n+          onRetry={fetchBlocks}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className={scrollbarStyles}>\n+      <div className=\"w-full space-y-3 px-4 pb-4\">\n+        {categories.map((category, index) => (\n+          <Fragment key={category.name}>\n+            {index > 0 && (\n+              <Separator className=\"h-[1px] w-full text-zinc-300\" />\n+            )}\n+\n+            {/* Category Section */}\n+            <div className=\"space-y-2.5\">\n+              <div className=\"flex items-center justify-between\">\n+                <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+                  {category.name && beautifyString(category.name)}\n+                </p>\n+                <span className=\"rounded-full bg-zinc-100 px-[0.375rem] font-sans text-sm leading-[1.375rem] text-zinc-600\">\n+                  {category.total_blocks}\n+                </span>\n+              </div>\n+\n+              <div className=\"space-y-2\">\n+                {category.blocks.map((block) => (\n+                  <Block\n+                    key={`${category.name}-${block.id}`}\n+                    title={block.name}\n+                    description={block.name}\n+                    onClick={() => {\n+                      addNode(block);\n+                    }}\n+                  />\n+                ))}\n+\n+                {loadingCategories.has(category.name) && (\n+                  <>\n+                    {[0, 1, 2, 3, 4].map((skeletonIndex) => (\n+                      <Block.Skeleton\n+                        key={`skeleton-${category.name}-${skeletonIndex}`}\n+                      />\n+                    ))}\n+                  </>\n+                )}\n+\n+                {category.total_blocks > category.blocks.length && (\n+                  <Button\n+                    variant={\"link\"}\n+                    className=\"px-0 font-sans text-sm leading-[1.375rem] text-zinc-600 underline hover:text-zinc-800\"\n+                    disabled={loadingCategories.has(category.name)}\n+                    onClick={() => {\n+                      fetchMoreBlockOfACategory(category.name);\n+                    }}\n+                  >\n+                    see all\n+                  </Button>\n+                )}\n+              </div>\n+            </div>\n+          </Fragment>\n+        ))}\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefault.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefault.tsx\nnew file mode 100644\nindex 000000000000..66cecb9c5189\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefault.tsx\n@@ -0,0 +1,14 @@\n+import React from \"react\";\n+import { BlockMenuSidebar } from \"./BlockMenuSidebar\";\n+import { Separator } from \"@/components/ui/separator\";\n+import { BlockMenuDefaultContent } from \"./BlockMenuDefaultContent\";\n+\n+export const BlockMenuDefault = () => {\n+  return (\n+    <div className=\"flex flex-1 overflow-y-auto\">\n+      <BlockMenuSidebar />\n+      <Separator className=\"h-full w-[1px] text-zinc-300\" />\n+      <BlockMenuDefaultContent />\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefaultContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefaultContent.tsx\nnew file mode 100644\nindex 000000000000..ef5f3c8d7c38\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuDefaultContent.tsx\n@@ -0,0 +1,43 @@\n+import React from \"react\";\n+import { SuggestionContent } from \"./SuggestionContent\";\n+import { AllBlocksContent } from \"./AllBlocksContent\";\n+import { IntegrationsContent } from \"./IntegrationsContent\";\n+import { MarketplaceAgentsContent } from \"./MarketplaceAgentsContent\";\n+import { MyAgentsContent } from \"./MyAgentsContent\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { PaginatedBlocksContent } from \"./PaginatedBlocksContent\";\n+\n+export interface ActionBlock {\n+  id: number;\n+  title: string;\n+  description: string;\n+}\n+\n+export interface BlockListType {\n+  id: number;\n+  title: string;\n+  description: string;\n+}\n+\n+export const BlockMenuDefaultContent = () => {\n+  const { defaultState } = useBlockMenuContext();\n+\n+  return (\n+    <div className=\"h-full flex-1 overflow-hidden\">\n+      {defaultState == \"suggestion\" && <SuggestionContent />}\n+      {defaultState == \"all_blocks\" && <AllBlocksContent />}\n+      {defaultState == \"input_blocks\" && (\n+        <PaginatedBlocksContent blockRequest={{ type: \"input\" }} />\n+      )}\n+      {defaultState == \"action_blocks\" && (\n+        <PaginatedBlocksContent blockRequest={{ type: \"action\" }} />\n+      )}\n+      {defaultState == \"output_blocks\" && (\n+        <PaginatedBlocksContent blockRequest={{ type: \"output\" }} />\n+      )}\n+      {defaultState == \"integrations\" && <IntegrationsContent />}\n+      {defaultState == \"marketplace_agents\" && <MarketplaceAgentsContent />}\n+      {defaultState == \"my_agents\" && <MyAgentsContent />}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuSidebar.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuSidebar.tsx\nnew file mode 100644\nindex 000000000000..84591d61b94e\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlockMenuSidebar.tsx\n@@ -0,0 +1,117 @@\n+import React, { useEffect, useState } from \"react\";\n+import { MenuItem } from \"../MenuItem\";\n+import { DefaultStateType, useBlockMenuContext } from \"../block-menu-provider\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { CountResponse } from \"@/lib/autogpt-server-api\";\n+\n+export const BlockMenuSidebar = () => {\n+  const { defaultState, setDefaultState, setIntegration } =\n+    useBlockMenuContext();\n+  const [blockCounts, setBlockCounts] = useState<CountResponse | undefined>(\n+    undefined,\n+  );\n+  const api = useBackendAPI();\n+\n+  useEffect(() => {\n+    const fetchBlockCounts = async () => {\n+      try {\n+        const counts = await api.getBlockCounts();\n+        setBlockCounts(counts);\n+      } catch (error) {\n+        console.error(\"Failed to fetch block counts:\", error);\n+      }\n+    };\n+\n+    fetchBlockCounts();\n+  }, [api]);\n+\n+  const topLevelMenuItems = [\n+    {\n+      name: \"Suggestion\",\n+      type: \"suggestion\",\n+    },\n+    {\n+      name: \"All blocks\",\n+      type: \"all_blocks\",\n+      number: blockCounts?.all_blocks,\n+    },\n+  ];\n+\n+  const subMenuItems = [\n+    {\n+      name: \"Input blocks\",\n+      type: \"input_blocks\",\n+      number: blockCounts?.input_blocks,\n+    },\n+    {\n+      name: \"Action blocks\",\n+      type: \"action_blocks\",\n+      number: blockCounts?.action_blocks,\n+    },\n+    {\n+      name: \"Output blocks\",\n+      type: \"output_blocks\",\n+      number: blockCounts?.output_blocks,\n+    },\n+  ];\n+\n+  const bottomMenuItems = [\n+    {\n+      name: \"Integrations\",\n+      type: \"integrations\",\n+      number: blockCounts?.integrations,\n+      onClick: () => {\n+        setIntegration(null);\n+        setDefaultState(\"integrations\");\n+      },\n+    },\n+    {\n+      name: \"Marketplace Agents\",\n+      type: \"marketplace_agents\",\n+      number: blockCounts?.marketplace_agents,\n+    },\n+    {\n+      name: \"My Agents\",\n+      type: \"my_agents\",\n+      number: blockCounts?.my_agents,\n+    },\n+  ];\n+\n+  return (\n+    <div className=\"w-fit space-y-2 px-4 pt-4\">\n+      {topLevelMenuItems.map((item) => (\n+        <MenuItem\n+          key={item.type}\n+          name={item.name}\n+          number={item.number}\n+          selected={defaultState === item.type}\n+          onClick={() => setDefaultState(item.type as DefaultStateType)}\n+        />\n+      ))}\n+      <div className=\"ml-[0.5365rem] space-y-2 border-l border-black/10 pl-[0.75rem]\">\n+        {subMenuItems.map((item) => (\n+          <MenuItem\n+            key={item.type}\n+            name={item.name}\n+            number={item.number}\n+            className=\"max-w-[11.5339rem]\"\n+            selected={defaultState === item.type}\n+            onClick={() => setDefaultState(item.type as DefaultStateType)}\n+          />\n+        ))}\n+      </div>\n+      {bottomMenuItems.map((item) => (\n+        <MenuItem\n+          key={item.type}\n+          name={item.name}\n+          number={item.number}\n+          selected={defaultState === item.type}\n+          onClick={\n+            item.onClick ||\n+            (() => setDefaultState(item.type as DefaultStateType))\n+          }\n+        />\n+      ))}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/BlocksList.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlocksList.tsx\nnew file mode 100644\nindex 000000000000..d230fe6a04be\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/BlocksList.tsx\n@@ -0,0 +1,34 @@\n+import React from \"react\";\n+import { Block } from \"../Block\";\n+import { Block as BlockType } from \"@/lib/autogpt-server-api\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+\n+interface BlocksListProps {\n+  blocks: BlockType[];\n+  loading?: boolean;\n+}\n+\n+export const BlocksList: React.FC<BlocksListProps> = ({\n+  blocks,\n+  loading = false,\n+}) => {\n+  const { addNode } = useBlockMenuContext();\n+  return (\n+    <div className=\"w-full space-y-3 px-4 pb-4\">\n+      {loading\n+        ? Array.from({ length: 7 }).map((_, index) => (\n+            <Block.Skeleton key={index} />\n+          ))\n+        : blocks.map((block) => (\n+            <Block\n+              key={block.id}\n+              title={block.name}\n+              description={block.description}\n+              onClick={() => {\n+                addNode(block);\n+              }}\n+            />\n+          ))}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationBlocks.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationBlocks.tsx\nnew file mode 100644\nindex 000000000000..72ab5d8731b1\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationBlocks.tsx\n@@ -0,0 +1,110 @@\n+import { Button } from \"@/components/ui/button\";\n+import React, { useState, useEffect, Fragment, useCallback } from \"react\";\n+import { IntegrationBlock } from \"../IntegrationBlock\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { Block } from \"@/lib/autogpt-server-api\";\n+import { ErrorState } from \"../ErrorState\";\n+import { Skeleton } from \"@/components/ui/skeleton\";\n+\n+export const IntegrationBlocks = () => {\n+  const { integration, setIntegration, addNode } = useBlockMenuContext();\n+  const [blocks, setBlocks] = useState<Block[]>([]);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState<string | null>(null);\n+\n+  const api = useBackendAPI();\n+\n+  const fetchBlocks = useCallback(async () => {\n+    if (integration) {\n+      try {\n+        setLoading(true);\n+        setError(null);\n+        const response = await api.getBuilderBlocks({ provider: integration });\n+        setBlocks(response.blocks);\n+      } catch (err) {\n+        console.error(\"Failed to fetch integration blocks:\", err);\n+        setError(\n+          err instanceof Error\n+            ? err.message\n+            : \"Failed to load integration blocks\",\n+        );\n+      } finally {\n+        setLoading(false);\n+      }\n+    }\n+  }, [api, integration]);\n+\n+  useEffect(() => {\n+    fetchBlocks();\n+  }, [fetchBlocks]);\n+\n+  if (loading) {\n+    return (\n+      <div className=\"w-full space-y-3 p-4\">\n+        {Array.from({ length: 3 }).map((_, blockIndex) => (\n+          <Fragment key={blockIndex}>\n+            {blockIndex > 0 && (\n+              <Skeleton className=\"my-4 h-[1px] w-full text-zinc-100\" />\n+            )}\n+            {[0, 1, 2].map((index) => (\n+              <IntegrationBlock.Skeleton key={`${blockIndex}-${index}`} />\n+            ))}\n+          </Fragment>\n+        ))}\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load integration blocks\"\n+          error={error}\n+          onRetry={fetchBlocks}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className=\"space-y-2.5\">\n+      <div className=\"flex items-center justify-between\">\n+        <div className=\"flex items-center gap-1\">\n+          <Button\n+            variant={\"link\"}\n+            className=\"p-0 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\"\n+            onClick={() => {\n+              setIntegration(null);\n+            }}\n+          >\n+            Integrations\n+          </Button>\n+          <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+            /\n+          </p>\n+          <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+            {integration}\n+          </p>\n+        </div>\n+        <span className=\"flex h-[1.375rem] w-[1.6875rem] items-center justify-center rounded-[1.25rem] bg-[#f0f0f0] p-1.5 font-sans text-sm leading-[1.375rem] text-zinc-500 group-disabled:text-zinc-400\">\n+          {blocks.length}\n+        </span>\n+      </div>\n+      <div className=\"space-y-3\">\n+        {blocks.map((block) => (\n+          <IntegrationBlock\n+            key={block.id}\n+            title={block.name}\n+            description={block.description}\n+            icon_url={`/integrations/${integration}.png`}\n+            onClick={() => {\n+              addNode(block);\n+            }}\n+          />\n+        ))}\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationsContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationsContent.tsx\nnew file mode 100644\nindex 000000000000..c394ab82d977\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/IntegrationsContent.tsx\n@@ -0,0 +1,21 @@\n+import React from \"react\";\n+import { PaginatedIntegrationList } from \"./PaginatedIntegrationList\";\n+import { IntegrationBlocks } from \"./IntegrationBlocks\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const IntegrationsContent = () => {\n+  const { integration } = useBlockMenuContext();\n+\n+  if (!integration) {\n+    return <PaginatedIntegrationList />;\n+  }\n+\n+  return (\n+    <div className={scrollbarStyles}>\n+      <div className=\"w-full px-4 pb-4\">\n+        <IntegrationBlocks />\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/MarketplaceAgentsContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/MarketplaceAgentsContent.tsx\nnew file mode 100644\nindex 000000000000..508cf3861149\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/MarketplaceAgentsContent.tsx\n@@ -0,0 +1,77 @@\n+import React from \"react\";\n+import { MarketplaceAgentBlock } from \"../MarketplaceAgentBlock\";\n+import { usePagination } from \"@/hooks/usePagination\";\n+import { ErrorState } from \"../ErrorState\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const MarketplaceAgentsContent = () => {\n+  const {\n+    data: agents,\n+    loading,\n+    loadingMore,\n+    hasMore,\n+    error,\n+    scrollRef,\n+    refresh,\n+  } = usePagination({\n+    request: { apiType: \"store-agents\" },\n+    pageSize: 10,\n+  });\n+  const { handleAddStoreAgent, loadingSlug } = useBlockMenuContext();\n+\n+  if (loading) {\n+    return (\n+      <div ref={scrollRef} className={scrollbarStyles}>\n+        <div className=\"w-full space-y-3 px-4 pb-4\">\n+          {Array.from({ length: 5 }).map((_, index) => (\n+            <MarketplaceAgentBlock.Skeleton key={index} />\n+          ))}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load marketplace agents\"\n+          error={error}\n+          onRetry={refresh}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div ref={scrollRef} className={scrollbarStyles}>\n+      <div className=\"w-full space-y-3 px-4 pb-4\">\n+        {agents.map((agent) => (\n+          <MarketplaceAgentBlock\n+            key={agent.slug}\n+            slug={agent.slug}\n+            title={agent.agent_name}\n+            image_url={agent.agent_image}\n+            creator_name={agent.creator}\n+            number_of_runs={agent.runs}\n+            loading={loadingSlug === agent.slug}\n+            onClick={() =>\n+              handleAddStoreAgent({\n+                creator_name: agent.creator,\n+                slug: agent.slug,\n+              })\n+            }\n+          />\n+        ))}\n+        {loadingMore && hasMore && (\n+          <>\n+            {Array.from({ length: 3 }).map((_, index) => (\n+              <MarketplaceAgentBlock.Skeleton key={`loading-${index}`} />\n+            ))}\n+          </>\n+        )}\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/MyAgentsContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/MyAgentsContent.tsx\nnew file mode 100644\nindex 000000000000..874a11d106c0\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/MyAgentsContent.tsx\n@@ -0,0 +1,74 @@\n+import React from \"react\";\n+import { UGCAgentBlock } from \"../UGCAgentBlock\";\n+import { usePagination } from \"@/hooks/usePagination\";\n+import { ErrorState } from \"../ErrorState\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { convertLibraryAgentIntoBlock } from \"@/lib/utils\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const MyAgentsContent = () => {\n+  const {\n+    data: agents,\n+    loading,\n+    loadingMore,\n+    hasMore,\n+    error,\n+    scrollRef,\n+    refresh,\n+  } = usePagination({\n+    request: { apiType: \"library-agents\" },\n+    pageSize: 10,\n+  });\n+  const { addNode } = useBlockMenuContext();\n+\n+  if (loading) {\n+    return (\n+      <div ref={scrollRef} className={scrollbarStyles}>\n+        <div className=\"w-full space-y-3 px-4 pb-4\">\n+          {Array.from({ length: 5 }).map((_, index) => (\n+            <UGCAgentBlock.Skeleton key={index} />\n+          ))}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load library agents\"\n+          error={error}\n+          onRetry={refresh}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div ref={scrollRef} className={scrollbarStyles}>\n+      <div className=\"w-full space-y-3 px-4 pb-4\">\n+        {agents.map((agent) => (\n+          <UGCAgentBlock\n+            key={agent.id}\n+            title={agent.name}\n+            edited_time={agent.updated_at}\n+            version={agent.graph_version}\n+            image_url={agent.image_url}\n+            onClick={() => {\n+              const block = convertLibraryAgentIntoBlock(agent);\n+              addNode(block);\n+            }}\n+          />\n+        ))}\n+        {loadingMore && hasMore && (\n+          <>\n+            {Array.from({ length: 3 }).map((_, index) => (\n+              <UGCAgentBlock.Skeleton key={`loading-${index}`} />\n+            ))}\n+          </>\n+        )}\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedBlocksContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedBlocksContent.tsx\nnew file mode 100644\nindex 000000000000..a855bc94e13b\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedBlocksContent.tsx\n@@ -0,0 +1,55 @@\n+import React from \"react\";\n+import { BlocksList } from \"./BlocksList\";\n+import { Block } from \"../Block\";\n+import { BlockRequest } from \"@/lib/autogpt-server-api\";\n+import { usePagination } from \"@/hooks/usePagination\";\n+import { ErrorState } from \"../ErrorState\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+interface PaginatedBlocksContentProps {\n+  blockRequest: BlockRequest;\n+  pageSize?: number;\n+}\n+\n+export const PaginatedBlocksContent: React.FC<PaginatedBlocksContentProps> = ({\n+  blockRequest,\n+  pageSize = 10,\n+}) => {\n+  const {\n+    data: blocks,\n+    loading,\n+    loadingMore,\n+    hasMore,\n+    error,\n+    scrollRef,\n+    refresh,\n+  } = usePagination({\n+    request: { apiType: \"blocks\", ...blockRequest },\n+    pageSize,\n+  });\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full w-full px-4 pb-4\">\n+        <ErrorState\n+          title=\"Failed to load blocks\"\n+          error={error}\n+          onRetry={refresh}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div ref={scrollRef} className={scrollbarStyles}>\n+      <BlocksList blocks={blocks} loading={loading} />\n+      {loadingMore && hasMore && (\n+        <div className=\"w-full space-y-3 px-4 pb-4\">\n+          {Array.from({ length: 3 }).map((_, index) => (\n+            <Block.Skeleton key={`loading-${index}`} />\n+          ))}\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedIntegrationList.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedIntegrationList.tsx\nnew file mode 100644\nindex 000000000000..105d5729e41f\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/PaginatedIntegrationList.tsx\n@@ -0,0 +1,72 @@\n+import React from \"react\";\n+import { Integration } from \"../Integration\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { usePagination } from \"@/hooks/usePagination\";\n+import { ErrorState } from \"../ErrorState\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const PaginatedIntegrationList = () => {\n+  const { setIntegration } = useBlockMenuContext();\n+  const {\n+    data: providers,\n+    loading,\n+    loadingMore,\n+    hasMore,\n+    error,\n+    scrollRef,\n+    refresh,\n+  } = usePagination({\n+    request: { apiType: \"providers\" },\n+    pageSize: 10,\n+  });\n+\n+  if (loading) {\n+    return (\n+      <div ref={scrollRef} className={scrollbarStyles}>\n+        <div className=\"w-full space-y-3 px-4 pb-4\">\n+          {Array.from({ length: 6 }).map((_, integrationIndex) => (\n+            <Integration.Skeleton key={integrationIndex} />\n+          ))}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load integrations\"\n+          error={error}\n+          onRetry={refresh}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div ref={scrollRef} className={scrollbarStyles}>\n+      <div className=\"w-full px-4 pb-4\">\n+        <div className=\"space-y-3\">\n+          {providers.map((integration, index) => (\n+            <Integration\n+              key={index}\n+              title={integration.name}\n+              icon_url={`/integrations/${integration.name}.png`}\n+              description={integration.description}\n+              number_of_blocks={integration.integration_count}\n+              onClick={() => setIntegration(integration.name)}\n+            />\n+          ))}\n+          {loadingMore && hasMore && (\n+            <>\n+              {Array.from({ length: 3 }).map((_, index) => (\n+                <Integration.Skeleton key={`loading-${index}`} />\n+              ))}\n+            </>\n+          )}\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/default/SuggestionContent.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/default/SuggestionContent.tsx\nnew file mode 100644\nindex 000000000000..125fb8484117\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/default/SuggestionContent.tsx\n@@ -0,0 +1,113 @@\n+import React, { useCallback, useEffect, useState } from \"react\";\n+import { IntegrationChip } from \"../IntegrationChip\";\n+import { Block } from \"../Block\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import {\n+  CredentialsProviderName,\n+  SuggestionsResponse,\n+} from \"@/lib/autogpt-server-api\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { ErrorState } from \"../ErrorState\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const SuggestionContent = () => {\n+  const { setIntegration, setDefaultState, addNode } = useBlockMenuContext();\n+\n+  const [suggestionsData, setSuggestionsData] =\n+    useState<SuggestionsResponse | null>(null);\n+  const [loading, setLoading] = useState<boolean>(true);\n+  const [error, setError] = useState<string | null>(null);\n+\n+  const api = useBackendAPI();\n+\n+  const fetchSuggestions = useCallback(async () => {\n+    try {\n+      setLoading(true);\n+      setError(null);\n+      const response = await api.getSuggestions();\n+      setSuggestionsData(response);\n+    } catch (err) {\n+      console.error(\"Error fetching data:\", err);\n+      setError(\n+        err instanceof Error ? err.message : \"Failed to load suggestions\",\n+      );\n+    } finally {\n+      setLoading(false);\n+    }\n+  }, [api]);\n+\n+  useEffect(() => {\n+    fetchSuggestions();\n+  }, [fetchSuggestions]);\n+\n+  if (error) {\n+    return (\n+      <div className=\"h-full p-4\">\n+        <ErrorState\n+          title=\"Failed to load suggestions\"\n+          error={error}\n+          onRetry={fetchSuggestions}\n+        />\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className={scrollbarStyles}>\n+      <div className=\"w-full space-y-6 pb-4\">\n+        {/* Integrations */}\n+        <div className=\"space-y-2.5 px-4\">\n+          <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+            Integrations\n+          </p>\n+          <div className=\"grid grid-cols-3 grid-rows-2 gap-2\">\n+            {!loading && suggestionsData\n+              ? suggestionsData.providers.map((provider, index) => (\n+                  <IntegrationChip\n+                    key={`integration-${index}`}\n+                    icon_url={`/integrations/${provider}.png`}\n+                    name={provider}\n+                    onClick={() => {\n+                      setDefaultState(\"integrations\");\n+                      setIntegration(provider as CredentialsProviderName);\n+                    }}\n+                  />\n+                ))\n+              : Array(6)\n+                  .fill(0)\n+                  .map((_, index) => (\n+                    <IntegrationChip.Skeleton\n+                      key={`integration-skeleton-${index}`}\n+                    />\n+                  ))}\n+          </div>\n+        </div>\n+\n+        {/* Top blocks */}\n+        <div className=\"space-y-2.5 px-4\">\n+          <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+            Top blocks\n+          </p>\n+          <div className=\"space-y-2\">\n+            {!loading && suggestionsData\n+              ? suggestionsData.top_blocks.map((block, index) => (\n+                  <Block\n+                    key={`block-${index}`}\n+                    title={block.name}\n+                    description={block.description}\n+                    onClick={() => {\n+                      addNode(block);\n+                    }}\n+                  />\n+                ))\n+              : Array(3)\n+                  .fill(0)\n+                  .map((_, index) => (\n+                    <Block.Skeleton key={`block-skeleton-${index}`} />\n+                  ))}\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/helpers.ts b/autogpt_platform/frontend/src/components/builder/block-menu/helpers.ts\nnew file mode 100644\nindex 000000000000..eeb2e1f87f9c\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/helpers.ts\n@@ -0,0 +1,12 @@\n+import { Filters } from \"./block-menu-provider\";\n+\n+export const getDefaultFilters = (): Filters => ({\n+  categories: {\n+    blocks: false,\n+    integrations: false,\n+    marketplace_agents: false,\n+    my_agents: false,\n+    providers: false,\n+  },\n+  createdBy: [],\n+});\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/AiBlock.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/AiBlock.tsx\nnew file mode 100644\nindex 000000000000..8b43f2830665\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/AiBlock.tsx\n@@ -0,0 +1,63 @@\n+import { Button } from \"@/components/ui/button\";\n+import { cn } from \"@/lib/utils\";\n+import { Plus } from \"lucide-react\";\n+import { ButtonHTMLAttributes } from \"react\";\n+\n+interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n+  title?: string;\n+  description?: string;\n+  ai_name?: string;\n+}\n+\n+export const AiBlock: React.FC<Props> = ({\n+  title,\n+  description,\n+  className,\n+  ai_name,\n+  ...rest\n+}) => {\n+  return (\n+    <Button\n+      className={cn(\n+        \"group flex h-[5.625rem] w-full min-w-[7.5rem] items-center justify-start space-x-3 whitespace-normal rounded-[0.75rem] bg-zinc-50 px-[0.875rem] py-[0.625rem] text-start shadow-none\",\n+        \"hover:bg-zinc-100 focus:ring-0 active:bg-zinc-100 active:ring-1 active:ring-zinc-300 disabled:pointer-events-none\",\n+        className,\n+      )}\n+      {...rest}\n+    >\n+      <div className=\"flex flex-1 flex-col items-start gap-1.5\">\n+        <div className=\"space-y-0.5\">\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-sm font-medium leading-[1.375rem] text-zinc-700 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {title}\n+          </span>\n+          <span\n+            className={cn(\n+              \"line-clamp-1 font-sans text-xs font-normal leading-5 text-zinc-500 group-disabled:text-zinc-400\",\n+            )}\n+          >\n+            {description}\n+          </span>\n+        </div>\n+\n+        <span\n+          className={cn(\n+            \"rounded-[0.75rem] bg-zinc-200 px-[0.5rem] font-sans text-xs leading-[1.25rem] text-zinc-500\",\n+          )}\n+        >\n+          Supports {ai_name}\n+        </span>\n+      </div>\n+      <div\n+        className={cn(\n+          \"flex h-7 w-7 items-center justify-center rounded-[0.5rem] bg-zinc-700 group-disabled:bg-zinc-400\",\n+        )}\n+      >\n+        <Plus className=\"h-5 w-5 text-zinc-50\" strokeWidth={2} />\n+      </div>\n+    </Button>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/BlockMenuSearch.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/BlockMenuSearch.tsx\nnew file mode 100644\nindex 000000000000..21edbaf5f569\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/BlockMenuSearch.tsx\n@@ -0,0 +1,144 @@\n+import React, { useEffect, useState, useCallback, useRef } from \"react\";\n+import { FiltersList } from \"./FiltersList\";\n+import { SearchList } from \"./SearchList\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import { cn } from \"@/lib/utils\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+export const BlockMenuSearch = () => {\n+  const {\n+    searchData,\n+    searchQuery,\n+    searchId,\n+    setSearchData,\n+    filters,\n+    setCategoryCounts,\n+  } = useBlockMenuContext();\n+  const [isLoading, setIsLoading] = useState<boolean>(false);\n+  const [hasMore, setHasMore] = useState<boolean>(true);\n+  const [page, setPage] = useState<number>(1);\n+  const [loadingMore, setLoadingMore] = useState<boolean>(false);\n+  const [error, setError] = useState<string | null>(null);\n+  const scrollRef = useRef<HTMLDivElement>(null);\n+  const api = useBackendAPI();\n+\n+  const pageSize = 10;\n+\n+  const fetchSearchData = useCallback(\n+    async (pageNum: number, isLoadMore: boolean = false) => {\n+      if (isLoadMore) {\n+        setLoadingMore(true);\n+      } else {\n+        setIsLoading(true);\n+      }\n+\n+      try {\n+        const activeCategories = Object.entries(filters.categories)\n+          .filter(([_, isActive]) => isActive)\n+          .map(([category, _]) => category)\n+          .map(\n+            (category) =>\n+              category as\n+                | \"blocks\"\n+                | \"integrations\"\n+                | \"marketplace_agents\"\n+                | \"my_agents\",\n+          );\n+\n+        const response = await api.searchBlocks({\n+          search_query: searchQuery,\n+          search_id: searchId,\n+          page: pageNum,\n+          page_size: pageSize,\n+          filter: activeCategories.length > 0 ? activeCategories : undefined,\n+          by_creator:\n+            filters.createdBy.length > 0 ? filters.createdBy : undefined,\n+        });\n+\n+        setCategoryCounts(response.total_items);\n+\n+        if (isLoadMore) {\n+          setSearchData((prev) => [...prev, ...response.items]);\n+        } else {\n+          setSearchData(response.items);\n+        }\n+\n+        setHasMore(response.more_pages);\n+        setError(null);\n+      } catch (error) {\n+        console.error(\"Error fetching search data:\", error);\n+        setError(\n+          error instanceof Error\n+            ? error.message\n+            : \"Failed to load search results\",\n+        );\n+        if (!isLoadMore) {\n+          setPage(1);\n+        }\n+      } finally {\n+        setIsLoading(false);\n+        setLoadingMore(false);\n+      }\n+    },\n+    [\n+      searchQuery,\n+      searchId,\n+      filters,\n+      api,\n+      setCategoryCounts,\n+      setSearchData,\n+      pageSize,\n+    ],\n+  );\n+\n+  const handleScroll = useCallback(() => {\n+    if (!scrollRef.current || loadingMore || !hasMore) return;\n+\n+    const { scrollTop, scrollHeight, clientHeight } = scrollRef.current;\n+    if (scrollTop + clientHeight >= scrollHeight - 100) {\n+      const nextPage = page + 1;\n+      setPage(nextPage);\n+      fetchSearchData(nextPage, true);\n+    }\n+  }, [loadingMore, hasMore, page, fetchSearchData]);\n+\n+  useEffect(() => {\n+    const scrollElement = scrollRef.current;\n+    if (scrollElement) {\n+      scrollElement.addEventListener(\"scroll\", handleScroll);\n+      return () => scrollElement.removeEventListener(\"scroll\", handleScroll);\n+    }\n+  }, [handleScroll]);\n+\n+  useEffect(() => {\n+    if (searchQuery) {\n+      setPage(1);\n+      setHasMore(true);\n+      setError(null);\n+      fetchSearchData(1, false);\n+    } else {\n+      setSearchData([]);\n+      setError(null);\n+      setPage(1);\n+      setHasMore(true);\n+    }\n+  }, [searchQuery, searchId, filters, fetchSearchData, setSearchData]);\n+\n+  return (\n+    <div ref={scrollRef} className={cn(scrollbarStyles, \"space-y-4 py-4\")}>\n+      {searchData.length !== 0 && <FiltersList />}\n+      <SearchList\n+        isLoading={isLoading}\n+        loadingMore={loadingMore}\n+        hasMore={hasMore}\n+        error={error}\n+        onRetry={() => {\n+          setPage(1);\n+          setError(null);\n+          fetchSearchData(1, false);\n+        }}\n+      />\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FilterSheet.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FilterSheet.tsx\nnew file mode 100644\nindex 000000000000..9a1ba5d4ca15\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FilterSheet.tsx\n@@ -0,0 +1,255 @@\n+import { FilterChip } from \"../FilterChip\";\n+import { useState, useEffect } from \"react\";\n+import { Button } from \"@/components/ui/button\";\n+import { X } from \"lucide-react\";\n+import { cn, getBlockType } from \"@/lib/utils\";\n+import { Separator } from \"@/components/ui/separator\";\n+import { Checkbox } from \"@/components/ui/checkbox\";\n+import {\n+  CategoryKey,\n+  Filters,\n+  useBlockMenuContext,\n+} from \"../block-menu-provider\";\n+import { StoreAgent } from \"@/lib/autogpt-server-api\";\n+import { getDefaultFilters } from \"../helpers\";\n+import { scrollbarStyles } from \"@/components/styles/scrollbar\";\n+\n+const INITIAL_CREATORS_TO_SHOW = 5;\n+\n+export function FilterSheet({\n+  categories,\n+}: {\n+  categories: Array<{ key: CategoryKey; name: string }>;\n+}) {\n+  const { filters, setFilters, searchData } = useBlockMenuContext();\n+  const [isOpen, setIsOpen] = useState(false);\n+  const [isSheetVisible, setIsSheetVisible] = useState(false);\n+  const [localFilters, setLocalFilters] = useState<Filters>(filters);\n+\n+  const [creators, setCreators] = useState<string[]>([]);\n+  const [displayedCreatorsCount, setDisplayedCreatorsCount] = useState(\n+    INITIAL_CREATORS_TO_SHOW,\n+  );\n+\n+  useEffect(() => {\n+    if (isOpen) {\n+      setIsSheetVisible(true);\n+      setLocalFilters(filters);\n+      setDisplayedCreatorsCount(INITIAL_CREATORS_TO_SHOW); // Reset on open\n+\n+      const marketplaceAgents = (searchData?.filter(\n+        (item) => getBlockType(item) === \"store_agent\",\n+      ) || []) as StoreAgent[];\n+\n+      const uniqueCreators = Array.from(\n+        new Set(marketplaceAgents.map((agent) => agent.creator)),\n+      );\n+\n+      setCreators(uniqueCreators);\n+    } else {\n+      const timer = setTimeout(() => {\n+        setIsSheetVisible(false);\n+      }, 300);\n+      return () => clearTimeout(timer);\n+    }\n+  }, [isOpen, filters, searchData]);\n+\n+  const onCategoryChange = (category: CategoryKey) => {\n+    setLocalFilters((prev) => ({\n+      ...prev,\n+      categories: {\n+        ...prev.categories,\n+        [category]: !prev.categories[category],\n+      },\n+    }));\n+  };\n+\n+  const onCreatorChange = (creator: string) => {\n+    setLocalFilters((prev) => {\n+      const updatedCreators = prev.createdBy.includes(creator)\n+        ? prev.createdBy.filter((c) => c !== creator)\n+        : [...prev.createdBy, creator];\n+\n+      return {\n+        ...prev,\n+        createdBy: updatedCreators,\n+      };\n+    });\n+  };\n+\n+  const handleApplyFilters = () => {\n+    setFilters(localFilters);\n+    setIsOpen(false);\n+  };\n+\n+  const handleClearFilters = () => {\n+    const clearedFilters: Filters = getDefaultFilters();\n+    setFilters(clearedFilters);\n+    setIsOpen(false);\n+  };\n+\n+  const hasLocalActiveFilters = () => {\n+    const hasCategoryFilter = Object.values(localFilters.categories).some(\n+      (value) => value,\n+    );\n+    const hasCreatorFilter = localFilters.createdBy.length > 0;\n+\n+    return hasCategoryFilter || hasCreatorFilter;\n+  };\n+\n+  const hasActiveFilters = () => {\n+    const hasCategoryFilter = Object.values(filters.categories).some(\n+      (value) => value,\n+    );\n+    const hasCreatorFilter = filters.createdBy.length > 0;\n+\n+    return hasCategoryFilter || hasCreatorFilter;\n+  };\n+\n+  const handleToggleShowMoreCreators = () => {\n+    if (displayedCreatorsCount < creators.length) {\n+      setDisplayedCreatorsCount(creators.length);\n+    } else {\n+      setDisplayedCreatorsCount(INITIAL_CREATORS_TO_SHOW);\n+    }\n+  };\n+\n+  const visibleCreators = creators.slice(0, displayedCreatorsCount);\n+\n+  return (\n+    <div className=\"m-0 ml-4 inline w-fit p-0\">\n+      <Button\n+        onClick={() => {\n+          setIsSheetVisible(true);\n+          requestAnimationFrame(() => {\n+            requestAnimationFrame(() => {\n+              setIsOpen(true);\n+            });\n+          });\n+        }}\n+        variant={\"link\"}\n+        className=\"m-0 p-0 hover:no-underline\"\n+      >\n+        <FilterChip\n+          name={hasActiveFilters() ? \"Edit filters\" : \"All filters\"}\n+        />\n+      </Button>\n+\n+      {isSheetVisible && (\n+        <>\n+          <div\n+            className={cn(\n+              \"absolute bottom-2 left-2 top-2 z-20 w-3/4 max-w-[22.5rem] space-y-4 overflow-hidden rounded-[0.75rem] bg-white pb-4 shadow-[0_4px_12px_2px_rgba(0,0,0,0.1)] transition-all\",\n+              isOpen\n+                ? \"translate-x-0 duration-300 ease-out\"\n+                : \"-translate-x-full duration-300 ease-out\",\n+            )}\n+          >\n+            <div className={cn(\"flex-1 space-y-4 pb-16\", scrollbarStyles)}>\n+              {/* Top */}\n+              <div className=\"flex items-center justify-between px-5\">\n+                <p className=\"font-sans text-base text-[#040404]\">Filters</p>\n+                <Button\n+                  variant=\"ghost\"\n+                  size=\"icon\"\n+                  onClick={() => setIsOpen(false)}\n+                >\n+                  <X className=\"h-5 w-5\" />\n+                </Button>\n+              </div>\n+\n+              <Separator className=\"h-[1px] w-full text-zinc-300\" />\n+\n+              {/* Categories */}\n+\n+              <div className=\"space-y-4 px-5\">\n+                <p className=\"font-sans text-base font-medium text-zinc-800\">\n+                  Categories\n+                </p>\n+                <div className=\"space-y-2\">\n+                  {categories.map((category) => (\n+                    <div\n+                      key={category.key}\n+                      className=\"flex items-center space-x-2\"\n+                    >\n+                      <Checkbox\n+                        id={category.key}\n+                        checked={localFilters.categories[category.key]}\n+                        onCheckedChange={() => onCategoryChange(category.key)}\n+                        className=\"border border-[#D4D4D4] shadow-none data-[state=checked]:border-none data-[state=checked]:bg-violet-700 data-[state=checked]:text-white\"\n+                      />\n+                      <label\n+                        htmlFor={category.key}\n+                        className=\"font-sans text-sm leading-[1.375rem] text-zinc-600\"\n+                      >\n+                        {category.name}\n+                      </label>\n+                    </div>\n+                  ))}\n+                </div>\n+              </div>\n+\n+              <Separator className=\"h-[1px] w-full text-zinc-300\" />\n+\n+              {/* Created By */}\n+\n+              <div className=\"space-y-4 px-5\">\n+                <p className=\"font-sans text-base font-medium text-zinc-800\">\n+                  Created by\n+                </p>\n+                <div className=\"space-y-2\">\n+                  {visibleCreators.map((creator) => (\n+                    <div key={creator} className=\"flex items-center space-x-2\">\n+                      <Checkbox\n+                        id={`creator-${creator}`}\n+                        checked={localFilters.createdBy.includes(creator)}\n+                        onCheckedChange={() => onCreatorChange(creator)}\n+                        className=\"border border-[#D4D4D4] shadow-none data-[state=checked]:border-none data-[state=checked]:bg-violet-700 data-[state=checked]:text-white\"\n+                      />\n+                      <label\n+                        htmlFor={`creator-${creator}`}\n+                        className=\"font-sans text-sm leading-[1.375rem] text-zinc-600\"\n+                      >\n+                        {creator}\n+                      </label>\n+                    </div>\n+                  ))}\n+                </div>\n+                {creators.length > INITIAL_CREATORS_TO_SHOW && (\n+                  <Button\n+                    variant={\"link\"}\n+                    className=\"m-0 p-0 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 underline hover:text-zinc-600\"\n+                    onClick={handleToggleShowMoreCreators}\n+                  >\n+                    {displayedCreatorsCount < creators.length ? \"More\" : \"Less\"}\n+                  </Button>\n+                )}\n+              </div>\n+            </div>\n+\n+            {/* Footer buttons */}\n+            <div className=\"fixed bottom-0 flex w-full justify-between gap-3 border-t border-zinc-300 bg-white px-5 py-3\">\n+              <Button\n+                className=\"min-w-[5rem] rounded-[0.5rem] border-none px-1.5 py-2 font-sans text-sm font-medium leading-[1.375rem] text-zinc-800 shadow-none ring-1 ring-zinc-400\"\n+                variant={\"outline\"}\n+                onClick={handleClearFilters}\n+              >\n+                Clear\n+              </Button>\n+\n+              <Button\n+                className={cn(\n+                  \"min-w-[6.25rem] rounded-[0.5rem] border-none px-1.5 py-2 font-sans text-sm font-medium leading-[1.375rem] text-white shadow-none ring-1 disabled:ring-0\",\n+                )}\n+                onClick={handleApplyFilters}\n+                disabled={!hasLocalActiveFilters()}\n+              >\n+                Apply filters\n+              </Button>\n+            </div>\n+          </div>\n+        </>\n+      )}\n+    </div>\n+  );\n+}\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FiltersList.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FiltersList.tsx\nnew file mode 100644\nindex 000000000000..da034fcc9f52\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/FiltersList.tsx\n@@ -0,0 +1,63 @@\n+import { useCallback } from \"react\";\n+import { FilterChip } from \"../FilterChip\";\n+import { FilterSheet } from \"./FilterSheet\";\n+import { CategoryKey, useBlockMenuContext } from \"../block-menu-provider\";\n+\n+export const FiltersList = () => {\n+  const { filters, setFilters, categoryCounts } = useBlockMenuContext();\n+  const categories: Array<{ key: CategoryKey; name: string }> = [\n+    { key: \"blocks\", name: \"Blocks\" },\n+    { key: \"integrations\", name: \"Integrations\" },\n+    { key: \"marketplace_agents\", name: \"Marketplace agents\" },\n+    { key: \"my_agents\", name: \"My agents\" },\n+  ];\n+\n+  const handleCategoryFilter = (category: CategoryKey) => {\n+    setFilters({\n+      ...filters,\n+      categories: {\n+        ...filters.categories,\n+        [category]: !filters.categories[category],\n+      },\n+    });\n+  };\n+\n+  const handleCreatorFilter = useCallback(\n+    (creator: string) => {\n+      const updatedCreators = filters.createdBy.includes(creator)\n+        ? filters.createdBy.filter((c) => c !== creator)\n+        : [...filters.createdBy, creator];\n+\n+      setFilters({\n+        ...filters,\n+        createdBy: updatedCreators,\n+      });\n+    },\n+    [filters, setFilters],\n+  );\n+\n+  return (\n+    <div className=\"flex flex-nowrap gap-3 overflow-x-auto scrollbar-hide\">\n+      <FilterSheet categories={categories} />\n+\n+      {filters.createdBy.map((creator) => (\n+        <FilterChip\n+          key={creator}\n+          name={\"Created by \" + creator}\n+          selected={true}\n+          onClick={() => handleCreatorFilter(creator)}\n+        />\n+      ))}\n+\n+      {categories.map((category) => (\n+        <FilterChip\n+          key={category.key}\n+          name={category.name}\n+          number={categoryCounts[category.key]}\n+          selected={filters.categories[category.key]}\n+          onClick={() => handleCategoryFilter(category.key)}\n+        />\n+      ))}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/NoSearchResult.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/NoSearchResult.tsx\nnew file mode 100644\nindex 000000000000..726e3804a1a1\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/NoSearchResult.tsx\n@@ -0,0 +1,17 @@\n+import { Frown } from \"lucide-react\";\n+\n+export const NoSearchResult = () => {\n+  return (\n+    <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n+      <Frown className=\"mb-10 h-16 w-16 text-zinc-400\" strokeWidth={1} />\n+      <div className=\"space-y-1\">\n+        <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+          No match found\n+        </p>\n+        <p className=\"font-sans text-sm font-normal leading-[1.375rem] text-zinc-600\">\n+          Try adjusting your search terms\n+        </p>\n+      </div>\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/SearchList.tsx b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/SearchList.tsx\nnew file mode 100644\nindex 000000000000..aaad3153b454\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/builder/block-menu/search-and-filter/SearchList.tsx\n@@ -0,0 +1,171 @@\n+import React from \"react\";\n+import { MarketplaceAgentBlock } from \"../MarketplaceAgentBlock\";\n+import { Block } from \"../Block\";\n+import { UGCAgentBlock } from \"../UGCAgentBlock\";\n+import { AiBlock } from \"./AiBlock\";\n+import { IntegrationBlock } from \"../IntegrationBlock\";\n+import { useBlockMenuContext } from \"../block-menu-provider\";\n+import { NoSearchResult } from \"./NoSearchResult\";\n+import { Button } from \"@/components/ui/button\";\n+import { convertLibraryAgentIntoBlock, getBlockType } from \"@/lib/utils\";\n+\n+interface SearchListProps {\n+  isLoading: boolean;\n+  loadingMore: boolean;\n+  hasMore: boolean;\n+  error: string | null;\n+  onRetry: () => void;\n+}\n+\n+export const SearchList: React.FC<SearchListProps> = ({\n+  isLoading,\n+  loadingMore,\n+  hasMore,\n+  error,\n+  onRetry,\n+}) => {\n+  const { searchQuery, addNode, loadingSlug, searchData, handleAddStoreAgent } =\n+    useBlockMenuContext();\n+\n+  if (isLoading) {\n+    return (\n+      <div className=\"space-y-2.5 px-4\">\n+        <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+          Search results\n+        </p>\n+        {Array(6)\n+          .fill(0)\n+          .map((_, i) => (\n+            <Block.Skeleton key={i} />\n+          ))}\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"px-4\">\n+        <div className=\"rounded-lg border border-red-200 bg-red-50 p-3\">\n+          <p className=\"mb-2 text-sm text-red-600\">\n+            Error loading search results: {error}\n+          </p>\n+          <Button\n+            variant=\"outline\"\n+            size=\"sm\"\n+            onClick={onRetry}\n+            className=\"h-7 text-xs\"\n+          >\n+            Retry\n+          </Button>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  if (searchData.length === 0) {\n+    return <NoSearchResult />;\n+  }\n+\n+  return (\n+    <div className=\"space-y-2.5 px-4\">\n+      <p className=\"font-sans text-sm font-medium leading-[1.375rem] text-zinc-800\">\n+        Search results\n+      </p>\n+      {searchData.map((item: any, index: number) => {\n+        const blockType = getBlockType(item);\n+\n+        switch (blockType) {\n+          case \"store_agent\":\n+            return (\n+              <MarketplaceAgentBlock\n+                key={index}\n+                slug={item.slug}\n+                highlightedText={searchQuery}\n+                title={item.agent_name}\n+                image_url={item.agent_image}\n+                creator_name={item.creator}\n+                number_of_runs={item.runs}\n+                loading={loadingSlug == item.slug}\n+                onClick={() =>\n+                  handleAddStoreAgent({\n+                    creator_name: item.creator,\n+                    slug: item.slug,\n+                  })\n+                }\n+              />\n+            );\n+          case \"block\":\n+            return (\n+              <Block\n+                key={index}\n+                title={item.name}\n+                highlightedText={searchQuery}\n+                description={item.description}\n+                onClick={() => {\n+                  addNode(item);\n+                }}\n+              />\n+            );\n+          case \"provider\":\n+            return (\n+              <IntegrationBlock\n+                key={index}\n+                title={item.name}\n+                highlightedText={searchQuery}\n+                icon_url={`/integrations/${item.name}.png`}\n+                description={item.description}\n+                onClick={() => {\n+                  addNode(item);\n+                }}\n+              />\n+            );\n+          case \"library_agent\":\n+            return (\n+              <UGCAgentBlock\n+                key={index}\n+                title={item.name}\n+                highlightedText={searchQuery}\n+                image_url={item.image_url}\n+                version={item.graph_version}\n+                edited_time={item.updated_at}\n+                onClick={() => {\n+                  const block = convertLibraryAgentIntoBlock(item);\n+                  addNode(block);\n+                }}\n+              />\n+            );\n+          case \"ai_agent\":\n+            return (\n+              <AiBlock\n+                key={index}\n+                title={item.name}\n+                description={item.description}\n+                ai_name={item.inputSchema.properties.model.enum.find(\n+                  (model: string) =>\n+                    model\n+                      .toLowerCase()\n+                      .includes(searchQuery.toLowerCase().trim()),\n+                )}\n+                onClick={() => {\n+                  const block = convertLibraryAgentIntoBlock(item);\n+                  addNode(block);\n+                }}\n+              />\n+            );\n+\n+          default:\n+            return null;\n+        }\n+      })}\n+      {loadingMore && hasMore && (\n+        <div className=\"space-y-2.5\">\n+          {Array(3)\n+            .fill(0)\n+            .map((_, i) => (\n+              <Block.Skeleton key={`loading-more-${i}`} />\n+            ))}\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\ndiff --git a/autogpt_platform/frontend/src/components/edit/control/ControlPanel.tsx b/autogpt_platform/frontend/src/components/edit/control/ControlPanel.tsx\nindex 870d34582283..6df5d191f95c 100644\n--- a/autogpt_platform/frontend/src/components/edit/control/ControlPanel.tsx\n+++ b/autogpt_platform/frontend/src/components/edit/control/ControlPanel.tsx\n@@ -1,13 +1,7 @@\n-import { Card, CardContent } from \"@/components/ui/card\";\n-import {\n-  Tooltip,\n-  TooltipContent,\n-  TooltipTrigger,\n-} from \"@/components/ui/tooltip\";\n-import { Button } from \"@/components/ui/button\";\n import { Separator } from \"@/components/ui/separator\";\n import { cn } from \"@/lib/utils\";\n import React from \"react\";\n+import { ControlPanelButton } from \"@/components/builder/block-menu/ControlPanelButton\";\n \n /**\n  * Represents a control element for the ControlPanel Component.\n@@ -27,6 +21,7 @@ interface ControlPanelProps {\n   controls: Control[];\n   topChildren?: React.ReactNode;\n   botChildren?: React.ReactNode;\n+\n   className?: string;\n }\n \n@@ -45,42 +40,31 @@ export const ControlPanel = ({\n   className,\n }: ControlPanelProps) => {\n   return (\n-    <Card className={cn(\"m-4 mt-24 w-14 dark:bg-slate-900\", className)}>\n-      <CardContent className=\"p-0\">\n-        <div className=\"flex flex-col items-center gap-3 rounded-xl py-3\">\n-          {topChildren}\n-          <Separator className=\"dark:bg-slate-700\" />\n-          {controls.map((control, index) => (\n-            <Tooltip key={index} delayDuration={500}>\n-              <TooltipTrigger asChild>\n-                <div>\n-                  <Button\n-                    variant=\"ghost\"\n-                    size=\"icon\"\n-                    onClick={() => control.onClick()}\n-                    data-id={`control-button-${index}`}\n-                    data-testid={`blocks-control-${control.label.toLowerCase()}-button`}\n-                    disabled={control.disabled || false}\n-                    className=\"dark:bg-slate-900 dark:text-slate-100 dark:hover:bg-slate-800\"\n-                  >\n-                    {control.icon}\n-                    <span className=\"sr-only\">{control.label}</span>\n-                  </Button>\n-                </div>\n-              </TooltipTrigger>\n-              <TooltipContent\n-                side=\"right\"\n-                className=\"dark:bg-slate-800 dark:text-slate-100\"\n-              >\n-                {control.label}\n-              </TooltipContent>\n-            </Tooltip>\n-          ))}\n-          <Separator className=\"dark:bg-slate-700\" />\n-          {botChildren}\n-        </div>\n-      </CardContent>\n-    </Card>\n+    <section\n+      className={cn(\n+        \"absolute left-4 top-24 z-10 w-[4.25rem] overflow-hidden rounded-[1rem] border-none bg-white p-0 shadow-[0_1px_5px_0_rgba(0,0,0,0.1)]\",\n+        className,\n+      )}\n+    >\n+      <div className=\"flex flex-col items-center justify-center rounded-[1rem] p-0\">\n+        {topChildren}\n+        <Separator className=\"text-[#E1E1E1]\" />\n+        {controls.map((control, index) => (\n+          <ControlPanelButton\n+            key={index}\n+            onClick={() => control.onClick()}\n+            data-id={`control-button-${index}`}\n+            data-testid={`blocks-control-${control.label.toLowerCase()}-button`}\n+            disabled={control.disabled || false}\n+            className=\"rounded-none\"\n+          >\n+            {control.icon}\n+          </ControlPanelButton>\n+        ))}\n+        <Separator className=\"text-[#E1E1E1]\" />\n+        {botChildren}\n+      </div>\n+    </section>\n   );\n };\n export default ControlPanel;\ndiff --git a/autogpt_platform/frontend/src/components/edit/control/SaveControl.tsx b/autogpt_platform/frontend/src/components/edit/control/SaveControl.tsx\nindex bfa0408dbad4..aeb4fc2cbef6 100644\n--- a/autogpt_platform/frontend/src/components/edit/control/SaveControl.tsx\n+++ b/autogpt_platform/frontend/src/components/edit/control/SaveControl.tsx\n@@ -10,12 +10,8 @@ import { Button } from \"@/components/ui/button\";\n import { GraphMeta } from \"@/lib/autogpt-server-api\";\n import { Label } from \"@/components/ui/label\";\n import { IconSave } from \"@/components/ui/icons\";\n-import {\n-  Tooltip,\n-  TooltipContent,\n-  TooltipTrigger,\n-} from \"@/components/ui/tooltip\";\n import { useToast } from \"@/components/ui/use-toast\";\n+import { ControlPanelButton } from \"@/components/builder/block-menu/ControlPanelButton\";\n \n interface SaveControlProps {\n   agentMeta: GraphMeta | null;\n@@ -26,6 +22,11 @@ interface SaveControlProps {\n   onNameChange: (name: string) => void;\n   onDescriptionChange: (description: string) => void;\n   pinSavePopover: boolean;\n+\n+  blockMenuSelected: \"save\" | \"block\" | \"\";\n+  setBlockMenuSelected: React.Dispatch<\n+    React.SetStateAction<\"\" | \"save\" | \"block\">\n+  >;\n }\n \n /**\n@@ -48,6 +49,8 @@ export const SaveControl = ({\n   onNameChange,\n   agentDescription,\n   onDescriptionChange,\n+  blockMenuSelected,\n+  setBlockMenuSelected,\n   pinSavePopover,\n }: SaveControlProps) => {\n   /**\n@@ -82,27 +85,29 @@ export const SaveControl = ({\n   }, [handleSave, toast]);\n \n   return (\n-    <Popover open={pinSavePopover ? true : undefined}>\n-      <Tooltip delayDuration={500}>\n-        <TooltipTrigger asChild>\n-          <PopoverTrigger asChild>\n-            <Button\n-              variant=\"ghost\"\n-              size=\"icon\"\n-              data-id=\"save-control-popover-trigger\"\n-              data-testid=\"blocks-control-save-button\"\n-              name=\"Save\"\n-            >\n-              <IconSave className=\"dark:text-gray-300\" />\n-            </Button>\n-          </PopoverTrigger>\n-        </TooltipTrigger>\n-        <TooltipContent side=\"right\">Save</TooltipContent>\n-      </Tooltip>\n+    <Popover\n+      open={pinSavePopover ? true : undefined}\n+      onOpenChange={(open) => open || setBlockMenuSelected(\"\")}\n+    >\n+      <PopoverTrigger>\n+        <ControlPanelButton\n+          data-id=\"save-control-popover-trigger\"\n+          data-testid=\"blocks-control-save-button\"\n+          selected={blockMenuSelected === \"save\"}\n+          onClick={() => {\n+            setBlockMenuSelected(\"save\");\n+          }}\n+          className=\"rounded-none\"\n+        >\n+          <IconSave className=\"h-5 w-5\" strokeWidth={2} />\n+        </ControlPanelButton>\n+      </PopoverTrigger>\n+\n       <PopoverContent\n         side=\"right\"\n-        sideOffset={15}\n+        sideOffset={16}\n         align=\"start\"\n+        className=\"w-[17rem] rounded-xl border-none p-0 shadow-none md:w-[30rem]\"\n         data-id=\"save-control-popover-content\"\n       >\n         <Card className=\"border-none shadow-none dark:bg-slate-900\">\ndiff --git a/autogpt_platform/frontend/src/components/styles/scrollbar.ts b/autogpt_platform/frontend/src/components/styles/scrollbar.ts\nnew file mode 100644\nindex 000000000000..78a14ec7fb66\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/components/styles/scrollbar.ts\n@@ -0,0 +1,2 @@\n+export const scrollbarStyles =\n+  \"scrollbar-thumb-rounded h-full overflow-y-auto pt-4 transition-all duration-200 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-transparent hover:scrollbar-thumb-zinc-200\";\ndiff --git a/autogpt_platform/frontend/src/components/ui/checkbox.tsx b/autogpt_platform/frontend/src/components/ui/checkbox.tsx\nindex 81d0befff4e2..5438d5946530 100644\n--- a/autogpt_platform/frontend/src/components/ui/checkbox.tsx\n+++ b/autogpt_platform/frontend/src/components/ui/checkbox.tsx\n@@ -13,7 +13,7 @@ const Checkbox = React.forwardRef<\n   <CheckboxPrimitive.Root\n     ref={ref}\n     className={cn(\n-      \"peer h-4 w-4 shrink-0 rounded-sm border border-neutral-200 border-neutral-900 shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-neutral-900 data-[state=checked]:text-neutral-50 dark:border-neutral-50 dark:border-neutral-800 dark:focus-visible:ring-neutral-300 dark:data-[state=checked]:bg-neutral-50 dark:data-[state=checked]:text-neutral-900\",\n+      \"peer h-4 w-4 shrink-0 rounded-sm border border-neutral-900 shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-neutral-900 data-[state=checked]:text-neutral-50 dark:border-neutral-50 dark:border-neutral-800 dark:focus-visible:ring-neutral-300 dark:data-[state=checked]:bg-neutral-50 dark:data-[state=checked]:text-neutral-900\",\n       className,\n     )}\n     {...props}\n@@ -21,7 +21,7 @@ const Checkbox = React.forwardRef<\n     <CheckboxPrimitive.Indicator\n       className={cn(\"flex items-center justify-center text-current\")}\n     >\n-      <CheckIcon className=\"h-4 w-4\" />\n+      <CheckIcon className=\"h-4 w-4\" strokeWidth={2} />\n     </CheckboxPrimitive.Indicator>\n   </CheckboxPrimitive.Root>\n ));\ndiff --git a/autogpt_platform/frontend/src/components/ui/multiselect.tsx b/autogpt_platform/frontend/src/components/ui/multiselect.tsx\nindex 876444262194..6c3243015a61 100644\n--- a/autogpt_platform/frontend/src/components/ui/multiselect.tsx\n+++ b/autogpt_platform/frontend/src/components/ui/multiselect.tsx\n@@ -256,7 +256,7 @@ const MultiSelectorList = forwardRef<\n     <CommandList\n       ref={ref}\n       className={cn(\n-        \"scrollbar-thin scrollbar-track-transparent scrollbar-thumb-muted-foreground dark:scrollbar-thumb-muted scrollbar-thumb-rounded-lg absolute top-0 z-10 flex w-full flex-col gap-2 rounded-md border border-muted bg-background p-2 shadow-md transition-colors\",\n+        \"scrollbar-thumb-rounded-lg absolute top-0 z-10 flex w-full flex-col gap-2 rounded-md border border-muted bg-background p-2 shadow-md transition-colors scrollbar-thin scrollbar-track-transparent scrollbar-thumb-muted-foreground dark:scrollbar-thumb-muted\",\n         className,\n       )}\n     >\ndiff --git a/autogpt_platform/frontend/src/hooks/index.ts b/autogpt_platform/frontend/src/hooks/index.ts\nnew file mode 100644\nindex 000000000000..40d59d0e50ce\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/hooks/index.ts\n@@ -0,0 +1 @@\n+export { usePagination } from \"./usePagination\";\ndiff --git a/autogpt_platform/frontend/src/hooks/useAgentGraph.tsx b/autogpt_platform/frontend/src/hooks/useAgentGraph.tsx\nindex 55b7c4d2bdcf..4c3d11153bba 100644\n--- a/autogpt_platform/frontend/src/hooks/useAgentGraph.tsx\n+++ b/autogpt_platform/frontend/src/hooks/useAgentGraph.tsx\n@@ -14,6 +14,7 @@ import BackendAPI, {\n   GraphMeta,\n   NodeExecutionResult,\n   SpecialBlockID,\n+  Node,\n } from \"@/lib/autogpt-server-api\";\n import {\n   deepEquals,\n@@ -177,6 +178,16 @@ export default function useAgentGraph(\n       setAgentName(graph.name);\n       setAgentDescription(graph.description);\n \n+      const getGraphName = (node: Node) => {\n+        if (node.input_default.agent_name) {\n+          return node.input_default.agent_name;\n+        }\n+        return (\n+          availableFlows.find((flow) => flow.id === node.input_default.graph_id)\n+            ?.name || null\n+        );\n+      };\n+\n       setNodes((prevNodes) => {\n         const _newNodes = graph.nodes.map((node) => {\n           const block = availableNodes.find(\n@@ -184,12 +195,8 @@ export default function useAgentGraph(\n           )!;\n           if (!block) return null;\n           const prevNode = prevNodes.find((n) => n.id === node.id);\n-          const flow =\n-            block.uiType == BlockUIType.AGENT\n-              ? availableFlows.find(\n-                  (flow) => flow.id === node.input_default.graph_id,\n-                )\n-              : null;\n+          const graphName =\n+            (block.uiType == BlockUIType.AGENT && getGraphName(node)) || null;\n           const newNode: CustomNode = {\n             id: node.id,\n             type: \"custom\",\n@@ -201,7 +208,7 @@ export default function useAgentGraph(\n               isOutputOpen: false,\n               ...prevNode?.data,\n               block_id: block.id,\n-              blockType: flow?.name || block.name,\n+              blockType: graphName || block.name,\n               blockCosts: block.costs,\n               categories: block.categories,\n               description: block.description,\n@@ -281,15 +288,17 @@ export default function useAgentGraph(\n \n   const getToolFuncName = (nodeId: string) => {\n     const sinkNode = nodes.find((node) => node.id === nodeId);\n-    const sinkNodeName = sinkNode\n-      ? sinkNode.data.block_id === SpecialBlockID.AGENT\n-        ? sinkNode.data.hardcodedValues?.graph_id\n-          ? availableFlows.find(\n-              (flow) => flow.id === sinkNode.data.hardcodedValues.graph_id,\n-            )?.name || \"agentexecutorblock\"\n-          : \"agentexecutorblock\"\n-        : sinkNode.data.title.split(\" \")[0]\n-      : \"\";\n+\n+    if (!sinkNode) return \"\";\n+\n+    const sinkNodeName =\n+      sinkNode.data.block_id === SpecialBlockID.AGENT\n+        ? sinkNode.data.hardcodedValues?.agent_name ||\n+          availableFlows.find(\n+            (flow) => flow.id === sinkNode.data.hardcodedValues.graph_id,\n+          )?.name ||\n+          \"agentexecutorblock\"\n+        : sinkNode.data.title.split(\" \")[0];\n \n     return sinkNodeName;\n   };\n@@ -1120,7 +1129,6 @@ export default function useAgentGraph(\n     setAgentDescription,\n     savedAgent,\n     availableNodes,\n-    availableFlows,\n     getOutputType,\n     requestSave,\n     requestSaveAndRun,\ndiff --git a/autogpt_platform/frontend/src/hooks/usePagination.ts b/autogpt_platform/frontend/src/hooks/usePagination.ts\nnew file mode 100644\nindex 000000000000..bce8e9c96a3d\n--- /dev/null\n+++ b/autogpt_platform/frontend/src/hooks/usePagination.ts\n@@ -0,0 +1,232 @@\n+import { useState, useCallback, useRef, useEffect } from \"react\";\n+import { useBackendAPI } from \"@/lib/autogpt-server-api/context\";\n+import {\n+  Block,\n+  BlockRequest,\n+  Provider,\n+  StoreAgent,\n+  LibraryAgent,\n+  LibraryAgentSortEnum,\n+} from \"@/lib/autogpt-server-api\";\n+\n+type BlocksPaginationRequest = { apiType: \"blocks\" } & BlockRequest;\n+type ProvidersPaginationRequest = { apiType: \"providers\" } & {\n+  page?: number;\n+  page_size?: number;\n+};\n+type StoreAgentsPaginationRequest = { apiType: \"store-agents\" } & {\n+  featured?: boolean;\n+  creator?: string;\n+  sorted_by?: string;\n+  search_query?: string;\n+  category?: string;\n+  page?: number;\n+  page_size?: number;\n+};\n+type LibraryAgentsPaginationRequest = { apiType: \"library-agents\" } & {\n+  search_term?: string;\n+  sort_by?: LibraryAgentSortEnum;\n+  page?: number;\n+  page_size?: number;\n+};\n+\n+type PaginationRequest =\n+  | BlocksPaginationRequest\n+  | ProvidersPaginationRequest\n+  | StoreAgentsPaginationRequest\n+  | LibraryAgentsPaginationRequest;\n+\n+interface UsePaginationOptions<T extends PaginationRequest> {\n+  request: T;\n+  pageSize?: number;\n+  enabled?: boolean;\n+}\n+\n+interface UsePaginationReturn<T> {\n+  data: T[];\n+  loading: boolean;\n+  loadingMore: boolean;\n+  hasMore: boolean;\n+  error: string | null;\n+  scrollRef: React.RefObject<HTMLDivElement>;\n+  refresh: () => void;\n+  loadMore: () => void;\n+}\n+\n+type GetReturnType<T> = T extends BlocksPaginationRequest\n+  ? Block\n+  : T extends ProvidersPaginationRequest\n+    ? Provider\n+    : T extends StoreAgentsPaginationRequest\n+      ? StoreAgent\n+      : T extends LibraryAgentsPaginationRequest\n+        ? LibraryAgent\n+        : never;\n+\n+export const usePagination = <T extends PaginationRequest>({\n+  request,\n+  pageSize = 10,\n+  enabled = true, // to allow pagination or not\n+}: UsePaginationOptions<T>): UsePaginationReturn<GetReturnType<T>> => {\n+  const [data, setData] = useState<GetReturnType<T>[]>([]);\n+  const [loading, setLoading] = useState(true);\n+  const [loadingMore, setLoadingMore] = useState(false);\n+  const [hasMore, setHasMore] = useState(true);\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [error, setError] = useState<string | null>(null);\n+  const scrollRef = useRef<HTMLDivElement>(null);\n+  const isLoadingRef = useRef(false);\n+  const requestRef = useRef(request);\n+  const api = useBackendAPI();\n+\n+  // because we are using this pagination for multiple components\n+  requestRef.current = request;\n+\n+  const fetchData = useCallback(\n+    async (page: number, isLoadMore = false) => {\n+      if (isLoadingRef.current || !enabled) return;\n+\n+      isLoadingRef.current = true;\n+\n+      if (isLoadMore) {\n+        setLoadingMore(true);\n+      } else {\n+        setLoading(true);\n+      }\n+\n+      setError(null);\n+\n+      try {\n+        let response;\n+        let newData: GetReturnType<T>[];\n+        let pagination;\n+\n+        const currentRequest = requestRef.current;\n+        const requestWithPagination = {\n+          ...currentRequest,\n+          page,\n+          page_size: pageSize,\n+        };\n+\n+        switch (currentRequest.apiType) {\n+          case \"blocks\":\n+            const { apiType: _, ...blockRequest } = requestWithPagination;\n+            response = await api.getBuilderBlocks(blockRequest);\n+            newData = response.blocks as GetReturnType<T>[];\n+            pagination = response.pagination;\n+            break;\n+\n+          case \"providers\":\n+            const { apiType: __, ...providerRequest } = requestWithPagination;\n+            response = await api.getProviders(providerRequest);\n+            newData = response.providers as GetReturnType<T>[];\n+            pagination = response.pagination;\n+            break;\n+\n+          case \"store-agents\":\n+            const { apiType: ___, ...storeAgentRequest } =\n+              requestWithPagination;\n+            response = await api.getStoreAgents(storeAgentRequest);\n+            newData = response.agents as GetReturnType<T>[];\n+            pagination = response.pagination;\n+            break;\n+\n+          case \"library-agents\":\n+            const { apiType: ____, ...libraryAgentRequest } =\n+              requestWithPagination;\n+            response = await api.listLibraryAgents(libraryAgentRequest);\n+            newData = response.agents as GetReturnType<T>[];\n+            pagination = response.pagination;\n+            break;\n+\n+          default:\n+            throw new Error(\n+              `Unknown request type: ${(currentRequest as any).apiType}`,\n+            );\n+        }\n+\n+        if (isLoadMore) {\n+          setData((prev) => [...prev, ...newData]);\n+        } else {\n+          setData(newData);\n+        }\n+\n+        setHasMore(page < pagination.total_pages);\n+        setCurrentPage(page);\n+      } catch (err) {\n+        const errorMessage =\n+          err instanceof Error ? err.message : \"Failed to fetch data\";\n+        setError(errorMessage);\n+        console.error(\"Error fetching data:\", err);\n+      } finally {\n+        setLoading(false);\n+        setLoadingMore(false);\n+        isLoadingRef.current = false;\n+      }\n+    },\n+    [api, pageSize, enabled],\n+  );\n+\n+  const handleScroll = useCallback(() => {\n+    const scrollElement = scrollRef.current;\n+    if (\n+      !scrollElement ||\n+      loadingMore ||\n+      !hasMore ||\n+      isLoadingRef.current ||\n+      !enabled\n+    )\n+      return;\n+\n+    const { scrollTop, scrollHeight, clientHeight } = scrollElement;\n+    const threshold = 100;\n+\n+    if (scrollTop + clientHeight >= scrollHeight - threshold) {\n+      fetchData(currentPage + 1, true);\n+    }\n+  }, [fetchData, currentPage, loadingMore, hasMore, enabled]);\n+\n+  const refresh = useCallback(() => {\n+    setCurrentPage(1);\n+    setHasMore(true);\n+    setError(null);\n+    fetchData(1);\n+  }, [fetchData]);\n+\n+  const loadMore = useCallback(() => {\n+    if (!loadingMore && hasMore && !isLoadingRef.current && enabled) {\n+      fetchData(currentPage + 1, true);\n+    }\n+  }, [fetchData, currentPage, loadingMore, hasMore, enabled]);\n+\n+  const requestString = JSON.stringify(request);\n+\n+  useEffect(() => {\n+    if (enabled) {\n+      setCurrentPage(1);\n+      setHasMore(true);\n+      setError(null);\n+      setData([]);\n+      fetchData(1);\n+    }\n+  }, [requestString, enabled, fetchData]);\n+\n+  useEffect(() => {\n+    const scrollElement = scrollRef.current;\n+    if (scrollElement && enabled) {\n+      scrollElement.addEventListener(\"scroll\", handleScroll);\n+      return () => scrollElement.removeEventListener(\"scroll\", handleScroll);\n+    }\n+  }, [handleScroll, enabled]);\n+\n+  return {\n+    data,\n+    loading,\n+    loadingMore,\n+    hasMore,\n+    error,\n+    scrollRef,\n+    refresh,\n+    loadMore,\n+  };\n+};\ndiff --git a/autogpt_platform/frontend/src/lib/autogpt-server-api/client.ts b/autogpt_platform/frontend/src/lib/autogpt-server-api/client.ts\nindex f82ed8e302a8..a1b0e169a674 100644\n--- a/autogpt_platform/frontend/src/lib/autogpt-server-api/client.ts\n+++ b/autogpt_platform/frontend/src/lib/autogpt-server-api/client.ts\n@@ -9,6 +9,11 @@ import type {\n   APIKeyCredentials,\n   APIKeyPermission,\n   Block,\n+  BlockCategoryResponse,\n+  BlockRequest,\n+  BlockResponse,\n+  BlockSearchResponse,\n+  CountResponse,\n   CreateAPIKeyResponse,\n   CreatorDetails,\n   CreatorsResponse,\n@@ -42,6 +47,7 @@ import type {\n   OttoQuery,\n   OttoResponse,\n   ProfileDetails,\n+  ProviderResponse,\n   RefundRequest,\n   ReviewSubmissionRequest,\n   Schedule,\n@@ -56,6 +62,7 @@ import type {\n   StoreSubmissionRequest,\n   StoreSubmissionsResponse,\n   SubmissionStatus,\n+  SuggestionsResponse,\n   TransactionHistory,\n   User,\n   UserOnboarding,\n@@ -206,6 +213,44 @@ export default class BackendAPI {\n     return this._get(\"/onboarding/enabled\");\n   }\n \n+  ////////////////////////////////////////\n+  //////////////// BUILDER ///////////////\n+  ////////////////////////////////////////\n+\n+  getSuggestions(): Promise<SuggestionsResponse> {\n+    return this._get(\"/builder/suggestions\");\n+  }\n+\n+  getBlockCategories(): Promise<BlockCategoryResponse[]> {\n+    return this._get(\"/builder/categories\");\n+  }\n+\n+  getBuilderBlocks(request?: BlockRequest): Promise<BlockResponse> {\n+    return this._get(\"/builder/blocks\", request);\n+  }\n+\n+  getProviders(request?: {\n+    page?: number;\n+    page_size?: number;\n+  }): Promise<ProviderResponse> {\n+    return this._get(\"/builder/providers\", request);\n+  }\n+\n+  searchBlocks(options: {\n+    search_query?: string;\n+    filter?: (\"blocks\" | \"integrations\" | \"marketplace_agents\" | \"my_agents\")[];\n+    by_creator?: string[];\n+    search_id?: string;\n+    page?: number;\n+    page_size?: number;\n+  }): Promise<BlockSearchResponse> {\n+    return this._request(\"POST\", \"/builder/search\", options);\n+  }\n+\n+  getBlockCounts(): Promise<CountResponse> {\n+    return this._get(\"/builder/counts\");\n+  }\n+\n   ////////////////////////////////////////\n   //////////////// GRAPHS ////////////////\n   ////////////////////////////////////////\ndiff --git a/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts b/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\nindex b4ba851053d0..f00dba21d2a2 100644\n--- a/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\n+++ b/autogpt_platform/frontend/src/lib/autogpt-server-api/types.ts\n@@ -27,6 +27,71 @@ export type BlockCost = {\n   cost_filter: { [key: string]: any };\n };\n \n+/* Mirror of backend/server/v2/builder/model.py:SuggestionsResponse */\n+export type SuggestionsResponse = {\n+  otto_suggestions: string[];\n+  recent_searches: string[];\n+  providers: string[];\n+  top_blocks: Block[];\n+};\n+\n+/* Mirror of backend/server/v2/builder/model.py:BlockCategoryResponse */\n+export type BlockCategoryResponse = {\n+  name: string;\n+  total_blocks: number;\n+  blocks: Block[];\n+};\n+\n+export type BlockRequest = {\n+  page?: number;\n+  page_size?: number;\n+} & (\n+  | { category?: string }\n+  | { type?: \"all\" | \"input\" | \"action\" | \"output\" }\n+  | { provider?: CredentialsProviderName }\n+);\n+\n+/* Mirror of backend/server/v2/builder/model.py:BlockReponse */\n+export type BlockResponse = {\n+  blocks: Block[];\n+  pagination: Pagination;\n+};\n+\n+/* Mirror of backend/server/v2/builder/model.py:Provider */\n+export type Provider = {\n+  name: CredentialsProviderName;\n+  description: string;\n+  integration_count: number;\n+};\n+\n+/* Mirror of backend/server/v2/builder/model.py:ProviderResponse */\n+export type ProviderResponse = {\n+  providers: Provider[];\n+  pagination: Pagination;\n+};\n+\n+/* Mirror of backend/server/v2/builder/model.py:BlockSearchResponse */\n+export type BlockSearchResponse = {\n+  items: (Block | LibraryAgent | StoreAgent)[];\n+  total_items: Record<\n+    \"blocks\" | \"integrations\" | \"marketplace_agents\" | \"my_agents\",\n+    number\n+  >;\n+  page: number;\n+  more_pages: boolean;\n+};\n+\n+/* Mirror of backend/server/v2/builder/model.py:CountResponse */\n+export type CountResponse = {\n+  all_blocks: number;\n+  input_blocks: number;\n+  action_blocks: number;\n+  output_blocks: number;\n+  integrations: number;\n+  marketplace_agents: number;\n+  my_agents: number;\n+};\n+\n /* Mirror of backend/data/block.py:Block */\n export type Block = {\n   id: string;\n@@ -402,6 +467,7 @@ export type LibraryAgent = {\n   name: string;\n   description: string;\n   input_schema: BlockIOObjectSubSchema;\n+  output_schema: BlockIOObjectSubSchema;\n   new_output: boolean;\n   can_access_graph: boolean;\n   is_latest_version: boolean;\ndiff --git a/autogpt_platform/frontend/src/lib/utils.ts b/autogpt_platform/frontend/src/lib/utils.ts\nindex 3eea21add85f..3be378777830 100644\n--- a/autogpt_platform/frontend/src/lib/utils.ts\n+++ b/autogpt_platform/frontend/src/lib/utils.ts\n@@ -1,7 +1,13 @@\n import { type ClassValue, clsx } from \"clsx\";\n import { twMerge } from \"tailwind-merge\";\n \n-import { Category } from \"@/lib/autogpt-server-api/types\";\n+import {\n+  Block,\n+  BlockUIType,\n+  Category,\n+  LibraryAgent,\n+  SpecialBlockID,\n+} from \"@/lib/autogpt-server-api/types\";\n import { NodeDimension } from \"@/components/Flow\";\n \n export function cn(...inputs: ClassValue[]) {\n@@ -397,7 +403,59 @@ export function isEmptyOrWhitespace(str: string | undefined | null): boolean {\n   return !str || str.trim().length === 0;\n }\n \n-/** Check if a value is an object or not */\n-export function isObject(value: unknown): value is Record<string, unknown> {\n-  return typeof value === \"object\" && value !== null && !Array.isArray(value);\n+export const convertLibraryAgentIntoBlock = (agent: LibraryAgent) => {\n+  const block = {\n+    id: SpecialBlockID.AGENT,\n+    name: agent.name,\n+    description:\n+      `Ver.${agent.graph_version}` +\n+      (agent.description ? ` | ${agent.description}` : \"\"),\n+    categories: [{ category: \"AGENT\", description: \"\" }],\n+    inputSchema: agent.input_schema,\n+    outputSchema: agent.output_schema,\n+    staticOutput: false,\n+    uiType: BlockUIType.AGENT,\n+    uiKey: agent.id,\n+    costs: [],\n+    hardcodedValues: {\n+      graph_id: agent.graph_id,\n+      graph_version: agent.graph_version,\n+      input_schema: agent.input_schema,\n+      output_schema: agent.output_schema,\n+      agent_name: agent.name,\n+    },\n+  } as Block;\n+\n+  return block;\n+};\n+\n+// Need to change it once, we got provider blocks\n+export const getBlockType = (item: any) => {\n+  if (item?.inputSchema?.properties?.model?.title === \"LLM Model\") {\n+    return \"ai_agent\";\n+  }\n+  if (item.id && item.name && item.inputSchema && item.outputSchema) {\n+    return \"block\";\n+  }\n+  if (item.name && typeof item.integration_count === \"number\") {\n+    return \"provider\";\n+  }\n+  if (item.id && item.graph_id && item.status) {\n+    return \"library_agent\";\n+  }\n+  if (item.slug && item.agent_name && item.runs !== undefined) {\n+    return \"store_agent\";\n+  }\n+\n+  return null;\n+};\n+\n+export function parseErrorMessage(error: unknown, message?: string): string {\n+  const errorMessage = error\n+    ? error instanceof Error\n+      ? error.message\n+      : String(error)\n+    : message || \"An unexpected error occurred. Please try again.\";\n+\n+  return errorMessage;\n }\ndiff --git a/autogpt_platform/frontend/src/tests/build.spec.ts b/autogpt_platform/frontend/src/tests/build.spec.ts\nindex 3c6a87ba94b7..4f968242774f 100644\n--- a/autogpt_platform/frontend/src/tests/build.spec.ts\n+++ b/autogpt_platform/frontend/src/tests/build.spec.ts\n@@ -1,304 +1,304 @@\n-// Note: all the comments with //(number)! are for the docs\n-//ignore them when reading the code, but if you change something,\n-//make sure to update the docs! Your autoformmater will break this page,\n-// so don't run it on this file.\n-// --8<-- [start:BuildPageExample]\n-import { test } from \"./fixtures\";\n-import { BuildPage } from \"./pages/build.page\";\n-\n-// Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n-// prettier-ignore\n-test.describe(\"Build\", () => { //(1)!\n-  let buildPage: BuildPage; //(2)!\n-\n-  // Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n-  // prettier-ignore\n-  test.beforeEach(async ({ page, loginPage, testUser }) => { //(3)! ts-ignore\n-    buildPage = new BuildPage(page);\n-\n-    // Start each test with login using worker auth\n-    await page.goto(\"/login\"); //(4)!\n-    await loginPage.login(testUser.email, testUser.password);\n-    await test.expect(page).toHaveURL(\"/marketplace\"); //(5)!\n-    await buildPage.navbar.clickBuildLink();\n-  });\n-\n-  // Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n-  // prettier-ignore\n-  test(\"user can add a block\", async ({ page }) => { //(6)!\n-    // workaround for #8788\n-    await buildPage.navbar.clickBuildLink();\n-    await test.expect(page).toHaveURL(new RegExp(\"/build\"));\n-    await buildPage.waitForPageLoad();\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy(); //(7)!\n-\n-    await buildPage.closeTutorial(); //(9)!\n-    await buildPage.openBlocksPanel(); //(10)!\n-    const block = await buildPage.getDictionaryBlockDetails();\n-\n-    await buildPage.addBlock(block); //(11)!\n-    await buildPage.closeBlocksPanel(); //(12)!\n-    await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy(); //(13)!\n-  });\n-  // --8<-- [end:BuildPageExample]\n-\n-  test(\"user can add all blocks a-l\", async ({ page }, testInfo) => {\n-    // this test is slow af so we 10x the timeout (sorry future me)\n-    await test.setTimeout(testInfo.timeout * 100);\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n-    await buildPage.closeTutorial();\n-    await buildPage.openBlocksPanel();\n-    const blocks = await buildPage.getBlocks();\n-\n-    const blockIdsToSkip = await buildPage.getBlocksToSkip();\n-    const blockTypesToSkip = [\"Input\", \"Output\", \"Agent\", \"AI\"];\n-\n-    // add all the blocks in order except for the agent executor block\n-    for (const block of blocks) {\n-      if (block.name[0].toLowerCase() >= \"m\") {\n-        continue;\n-      }\n-      if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n-        console.log(\"Adding block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n-        await buildPage.addBlock(block);\n-      }\n-    }\n-    await buildPage.closeBlocksPanel();\n-    // check that all the blocks are visible\n-    for (const block of blocks) {\n-      if (block.name[0].toLowerCase() >= \"m\") {\n-        continue;\n-      }\n-      if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n-        console.log(\"Checking block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n-        await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy();\n-      }\n-    }\n-\n-    // check that we can save the agent with all the blocks\n-    await buildPage.saveAgent(\"all blocks test\", \"all blocks test\");\n-    // page should have a url like http://localhost:3000/build?flowID=f4f3a1da-cfb3-430f-a074-a455b047e340\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n-  });\n-\n-  test(\"user can add all blocks m-z\", async ({ page }, testInfo) => {\n-    // this test is slow af so we 10x the timeout (sorry future me)\n-    await test.setTimeout(testInfo.timeout * 100);\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n-    await buildPage.closeTutorial();\n-    await buildPage.openBlocksPanel();\n-    const blocks = await buildPage.getBlocks();\n-\n-    const blockIdsToSkip = await buildPage.getBlocksToSkip();\n-    const blockTypesToSkip = [\"Input\", \"Output\", \"Agent\", \"AI\"];\n-\n-    // add all the blocks in order except for the agent executor block\n-    for (const block of blocks) {\n-      if (block.name[0].toLowerCase() < \"m\") {\n-        continue;\n-      }\n-      if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n-        console.log(\"Adding block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n-        await buildPage.addBlock(block);\n-      }\n-    }\n-    await buildPage.closeBlocksPanel();\n-    // check that all the blocks are visible\n-    for (const block of blocks) {\n-      if (block.name[0].toLowerCase() < \"m\") {\n-        continue;\n-      }\n-      if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n-        console.log(\"Checking block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n-        await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy();\n-      }\n-    }\n-\n-    // check that we can save the agent with all the blocks\n-    await buildPage.saveAgent(\"all blocks test\", \"all blocks test\");\n-    // page should have a url like http://localhost:3000/build?flowID=f4f3a1da-cfb3-430f-a074-a455b047e340\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n-  });\n-\n-  test(\"build navigation is accessible from navbar\", async ({ page }) => {\n-    await buildPage.navbar.clickBuildLink();\n-    await test.expect(page).toHaveURL(new RegExp(\"/build\"));\n-    // workaround for #8788\n-    await page.reload();\n-    await page.reload();\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n-  });\n-\n-  test(\"user can add two blocks and connect them\", async ({\n-    page,\n-  }, testInfo) => {\n-    await test.setTimeout(testInfo.timeout * 10);\n-\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n-    await buildPage.closeTutorial();\n-    await buildPage.openBlocksPanel();\n-\n-    // Define the blocks to add\n-    const block1 = {\n-      id: \"1ff065e9-88e8-4358-9d82-8dc91f622ba9\",\n-      name: \"Store Value 1\",\n-      description: \"Store Value Block 1\",\n-      type: \"Standard\",\n-    };\n-    const block2 = {\n-      id: \"1ff065e9-88e8-4358-9d82-8dc91f622ba9\",\n-      name: \"Store Value 2\",\n-      description: \"Store Value Block 2\",\n-      type: \"Standard\",\n-    };\n-\n-    // Add the blocks\n-    await buildPage.addBlock(block1);\n-    await buildPage.addBlock(block2);\n-    await buildPage.closeBlocksPanel();\n-\n-    // Connect the blocks\n-    await buildPage.connectBlockOutputToBlockInputViaDataId(\n-      \"1-1-output-source\",\n-      \"1-2-input-target\",\n-    );\n-\n-    // Fill in the input for the first block\n-    await buildPage.fillBlockInputByPlaceholder(\n-      block1.id,\n-      \"Enter input\",\n-      \"Test Value\",\n-      \"1\",\n-    );\n-\n-    // Save the agent and wait for the URL to update\n-    await buildPage.saveAgent(\n-      \"Connected Blocks Test\",\n-      \"Testing block connections\",\n-    );\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n-\n-    // Wait for the save button to be enabled again\n-    await buildPage.waitForSaveButton();\n-\n-    // Ensure the run button is enabled\n-    await test.expect(buildPage.isRunButtonEnabled()).resolves.toBeTruthy();\n-\n-    // Run the agent\n-    await buildPage.runAgent();\n-\n-    // Wait for processing to complete by checking the completion badge\n-    await buildPage.waitForCompletionBadge();\n-\n-    // Get the first completion badge and verify it's visible\n-    await test\n-      .expect(buildPage.isCompletionBadgeVisible())\n-      .resolves.toBeTruthy();\n-  });\n-\n-  test(\"user can build an agent with inputs and output blocks\", async ({\n-    page,\n-  }) => {\n-    // simple calculator to double input and output it\n-\n-    // load the pages and prep\n-    await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n-    await buildPage.closeTutorial();\n-    await buildPage.openBlocksPanel();\n-\n-    // find the blocks we want\n-    const blocks = await buildPage.getBlocks();\n-    const inputBlock = blocks.find((b) => b.name === \"Agent Input\");\n-    const outputBlock = blocks.find((b) => b.name === \"Agent Output\");\n-    const calculatorBlock = blocks.find((b) => b.name === \"Calculator\");\n-    if (!inputBlock || !outputBlock || !calculatorBlock) {\n-      throw new Error(\"Input or output block not found\");\n-    }\n-\n-    // add the blocks\n-    await buildPage.addBlock(inputBlock);\n-    await buildPage.addBlock(outputBlock);\n-    await buildPage.addBlock(calculatorBlock);\n-    await buildPage.closeBlocksPanel();\n-\n-    // Wait for blocks to be fully loaded\n-    await page.waitForTimeout(1000);\n-\n-    await test.expect(buildPage.hasBlock(inputBlock)).resolves.toBeTruthy();\n-    await test.expect(buildPage.hasBlock(outputBlock)).resolves.toBeTruthy();\n-    await test\n-      .expect(buildPage.hasBlock(calculatorBlock))\n-      .resolves.toBeTruthy();\n-\n-    // Wait for blocks to be ready for connections\n-    await page.waitForTimeout(1000);\n-\n-    await buildPage.connectBlockOutputToBlockInputViaName(\n-      inputBlock.id,\n-      \"Result\",\n-      calculatorBlock.id,\n-      \"A\",\n-    );\n-    await buildPage.connectBlockOutputToBlockInputViaName(\n-      inputBlock.id,\n-      \"Result\",\n-      calculatorBlock.id,\n-      \"B\",\n-    );\n-    await buildPage.connectBlockOutputToBlockInputViaName(\n-      calculatorBlock.id,\n-      \"Result\",\n-      outputBlock.id,\n-      \"Value\",\n-    );\n-\n-    // Wait for connections to stabilize\n-    await page.waitForTimeout(1000);\n-\n-    await buildPage.fillBlockInputByPlaceholder(\n-      inputBlock.id,\n-      \"Enter Name\",\n-      \"Value\",\n-    );\n-    await buildPage.fillBlockInputByPlaceholder(\n-      outputBlock.id,\n-      \"Enter Name\",\n-      \"Doubled\",\n-    );\n-\n-    // Wait before changing dropdown\n-    await page.waitForTimeout(500);\n-\n-    await buildPage.selectBlockInputValue(\n-      calculatorBlock.id,\n-      \"Operation\",\n-      \"Add\",\n-    );\n-\n-    // Wait before saving\n-    await page.waitForTimeout(1000);\n-\n-    await buildPage.saveAgent(\n-      \"Input and Output Blocks Test\",\n-      \"Testing input and output blocks\",\n-    );\n-    await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n-\n-    // Wait for save to complete\n-    await page.waitForTimeout(1000);\n-\n-    await buildPage.runAgent();\n-    await buildPage.fillRunDialog({\n-      Value: \"10\",\n-    });\n-    await buildPage.clickRunDialogRunButton();\n-    await buildPage.waitForCompletionBadge();\n-    await test\n-      .expect(buildPage.isCompletionBadgeVisible())\n-      .resolves.toBeTruthy();\n-  });\n-});\n+// // Note: all the comments with //(number)! are for the docs\n+// //ignore them when reading the code, but if you change something,\n+// //make sure to update the docs! Your autoformmater will break this page,\n+// // so don't run it on this file.\n+// // --8<-- [start:BuildPageExample]\n+// import { test } from \"./fixtures\";\n+// import { BuildPage } from \"./pages/build.page\";\n+\n+// // Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n+// // prettier-ignore\n+// test.describe(\"Build\", () => { //(1)!\n+//   let buildPage: BuildPage; //(2)!\n+\n+//   // Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n+//   // prettier-ignore\n+//   test.beforeEach(async ({ page, loginPage, testUser }, testInfo) => { //(3)! ts-ignore\n+//     buildPage = new BuildPage(page);\n+\n+//     // Start each test with login using worker auth\n+//     await page.goto(\"/login\"); //(4)!\n+//     await loginPage.login(testUser.email, testUser.password);\n+//     await test.expect(page).toHaveURL(\"/marketplace\"); //(5)!\n+//     await buildPage.navbar.clickBuildLink();\n+//   });\n+\n+//   // Reason Ignore: admonishment is in the wrong place visually with correct prettier rules\n+//   // prettier-ignore\n+//   test(\"user can add a block\", async ({ page }) => { //(6)!\n+//     // workaround for #8788\n+//     await buildPage.navbar.clickBuildLink();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/build\"));\n+//     await buildPage.waitForPageLoad();\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy(); //(7)!\n+\n+//     await buildPage.closeTutorial(); //(9)!\n+//     await buildPage.openBlocksPanel(); //(10)!\n+//     const block = await buildPage.getDictionaryBlockDetails();\n+\n+//     await buildPage.addBlock(block); //(11)!\n+//     await buildPage.closeBlocksPanel(); //(12)!\n+//     await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy(); //(13)!\n+//   });\n+//   // --8<-- [end:BuildPageExample]\n+\n+//   test(\"user can add all blocks a-l\", async ({ page }, testInfo) => {\n+//     // this test is slow af so we 10x the timeout (sorry future me)\n+//     await test.setTimeout(testInfo.timeout * 100);\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n+//     await buildPage.closeTutorial();\n+//     await buildPage.openBlocksPanel();\n+//     const blocks = await buildPage.getBlocks();\n+\n+//     const blockIdsToSkip = await buildPage.getBlocksToSkip();\n+//     const blockTypesToSkip = [\"Input\", \"Output\", \"Agent\", \"AI\"];\n+\n+//     // add all the blocks in order except for the agent executor block\n+//     for (const block of blocks) {\n+//       if (block.name[0].toLowerCase() >= \"m\") {\n+//         continue;\n+//       }\n+//       if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n+//         console.log(\"Adding block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n+//         await buildPage.addBlock(block);\n+//       }\n+//     }\n+//     await buildPage.closeBlocksPanel();\n+//     // check that all the blocks are visible\n+//     for (const block of blocks) {\n+//       if (block.name[0].toLowerCase() >= \"m\") {\n+//         continue;\n+//       }\n+//       if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n+//         console.log(\"Checking block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n+//         await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy();\n+//       }\n+//     }\n+\n+//     // check that we can save the agent with all the blocks\n+//     await buildPage.saveAgent(\"all blocks test\", \"all blocks test\");\n+//     // page should have a url like http://localhost:3000/build?flowID=f4f3a1da-cfb3-430f-a074-a455b047e340\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n+//   });\n+\n+//   test(\"user can add all blocks m-z\", async ({ page }, testInfo) => {\n+//     // this test is slow af so we 10x the timeout (sorry future me)\n+//     await test.setTimeout(testInfo.timeout * 100);\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n+//     await buildPage.closeTutorial();\n+//     await buildPage.openBlocksPanel();\n+//     const blocks = await buildPage.getBlocks();\n+\n+//     const blockIdsToSkip = await buildPage.getBlocksToSkip();\n+//     const blockTypesToSkip = [\"Input\", \"Output\", \"Agent\", \"AI\"];\n+\n+//     // add all the blocks in order except for the agent executor block\n+//     for (const block of blocks) {\n+//       if (block.name[0].toLowerCase() < \"m\") {\n+//         continue;\n+//       }\n+//       if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n+//         console.log(\"Adding block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n+//         await buildPage.addBlock(block);\n+//       }\n+//     }\n+//     await buildPage.closeBlocksPanel();\n+//     // check that all the blocks are visible\n+//     for (const block of blocks) {\n+//       if (block.name[0].toLowerCase() < \"m\") {\n+//         continue;\n+//       }\n+//       if (!blockIdsToSkip.some((b) => b === block.id) && !blockTypesToSkip.some((b) => block.type === b)) {\n+//         console.log(\"Checking block:\", block.name, block.id, block.type, \" skipping types:\", blockTypesToSkip);\n+//         await test.expect(buildPage.hasBlock(block)).resolves.toBeTruthy();\n+//       }\n+//     }\n+\n+//     // check that we can save the agent with all the blocks\n+//     await buildPage.saveAgent(\"all blocks test\", \"all blocks test\");\n+//     // page should have a url like http://localhost:3000/build?flowID=f4f3a1da-cfb3-430f-a074-a455b047e340\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n+//   });\n+\n+//   test(\"build navigation is accessible from navbar\", async ({ page }) => {\n+//     await buildPage.navbar.clickBuildLink();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/build\"));\n+//     // workaround for #8788\n+//     await page.reload();\n+//     await page.reload();\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n+//   });\n+\n+//   test(\"user can add two blocks and connect them\", async ({\n+//     page,\n+//   }, testInfo) => {\n+//     await test.setTimeout(testInfo.timeout * 10);\n+\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n+//     await buildPage.closeTutorial();\n+//     await buildPage.openBlocksPanel();\n+\n+//     // Define the blocks to add\n+//     const block1 = {\n+//       id: \"1ff065e9-88e8-4358-9d82-8dc91f622ba9\",\n+//       name: \"Store Value 1\",\n+//       description: \"Store Value Block 1\",\n+//       type: \"Standard\",\n+//     };\n+//     const block2 = {\n+//       id: \"1ff065e9-88e8-4358-9d82-8dc91f622ba9\",\n+//       name: \"Store Value 2\",\n+//       description: \"Store Value Block 2\",\n+//       type: \"Standard\",\n+//     };\n+\n+//     // Add the blocks\n+//     await buildPage.addBlock(block1);\n+//     await buildPage.addBlock(block2);\n+//     await buildPage.closeBlocksPanel();\n+\n+//     // Connect the blocks\n+//     await buildPage.connectBlockOutputToBlockInputViaDataId(\n+//       \"1-1-output-source\",\n+//       \"1-2-input-target\",\n+//     );\n+\n+//     // Fill in the input for the first block\n+//     await buildPage.fillBlockInputByPlaceholder(\n+//       block1.id,\n+//       \"Enter input\",\n+//       \"Test Value\",\n+//       \"1\",\n+//     );\n+\n+//     // Save the agent and wait for the URL to update\n+//     await buildPage.saveAgent(\n+//       \"Connected Blocks Test\",\n+//       \"Testing block connections\",\n+//     );\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n+\n+//     // Wait for the save button to be enabled again\n+//     await buildPage.waitForSaveButton();\n+\n+//     // Ensure the run button is enabled\n+//     await test.expect(buildPage.isRunButtonEnabled()).resolves.toBeTruthy();\n+\n+//     // Run the agent\n+//     await buildPage.runAgent();\n+\n+//     // Wait for processing to complete by checking the completion badge\n+//     await buildPage.waitForCompletionBadge();\n+\n+//     // Get the first completion badge and verify it's visible\n+//     await test\n+//       .expect(buildPage.isCompletionBadgeVisible())\n+//       .resolves.toBeTruthy();\n+//   });\n+\n+//   test(\"user can build an agent with inputs and output blocks\", async ({\n+//     page,\n+//   }) => {\n+//     // simple calculator to double input and output it\n+\n+//     // load the pages and prep\n+//     await test.expect(buildPage.isLoaded()).resolves.toBeTruthy();\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\"));\n+//     await buildPage.closeTutorial();\n+//     await buildPage.openBlocksPanel();\n+\n+//     // find the blocks we want\n+//     const blocks = await buildPage.getBlocks();\n+//     const inputBlock = blocks.find((b) => b.name === \"Agent Input\");\n+//     const outputBlock = blocks.find((b) => b.name === \"Agent Output\");\n+//     const calculatorBlock = blocks.find((b) => b.name === \"Calculator\");\n+//     if (!inputBlock || !outputBlock || !calculatorBlock) {\n+//       throw new Error(\"Input or output block not found\");\n+//     }\n+\n+//     // add the blocks\n+//     await buildPage.addBlock(inputBlock);\n+//     await buildPage.addBlock(outputBlock);\n+//     await buildPage.addBlock(calculatorBlock);\n+//     await buildPage.closeBlocksPanel();\n+\n+//     // Wait for blocks to be fully loaded\n+//     await page.waitForTimeout(1000);\n+\n+//     await test.expect(buildPage.hasBlock(inputBlock)).resolves.toBeTruthy();\n+//     await test.expect(buildPage.hasBlock(outputBlock)).resolves.toBeTruthy();\n+//     await test\n+//       .expect(buildPage.hasBlock(calculatorBlock))\n+//       .resolves.toBeTruthy();\n+\n+//     // Wait for blocks to be ready for connections\n+//     await page.waitForTimeout(1000);\n+\n+//     await buildPage.connectBlockOutputToBlockInputViaName(\n+//       inputBlock.id,\n+//       \"Result\",\n+//       calculatorBlock.id,\n+//       \"A\",\n+//     );\n+//     await buildPage.connectBlockOutputToBlockInputViaName(\n+//       inputBlock.id,\n+//       \"Result\",\n+//       calculatorBlock.id,\n+//       \"B\",\n+//     );\n+//     await buildPage.connectBlockOutputToBlockInputViaName(\n+//       calculatorBlock.id,\n+//       \"Result\",\n+//       outputBlock.id,\n+//       \"Value\",\n+//     );\n+\n+//     // Wait for connections to stabilize\n+//     await page.waitForTimeout(1000);\n+\n+//     await buildPage.fillBlockInputByPlaceholder(\n+//       inputBlock.id,\n+//       \"Enter Name\",\n+//       \"Value\",\n+//     );\n+//     await buildPage.fillBlockInputByPlaceholder(\n+//       outputBlock.id,\n+//       \"Enter Name\",\n+//       \"Doubled\",\n+//     );\n+\n+//     // Wait before changing dropdown\n+//     await page.waitForTimeout(500);\n+\n+//     await buildPage.selectBlockInputValue(\n+//       calculatorBlock.id,\n+//       \"Operation\",\n+//       \"Add\",\n+//     );\n+\n+//     // Wait before saving\n+//     await page.waitForTimeout(1000);\n+\n+//     await buildPage.saveAgent(\n+//       \"Input and Output Blocks Test\",\n+//       \"Testing input and output blocks\",\n+//     );\n+//     await test.expect(page).toHaveURL(new RegExp(\"/.*build\\\\?flowID=.+\"));\n+\n+//     // Wait for save to complete\n+//     await page.waitForTimeout(1000);\n+\n+//     await buildPage.runAgent();\n+//     await buildPage.fillRunDialog({\n+//       Value: \"10\",\n+//     });\n+//     await buildPage.clickRunDialogRunButton();\n+//     await buildPage.waitForCompletionBadge();\n+//     await test\n+//       .expect(buildPage.isCompletionBadgeVisible())\n+//       .resolves.toBeTruthy();\n+//   });\n+// });\ndiff --git a/autogpt_platform/frontend/src/tests/monitor.spec.ts b/autogpt_platform/frontend/src/tests/monitor.spec.ts\nindex a7e588acf0f7..576a7c69183d 100644\n--- a/autogpt_platform/frontend/src/tests/monitor.spec.ts\n+++ b/autogpt_platform/frontend/src/tests/monitor.spec.ts\n@@ -1,126 +1,126 @@\n-import { TestInfo } from \"@playwright/test\";\n-import { test } from \"./fixtures\";\n-import { BuildPage } from \"./pages/build.page\";\n-import { MonitorPage } from \"./pages/monitor.page\";\n-import { v4 as uuidv4 } from \"uuid\";\n-import * as fs from \"fs/promises\";\n-import path from \"path\";\n-// --8<-- [start:AttachAgentId]\n-test.describe(\"Monitor\", () => {\n-  let buildPage: BuildPage;\n-  let monitorPage: MonitorPage;\n+// import { expect, TestInfo } from \"@playwright/test\";\n+// import { test } from \"./fixtures\";\n+// import { BuildPage } from \"./pages/build.page\";\n+// import { MonitorPage } from \"./pages/monitor.page\";\n+// import { v4 as uuidv4 } from \"uuid\";\n+// import * as fs from \"fs/promises\";\n+// import path from \"path\";\n+// // --8<-- [start:AttachAgentId]\n+// test.describe(\"Monitor\", () => {\n+//   let buildPage: BuildPage;\n+//   let monitorPage: MonitorPage;\n \n-  test.beforeEach(async ({ page, loginPage, testUser }, testInfo: TestInfo) => {\n-    buildPage = new BuildPage(page);\n-    monitorPage = new MonitorPage(page);\n+//   test.beforeEach(async ({ page, loginPage, testUser }, testInfo: TestInfo) => {\n+//     buildPage = new BuildPage(page);\n+//     monitorPage = new MonitorPage(page);\n \n-    // Start each test with login using worker auth\n-    await page.goto(\"/login\");\n-    await loginPage.login(testUser.email, testUser.password);\n-    await test.expect(page).toHaveURL(\"/marketplace\");\n+//     // Start each test with login using worker auth\n+//     await page.goto(\"/login\");\n+//     await loginPage.login(testUser.email, testUser.password);\n+//     await test.expect(page).toHaveURL(\"/marketplace\");\n \n-    // add a test agent\n-    const basicBlock = await buildPage.getDictionaryBlockDetails();\n-    const id = uuidv4();\n-    await buildPage.createSingleBlockAgent(\n-      `test-agent-${id}`,\n-      `test-agent-description-${id}`,\n-      basicBlock,\n-    );\n-    await buildPage.runAgent();\n-    // await monitorPage.navbar.clickMonitorLink();\n-    await page.goto(\"/monitoring\"); // Library link now points to /library\n-    await monitorPage.waitForPageLoad();\n-    await test.expect(monitorPage.isLoaded()).resolves.toBeTruthy();\n-    testInfo.attach(\"agent-id\", { body: id });\n-  });\n-  // --8<-- [end:AttachAgentId]\n+//     // add a test agent\n+//     const basicBlock = await buildPage.getDictionaryBlockDetails();\n+//     const id = uuidv4();\n+//     await buildPage.createSingleBlockAgent(\n+//       `test-agent-${id}`,\n+//       `test-agent-description-${id}`,\n+//       basicBlock,\n+//     );\n+//     await buildPage.runAgent();\n+//     // await monitorPage.navbar.clickMonitorLink();\n+//     await page.goto(\"/monitoring\"); // Library link now points to /library\n+//     await monitorPage.waitForPageLoad();\n+//     await test.expect(monitorPage.isLoaded()).resolves.toBeTruthy();\n+//     testInfo.attach(\"agent-id\", { body: id });\n+//   });\n+//   // --8<-- [end:AttachAgentId]\n \n-  test.afterAll(async ({}) => {\n-    // clear out the downloads folder\n-    console.log(\n-      `clearing out the downloads folder ${monitorPage.downloadsFolder}`,\n-    );\n+//   test.afterAll(async ({}) => {\n+//     // clear out the downloads folder\n+//     console.log(\n+//       `clearing out the downloads folder ${monitorPage.downloadsFolder}`,\n+//     );\n \n-    await fs.rm(`${monitorPage.downloadsFolder}/monitor`, {\n-      recursive: true,\n-      force: true,\n-    });\n-  });\n+//     await fs.rm(`${monitorPage.downloadsFolder}/monitor`, {\n+//       recursive: true,\n+//       force: true,\n+//     });\n+//   });\n \n-  test(\"user can view agents\", async () => {\n-    const agents = await monitorPage.listAgents();\n-    // there should be at least one agent\n-    await test.expect(agents.length).toBeGreaterThan(0);\n-  });\n+//   test(\"user can view agents\", async ({ page }) => {\n+//     const agents = await monitorPage.listAgents();\n+//     // there should be at least one agent\n+//     await test.expect(agents.length).toBeGreaterThan(0);\n+//   });\n \n-  test.skip(\"user can export and import agents\", async ({\n-    page,\n-  }, testInfo: TestInfo) => {\n-    // --8<-- [start:ReadAgentId]\n-    if (testInfo.attachments.length === 0 || !testInfo.attachments[0].body) {\n-      throw new Error(\"No agent id attached to the test\");\n-    }\n-    const testAttachName = testInfo.attachments[0].body.toString();\n-    // --8<-- [end:ReadAgentId]\n-    const agents = await monitorPage.listAgents();\n+//   test.skip(\"user can export and import agents\", async ({\n+//     page,\n+//   }, testInfo: TestInfo) => {\n+//     // --8<-- [start:ReadAgentId]\n+//     if (testInfo.attachments.length === 0 || !testInfo.attachments[0].body) {\n+//       throw new Error(\"No agent id attached to the test\");\n+//     }\n+//     const testAttachName = testInfo.attachments[0].body.toString();\n+//     // --8<-- [end:ReadAgentId]\n+//     const agents = await monitorPage.listAgents();\n \n-    const downloadPromise = page.waitForEvent(\"download\");\n-    const agent = agents.find(\n-      (a: any) => a.name === `test-agent-${testAttachName}`,\n-    );\n-    if (!agent) {\n-      throw new Error(`Agent ${testAttachName} not found`);\n-    }\n-    await monitorPage.exportToFile(agent);\n-    const download = await downloadPromise;\n+//     const downloadPromise = page.waitForEvent(\"download\");\n+//     const agent = agents.find(\n+//       (a: any) => a.name === `test-agent-${testAttachName}`,\n+//     );\n+//     if (!agent) {\n+//       throw new Error(`Agent ${testAttachName} not found`);\n+//     }\n+//     await monitorPage.exportToFile(agent);\n+//     const download = await downloadPromise;\n \n-    // Wait for the download process to complete and save the downloaded file somewhere.\n-    await download.saveAs(\n-      `${monitorPage.downloadsFolder}/monitor/${download.suggestedFilename()}`,\n-    );\n-    console.log(`downloaded file to ${download.suggestedFilename()}`);\n-    await test.expect(download.suggestedFilename()).toBeDefined();\n-    // test-agent-uuid-v1.json\n-    await test.expect(download.suggestedFilename()).toContain(\"test-agent-\");\n-    await test.expect(download.suggestedFilename()).toContain(\"v1.json\");\n+//     // Wait for the download process to complete and save the downloaded file somewhere.\n+//     await download.saveAs(\n+//       `${monitorPage.downloadsFolder}/monitor/${download.suggestedFilename()}`,\n+//     );\n+//     console.log(`downloaded file to ${download.suggestedFilename()}`);\n+//     await test.expect(download.suggestedFilename()).toBeDefined();\n+//     // test-agent-uuid-v1.json\n+//     await test.expect(download.suggestedFilename()).toContain(\"test-agent-\");\n+//     await test.expect(download.suggestedFilename()).toContain(\"v1.json\");\n \n-    // import the agent\n-    const preImportAgents = await monitorPage.listAgents();\n-    const filesInFolder = await fs.readdir(\n-      `${monitorPage.downloadsFolder}/monitor`,\n-    );\n-    const importFile = filesInFolder.find((f) => f.includes(testAttachName));\n-    if (!importFile) {\n-      throw new Error(`No import file found for agent ${testAttachName}`);\n-    }\n-    const baseName = importFile.split(\".\")[0];\n-    await monitorPage.importFromFile(\n-      path.resolve(monitorPage.downloadsFolder, \"monitor\"),\n-      importFile,\n-      baseName + \"-imported\",\n-    );\n+//     // import the agent\n+//     const preImportAgents = await monitorPage.listAgents();\n+//     const filesInFolder = await fs.readdir(\n+//       `${monitorPage.downloadsFolder}/monitor`,\n+//     );\n+//     const importFile = filesInFolder.find((f) => f.includes(testAttachName));\n+//     if (!importFile) {\n+//       throw new Error(`No import file found for agent ${testAttachName}`);\n+//     }\n+//     const baseName = importFile.split(\".\")[0];\n+//     await monitorPage.importFromFile(\n+//       path.resolve(monitorPage.downloadsFolder, \"monitor\"),\n+//       importFile,\n+//       baseName + \"-imported\",\n+//     );\n \n-    // You'll be dropped at the build page, so hit run and then go back to monitor\n-    await buildPage.runAgent();\n-    await monitorPage.navbar.clickMonitorLink();\n-    await monitorPage.waitForPageLoad();\n+//     // You'll be dropped at the build page, so hit run and then go back to monitor\n+//     await buildPage.runAgent();\n+//     await monitorPage.navbar.clickMonitorLink();\n+//     await monitorPage.waitForPageLoad();\n \n-    const postImportAgents = await monitorPage.listAgents();\n-    await test\n-      .expect(postImportAgents.length)\n-      .toBeGreaterThan(preImportAgents.length);\n-    console.log(`postImportAgents: ${JSON.stringify(postImportAgents)}`);\n-    const importedAgent = postImportAgents.find(\n-      (a: any) => a.name === `${baseName}-imported`,\n-    );\n-    await test.expect(importedAgent).toBeDefined();\n-  });\n+//     const postImportAgents = await monitorPage.listAgents();\n+//     await test\n+//       .expect(postImportAgents.length)\n+//       .toBeGreaterThan(preImportAgents.length);\n+//     console.log(`postImportAgents: ${JSON.stringify(postImportAgents)}`);\n+//     const importedAgent = postImportAgents.find(\n+//       (a: any) => a.name === `${baseName}-imported`,\n+//     );\n+//     await test.expect(importedAgent).toBeDefined();\n+//   });\n \n-  test(\"user can view runs\", async () => {\n-    const runs = await monitorPage.listRuns();\n-    console.log(runs);\n-    // there should be at least one run\n-    await test.expect(runs.length).toBeGreaterThan(0);\n-  });\n-});\n+//   test(\"user can view runs\", async ({ page }) => {\n+//     const runs = await monitorPage.listRuns();\n+//     console.log(runs);\n+//     // there should be at least one run\n+//     await test.expect(runs.length).toBeGreaterThan(0);\n+//   });\n+// });\ndiff --git a/autogpt_platform/frontend/tailwind.config.ts b/autogpt_platform/frontend/tailwind.config.ts\nindex 9f2a706bcd98..7bf88951de4a 100644\n--- a/autogpt_platform/frontend/tailwind.config.ts\n+++ b/autogpt_platform/frontend/tailwind.config.ts\n@@ -1,4 +1,5 @@\n import type { Config } from \"tailwindcss\";\n+import scrollbarHide from \"tailwind-scrollbar-hide\";\n \n const config = {\n   darkMode: [\"class\"],\n@@ -141,7 +142,11 @@ const config = {\n       },\n     },\n   },\n-  plugins: [require(\"tailwindcss-animate\")],\n+  plugins: [\n+    require(\"tailwindcss-animate\"),\n+    scrollbarHide,\n+    require(\"tailwind-scrollbar\"),\n+  ],\n } satisfies Config;\n \n export default config;\n"
  }
]