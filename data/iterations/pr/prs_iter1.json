[
  {
    "index": 1,
    "repository": "freqtrade/freqtrade",
    "pr_title": "Add custom_roi() strategy callback",
    "pr_body": "<!-- Thank you for sending your pull request. But first, have you included\r\nunit tests, and is your code PEP8 conformant? [More details](https://github.com/freqtrade/freqtrade/blob/develop/CONTRIBUTING.md)\r\n-->\r\n## Summary\r\n\r\nAdd custom_roi() strategy callback\r\n\r\n## What's new?\r\n\r\nThis strategy callback introduces support for custom ROI logic, enabling users to define dynamic ROI thresholds based on trade side, trading pair, entry tag, indicator values, and more.\r\n\r\nWhile similar behavior can be",
    "pr_number": 11656,
    "comments": [
      "i don't really see the benefit over `custom_exit()` - not if you consider the implications / think it through properly.\r\nAs it's user controlled (while the trade is running), we can no longer rely on the user not using high, low or close to determine the returned value (by using data from `dp.*` methods apparently, as the method doesn't even get a current profit passed in).\r\n\r\nAs such - backtesting will have to treat it just like custom-stoploss (which is different to trailing-stoploss for backtesting, even though behavior can be similar / identical).\r\nTo me, this means - it has to become an explicit exit reason (not the same as one triggered by minimal_roi) - without the special calculation we can take for roi (as we control how it's calculated / determined).\r\n\r\nAnything else will introduce a potential lookahead bias - one that's very difficult to spot at that - as (a user) will not think about this - and won't even be aware that this can cause a lookahead bias.\r\n\r\n\r\n_to summarize_ - I'm not per se against the new callback - but it should not get the \"special\" minimal_roi treatment to avoid odd lookahead issues (at which point it's not necessarily a relevant callback any longer).",
      "\n[![Coverage Status](https://coveralls.io/builds/73832684/badge)](https://coveralls.io/builds/73832684)\n\ncoverage: 94.322% (-0.04%) from 94.366%\nwhen pulling **25077a10086b2843be6837ecfbe3e274cb59ab88 on mrpabloyeah:add-custom-roi-strategy-callback**\ninto **193cfb634cd61d45c5778fb26bca5e484f1e02f5 on freqtrade:develop**.\n",
      "> but it should not get the \"special\" minimal_roi treatment to avoid odd lookahead issues\r\n\r\nBut how do you avoid the lookahead bias by doing this? I think that by misusing self.dp you can introduce lookahead bias into your strategy regardless of whether you're calling self.dp from the new custom_roi or from custom_exit as well. So the problem isn't how you handle the exit signal. Am I wrong?",
      "Well, I'm not really sure I fully understood what you mean....ðŸ˜† but now min_roi_reached_entry returns the trade duration along with the profit threshold returned by custom_roi, as you mentioned. In my tests, this doesn't change the results. How can we check if this addresses the potential lookahead bias?",
      "Well if the right thing is returned - i think a case hitting this will fall into the IF branch of `# new ROI entry came into effect.`.\r\nI'm not sure every instance will fall into this as there's another condition in place (checking if open_rate is above/below the closing rate) - but in a \"bigger\" backtest, at least some of the exists should fall into this.",
      "I've never experienced lookahead issues in custom_exit. If you follow the documented way of accessing the analysed dataframe, there won't be issues.\r\n\r\nThe issue of backtesting accuracy with ROI and custom_exit is 100% down to historical data resolution. There's no single way to reliably ascertain when exactly an exit will happen based on the poor resolution data that exchanges provide as historical data, e.g. 1m at the finest scale.",
      "> The issue of backtesting accuracy with ROI and custom_exit is 100% down to historical data resolution. There's no single way to reliably ascertain when exactly an exit will happen based on the poor resolution data that exchanges provide as historical data, e.g. 1m at the finest scale.\r\n\r\nThe inaccuracy issue only occurs in custom_exit; it does not occur in minimum_roi because it calculates the profit correctly.\r\nIn custom_exit, it is not possible to calculate the profit correctly because you cannot return the exit target as a ratio.\r\n\r\nThis callback allows you to set the exit target as a ratio, as minimal_roi does, and therefore the profit is calculated correctly, avoiding the inaccuracy issue that exists in custom_exit.\r\n",
      "> This callback allows you to set the exit target as a ratio, as minimal_roi does, and therefore the profit is calculated correctly, avoiding the inaccuracy issue that exists in custom_exit.\r\n\r\nWell this is a whole different topic i think (one I'm not sure you should descend into ðŸ˜† )\r\nthere's no \"inaccuraccy\" with `custom_exit`. It's exiting based on either clearly defined pricing rules - or based on what the strategy returns as custom_exit_price.\r\n\r\nGetting \"exactly this rate\" is a much more inaccurate approach if you think about it - as the exchange won't guarantee these prices - so if that's the reasoning - then this callback will increase inaccuraccy. \r\nWhile you THINK it makes it better, it really doesn't, and the only thing it'll benefit is overfitting (\"i must use 2.955% as roi for BTC  instead of 3% or 2.9% - then profit is best\" - whereas in reality - it's just overfitting to a minor price difference based on \"high\" - one you might never encounter in live (starting with the entry rate being a few ticks different, ...).\r\n",
      "If you build exit logic with a 1% profit target, using custom_exit, you'll see in the backtest that the average profit is always higher than 1%; it could be 1.2% or 1.3%. Those results aren't realistic, and that's what I'm talking about.\r\n\r\nHowever, if you build the same logic in custom_roi, in the backtest you'll see that the average profit is 1%, which is what you'd expect.\r\n\r\nIn both cases, the exchange doesn't guarantee those prices, but I think we can agree that the second case is closer to reality than the first, right?",
      "That depends on a case by case basis - and I'm not sure the new logic is better (it might look like that for your test case - but not necessarily for others)\r\n\r\nif 1% is between low and open - it'll be what you're seeing.\r\nIf 1% is between open and high - your new results will be inflated - and previous average exits will be 0.8%. \r\n\r\npessimistic is essentially always better in a backtesting scenario - results will be tuned to look inflated anyway (pure matter of fact - everyone looks for more profits, not less). \r\nOnce slippage / market impact / ... hits - results will always pull you down a bit.\r\n\r\n\r\nJust because you're using \"roi=1%\" will not guarantee that the actual exit happened at that rate anyway.\r\nBacktesting might assume so - sure - but real markets won't do that - so a 0.2% deviation is WELL within what you can see on slippage - even on more liquid markets (not necessarily on BTC/USDT, but on most after XRP/USDT from a volume perspective) - at which point you're either into \"use other side pricing / market orders\" - or on the \"risk not getting the exit\" side - neither of which backtesting really covers.\r\n\r\n\r\nAs a matter of fact, you can get the same results with a combination of `custom_exit` with `custom_exit_price`.\r\n\r\n---\r\n\r\nIf what you claim above is true - a 1% ROI exit (with the assumption that roi came into effect in this candle - which i think is what you changed it to now) should not exit at exactly 1% - but at the open rate (triggering the \"came into effect\" logic).\r\n\r\nIf it's not hitting that for whatever reason - then we'll need to look at this in more detail - as that's what I'd expect from what is returned by the new logic.\r\n",
      "> pessimistic is essentially always better in a backtesting scenario - results will be tuned to look inflated anyway (pure matter of fact - everyone looks for more profits, not less). Once slippage / market impact / ... hits - results will always pull you down a bit.\r\n\r\nThat's what I mean: using custom_exit for profit-based exit logic will always provide more optimistic results than using custom_roi. That's why I think custom_roi is more accurate/realistic for this type of exit logic.\r\n",
      "It would be essential to have a worked example comparing custom_stoploss, custom_exit and custom_roi, maybe with a table summarising the differences. We're starting to have a range of callbacks that do *similar* things but with important caveats between them. Users will need some guidance to make this clear from the start.",
      "> It would be essential to have a worked example comparing custom_stoploss, custom_exit and custom_roi, maybe with a table summarising the differences. We're starting to have a range of callbacks that do _similar_ things but with important caveats between them. Users will need some guidance to make this clear from the start.\r\n\r\nI don't disagree with this _per se_ - but i don't think we should make this part of this PR (feel free to contribute if you'd like - but don't feel forced to do so, i don't see that as requirement for this PR).\r\nIt's a problem independent of this PR / new callback. Add in `adjust_trade_position` and we already have 3 callbacks that COULD cause an exit - independent of this PR.\r\n\r\nRequiring this here would (from a contributors standpoint) translate to \"you want your PR about custom_roi merged? please add a comparison table we should be having already\" - which i think isn't a good approach towards contributors - as it heightens the bar to contributions.\r\n\r\nthis doesn't mean we'll not add such a table (or not need it, for that matter) - but that we should add it separately, independent of this feature.",
      "I dunno - I find good docs to be a pretty clear requirement for new features, but sure, as long as it stays on our radar to add quickly after this is (presumably) merged!"
    ],
    "num_comments": 14,
    "diff": "diff --git a/docs/strategy-callbacks.md b/docs/strategy-callbacks.md\nindex 7aa39940c69..a63aa97034f 100644\n--- a/docs/strategy-callbacks.md\n+++ b/docs/strategy-callbacks.md\n@@ -12,6 +12,7 @@ Currently available callbacks:\n * [`custom_stake_amount()`](#stake-size-management)\n * [`custom_exit()`](#custom-exit-signal)\n * [`custom_stoploss()`](#custom-stoploss)\n+* [`custom_roi()`](#custom-roi)\n * [`custom_entry_price()` and `custom_exit_price()`](#custom-order-price-rules)\n * [`check_entry_timeout()` and `check_exit_timeout()`](#custom-order-timeout-rules)\n * [`confirm_trade_entry()`](#trade-entry-buy-order-confirmation)\n@@ -499,6 +500,135 @@ The helper function `stoploss_from_absolute()` can be used to convert from an ab\n \n ---\n \n+## Custom ROI\n+\n+Called for open trade every iteration (roughly every 5 seconds) until a trade is closed.\n+\n+The usage of the custom ROI method must be enabled by setting `use_custom_roi=True` on the strategy object.\n+\n+This method allows you to define a custom minimum ROI threshold for exiting a trade, expressed as a ratio (e.g., `0.05` for 5% profit). If both `minimal_roi` and `custom_roi` are defined, the lower of the two thresholds will trigger an exit. For example, if `minimal_roi` is set to `{\"0\": 0.10}` (10% at 0 minutes) and `custom_roi` returns `0.05`, the trade will exit when the profit reaches 5%. Also, if `custom_roi` returns `0.10` and `minimal_roi` is set to `{\"0\": 0.05}` (5% at 0 minutes), the trade will be closed when the profit reaches 5%.\n+\n+The method must return a float representing the new ROI threshold as a ratio, or `None` to fall back to the `minimal_roi` logic. Returning `NaN` or `inf` values is considered invalid and will be treated as `None`, causing the bot to use the `minimal_roi` configuration.\n+\n+### Custom ROI examples\n+\n+The following examples illustrate how to use the `custom_roi` function to implement different ROI logics.\n+\n+#### Custom ROI per side\n+\n+Use different ROI thresholds depending on the `side`. In this example, 5% for long entries and 2% for short entries.\n+\n+```python\n+# Default imports\n+\n+class AwesomeStrategy(IStrategy):\n+\n+    use_custom_roi = True\n+\n+    # ... populate_* methods\n+\n+    def custom_roi(self, pair: str, trade: Trade, current_time: datetime, trade_duration: int,\n+                   entry_tag: str | None, side: str, **kwargs) -> float | None:\n+        \"\"\"\n+        Custom ROI logic, returns a new minimum ROI threshold (as a ratio, e.g., 0.05 for +5%).\n+        Only called when use_custom_roi is set to True.\n+\n+        If used at the same time as minimal_roi, an exit will be triggered when the lower\n+        threshold is reached. Example: If minimal_roi = {\"0\": 0.01} and custom_roi returns 0.05,\n+        an exit will be triggered if profit reaches 5%.\n+\n+        :param pair: Pair that's currently analyzed.\n+        :param trade: trade object.\n+        :param current_time: datetime object, containing the current datetime.\n+        :param trade_duration: Current trade duration in minutes.\n+        :param entry_tag: Optional entry_tag (buy_tag) if provided with the buy signal.\n+        :param side: 'long' or 'short' - indicating the direction of the current trade.\n+        :param **kwargs: Ensure to keep this here so updates to this won't break your strategy.\n+        :return float: New ROI value as a ratio, or None to fall back to minimal_roi logic.\n+        \"\"\"\n+        return 0.05 if side == \"long\" else 0.02\n+```\n+\n+#### Custom ROI per pair\n+\n+Use different ROI thresholds depending on the `pair`.\n+\n+```python\n+# Default imports\n+\n+class AwesomeStrategy(IStrategy):\n+\n+    use_custom_roi = True\n+\n+    # ... populate_* methods\n+\n+    def custom_roi(self, pair: str, trade: Trade, current_time: datetime, trade_duration: int,\n+                   entry_tag: str | None, side: str, **kwargs) -> float | None:\n+\n+        stake = trade.stake_currency\n+        roi_map = {\n+            f\"BTC/{stake}\": 0.02, # 2% for BTC\n+            f\"ETH/{stake}\": 0.03, # 3% for ETH\n+            f\"XRP/{stake}\": 0.04, # 4% for XRP\n+        }\n+\n+        return roi_map.get(pair, 0.01) # 1% for any other pair\n+```\n+\n+#### Custom ROI per entry tag\n+\n+Use different ROI thresholds depending on the `entry_tag` provided with the buy signal.\n+\n+```python\n+# Default imports\n+\n+class AwesomeStrategy(IStrategy):\n+\n+    use_custom_roi = True\n+\n+    # ... populate_* methods\n+\n+    def custom_roi(self, pair: str, trade: Trade, current_time: datetime, trade_duration: int,\n+                   entry_tag: str | None, side: str, **kwargs) -> float | None:\n+\n+        roi_by_tag = {\n+            \"breakout\": 0.08,       # 8% if tag is \"breakout\"\n+            \"rsi_overbought\": 0.05, # 5% if tag is \"rsi_overbought\"\n+            \"mean_reversion\": 0.03, # 3% if tag is \"mean_reversion\"\n+        }\n+\n+        return roi_by_tag.get(entry_tag, 0.01)  # 1% if tag is unknown\n+```\n+\n+#### Custom ROI based on ATR\n+\n+ROI value may be derived from indicators stored in dataframe. This example uses the ATR ratio as ROI.\n+\n+``` python\n+# Default imports\n+# <...>\n+import talib.abstract as ta\n+\n+class AwesomeStrategy(IStrategy):\n+\n+    use_custom_roi = True\n+\n+    def populate_indicators(self, dataframe: DataFrame, metadata: dict) -> DataFrame:\n+        # <...>\n+        dataframe[\"atr\"] = ta.ATR(dataframe, timeperiod=10)\n+\n+    def custom_roi(self, pair: str, trade: Trade, current_time: datetime, trade_duration: int,\n+                   entry_tag: str | None, side: str, **kwargs) -> float | None:\n+\n+        dataframe, _ = self.dp.get_analyzed_dataframe(pair, self.timeframe)\n+        last_candle = dataframe.iloc[-1].squeeze()\n+        atr_ratio = last_candle[\"atr\"] / last_candle[\"close\"]\n+\n+        return atr_ratio # Returns the ATR value as ratio\n+```\n+\n+---\n+\n ## Custom order price rules\n \n By default, freqtrade use the orderbook to automatically set an order price([Relevant documentation](configuration.md#prices-used-for-orders)), you also have the option to create custom order prices based on your strategy.\ndiff --git a/freqtrade/optimize/backtesting.py b/freqtrade/optimize/backtesting.py\nindex 52f1ac8cae9..2d58c461a82 100644\n--- a/freqtrade/optimize/backtesting.py\n+++ b/freqtrade/optimize/backtesting.py\n@@ -501,7 +501,12 @@ def _get_ohlcv_as_lists(self, processed: dict[str, DataFrame]) -> dict[str, tupl\n         return data\n \n     def _get_close_rate(\n-        self, row: tuple, trade: LocalTrade, exit_: ExitCheckTuple, trade_dur: int\n+        self,\n+        row: tuple,\n+        trade: LocalTrade,\n+        current_time: datetime,\n+        exit_: ExitCheckTuple,\n+        trade_dur: int,\n     ) -> float:\n         \"\"\"\n         Get close rate for backtesting result\n@@ -514,7 +519,7 @@ def _get_close_rate(\n         ):\n             return self._get_close_rate_for_stoploss(row, trade, exit_, trade_dur)\n         elif exit_.exit_type == (ExitType.ROI):\n-            return self._get_close_rate_for_roi(row, trade, exit_, trade_dur)\n+            return self._get_close_rate_for_roi(row, trade, current_time, exit_, trade_dur)\n         else:\n             return row[OPEN_IDX]\n \n@@ -573,12 +578,21 @@ def _get_close_rate_for_stoploss(\n         return stoploss_value\n \n     def _get_close_rate_for_roi(\n-        self, row: tuple, trade: LocalTrade, exit_: ExitCheckTuple, trade_dur: int\n+        self,\n+        row: tuple,\n+        trade: LocalTrade,\n+        current_time: datetime,\n+        exit_: ExitCheckTuple,\n+        trade_dur: int,\n     ) -> float:\n         is_short = trade.is_short or False\n         leverage = trade.leverage or 1.0\n         side_1 = -1 if is_short else 1\n-        roi_entry, roi = self.strategy.min_roi_reached_entry(trade_dur)\n+        roi_entry, roi = self.strategy.min_roi_reached_entry(\n+            trade,  # type: ignore[arg-type]\n+            trade_dur,\n+            current_time,\n+        )\n         if roi is not None and roi_entry is not None:\n             if roi == -1 and roi_entry % self.timeframe_min == 0:\n                 # When force_exiting with ROI=-1, the roi time will always be equal to trade_dur.\n@@ -785,7 +799,7 @@ def _get_exit_for_signal(\n             amount_ = amount if amount is not None else trade.amount\n             trade_dur = int((trade.close_date_utc - trade.open_date_utc).total_seconds() // 60)\n             try:\n-                close_rate = self._get_close_rate(row, trade, exit_, trade_dur)\n+                close_rate = self._get_close_rate(row, trade, current_time, exit_, trade_dur)\n             except ValueError:\n                 return None\n             # call the custom exit price,with default value as previous close_rate\ndiff --git a/freqtrade/strategy/interface.py b/freqtrade/strategy/interface.py\nindex bb4cd264a98..f4a2b38c65c 100644\n--- a/freqtrade/strategy/interface.py\n+++ b/freqtrade/strategy/interface.py\n@@ -67,6 +67,7 @@ class IStrategy(ABC, HyperStrategyMixin):\n     _ft_params_from_file: dict\n     # associated minimal roi\n     minimal_roi: dict = {}\n+    use_custom_roi: bool = False\n \n     # associated stoploss\n     stoploss: float\n@@ -466,6 +467,35 @@ def custom_stoploss(\n         \"\"\"\n         return self.stoploss\n \n+    def custom_roi(\n+        self,\n+        pair: str,\n+        trade: Trade,\n+        current_time: datetime,\n+        trade_duration: int,\n+        entry_tag: str | None,\n+        side: str,\n+        **kwargs,\n+    ) -> float | None:\n+        \"\"\"\n+        Custom ROI logic, returns a new minimum ROI threshold (as a ratio, e.g., 0.05 for +5%).\n+        Only called when use_custom_roi is set to True.\n+\n+        If used at the same time as minimal_roi, an exit will be triggered when the lower\n+        threshold is reached. Example: If minimal_roi = {\"0\": 0.01} and custom_roi returns 0.05,\n+        an exit will be triggered if profit reaches 5%.\n+\n+        :param pair: Pair that's currently analyzed.\n+        :param trade: trade object.\n+        :param current_time: datetime object, containing the current datetime.\n+        :param trade_duration: Current trade duration in minutes.\n+        :param entry_tag: Optional entry_tag (buy_tag) if provided with the buy signal.\n+        :param side: 'long' or 'short' - indicating the direction of the current trade.\n+        :param **kwargs: Ensure to keep this here so updates to this won't break your strategy.\n+        :return float: New ROI value as a ratio, or None to fall back to minimal_roi logic.\n+        \"\"\"\n+        return None\n+\n     def custom_entry_price(\n         self,\n         pair: str,\n@@ -1638,18 +1668,49 @@ def ft_stoploss_reached(\n \n         return ExitCheckTuple(exit_type=ExitType.NONE)\n \n-    def min_roi_reached_entry(self, trade_dur: int) -> tuple[int | None, float | None]:\n+    def min_roi_reached_entry(\n+        self,\n+        trade: Trade,\n+        trade_dur: int,\n+        current_time: datetime,\n+    ) -> tuple[int | None, float | None]:\n         \"\"\"\n         Based on trade duration defines the ROI entry that may have been reached.\n         :param trade_dur: trade duration in minutes\n         :return: minimal ROI entry value or None if none proper ROI entry was found.\n         \"\"\"\n+\n+        # Get custom ROI if use_custom_roi is set to True\n+        custom_roi = None\n+        if self.use_custom_roi:\n+            custom_roi = strategy_safe_wrapper(\n+                self.custom_roi, default_retval=None, supress_error=True\n+            )(\n+                pair=trade.pair,\n+                trade=trade,\n+                current_time=current_time,\n+                trade_duration=trade_dur,\n+                entry_tag=trade.enter_tag,\n+                side=trade.trade_direction,\n+            )\n+            if custom_roi is None or isnan(custom_roi) or isinf(custom_roi):\n+                custom_roi = None\n+                logger.debug(f\"Custom ROI function did not return a valid ROI for {trade.pair}\")\n+\n         # Get highest entry in ROI dict where key <= trade-duration\n         roi_list = [x for x in self.minimal_roi.keys() if x <= trade_dur]\n-        if not roi_list:\n-            return None, None\n-        roi_entry = max(roi_list)\n-        return roi_entry, self.minimal_roi[roi_entry]\n+        if roi_list:\n+            roi_entry = max(roi_list)\n+            min_roi = self.minimal_roi[roi_entry]\n+        else:\n+            roi_entry = None\n+            min_roi = None\n+\n+        # The lowest available value is used to trigger an exit.\n+        if custom_roi is not None and (min_roi is None or custom_roi < min_roi):\n+            return trade_dur, custom_roi\n+        else:\n+            return roi_entry, min_roi\n \n     def min_roi_reached(self, trade: Trade, current_profit: float, current_time: datetime) -> bool:\n         \"\"\"\n@@ -1660,7 +1721,7 @@ def min_roi_reached(self, trade: Trade, current_profit: float, current_time: dat\n         \"\"\"\n         # Check if time matches and current rate is above threshold\n         trade_dur = int((current_time.timestamp() - trade.open_date_utc.timestamp()) // 60)\n-        _, roi = self.min_roi_reached_entry(trade_dur)\n+        _, roi = self.min_roi_reached_entry(trade, trade_dur, current_time)\n         if roi is None:\n             return False\n         else:\ndiff --git a/freqtrade/templates/strategy_subtemplates/strategy_methods_advanced.j2 b/freqtrade/templates/strategy_subtemplates/strategy_methods_advanced.j2\nindex 30632974268..6cad5ea074d 100644\n--- a/freqtrade/templates/strategy_subtemplates/strategy_methods_advanced.j2\n+++ b/freqtrade/templates/strategy_subtemplates/strategy_methods_advanced.j2\n@@ -135,6 +135,37 @@ def custom_stake_amount(\n     \"\"\"\n     return proposed_stake\n \n+use_custom_roi = True\n+\n+def custom_roi(\n+    self,\n+    pair: str,\n+    trade: Trade,\n+    current_time: datetime,\n+    trade_duration: int,\n+    entry_tag: str | None,\n+    side: str,\n+    **kwargs,\n+) -> float | None:\n+    \"\"\"\n+    Custom ROI logic, returns a new minimum ROI threshold (as a ratio, e.g., 0.05 for +5%).\n+    Only called when use_custom_roi is set to True.\n+\n+    If used at the same time as minimal_roi, an exit will be triggered when the lower\n+    threshold is reached. Example: If minimal_roi = {\"0\": 0.01} and custom_roi returns 0.05,\n+    an exit will be triggered if profit reaches 5%.\n+\n+    :param pair: Pair that's currently analyzed.\n+    :param trade: trade object.\n+    :param current_time: datetime object, containing the current datetime.\n+    :param trade_duration: Current trade duration in minutes.\n+    :param entry_tag: Optional entry_tag (buy_tag) if provided with the buy signal.\n+    :param side: 'long' or 'short' - indicating the direction of the current trade.\n+    :param **kwargs: Ensure to keep this here so updates to this won't break your strategy.\n+    :return float: New ROI value as a ratio, or None to fall back to minimal_roi logic.\n+    \"\"\"\n+    return None\n+\n use_custom_stoploss = True\n \n def custom_stoploss(\ndiff --git a/tests/strategy/test_interface.py b/tests/strategy/test_interface.py\nindex b512e578cbe..ba0f89d3290 100644\n--- a/tests/strategy/test_interface.py\n+++ b/tests/strategy/test_interface.py\n@@ -425,6 +425,57 @@ def test_min_roi_reached3(default_conf, fee) -> None:\n     assert strategy.min_roi_reached(trade, 0.31, dt_now() - timedelta(minutes=2))\n \n \n+def test_min_roi_reached_custom_roi(default_conf, fee) -> None:\n+    strategy = StrategyResolver.load_strategy(default_conf)\n+    # Move traditional ROI out of the way\n+    strategy.minimal_roi = {0: 2000}\n+    strategy.use_custom_roi = True\n+\n+    def custom_roi(*args, trade: Trade, current_time: datetime, **kwargs):\n+        trade_dur = int((current_time.timestamp() - trade.open_date_utc.timestamp()) // 60)\n+        # Profit is reduced after 30 minutes.\n+        if trade.pair == \"XRP/BTC\":\n+            return 0.2\n+        if trade_dur > 30:\n+            return 0.05\n+        return 0.1\n+\n+    strategy.custom_roi = MagicMock(side_effect=custom_roi)\n+\n+    trade = Trade(\n+        pair=\"ETH/BTC\",\n+        stake_amount=0.001,\n+        amount=5,\n+        open_date=dt_now() - timedelta(hours=1),\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange=\"binance\",\n+        open_rate=1,\n+    )\n+\n+    assert not strategy.min_roi_reached(trade, 0.02, dt_now() - timedelta(minutes=56))\n+    assert strategy.custom_roi.call_count == 1\n+    assert strategy.min_roi_reached(trade, 0.12, dt_now() - timedelta(minutes=56))\n+\n+    # after 30 minutes, the profit is reduced to 5%\n+    assert strategy.min_roi_reached(trade, 0.12, dt_now() - timedelta(minutes=29))\n+    assert strategy.min_roi_reached(trade, 0.06, dt_now() - timedelta(minutes=29))\n+    assert strategy.min_roi_reached(trade, 0.051, dt_now() - timedelta(minutes=29))\n+    # Comparison to exactly 5% should not trigger\n+    assert not strategy.min_roi_reached(trade, 0.05, dt_now() - timedelta(minutes=29))\n+\n+    # XRP/BTC has a custom roi of 20%.\n+\n+    trade.pair = \"XRP/BTC\"\n+    assert not strategy.min_roi_reached(trade, 0.12, dt_now() - timedelta(minutes=56))\n+    assert not strategy.min_roi_reached(trade, 0.12, dt_now() - timedelta(minutes=1))\n+    # XRP/BTC is not time related\n+    assert strategy.min_roi_reached(trade, 0.201, dt_now() - timedelta(minutes=1))\n+    assert strategy.min_roi_reached(trade, 0.201, dt_now() - timedelta(minutes=56))\n+\n+    assert strategy.custom_roi.call_count == 10\n+\n+\n @pytest.mark.parametrize(\n     \"profit,adjusted,expected,liq,trailing,custom,profit2,adjusted2,expected2,custom_stop\",\n     [\n",
    "diff_length": 17464
  },
  {
    "index": 2,
    "repository": "freqtrade/freqtrade",
    "pr_title": "Edge Positioning",
    "pr_body": "## Summary\r\n\r\nCurrently FT analyzes pairs in whitelist randomly (or by order in config.json) and takes a position as soon as it finds a buy signal with a fixed stake_amount. a better approach would be: \r\n\r\n- Calculating the chance of winning for each pair and sorting whitelist accordingly.\r\n- Adjusting the position size according to risk/reward.\r\n\r\nThis PR addresses the above issues by adding a package called \"Edge\". Edge will run a process every X minutes (default 30 min) using the mainloop to ",
    "pr_number": 1229,
    "comments": [
      "Outside of this, as I know Mishaker already understands, and im sure will be next on his radar - to add visibility of the need -- \r\nFor money/risk mgt to work the premise is the exit on a bad trade is on the stop price, as close to the spot as possible. \r\n\r\nAs FT manages its stops outside the exchange its at a number of disadvantages \r\n1) **This one is important**, a stop is breached when a market is falling. The current logic in FT is to place a limit order halfway between bid and ask -- in a falling market this WILL NOT sell. It is reliant on price actually moving up to meet our bid - when we're trying to exit as price it falling. \r\nThis single handedly will undermine the advantage of what otherwise is solid stuff. \r\nA follow on PR *MUST address selling in stops as quickly as assuredly as possible\r\n\r\n2) it only sees the stop is breached AFter the event not triggered at the event. **hopefully asyncio wil limit this -- but as example today Ripple lost 15% in under a minute -- you need to be fast.  \r\n3) any *LIMIT order placed will be at the back of the queue on that price peg when the order is submitted.\r\n\r\n** Selling stops at market orders would help some of this.\r\n\r\n",
      "@creslinux yes stop order as is today is not acceptable. you have to be lucky in a falling market. \r\nI think the best way to handle it is to make an stop limit order on exchange right after buy order is fulfilled. I have to study the possibility of it with the current architecture. \r\nBut if not, then at least stop orders should be market orders",
      "@mishaker i'm not sure what would prevent that from working - but i would like to move discussion on stop-orders to #893 , and keep the discussion here focused on the PR at hand ... ",
      "Agree - my comment was not to extend this PR, but to add visibility to the effectiveness of the change to risk may be limited til stops are processed differently for falling markets.",
      "Im unsure about this, it hardwires maximum profit as the first motivation, then capital exposure as the second.  That is 100% a valid case.  But it is developer bias\r\n\r\nA user is also 100% valid to want to balance minimal risk exposure with less profit over desire for larger profit and greater risk. \r\n\r\nOften it will not be of huge significance, but there will be times when a stop of 0.005 provides an only slightly less R than a stop of 0.1 - 20x the exposure, or 20x less position size, for minimal extra R\r\n\r\nrisk averse to profit desire would be a welcome flag\r\n\r\n```\r\n        # The difference between risk reward ratio and required risk reward\r\n        # We use it as an indicator to find the most interesting pair to trade\r\n        def delta(x):\r\n            x = (abs(1/ ((x[x < 0].sum() / x[x < 0].count()) / (x[x > 0].sum() / x[x > 0].count())))) - (1/(x[x > 0].count()/x.count()) -1)\r\n            return x\r\n        ##############################\r\n\r\n        \r\n        final = results.groupby(['pair', 'stoploss'])['profit_abs'].\\\r\n            agg([winrate, risk_reward_ratio, required_risk_reward, delta]).\\\r\n            reset_index().sort_values(by=['delta', 'stoploss'], ascending=False)\\\r\n            .groupby('pair').first().sort_values(by=['delta'], ascending=False)\r\n```",
      "On stop testing. At the moment its testing on -1% steps, these are quite large and miss a bit. \r\nAs example checking the test `neobtc` df we're sharing. \r\n\r\na stop of `-0.0375` is more favourable R delta than `0.4` as this code identifies. \r\nA strategy to test in -1% steps then test the found best, say -4% at 0.1% steps, eg -3.6 to -4.5% at 0.1% will help discover a`better deal` - same delta, less money at risk\r\n\r\n```\r\n# FT - NEO/BTC test DF\r\n(-0.04,   ProfitLoss(losses=3, wins=6, win_rate=0.6666666666666666, risk_reward_ratio=4.411999441558853, required_risk_reward=0.5))\r\n\r\n# Creslin DF testing\r\nbest WR was: (-0.0125, ProfitLoss(losses=3, wins=7, win_rate=0.7, avg_duration=0.0, risk_reward_ratio=1.1980049090045, required_risk_reward=0.4285714285714286))\r\nbest R delta was: (-0.037500000000000006, ProfitLoss(losses=3, wins=6, win_rate=0.6666666666666666, avg_duration=0.0, risk_reward_ratio=4.411999441558853, required_risk_reward=0.5)):\r\n```",
      "@creslinux I made stoploss range start,end,step configurable (last commit). for your other comment (delta calculation): I sort pairs according to max(delta) and min(stoploss). \r\nAs discussed earlier on Slack, this is the only (simple) way I found to sort results but if you have another idea ...",
      "i read it as finding the maximum delta from RR and R, then sort on the lowest stop to find that maximum profit deal\r\nThat pays no heed to what 'R' , risk, is in the first instance - often the better trade is to expose less capital to risk for an accepted lower multiplier\r\n\r\nTo articulate myself - what is coded is A valid expression, but its not the only valid expression\r\nBut.. \r\nIf you had the choice between a 3% stop-loss and RR 4:1 or stop-loss 0.5% and RR 3.9:1 -- id take the 0.5% stop every day - preservation / insurance of capital is worth more to me that the extra 0.1R.\r\n\r\n\r\n\r\n",
      "Think of it this way\r\nRequire_RR to break-even is 0.1 - Expected_RR is 1.0 (0.9 delta but 10X return)\r\nRequired_RR to break-even is 1 - Expected_RR is 2.1 (1.1 delta but 2.1X)  \r\n\r\nThe way its filtering your missing 10times profit, settling for 2.1X -  as 1.1 is more than 0.9 -- as R has not been considered. ",
      "\n[![Coverage Status](https://coveralls.io/builds/20059098/badge)](https://coveralls.io/builds/20059098)\n\nCoverage decreased (-0.2%) to 97.958% when pulling **bdba6186d8e9d4408fbd7155922cf969e3e4f678 on mishaker:money_mgt** into **2e4e5c86dad1dcadce12508f3651ac4db30197dd on freqtrade:develop**.\n",
      "@creslinux I think I found it. instead of delta we have to calculate: \r\n((1 + average_win/average_loss) * winrate) - 1",
      "travis seems fine (kinda) ... but flake / mypy is killing you ... ;)\r\n\r\n",
      "@xmatthias yeah I know :( on it ...",
      "@xmatthias I think it is ready for a quick review (although I have to write tests). \r\nIf you wanna play with utils_find_1st I commented 3 lines for you: \r\n\r\n```\r\nopen_trade_index = utf1st.find_1st(buy_column, 1, utf1st.cmp_equal)\r\nstop_index = np.argmax((ohlc_columns[open_trade_index + 1:, 2] < stop_price) == True)\r\nsell_index = utf1st.find_1st(sell_column[open_trade_index + 1:], 1, utf1st.cmp_equal)\r\n```\r\n\r\nwould be: \r\n```\r\nopen_trade_index = np.argmax(buy_column == 1)\r\nstop_index = np.argmax(ohlc_columns[open_trade_index + 1:, 2] < stop_price)\r\nsell_index = np.argmax(sell_column == 1)\r\n```\r\n",
      "@xmatthias if you have few minutes this weekend it would be great if you can review just tests that I've written on this PR. documentation is yet to be done so I prefer you don't put your time on a complete review. even tests are not complete but I would like to have an early feedback on them so I can potentially adjust the rest. thanks ! ",
      "@xmatthias I went through it again. I didn't find something. would be great if you can give some feedbacks. I removed \"don't merge\" label as I think it is safe to be merged now.",
      "Apparently the allowed_risk set in config.json is not really taken into consideration, Edge just opened a trade with 70% of the total_capital_in_stake_currency. It is perhaps misled by the 0.15 total stake, and too many mathematical operations with fractional amounts. \r\n\r\nGiven the docs, there is:\r\n\"your allowed capital at risk would be **3 x 0.01 = 0.03 ETH**. Let's assume Edge has calculated that for **XLM/ETH** market your stoploss should be at 2%. So your position size will be **0.03 / 0.02= 1.5ETH**\r\n\r\nIn my specific case, i am starting with a 0.15 BTC amount. My allowed capital at risk would be 0.15 x 0.03 = 0.0045 BTC according to the formula in the docs. Opening a trade with a stoploss at 2% makes the bot to set the size probably using this formula 0.0045 / 0.02 = 0.225 ? The trade it opened is 0.11237414\r\nIs there a way i can debug and see the stoploss the bot considered when made the trade ?\r\n\r\n\"edge\": {\r\n        \"enabled\": true,\r\n        \"process_throttle_secs\": 1800,\r\n        \"calculate_since_number_of_days\": 7,\r\n        \"total_capital_in_stake_currency\": 0.15,\r\n        \"allowed_risk\": 0.03,\r\n        \"stoploss_range_min\": -0.01,\r\n        \"stoploss_range_max\": -0.1,\r\n        \"stoploss_range_step\": -0.01,\r\n        \"minimum_winrate\": 0.60,\r\n        \"minimum_expectancy\": 0.2,\r\n        \"min_trade_number\": 10,\r\n        \"max_trade_duration_minute\": 1440,\r\n        \"remove_pumps\": false\r\n\r\n",
      "Risk is to the stoploss not % of stake.\nIt's entirely possible to put all stake in and be risking only 1% to the\nstoploss.\n\nFor stake to be risk would be is stoploss was at zero.\n\n\nOn Sat, Nov 10, 2018, 1:25 AM doftorul <notifications@github.com wrote:\n\n> Apparently the allowed_risk set in config.json is not really taken into\n> consideration, Edge just opened a trade with 70% of the\n> total_capital_in_stake_currency\n>\n> \"edge\": {\n> \"enabled\": true,\n> \"process_throttle_secs\": 1800,\n> \"calculate_since_number_of_days\": 7,\n> \"total_capital_in_stake_currency\": 0.15,\n> \"allowed_risk\": 0.03,\n> \"stoploss_range_min\": -0.01,\n> \"stoploss_range_max\": -0.1,\n> \"stoploss_range_step\": -0.01,\n> \"minimum_winrate\": 0.60,\n> \"minimum_expectancy\": 0.2,\n> \"min_trade_number\": 10,\n> \"max_trade_duration_minute\": 1440,\n> \"remove_pumps\": false\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437526870>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AhCkw6w_prRQ_G4c4KGYuo_Ap5Hv5RBKks5utg7UgaJpZM4W0fHj>\n> .\n>\n",
      "> Risk is to the stoploss not % of stake. It's entirely possible to put all stake in and be risking only 1% to the stoploss. For stake to be risk would be is stoploss was at zero.\r\n> [â€¦](#)\r\n> On Sat, Nov 10, 2018, 1:25 AM doftorul ***@***.*** wrote: Apparently the allowed_risk set in config.json is not really taken into consideration, Edge just opened a trade with 70% of the total_capital_in_stake_currency \"edge\": { \"enabled\": true, \"process_throttle_secs\": 1800, \"calculate_since_number_of_days\": 7, \"total_capital_in_stake_currency\": 0.15, \"allowed_risk\": 0.03, \"stoploss_range_min\": -0.01, \"stoploss_range_max\": -0.1, \"stoploss_range_step\": -0.01, \"minimum_winrate\": 0.60, \"minimum_expectancy\": 0.2, \"min_trade_number\": 10, \"max_trade_duration_minute\": 1440, \"remove_pumps\": false â€” You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub <[#1229 (comment)](https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437526870)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AhCkw6w_prRQ_G4c4KGYuo_Ap5Hv5RBKks5utg7UgaJpZM4W0fHj> .\r\n\r\nSee the updated comment please.\r\nStill, having 75% of your wallet into a single trade is scary to say the least.\r\nIs there a way to control the max amount a trade can have ?\r\n\r\n",
      "If the Edge opens a position after another one was opened (like in the case described above) and there are other buy signals, the amount it sets for the new position does not take into account the existing remaining available amount, hence the new trade will never execute.\r\nThe previous trade was set to >70% of the total capital and the new one to an amount way bigger than whatever is left. The total amount of the wallet was 0.15. The first position was set at 0.11237414 BTC while the new position (although it will never execute due to insufficient funds) is aimed at 0.064290 BTC\r\n\r\nfreqtrade.strategy.interface - DEBUG - trigger: 2018-11-10 00:40:00+00:00 (pair=ZEN/BTC) buy=True sell=False\r\nNov 10 00:49:57 testrun.sh[28072]: 2018-11-10 00:49:57,607 - freqtrade.freqtradebot - WARNING - Unable to create trade: Available balance(0.038228 BTC) is lower than stake amount(0.064290 BTC)\r\n",
      "@doftorul Thanks for testing ! and your point is valid ! \r\nthe \"total_capital_in_stake_currency\" is in conflict with \"stake_amount\" and \"max_open_trades\". it will be a source of confusion ... \r\nI am going to refactor and take \"stake_amount\" as total capital at risk PER trade.",
      "Thats not true and breaks all other calculations\nThe risk is to the stop-loss, the stake amount in a trade is not the\ncapital at risk - it is not R.\nBy setting R to 100% the trade, you are effectivly saying there is no stop\nloss, so your postion will be 0.\n\n\n\n\n\nOn Sat, 10 Nov 2018 at 09:33, Misagh <notifications@github.com> wrote:\n\n> @doftorul <https://github.com/doftorul> Thanks for testing ! and your\n> point is valid !\n> the \"total_capital_in_stake_currency\" is in conflict with \"stake_amount\"\n> and \"max_open_trades\". it will be a source of confusion ...\n> I am going to refactor and take \"stake_amount\" as total capital at risk\n> PER trade.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437571160>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AhCkwxgGDoqNbRmCRJMMrL18KH399Bygks5utp2AgaJpZM4W0fHj>\n> .\n>\n",
      "There is a clear separation between\n- invested capital (how much quote currency is spent buying base assets) -\ni.e a FT trade\n- risk capital (how much will be lost if the trade exits on a loss) i.e R.\n\nRisk / Reward ratios are to risk to reward multiplier.\nThey are not, and do not care, how much is in the trade.\n\n\n\nOn Sat, 10 Nov 2018 at 09:42, Danny <creslin@gmail.com> wrote:\n\n> Thats not true and breaks all other calculations\n> The risk is to the stop-loss, the stake amount in a trade is not the\n> capital at risk - it is not R.\n> By setting R to 100% the trade, you are effectivly saying there is no stop\n> loss, so your postion will be 0.\n>\n>\n>\n>\n>\n> On Sat, 10 Nov 2018 at 09:33, Misagh <notifications@github.com> wrote:\n>\n>> @doftorul <https://github.com/doftorul> Thanks for testing ! and your\n>> point is valid !\n>> the \"total_capital_in_stake_currency\" is in conflict with \"stake_amount\"\n>> and \"max_open_trades\". it will be a source of confusion ...\n>> I am going to refactor and take \"stake_amount\" as total capital at risk\n>> PER trade.\n>>\n>> â€”\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437571160>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AhCkwxgGDoqNbRmCRJMMrL18KH399Bygks5utp2AgaJpZM4W0fHj>\n>> .\n>>\n>\n",
      "@creslinux then how would you manage more than 1 trade? \r\nlet's take an example: \r\n- You have 3 ETH in your account.\r\n- Your allowed capital at risk would be 0.01. \r\n- Edge has calculated that for XLM/ETH market your stoploss should be at 1%. \r\nSo your position size would be (3 * 0.01) / 0.01 = 3 ETH. \r\nThe first trade blocks all your capital. that means you cannot have a second trade. ",
      "And?\n\n\nOn Sat, Nov 10, 2018, 11:52 AM Misagh <notifications@github.com wrote:\n\n> @creslinux <https://github.com/creslinux> then how would you manage more\n> than 1 trade?\n> let's take an example:\n>\n>    - You have 3 ETH in your account.\n>    - Your allowed capital at risk would be 0.01.\n>    - Edge has calculated that for XLM/ETH market your stoploss should be\n>    at 1%.\n>    So your position size would be (3 * 0.01) / 0.01 = 3 ETH.\n>    The first trade blocks all your capital. that means you cannot have a\n>    second trade.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437572090>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AhCkwx9OcftznRwwgYZPGvCMWsmFczPuks5utqHUgaJpZM4W0fHj>\n> .\n>\n",
      "you are saying that the warning \"freqtrade.freqtradebot - WARNING - Unable to create trade: Available balance(0.038228 BTC) is lower than stake amount(0.064290 BTC)\" is normal ? ",
      "You either have to consider total_capital is a PER trade parameter (so you position size based on total capital per trade) OR on each iteration calculate your remaining capital (removing the first trade from it) and position size the next trade against the remaining capital. Am I missing something ? ",
      "I'm saying R in risk reward is to the stop, based on amount and price.\n\nIf FT has other stuff in place that is preventing you implement money mgt,\nrisk reward, position sizing that's another thing.\n\nWhat you cannot do is say R is 100% the trade amount, as it breaks quite\nliterally all Calcs that follow.\n\nFT has some odd trade table, and parameters in it's conf that bear no\ncorrelation to actual money management.  Sounds like you're fight them\ninstead of ignoring them\n\n\nOn Sat, Nov 10, 2018, 11:58 AM Misagh <notifications@github.com wrote:\n\n> you are saying that the warning \"freqtrade.freqtradebot - WARNING - Unable\n> to create trade: Available balance(0.038228 BTC) is lower than stake\n> amount(0.064290 BTC)\" is normal ?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437572393>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AhCkw0u0sQ6VCMOy7u4WRHxer1jRACpUks5utqM5gaJpZM4W0fHj>\n> .\n>\n",
      "Total capital is NOT a per trade amount\nHow much is in the trade has is not your total capital. TC does not change\nregardless how many trades are active and what's in them.\n\nIt can change when trades close and TC has gone up or down as a result of\nthem.\n\nOn Sat, Nov 10, 2018, 12:11 PM Danny <creslin@gmail.com wrote:\n\n> I'm saying R in risk reward is to the stop, based on amount and price.\n>\n> If FT has other stuff in place that is preventing you implement money mgt,\n> risk reward, position sizing that's another thing.\n>\n> What you cannot do is say R is 100% the trade amount, as it breaks quite\n> literally all Calcs that follow.\n>\n> FT has some odd trade table, and parameters in it's conf that bear no\n> correlation to actual money management.  Sounds like you're fight them\n> instead of ignoring them\n>\n>\n> On Sat, Nov 10, 2018, 11:58 AM Misagh <notifications@github.com wrote:\n>\n>> you are saying that the warning \"freqtrade.freqtradebot - WARNING -\n>> Unable to create trade: Available balance(0.038228 BTC) is lower than stake\n>> amount(0.064290 BTC)\" is normal ?\n>>\n>> â€”\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/freqtrade/freqtrade/pull/1229#issuecomment-437572393>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AhCkw0u0sQ6VCMOy7u4WRHxer1jRACpUks5utqM5gaJpZM4W0fHj>\n>> .\n>>\n>\n",
      "@creslinux makes valid points as it is but up to the point where we need to separate the total amount in the wallet by the total amount or stake for a single trade. Regardless of the R/R, you never trade 100% of your capital in a single trade.\r\nIt is my opinion that having a way to say a trade can have max X% of the total amount and let TF to decide how much is using of that % based on the R/R calculation would help the money/risk management of a wallet while opening FT to multiple parallel trades.\r\nSuppose the first trade FT decides to enter on has a worse R/R than a potential second trade 1hr later..."
    ],
    "num_comments": 30,
    "diff": "diff --git a/config.json.example b/config.json.example\nindex d6806c0e942..bbd9648da47 100644\n--- a/config.json.example\n+++ b/config.json.example\n@@ -53,6 +53,21 @@\n         \"sell_profit_only\": false,\n         \"ignore_roi_if_buy_signal\": false\n     },\n+    \"edge\": {\n+        \"enabled\": false,\n+        \"process_throttle_secs\": 3600,\n+        \"calculate_since_number_of_days\": 7,\n+        \"total_capital_in_stake_currency\": 0.5,\n+        \"allowed_risk\": 0.01,\n+        \"stoploss_range_min\": -0.01,\n+        \"stoploss_range_max\": -0.1,\n+        \"stoploss_range_step\": -0.01,\n+        \"minimum_winrate\": 0.60,\n+        \"minimum_expectancy\": 0.20,\n+        \"min_trade_number\": 10,\n+        \"max_trade_duration_minute\": 1440,\n+        \"remove_pumps\": false\n+    },\n     \"telegram\": {\n         \"enabled\": true,\n         \"token\": \"your_telegram_token\",\ndiff --git a/config_full.json.example b/config_full.json.example\nindex af6c7c0450a..9dba8f539ee 100644\n--- a/config_full.json.example\n+++ b/config_full.json.example\n@@ -59,6 +59,20 @@\n         ],\n         \"outdated_offset\": 5\n     },\n+    \"edge\": {\n+        \"enabled\": false,\n+        \"process_throttle_secs\": 3600,\n+        \"calculate_since_number_of_days\": 2,\n+        \"allowed_risk\": 0.01,\n+        \"stoploss_range_min\": -0.01,\n+        \"stoploss_range_max\": -0.1,\n+        \"stoploss_range_step\": -0.01,\n+        \"minimum_winrate\": 0.60,\n+        \"minimum_expectancy\": 0.20,\n+        \"min_trade_number\": 10,\n+        \"max_trade_duration_minute\": 1440,\n+        \"remove_pumps\": false\n+    },\n     \"experimental\": {\n         \"use_sell_signal\": false,\n         \"sell_profit_only\": false,\ndiff --git a/docs/configuration.md b/docs/configuration.md\nindex 15ba4b48d8f..d70a47b3822 100644\n--- a/docs/configuration.md\n+++ b/docs/configuration.md\n@@ -13,7 +13,7 @@ This page explains how to configure your `config.json` file.\n We recommend to copy and use the `config.json.example` as a template\n for your bot configuration.\n \n-The table below will list all configuration parameters. \n+The table below will list all configuration parameters.\n \n |  Command | Default | Mandatory | Description |\n |----------|---------|----------|-------------|\n@@ -21,11 +21,11 @@ The table below will list all configuration parameters.\n | `stake_currency` | BTC | Yes | Crypto-currency used for trading.\n | `stake_amount` | 0.05 | Yes | Amount of crypto-currency your bot will use for each trade. Per default, the bot will use (0.05 BTC x 3) = 0.15 BTC in total will be always engaged. Set it to 'unlimited' to allow the bot to use all avaliable balance.\n | `ticker_interval` | [1m, 5m, 30m, 1h, 1d] | No | The ticker interval to use (1min, 5 min, 30 min, 1 hour or 1 day). Default is 5 minutes\n-| `fiat_display_currency` | USD | Yes | Fiat currency used to show your profits. More information below. \n+| `fiat_display_currency` | USD | Yes | Fiat currency used to show your profits. More information below.\n | `dry_run` | true | Yes | Define if the bot must be in Dry-run or production mode.\n-| `process_only_new_candles` | false | No | If set to true indicators are processed only once a new candle arrives. If false each loop populates the indicators, this will mean the same candle is processed many times creating system load but can be useful of your strategy depends on tick data not only candle. Can be set either in Configuration or in the strategy. \n-| `minimal_roi` | See below | No | Set the threshold in percent the bot will use to sell a trade. More information below. If set, this parameter will override `minimal_roi` from your strategy file. \n-| `stoploss` | -0.10 | No | Value of the stoploss in percent used by the bot. More information below. If set, this parameter will override `stoploss` from your strategy file. \n+| `process_only_new_candles` | false | No | If set to true indicators are processed only once a new candle arrives. If false each loop populates the indicators, this will mean the same candle is processed many times creating system load but can be useful of your strategy depends on tick data not only candle. Can be set either in Configuration or in the strategy.\n+| `minimal_roi` | See below | No | Set the threshold in percent the bot will use to sell a trade. More information below. If set, this parameter will override `minimal_roi` from your strategy file.\n+| `stoploss` | -0.10 | No | Value of the stoploss in percent used by the bot. More information below. If set, this parameter will override `stoploss` from your strategy file.\n | `trailing_stop` | false | No | Enables trailing stop-loss (based on `stoploss` in either configuration or strategy file).\n | `trailing_stop_positve` | 0 | No | Changes stop-loss once profit has been reached.\n | `trailing_stop_positve_offset` | 0 | No | Offset on when to apply `trailing_stop_positive`. Percentage value which should be positive.\n@@ -47,6 +47,7 @@ The table below will list all configuration parameters.\n | `exchange.ccxt_rate_limit` | True | No | DEPRECATED!! Have CCXT handle Exchange rate limits. Depending on the exchange, having this to false can lead to temporary bans from the exchange.\n | `exchange.ccxt_config` | None | No | Additional CCXT parameters passed to the regular ccxt instance. Parameters may differ from exchange to exchange and are documented in the [ccxt documentation](https://ccxt.readthedocs.io/en/latest/manual.html#instantiation)\n | `exchange.ccxt_async_config` | None | No | Additional CCXT parameters passed to the async ccxt instance. Parameters may differ from exchange to exchange  and are documented in the [ccxt documentation](https://ccxt.readthedocs.io/en/latest/manual.html#instantiation)\n+| `edge` | false | No | Please refer to [edge configuration document](edge.md) for detailed explanation.\n | `experimental.use_sell_signal` | false | No | Use your sell strategy in addition of the `minimal_roi`.\n | `experimental.sell_profit_only` | false | No | waits until you have made a positive profit before taking a sell decision.\n | `experimental.ignore_roi_if_buy_signal` | false | No | Does not sell if the buy-signal is still active. Takes preference over `minimal_roi` and `use_sell_signal`\n@@ -70,7 +71,7 @@ The definition of each config parameters is in [misc.py](https://github.com/freq\n ### Understand stake_amount\n \n `stake_amount` is an amount of crypto-currency your bot will use for each trade.\n-The minimal value is 0.0005. If there is not enough crypto-currency in \n+The minimal value is 0.0005. If there is not enough crypto-currency in\n the account an exception is generated.\n To allow the bot to trade all the avaliable `stake_currency` in your account set `stake_amount` = `unlimited`.\n In this case a trade amount is calclulated as `currency_balanse / (max_open_trades - current_open_trades)`.\n@@ -186,13 +187,13 @@ creating trades.\n }\n ```\n \n-Once you will be happy with your bot performance, you can switch it to \n+Once you will be happy with your bot performance, you can switch it to\n production mode.\n \n ## Switch to production mode\n \n-In production mode, the bot will engage your money. Be careful a wrong \n-strategy can lose all your money. Be aware of what you are doing when \n+In production mode, the bot will engage your money. Be careful a wrong\n+strategy can lose all your money. Be aware of what you are doing when\n you run it in production mode.\n \n ### To switch your bot in production mode:\n@@ -242,7 +243,7 @@ freqtrade\n \n ### Embedding Strategies\n \n-FreqTrade provides you with with an easy way to embed the strategy into your configuration file. \n+FreqTrade provides you with with an easy way to embed the strategy into your configuration file.\n This is done by utilizing BASE64 encoding and providing this string at the strategy configuration field,\n in your chosen config file.\n \ndiff --git a/docs/edge.md b/docs/edge.md\nnew file mode 100644\nindex 00000000000..f74f8fdcc98\n--- /dev/null\n+++ b/docs/edge.md\n@@ -0,0 +1,151 @@\n+#  Edge positioning\n+\n+This page explains how to use Edge Positioning module in your bot in order to enter into a trade only if the trade has a reasonable win rate and risk reward ratio, and consequently adjust your position size and stoploss.\n+\n+**NOTICE:** Edge positioning is not compatible with dynamic whitelist. it overrides dynamic whitelist.\n+\n+## Table of Contents\n+\n+- [Introduction](#introduction)\n+- [How does it work?](#how-does-it-work?)\n+- [Configurations](#configurations)\n+\n+## Introduction\n+Trading is all about probability. No one can claim that he has a strategy working all the time. You have to assume that sometimes you lose.<br/><br/>\n+But it doesn't mean there is no rule, it only means rules should work \"most of the time\". Let's play a game: we toss a coin, heads: I give you 10$, tails: You give me 10$. Is it an interesting game ? no, it is quite boring, isn't it?<br/><br/>\n+But let's say the probability that we have heads is 80%, and the probability that we have tails is 20%. Now it is becoming interesting ...\n+That means 10$ x 80% versus 10$ x 20%. 8$ versus 2$. That means over time you will win 8$ risking only 2$ on each toss of coin.<br/><br/>\n+Let's complicate it more: you win 80% of the time but only 2$, I win 20% of the time but 8$. The calculation is: 80% * 2$ versus 20% * 8$. It is becoming boring again because overtime you win $1.6$ (80% x 2$) and me $1.6 (20% * 8$) too.<br/><br/>\n+The question is: How do you calculate that? how do you know if you wanna play?\n+The answer comes to two factors:\n+- Win Rate\n+- Risk Reward Ratio\n+\n+\n+### Win Rate\n+Means over X trades what is the percentage of winning trades to total number of trades (note that we don't consider how much you gained but only If you won or not).\n+\n+\n+`W = (Number of winning trades) / (Number of losing trades)`\n+\n+### Risk Reward Ratio\n+Risk Reward Ratio is a formula used to measure the expected gains of a given investment against the risk of loss. It is basically what you potentially win divided by what you potentially lose:\n+\n+`R = Profit / Loss`\n+\n+Over time, on many trades, you can calculate your risk reward by dividing your average profit on winning trades by your average loss on losing trades:\n+\n+`Average profit = (Sum of profits) / (Number of winning trades)`\n+\n+`Average loss = (Sum of losses) / (Number of losing trades)`\n+\n+`R = (Average profit) / (Average loss)`\n+\n+### Expectancy\n+\n+At this point we can combine W and R to create an expectancy ratio. This is a simple process of multiplying the risk reward ratio by the percentage of winning trades, and subtracting the percentage of losing trades, which is calculated as follows:\n+\n+Expectancy Ratio = (Risk Reward Ratio x Win Rate) â€“ Loss Rate\n+\n+So lets say your Win rate is 28% and your Risk Reward Ratio is 5:\n+\n+`Expectancy = (5 * 0.28) - 0.72 = 0.68`\n+\n+Superficially, this means that on average you expect this strategyâ€™s trades to return .68 times the size of your losers. This is important for two reasons: First, it may seem obvious, but you know right away that you have a positive return. Second, you now have a number you can compare to other candidate systems to make decisions about which ones you employ.\n+\n+It is important to remember that any system with an expectancy greater than 0 is profitable using past data. The key is finding one that will be profitable in the future.\n+\n+You can also use this number to evaluate the effectiveness of modifications to this system.\n+\n+**NOTICE:** It's important to keep in mind that Edge is testing your expectancy using historical data , there's no guarantee that you will have a similar edge in the future. It's still vital to do this testing in order to build confidence in your methodology, but be wary of \"curve-fitting\" your approach to the historical data as things are unlikely to play out the exact same way for future trades.\n+\n+## How does it work?\n+If enabled in config, Edge will go through historical data with a range of stoplosses in order to find buy and sell/stoploss signals. It then calculates win rate and expectancy over X trades for each stoploss. Here is an example:\n+\n+| Pair   |      Stoploss      |  Win Rate | Risk Reward Ratio | Expectancy |\n+|----------|:-------------:|-------------:|------------------:|-----------:|\n+| XZC/ETH  |  -0.03        |   0.52       |1.359670           | 0.228      |\n+| XZC/ETH  |  -0.01        |   0.50       |1.176384           | 0.088      |\n+| XZC/ETH  |  -0.02        |   0.51       |1.115941           | 0.079      |\n+\n+The goal here is to find the best stoploss for the strategy in order to have the maximum expectancy. In the above example stoploss at 3% leads to the maximum expectancy according to historical data.\n+\n+Edge then forces stoploss to your strategy dynamically.\n+\n+### Position size\n+Edge dictates the stake amount for each trade to the bot according to the following factors:\n+\n+- Allowed capital at risk\n+- Stoploss\n+\n+Allowed capital at risk is calculated as follows:\n+\n+**allowed capital at risk** = **total capital** X **allowed risk per trade**\n+\n+**total capital** is your stake amount.\n+\n+**Stoploss** is calculated as described above against historical data.\n+\n+Your position size then will be:\n+\n+**position size** = **allowed capital at risk** / **stoploss**\n+\n+Example:\n+Let's say your stake amount is 3 ETH, you would allow 1% of risk for each trade. thus your allowed capital at risk would be **3 x 0.01 = 0.03 ETH**. Let's assume Edge has calculated that for **XLM/ETH** market your stoploss should be at 2%. So your position size will be **0.03 / 0.02= 1.5ETH**.<br/>\n+\n+## Configurations\n+Edge has following configurations:\n+\n+#### enabled\n+If true, then Edge will run periodically<br/>\n+(default to false)\n+\n+#### process_throttle_secs\n+How often should Edge run in seconds? <br/>\n+(default to 3600 so one hour)\n+\n+#### calculate_since_number_of_days\n+Number of days of data against which Edge calculates Win Rate, Risk Reward and Expectancy\n+Note that it downloads historical data so increasing this number would lead to slowing down the bot<br/>\n+(default to 7)\n+\n+#### allowed_risk\n+Percentage of allowed risk per trade<br/>\n+(default to 0.01 [1%])\n+\n+#### stoploss_range_min\n+Minimum stoploss <br/>\n+(default to -0.01)\n+\n+#### stoploss_range_max\n+Maximum stoploss <br/>\n+(default to -0.10)\n+\n+#### stoploss_range_step\n+As an example if this is set to -0.01 then Edge will test the strategy for [-0.01, -0,02, -0,03 ..., -0.09, -0.10] ranges.\n+Note than having a smaller step means having a bigger range which could lead to slow calculation. <br/>\n+if you set this parameter to -0.001, you then slow down the Edge calculation by a factor of 10. <br/>\n+(default to -0.01)\n+\n+#### minimum_winrate\n+It filters pairs which don't have at least minimum_winrate.\n+This comes handy if you want to be conservative and don't comprise win rate in favor of risk reward ratio.<br/>\n+(default to 0.60)\n+\n+#### minimum_expectancy\n+It filters paris which have an expectancy lower than this number .\n+Having an expectancy of 0.20 means if you put 10$ on a trade you expect a 12$ return.<br/>\n+(default to 0.20)\n+\n+#### min_trade_number\n+When calculating W and R and E (expectancy) against historical data, you always want to have a minimum number of trades. The more this number is the more Edge is reliable. Having a win rate of 100% on a single trade doesn't mean anything at all. But having a win rate of 70% over past 100 trades means clearly something. <br/>\n+(default to 10, it is highly recommended not to decrease this number)\n+\n+#### max_trade_duration_minute\n+Edge will filter out trades with long duration. If a trade is profitable after 1 month, it is hard to evaluate the strategy based on it. But if most of trades are profitable and they have maximum duration of 30 minutes, then it is clearly a good sign.<br/>\n+**NOTICE:** While configuring this value, you should take into consideration your ticker interval. as an example filtering out trades having duration less than one day for a strategy which has 4h interval does not make sense. default value is set assuming your strategy interval is relatively small (1m or 5m, etc).<br/>\n+(default to 1 day, 1440 = 60 * 24)\n+\n+#### remove_pumps\n+Edge will remove sudden pumps in a given market while going through historical data. However, given that pumps happen very often in crypto markets, we recommend you keep this off.<br/>\n+(default to false)\ndiff --git a/docs/index.md b/docs/index.md\nindex 730f1095e41..e6e643ba719 100644\n--- a/docs/index.md\n+++ b/docs/index.md\n@@ -1,8 +1,8 @@\n # freqtrade documentation\n \n Welcome to freqtrade documentation. Please feel free to contribute to\n-this documentation if you see it became outdated by sending us a \n-Pull-request. Do not hesitate to reach us on \n+this documentation if you see it became outdated by sending us a\n+Pull-request. Do not hesitate to reach us on\n [Slack](https://join.slack.com/t/highfrequencybot/shared_invite/enQtMjQ5NTM0OTYzMzY3LWMxYzE3M2MxNDdjMGM3ZTYwNzFjMGIwZGRjNTc3ZGU3MGE3NzdmZGMwNmU3NDM5ZTNmM2Y3NjRiNzk4NmM4OGE)\n  if you do not find the answer to your questions.\n \n@@ -25,6 +25,7 @@ Pull-request. Do not hesitate to reach us on\n \t- [Change your strategy](https://github.com/freqtrade/freqtrade/blob/develop/docs/bot-optimization.md#change-your-strategy)\n     - [Add more Indicator](https://github.com/freqtrade/freqtrade/blob/develop/docs/bot-optimization.md#add-more-indicator)\n     - [Test your strategy with Backtesting](https://github.com/freqtrade/freqtrade/blob/develop/docs/backtesting.md)\n+    - [Edge positioning](https://github.com/mishaker/freqtrade/blob/money_mgt/docs/edge.md)\n     - [Find optimal parameters with Hyperopt](https://github.com/freqtrade/freqtrade/blob/develop/docs/hyperopt.md)\n - [Control the bot with telegram](https://github.com/freqtrade/freqtrade/blob/develop/docs/telegram-usage.md)\n - [Receive notifications via webhook](https://github.com/freqtrade/freqtrade/blob/develop/docs/webhook-config.md)\ndiff --git a/freqtrade/constants.py b/freqtrade/constants.py\nindex 2b09aa6c961..b7c069c45ac 100644\n--- a/freqtrade/constants.py\n+++ b/freqtrade/constants.py\n@@ -37,7 +37,7 @@\n     \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PKR\", \"PLN\",\n     \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"ZAR\", \"USD\",\n     \"BTC\", \"XBT\", \"ETH\", \"XRP\", \"LTC\", \"BCH\", \"USDT\"\n-    ]\n+]\n \n # Required json-schema for user specified config\n CONF_SCHEMA = {\n@@ -102,6 +102,7 @@\n             }\n         },\n         'exchange': {'$ref': '#/definitions/exchange'},\n+        'edge': {'$ref': '#/definitions/edge'},\n         'experimental': {\n             'type': 'object',\n             'properties': {\n@@ -170,6 +171,23 @@\n                 'ccxt_async_config': {'type': 'object'}\n             },\n             'required': ['name', 'key', 'secret', 'pair_whitelist']\n+        },\n+        'edge': {\n+            'type': 'object',\n+            'properties': {\n+                \"enabled\": {'type': 'boolean'},\n+                \"process_throttle_secs\": {'type': 'integer', 'minimum': 600},\n+                \"calculate_since_number_of_days\": {'type': 'integer'},\n+                \"allowed_risk\": {'type': 'number'},\n+                \"stoploss_range_min\": {'type': 'number'},\n+                \"stoploss_range_max\": {'type': 'number'},\n+                \"stoploss_range_step\": {'type': 'number'},\n+                \"minimum_winrate\": {'type': 'number'},\n+                \"minimum_expectancy\": {'type': 'number'},\n+                \"min_trade_number\": {'type': 'number'},\n+                \"max_trade_duration_minute\": {'type': 'integer'},\n+                \"remove_pumps\": {'type': 'boolean'}\n+            }\n         }\n     },\n     'anyOf': [\ndiff --git a/freqtrade/edge/__init__.py b/freqtrade/edge/__init__.py\nnew file mode 100644\nindex 00000000000..7b25a830612\n--- /dev/null\n+++ b/freqtrade/edge/__init__.py\n@@ -0,0 +1,408 @@\n+# pragma pylint: disable=W0603\n+\"\"\" Edge positioning package \"\"\"\n+import logging\n+from typing import Any, Dict\n+from collections import namedtuple\n+import arrow\n+\n+import numpy as np\n+import utils_find_1st as utf1st\n+from pandas import DataFrame\n+\n+import freqtrade.optimize as optimize\n+from freqtrade.arguments import Arguments\n+from freqtrade.arguments import TimeRange\n+from freqtrade.strategy.interface import SellType\n+\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class Edge():\n+    \"\"\"\n+    Calculates Win Rate, Risk Reward Ratio, Expectancy\n+    against historical data for a give set of markets and a strategy\n+    it then adjusts stoploss and position size accordingly\n+    and force it into the strategy\n+    Author: https://github.com/mishaker\n+    \"\"\"\n+\n+    config: Dict = {}\n+    _cached_pairs: Dict[str, Any] = {}  # Keeps a list of pairs\n+\n+    # pair info data type\n+    _pair_info = namedtuple(\n+        'pair_info',\n+        ['stoploss', 'winrate', 'risk_reward_ratio', 'required_risk_reward', 'expectancy'])\n+\n+    def __init__(self, config: Dict[str, Any], exchange, strategy) -> None:\n+\n+        self.config = config\n+        self.exchange = exchange\n+        self.strategy = strategy\n+        self.ticker_interval = self.strategy.ticker_interval\n+        self.tickerdata_to_dataframe = self.strategy.tickerdata_to_dataframe\n+        self.get_timeframe = optimize.get_timeframe\n+        self.advise_sell = self.strategy.advise_sell\n+        self.advise_buy = self.strategy.advise_buy\n+\n+        self.edge_config = self.config.get('edge', {})\n+        self._cached_pairs: Dict[str, Any] = {}  # Keeps a list of pairs\n+\n+        self._total_capital: float = self.config['stake_amount']\n+        self._allowed_risk: float = self.edge_config.get('allowed_risk')\n+        self._since_number_of_days: int = self.edge_config.get('calculate_since_number_of_days', 14)\n+        self._last_updated: int = 0  # Timestamp of pairs last updated time\n+\n+        self._stoploss_range_min = float(self.edge_config.get('stoploss_range_min', -0.01))\n+        self._stoploss_range_max = float(self.edge_config.get('stoploss_range_max', -0.05))\n+        self._stoploss_range_step = float(self.edge_config.get('stoploss_range_step', -0.001))\n+\n+        # calculating stoploss range\n+        self._stoploss_range = np.arange(\n+            self._stoploss_range_min,\n+            self._stoploss_range_max,\n+            self._stoploss_range_step\n+        )\n+\n+        self._timerange: TimeRange = Arguments.parse_timerange(\"%s-\" % arrow.now().shift(\n+            days=-1 * self._since_number_of_days).format('YYYYMMDD'))\n+\n+        self.fee = self.exchange.get_fee()\n+\n+    def calculate(self) -> bool:\n+        pairs = self.config['exchange']['pair_whitelist']\n+        heartbeat = self.edge_config.get('process_throttle_secs')\n+\n+        if (self._last_updated > 0) and (\n+                self._last_updated + heartbeat > arrow.utcnow().timestamp):\n+            return False\n+\n+        data: Dict[str, Any] = {}\n+        logger.info('Using stake_currency: %s ...', self.config['stake_currency'])\n+        logger.info('Using local backtesting data (using whitelist in given config) ...')\n+\n+        data = optimize.load_data(\n+            self.config['datadir'],\n+            pairs=pairs,\n+            ticker_interval=self.ticker_interval,\n+            refresh_pairs=True,\n+            exchange=self.exchange,\n+            timerange=self._timerange\n+        )\n+\n+        if not data:\n+            # Reinitializing cached pairs\n+            self._cached_pairs = {}\n+            logger.critical(\"No data found. Edge is stopped ...\")\n+            return False\n+\n+        preprocessed = self.tickerdata_to_dataframe(data)\n+\n+        # Print timeframe\n+        min_date, max_date = self.get_timeframe(preprocessed)\n+        logger.info(\n+            'Measuring data from %s up to %s (%s days) ...',\n+            min_date.isoformat(),\n+            max_date.isoformat(),\n+            (max_date - min_date).days\n+        )\n+        headers = ['date', 'buy', 'open', 'close', 'sell', 'high', 'low']\n+\n+        trades: list = []\n+        for pair, pair_data in preprocessed.items():\n+            # Sorting dataframe by date and reset index\n+            pair_data = pair_data.sort_values(by=['date'])\n+            pair_data = pair_data.reset_index(drop=True)\n+\n+            ticker_data = self.advise_sell(\n+                self.advise_buy(pair_data, {'pair': pair}), {'pair': pair})[headers].copy()\n+\n+            trades += self._find_trades_for_stoploss_range(ticker_data, pair, self._stoploss_range)\n+\n+        # If no trade found then exit\n+        if len(trades) == 0:\n+            return False\n+\n+        # Fill missing, calculable columns, profit, duration , abs etc.\n+        trades_df = self._fill_calculable_fields(DataFrame(trades))\n+        self._cached_pairs = self._process_expectancy(trades_df)\n+        self._last_updated = arrow.utcnow().timestamp\n+\n+        # Not a nice hack but probably simplest solution:\n+        # When backtest load data it loads the delta between disk and exchange\n+        # The problem is that exchange consider that recent.\n+        # it is but it is incomplete (c.f. _async_get_candle_history)\n+        # So it causes get_signal to exit cause incomplete ticker_hist\n+        # A patch to that would be update _pairs_last_refresh_time of exchange\n+        # so it will download again all pairs\n+        # Another solution is to add new data to klines instead of reassigning it:\n+        # self.klines[pair].update(data) instead of self.klines[pair] = data in exchange package.\n+        # But that means indexing timestamp and having a verification so that\n+        # there is no empty range between two timestaps (recently added and last\n+        # one)\n+        self.exchange._pairs_last_refresh_time = {}\n+\n+        return True\n+\n+    def stake_amount(self, pair: str) -> float:\n+        stoploss = self._cached_pairs[pair].stoploss\n+        allowed_capital_at_risk = round(self._total_capital * self._allowed_risk, 5)\n+        position_size = abs(round((allowed_capital_at_risk / stoploss), 5))\n+        return position_size\n+\n+    def stoploss(self, pair: str) -> float:\n+        return self._cached_pairs[pair].stoploss\n+\n+    def adjust(self, pairs) -> list:\n+        \"\"\"\n+        Filters out and sorts \"pairs\" according to Edge calculated pairs\n+        \"\"\"\n+\n+        final = []\n+        for pair, info in self._cached_pairs.items():\n+            if info.expectancy > float(self.edge_config.get('minimum_expectancy', 0.2)) and \\\n+                info.winrate > float(self.edge_config.get('minimum_winrate', 0.60)) and \\\n+                    pair in pairs:\n+                final.append(pair)\n+\n+        if final:\n+            logger.info('Edge validated only %s', final)\n+        else:\n+            logger.info('Edge removed all pairs as no pair with minimum expectancy was found !')\n+\n+        return final\n+\n+    def _fill_calculable_fields(self, result: DataFrame) -> DataFrame:\n+        \"\"\"\n+        The result frame contains a number of columns that are calculable\n+        from other columns. These are left blank till all rows are added,\n+        to be populated in single vector calls.\n+\n+        Columns to be populated are:\n+        - Profit\n+        - trade duration\n+        - profit abs\n+        :param result Dataframe\n+        :return: result Dataframe\n+        \"\"\"\n+\n+        # stake and fees\n+        # stake = 0.015\n+        # 0.05% is 0.0005\n+        # fee = 0.001\n+\n+        stake = self.config.get('stake_amount')\n+        fee = self.fee\n+\n+        open_fee = fee / 2\n+        close_fee = fee / 2\n+\n+        result['trade_duration'] = result['close_time'] - result['open_time']\n+\n+        result['trade_duration'] = result['trade_duration'].map(\n+            lambda x: int(x.total_seconds() / 60))\n+\n+        # Spends, Takes, Profit, Absolute Profit\n+\n+        # Buy Price\n+        result['buy_vol'] = stake / result['open_rate']  # How many target are we buying\n+        result['buy_fee'] = stake * open_fee\n+        result['buy_spend'] = stake + result['buy_fee']  # How much we're spending\n+\n+        # Sell price\n+        result['sell_sum'] = result['buy_vol'] * result['close_rate']\n+        result['sell_fee'] = result['sell_sum'] * close_fee\n+        result['sell_take'] = result['sell_sum'] - result['sell_fee']\n+\n+        # profit_percent\n+        result['profit_percent'] = (result['sell_take'] - result['buy_spend']) / result['buy_spend']\n+\n+        # Absolute profit\n+        result['profit_abs'] = result['sell_take'] - result['buy_spend']\n+\n+        return result\n+\n+    def _process_expectancy(self, results: DataFrame) -> Dict[str, Any]:\n+        \"\"\"\n+        This calculates WinRate, Required Risk Reward, Risk Reward and Expectancy of all pairs\n+        The calulation will be done per pair and per strategy.\n+        \"\"\"\n+        # Removing pairs having less than min_trades_number\n+        min_trades_number = self.edge_config.get('min_trade_number', 10)\n+        results = results.groupby(['pair', 'stoploss']).filter(lambda x: len(x) > min_trades_number)\n+        ###################################\n+\n+        # Removing outliers (Only Pumps) from the dataset\n+        # The method to detect outliers is to calculate standard deviation\n+        # Then every value more than (standard deviation + 2*average) is out (pump)\n+        #\n+        # Removing Pumps\n+        if self.edge_config.get('remove_pumps', False):\n+            results = results.groupby(['pair', 'stoploss']).apply(\n+                lambda x: x[x['profit_abs'] < 2 * x['profit_abs'].std() + x['profit_abs'].mean()])\n+        ##########################################################################\n+\n+        # Removing trades having a duration more than X minutes (set in config)\n+        max_trade_duration = self.edge_config.get('max_trade_duration_minute', 1440)\n+        results = results[results.trade_duration < max_trade_duration]\n+        #######################################################################\n+\n+        if results.empty:\n+            return {}\n+\n+        groupby_aggregator = {\n+            'profit_abs': [\n+                ('nb_trades', 'count'),  # number of all trades\n+                ('profit_sum', lambda x: x[x > 0].sum()),  # cumulative profit of all winning trades\n+                ('loss_sum', lambda x: abs(x[x < 0].sum())),  # cumulative loss of all losing trades\n+                ('nb_win_trades', lambda x: x[x > 0].count())  # number of winning trades\n+            ],\n+            'trade_duration': [('avg_trade_duration', 'mean')]\n+        }\n+\n+        # Group by (pair and stoploss) by applying above aggregator\n+        df = results.groupby(['pair', 'stoploss'])['profit_abs', 'trade_duration'].agg(\n+            groupby_aggregator).reset_index(col_level=1)\n+\n+        # Dropping level 0 as we don't need it\n+        df.columns = df.columns.droplevel(0)\n+\n+        # Calculating number of losing trades, average win and average loss\n+        df['nb_loss_trades'] = df['nb_trades'] - df['nb_win_trades']\n+        df['average_win'] = df['profit_sum'] / df['nb_win_trades']\n+        df['average_loss'] = df['loss_sum'] / df['nb_loss_trades']\n+\n+        # Win rate = number of profitable trades / number of trades\n+        df['winrate'] = df['nb_win_trades'] / df['nb_trades']\n+\n+        # risk_reward_ratio = average win / average loss\n+        df['risk_reward_ratio'] = df['average_win'] / df['average_loss']\n+\n+        # required_risk_reward = (1 / winrate) - 1\n+        df['required_risk_reward'] = (1 / df['winrate']) - 1\n+\n+        # expectancy = (risk_reward_ratio * winrate) - (lossrate)\n+        df['expectancy'] = (df['risk_reward_ratio'] * df['winrate']) - (1 - df['winrate'])\n+\n+        # sort by expectancy and stoploss\n+        df = df.sort_values(by=['expectancy', 'stoploss'], ascending=False).groupby(\n+            'pair').first().sort_values(by=['expectancy'], ascending=False).reset_index()\n+\n+        final = {}\n+        for x in df.itertuples():\n+            info = {\n+                'stoploss': x.stoploss,\n+                'winrate': x.winrate,\n+                'risk_reward_ratio': x.risk_reward_ratio,\n+                'required_risk_reward': x.required_risk_reward,\n+                'expectancy': x.expectancy\n+            }\n+            final[x.pair] = self._pair_info(**info)\n+\n+        # Returning a list of pairs in order of \"expectancy\"\n+        return final\n+\n+    def _find_trades_for_stoploss_range(self, ticker_data, pair, stoploss_range):\n+        buy_column = ticker_data['buy'].values\n+        sell_column = ticker_data['sell'].values\n+        date_column = ticker_data['date'].values\n+        ohlc_columns = ticker_data[['open', 'high', 'low', 'close']].values\n+\n+        result: list = []\n+        for stoploss in stoploss_range:\n+            result += self._detect_next_stop_or_sell_point(\n+                buy_column, sell_column, date_column, ohlc_columns, round(stoploss, 6), pair\n+            )\n+\n+        return result\n+\n+    def _detect_next_stop_or_sell_point(self, buy_column, sell_column, date_column,\n+                                        ohlc_columns, stoploss, pair, start_point=0):\n+        \"\"\"\n+        Iterate through ohlc_columns recursively in order to find the next trade\n+        Next trade opens from the first buy signal noticed to\n+        The sell or stoploss signal after it.\n+        It then calls itself cutting OHLC, buy_column, sell_colum and date_column\n+        Cut from (the exit trade index) + 1\n+        Author: https://github.com/mishaker\n+        \"\"\"\n+\n+        result: list = []\n+        open_trade_index = utf1st.find_1st(buy_column, 1, utf1st.cmp_equal)\n+\n+        # return empty if we don't find trade entry (i.e. buy==1) or\n+        # we find a buy but at the of array\n+        if open_trade_index == -1 or open_trade_index == len(buy_column) - 1:\n+            return []\n+        else:\n+            open_trade_index += 1  # when a buy signal is seen,\n+            # trade opens in reality on the next candle\n+\n+        stop_price_percentage = stoploss + 1\n+        open_price = ohlc_columns[open_trade_index, 0]\n+        stop_price = (open_price * stop_price_percentage)\n+\n+        # Searching for the index where stoploss is hit\n+        stop_index = utf1st.find_1st(\n+            ohlc_columns[open_trade_index:, 2], stop_price, utf1st.cmp_smaller)\n+\n+        # If we don't find it then we assume stop_index will be far in future (infinite number)\n+        if stop_index == -1:\n+            stop_index = float('inf')\n+\n+        # Searching for the index where sell is hit\n+        sell_index = utf1st.find_1st(sell_column[open_trade_index:], 1, utf1st.cmp_equal)\n+\n+        # If we don't find it then we assume sell_index will be far in future (infinite number)\n+        if sell_index == -1:\n+            sell_index = float('inf')\n+\n+        # Check if we don't find any stop or sell point (in that case trade remains open)\n+        # It is not interesting for Edge to consider it so we simply ignore the trade\n+        # And stop iterating there is no more entry\n+        if stop_index == sell_index == float('inf'):\n+            return []\n+\n+        if stop_index <= sell_index:\n+            exit_index = open_trade_index + stop_index\n+            exit_type = SellType.STOP_LOSS\n+            exit_price = stop_price\n+        elif stop_index > sell_index:\n+            # if exit is SELL then we exit at the next candle\n+            exit_index = open_trade_index + sell_index + 1\n+\n+            # check if we have the next candle\n+            if len(ohlc_columns) - 1 < exit_index:\n+                return []\n+\n+            exit_type = SellType.SELL_SIGNAL\n+            exit_price = ohlc_columns[exit_index, 0]\n+\n+        trade = {'pair': pair,\n+                 'stoploss': stoploss,\n+                 'profit_percent': '',\n+                 'profit_abs': '',\n+                 'open_time': date_column[open_trade_index],\n+                 'close_time': date_column[exit_index],\n+                 'open_index': start_point + open_trade_index,\n+                 'close_index': start_point + exit_index,\n+                 'trade_duration': '',\n+                 'open_rate': round(open_price, 15),\n+                 'close_rate': round(exit_price, 15),\n+                 'exit_type': exit_type\n+                 }\n+\n+        result.append(trade)\n+\n+        # Calling again the same function recursively but giving\n+        # it a view of exit_index till the end of array\n+        return result + self._detect_next_stop_or_sell_point(\n+            buy_column[exit_index:],\n+            sell_column[exit_index:],\n+            date_column[exit_index:],\n+            ohlc_columns[exit_index:],\n+            stoploss,\n+            pair,\n+            (start_point + exit_index)\n+        )\ndiff --git a/freqtrade/freqtradebot.py b/freqtrade/freqtradebot.py\nindex 51160332d95..4a17e889e79 100644\n--- a/freqtrade/freqtradebot.py\n+++ b/freqtrade/freqtradebot.py\n@@ -17,6 +17,7 @@\n from freqtrade import (DependencyException, OperationalException,\n                        TemporaryError, __version__, constants, persistence)\n from freqtrade.exchange import Exchange\n+from freqtrade.edge import Edge\n from freqtrade.persistence import Trade\n from freqtrade.rpc import RPCManager, RPCMessageType\n from freqtrade.state import State\n@@ -24,6 +25,7 @@\n from freqtrade.strategy.resolver import IStrategy, StrategyResolver\n from freqtrade.exchange.exchange_helpers import order_book_to_dataframe\n \n+\n logger = logging.getLogger(__name__)\n \n \n@@ -54,6 +56,11 @@ def __init__(self, config: Dict[str, Any])-> None:\n         self.rpc: RPCManager = RPCManager(self)\n         self.persistence = None\n         self.exchange = Exchange(self.config)\n+\n+        # Initializing Edge only if enabled\n+        self.edge = Edge(self.config, self.exchange, self.strategy) if \\\n+            self.config.get('edge', {}).get('enabled', False) else None\n+\n         self.active_pair_whitelist: List[str] = self.config['exchange']['pair_whitelist']\n         self._init_modules()\n \n@@ -179,6 +186,17 @@ def _process(self) -> bool:\n             # Keep only the subsets of pairs wanted (up to nb_assets)\n             self.active_pair_whitelist = sanitized_list[:nb_assets] if nb_assets else sanitized_list\n \n+            # Calculating Edge positiong\n+            # Should be called before refresh_tickers\n+            # Otherwise it will override cached klines in exchange\n+            # with delta value (klines only from last refresh_pairs)\n+            if self.edge:\n+                self.edge.calculate()\n+                self.active_pair_whitelist = self.edge.adjust(self.active_pair_whitelist)\n+\n+            # Refreshing candles\n+            self.exchange.refresh_tickers(self.active_pair_whitelist, self.strategy.ticker_interval)\n+\n             # Query trades from persistence layer\n             trades = Trade.query.filter(Trade.is_open.is_(True)).all()\n \n@@ -309,13 +327,17 @@ def get_target_bid(self, pair: str, ticker: Dict[str, float]) -> float:\n \n         return used_rate\n \n-    def _get_trade_stake_amount(self) -> Optional[float]:\n+    def _get_trade_stake_amount(self, pair) -> Optional[float]:\n         \"\"\"\n         Check if stake amount can be fulfilled with the available balance\n         for the stake currency\n         :return: float: Stake Amount\n         \"\"\"\n-        stake_amount = self.config['stake_amount']\n+        if self.edge:\n+            stake_amount = self.edge.stake_amount(pair)\n+        else:\n+            stake_amount = self.config['stake_amount']\n+\n         avaliable_amount = self.exchange.get_balance(self.config['stake_currency'])\n \n         if stake_amount == constants.UNLIMITED_STAKE_AMOUNT:\n@@ -373,15 +395,6 @@ def create_trade(self) -> bool:\n         :return: True if a trade object has been created and persisted, False otherwise\n         \"\"\"\n         interval = self.strategy.ticker_interval\n-        stake_amount = self._get_trade_stake_amount()\n-\n-        if not stake_amount:\n-            return False\n-\n-        logger.info(\n-            'Checking buy signals to create a new trade with stake_amount: %f ...',\n-            stake_amount\n-        )\n         whitelist = copy.deepcopy(self.active_pair_whitelist)\n \n         # Remove currently opened and latest pairs from whitelist\n@@ -394,10 +407,18 @@ def create_trade(self) -> bool:\n             raise DependencyException('No currency pairs in whitelist')\n \n         # running get_signal on historical data fetched\n-        # to find buy signals\n         for _pair in whitelist:\n             (buy, sell) = self.strategy.get_signal(_pair, interval, self.exchange.klines.get(_pair))\n             if buy and not sell:\n+                stake_amount = self._get_trade_stake_amount(_pair)\n+                if not stake_amount:\n+                    return False\n+\n+                logger.info(\n+                    'Buy signal found: about create a new trade with stake_amount: %f ...',\n+                    stake_amount\n+                )\n+\n                 bidstrat_check_depth_of_market = self.config.get('bid_strategy', {}).\\\n                     get('check_depth_of_market', {})\n                 if (bidstrat_check_depth_of_market.get('enabled', False)) and\\\n@@ -624,10 +645,16 @@ def handle_trade(self, trade: Trade) -> bool:\n         return False\n \n     def check_sell(self, trade: Trade, sell_rate: float, buy: bool, sell: bool) -> bool:\n-        should_sell = self.strategy.should_sell(trade, sell_rate, datetime.utcnow(), buy, sell)\n+        if self.edge:\n+            stoploss = self.edge.stoploss(trade.pair)\n+            should_sell = self.strategy.should_sell(\n+                trade, sell_rate, datetime.utcnow(), buy, sell, force_stoploss=stoploss)\n+        else:\n+            should_sell = self.strategy.should_sell(trade, sell_rate, datetime.utcnow(), buy, sell)\n+\n         if should_sell.sell_flag:\n             self.execute_sell(trade, sell_rate, should_sell.sell_type)\n-            logger.info('excuted sell')\n+            logger.info('executed sell, reason: %s', should_sell.sell_type)\n             return True\n         return False\n \ndiff --git a/freqtrade/rpc/rpc.py b/freqtrade/rpc/rpc.py\nindex c3cbce2e7da..7e7b60ebc81 100644\n--- a/freqtrade/rpc/rpc.py\n+++ b/freqtrade/rpc/rpc.py\n@@ -410,7 +410,7 @@ def _rpc_forcebuy(self, pair: str, price: Optional[float]) -> Optional[Trade]:\n             raise RPCException(f'position for {pair} already open - id: {trade.id}')\n \n         # gen stake amount\n-        stakeamount = self._freqtrade._get_trade_stake_amount()\n+        stakeamount = self._freqtrade._get_trade_stake_amount(pair)\n \n         # execute buy\n         if self._freqtrade.execute_buy(pair, stakeamount, price):\ndiff --git a/freqtrade/strategy/interface.py b/freqtrade/strategy/interface.py\nindex 27da6147c7c..212559c8c8e 100644\n--- a/freqtrade/strategy/interface.py\n+++ b/freqtrade/strategy/interface.py\n@@ -203,17 +203,20 @@ def get_signal(self, pair: str, interval: str,\n         return buy, sell\n \n     def should_sell(self, trade: Trade, rate: float, date: datetime, buy: bool,\n-                    sell: bool, low: float = None, high: float = None) -> SellCheckTuple:\n+                    sell: bool, low: float = None, high: float = None,\n+                    force_stoploss: float = 0) -> SellCheckTuple:\n         \"\"\"\n         This function evaluate if on the condition required to trigger a sell has been reached\n         if the threshold is reached and updates the trade record.\n         :return: True if trade should be sold, False otherwise\n         \"\"\"\n+\n         # Set current rate to low for backtesting sell\n         current_rate = low or rate\n         current_profit = trade.calc_profit_percent(current_rate)\n         stoplossflag = self.stop_loss_reached(current_rate=current_rate, trade=trade,\n-                                              current_time=date, current_profit=current_profit)\n+                                              current_time=date, current_profit=current_profit,\n+                                              force_stoploss=force_stoploss)\n         if stoplossflag.sell_flag:\n             return stoplossflag\n         # Set current rate to low for backtesting sell\n@@ -241,7 +244,7 @@ def should_sell(self, trade: Trade, rate: float, date: datetime, buy: bool,\n         return SellCheckTuple(sell_flag=False, sell_type=SellType.NONE)\n \n     def stop_loss_reached(self, current_rate: float, trade: Trade, current_time: datetime,\n-                          current_profit: float) -> SellCheckTuple:\n+                          current_profit: float, force_stoploss: float) -> SellCheckTuple:\n         \"\"\"\n         Based on current profit of the trade and configured (trailing) stoploss,\n         decides to sell or not\n@@ -250,7 +253,8 @@ def stop_loss_reached(self, current_rate: float, trade: Trade, current_time: dat\n \n         trailing_stop = self.config.get('trailing_stop', False)\n \n-        trade.adjust_stop_loss(trade.open_rate, self.stoploss, initial=True)\n+        trade.adjust_stop_loss(trade.open_rate, force_stoploss if force_stoploss\n+                               else self.stoploss, initial=True)\n \n         # evaluate if the stoploss was hit\n         if self.stoploss is not None and trade.stop_loss >= current_rate:\ndiff --git a/freqtrade/tests/conftest.py b/freqtrade/tests/conftest.py\nindex c6eeebbef4b..8a497725f5d 100644\n--- a/freqtrade/tests/conftest.py\n+++ b/freqtrade/tests/conftest.py\n@@ -4,6 +4,7 @@\n from datetime import datetime\n from functools import reduce\n from typing import Dict, Optional\n+from collections import namedtuple\n from unittest.mock import MagicMock, PropertyMock\n \n import arrow\n@@ -12,6 +13,7 @@\n \n from freqtrade.exchange.exchange_helpers import parse_ticker_dataframe\n from freqtrade.exchange import Exchange\n+from freqtrade.edge import Edge\n from freqtrade.freqtradebot import FreqtradeBot\n \n logging.getLogger('').setLevel(logging.INFO)\n@@ -42,7 +44,32 @@ def get_patched_exchange(mocker, config, api_mock=None) -> Exchange:\n     return exchange\n \n \n+def patch_edge(mocker) -> None:\n+    # \"ETH/BTC\",\n+    # \"LTC/BTC\",\n+    # \"XRP/BTC\",\n+    # \"NEO/BTC\"\n+    pair_info = namedtuple(\n+        'pair_info',\n+        'stoploss, winrate, risk_reward_ratio, required_risk_reward, expectancy')\n+    mocker.patch('freqtrade.edge.Edge._cached_pairs', mocker.PropertyMock(\n+        return_value={\n+            'NEO/BTC': pair_info(-0.20, 0.66, 3.71, 0.50, 1.71),\n+            'LTC/BTC': pair_info(-0.21, 0.66, 3.71, 0.50, 1.71),\n+        }\n+    ))\n+    mocker.patch('freqtrade.edge.Edge.stoploss', MagicMock(return_value=-0.20))\n+    mocker.patch('freqtrade.edge.Edge.calculate', MagicMock(return_value=True))\n+\n+\n+def get_patched_edge(mocker, config) -> Edge:\n+    patch_edge(mocker)\n+    edge = Edge(config)\n+    return edge\n+\n # Functions for recurrent object patching\n+\n+\n def get_patched_freqtradebot(mocker, config) -> FreqtradeBot:\n     \"\"\"\n     This function patch _init_modules() to not call dependencies\n@@ -752,3 +779,23 @@ def buy_order_fee():\n         'status': 'closed',\n         'fee': None\n     }\n+\n+\n+@pytest.fixture(scope=\"function\")\n+def edge_conf(default_conf):\n+    default_conf['edge'] = {\n+        \"enabled\": True,\n+        \"process_throttle_secs\": 1800,\n+        \"calculate_since_number_of_days\": 14,\n+        \"allowed_risk\": 0.01,\n+        \"stoploss_range_min\": -0.01,\n+        \"stoploss_range_max\": -0.1,\n+        \"stoploss_range_step\": -0.01,\n+        \"maximum_winrate\": 0.80,\n+        \"minimum_expectancy\": 0.20,\n+        \"min_trade_number\": 15,\n+        \"max_trade_duration_minute\": 1440,\n+        \"remove_pumps\": False\n+    }\n+\n+    return default_conf\ndiff --git a/freqtrade/tests/edge/__init__.py b/freqtrade/tests/edge/__init__.py\nnew file mode 100644\nindex 00000000000..e69de29bb2d\ndiff --git a/freqtrade/tests/edge/test_edge.py b/freqtrade/tests/edge/test_edge.py\nnew file mode 100644\nindex 00000000000..a7b1882a5e6\n--- /dev/null\n+++ b/freqtrade/tests/edge/test_edge.py\n@@ -0,0 +1,310 @@\n+# pragma pylint: disable=missing-docstring, C0103, C0330\n+# pragma pylint: disable=protected-access, too-many-lines, invalid-name, too-many-arguments\n+\n+import pytest\n+import logging\n+from freqtrade.tests.conftest import get_patched_freqtradebot\n+from freqtrade.edge import Edge\n+from pandas import DataFrame, to_datetime\n+from freqtrade.strategy.interface import SellType\n+from freqtrade.tests.optimize import (BTrade, BTContainer, _build_backtest_dataframe,\n+                                      _get_frame_time_from_offset)\n+import arrow\n+import numpy as np\n+import math\n+\n+from unittest.mock import MagicMock\n+\n+# Cases to be tested:\n+# 1) Open trade should be removed from the end\n+# 2) Two complete trades within dataframe (with sell hit for all)\n+# 3) Entered, sl 1%, candle drops 8% => Trade closed, 1% loss\n+# 4) Entered, sl 3%, candle drops 4%, recovers to 1% => Trade closed, 3% loss\n+# 5) Stoploss and sell are hit. should sell on stoploss\n+####################################################################\n+\n+ticker_start_time = arrow.get(2018, 10, 3)\n+ticker_interval_in_minute = 60\n+_ohlc = {'date': 0, 'buy': 1, 'open': 2, 'high': 3, 'low': 4, 'close': 5, 'sell': 6, 'volume': 7}\n+\n+\n+# Open trade should be removed from the end\n+tc0 = BTContainer(data=[\n+    # D  O     H     L     C     V    B  S\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4975, 4987, 6172, 0, 1]],  # enter trade (signal on last candle)\n+    stop_loss=-0.99, roi=float('inf'), profit_perc=0.00,\n+    trades=[]\n+)\n+\n+# Two complete trades within dataframe(with sell hit for all)\n+tc1 = BTContainer(data=[\n+    # D  O     H     L     C     V    B  S\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4975, 4987, 6172, 0, 1],  # enter trade (signal on last candle)\n+    [2, 5000, 5025, 4975, 4987, 6172, 0, 0],  # exit at open\n+    [3, 5000, 5025, 4975, 4987, 6172, 1, 0],  # no action\n+    [4, 5000, 5025, 4975, 4987, 6172, 0, 0],  # should enter the trade\n+    [5, 5000, 5025, 4975, 4987, 6172, 0, 1],  # no action\n+    [6, 5000, 5025, 4975, 4987, 6172, 0, 0],  # should sell\n+],\n+    stop_loss=-0.99, roi=float('inf'), profit_perc=0.00,\n+    trades=[BTrade(sell_reason=SellType.SELL_SIGNAL, open_tick=1, close_tick=2),\n+            BTrade(sell_reason=SellType.SELL_SIGNAL, open_tick=4, close_tick=6)]\n+)\n+\n+# 3) Entered, sl 1%, candle drops 8% => Trade closed, 1% loss\n+tc2 = BTContainer(data=[\n+    # D  O     H     L     C     V    B  S\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4600, 4987, 6172, 0, 0],  # enter trade, stoploss hit\n+    [2, 5000, 5025, 4975, 4987, 6172, 0, 0],\n+],\n+    stop_loss=-0.01, roi=float('inf'), profit_perc=-0.01,\n+    trades=[BTrade(sell_reason=SellType.STOP_LOSS, open_tick=1, close_tick=1)]\n+)\n+\n+# 4) Entered, sl 3 %, candle drops 4%, recovers to 1 % = > Trade closed, 3 % loss\n+tc3 = BTContainer(data=[\n+    # D  O     H     L     C     V    B  S\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4800, 4987, 6172, 0, 0],  # enter trade, stoploss hit\n+    [2, 5000, 5025, 4975, 4987, 6172, 0, 0],\n+],\n+    stop_loss=-0.03, roi=float('inf'), profit_perc=-0.03,\n+    trades=[BTrade(sell_reason=SellType.STOP_LOSS, open_tick=1, close_tick=1)]\n+)\n+\n+# 5) Stoploss and sell are hit. should sell on stoploss\n+tc4 = BTContainer(data=[\n+    # D  O     H     L     C     V    B  S\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4800, 4987, 6172, 0, 1],  # enter trade, stoploss hit, sell signal\n+    [2, 5000, 5025, 4975, 4987, 6172, 0, 0],\n+],\n+    stop_loss=-0.03, roi=float('inf'), profit_perc=-0.03,\n+    trades=[BTrade(sell_reason=SellType.STOP_LOSS, open_tick=1, close_tick=1)]\n+)\n+\n+TESTS = [\n+    tc0,\n+    tc1,\n+    tc2,\n+    tc3,\n+    tc4\n+]\n+\n+\n+@pytest.mark.parametrize(\"data\", TESTS)\n+def test_edge_results(edge_conf, mocker, caplog, data) -> None:\n+    \"\"\"\n+    run functional tests\n+    \"\"\"\n+    freqtrade = get_patched_freqtradebot(mocker, edge_conf)\n+    edge = Edge(edge_conf, freqtrade.exchange, freqtrade.strategy)\n+    frame = _build_backtest_dataframe(data.data)\n+    caplog.set_level(logging.DEBUG)\n+    edge.fee = 0\n+\n+    trades = edge._find_trades_for_stoploss_range(frame, 'TEST/BTC', [data.stop_loss])\n+    results = edge._fill_calculable_fields(DataFrame(trades)) if trades else DataFrame()\n+\n+    print(results)\n+\n+    assert len(trades) == len(data.trades)\n+\n+    if not results.empty:\n+        assert round(results[\"profit_percent\"].sum(), 3) == round(data.profit_perc, 3)\n+\n+    for c, trade in enumerate(data.trades):\n+        res = results.iloc[c]\n+        assert res.exit_type == trade.sell_reason\n+        assert res.open_time == _get_frame_time_from_offset(trade.open_tick)\n+        assert res.close_time == _get_frame_time_from_offset(trade.close_tick)\n+\n+\n+def test_adjust(mocker, default_conf):\n+    freqtrade = get_patched_freqtradebot(mocker, default_conf)\n+    edge = Edge(default_conf, freqtrade.exchange, freqtrade.strategy)\n+    mocker.patch('freqtrade.edge.Edge._cached_pairs', mocker.PropertyMock(\n+        return_value={\n+            'E/F': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71),\n+            'C/D': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71),\n+            'N/O': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71)\n+        }\n+    ))\n+\n+    pairs = ['A/B', 'C/D', 'E/F', 'G/H']\n+    assert(edge.adjust(pairs) == ['E/F', 'C/D'])\n+\n+\n+def test_stoploss(mocker, default_conf):\n+    freqtrade = get_patched_freqtradebot(mocker, default_conf)\n+    edge = Edge(default_conf, freqtrade.exchange, freqtrade.strategy)\n+    mocker.patch('freqtrade.edge.Edge._cached_pairs', mocker.PropertyMock(\n+        return_value={\n+            'E/F': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71),\n+            'C/D': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71),\n+            'N/O': Edge._pair_info(-0.01, 0.66, 3.71, 0.50, 1.71)\n+        }\n+    ))\n+\n+    assert edge.stoploss('E/F') == -0.01\n+\n+\n+def _validate_ohlc(buy_ohlc_sell_matrice):\n+    for index, ohlc in enumerate(buy_ohlc_sell_matrice):\n+        # if not high < open < low or not high < close < low\n+        if not ohlc[3] >= ohlc[2] >= ohlc[4] or not ohlc[3] >= ohlc[5] >= ohlc[4]:\n+            raise Exception('Line ' + str(index + 1) + ' of ohlc has invalid values!')\n+    return True\n+\n+\n+def _build_dataframe(buy_ohlc_sell_matrice):\n+    _validate_ohlc(buy_ohlc_sell_matrice)\n+    tickers = []\n+    for ohlc in buy_ohlc_sell_matrice:\n+        ticker = {\n+            'date': ticker_start_time.shift(\n+                minutes=(\n+                    ohlc[0] *\n+                    ticker_interval_in_minute)).timestamp *\n+            1000,\n+            'buy': ohlc[1],\n+            'open': ohlc[2],\n+            'high': ohlc[3],\n+            'low': ohlc[4],\n+            'close': ohlc[5],\n+            'sell': ohlc[6]}\n+        tickers.append(ticker)\n+\n+    frame = DataFrame(tickers)\n+    frame['date'] = to_datetime(frame['date'],\n+                                unit='ms',\n+                                utc=True,\n+                                infer_datetime_format=True)\n+\n+    return frame\n+\n+\n+def _time_on_candle(number):\n+    return np.datetime64(ticker_start_time.shift(\n+        minutes=(number * ticker_interval_in_minute)).timestamp * 1000, 'ms')\n+\n+\n+def test_edge_heartbeat_calculate(mocker, edge_conf):\n+    freqtrade = get_patched_freqtradebot(mocker, edge_conf)\n+    edge = Edge(edge_conf, freqtrade.exchange, freqtrade.strategy)\n+    heartbeat = edge_conf['edge']['process_throttle_secs']\n+\n+    # should not recalculate if heartbeat not reached\n+    edge._last_updated = arrow.utcnow().timestamp - heartbeat + 1\n+\n+    assert edge.calculate() is False\n+\n+\n+def mocked_load_data(datadir, pairs=[], ticker_interval='0m', refresh_pairs=False,\n+                     timerange=None, exchange=None):\n+    hz = 0.1\n+    base = 0.001\n+\n+    ETHBTC = [\n+        [\n+            ticker_start_time.shift(minutes=(x * ticker_interval_in_minute)).timestamp * 1000,\n+            math.sin(x * hz) / 1000 + base,\n+            math.sin(x * hz) / 1000 + base + 0.0001,\n+            math.sin(x * hz) / 1000 + base - 0.0001,\n+            math.sin(x * hz) / 1000 + base,\n+            123.45\n+        ] for x in range(0, 500)]\n+\n+    hz = 0.2\n+    base = 0.002\n+    LTCBTC = [\n+        [\n+            ticker_start_time.shift(minutes=(x * ticker_interval_in_minute)).timestamp * 1000,\n+            math.sin(x * hz) / 1000 + base,\n+            math.sin(x * hz) / 1000 + base + 0.0001,\n+            math.sin(x * hz) / 1000 + base - 0.0001,\n+            math.sin(x * hz) / 1000 + base,\n+            123.45\n+        ] for x in range(0, 500)]\n+\n+    pairdata = {'NEO/BTC': ETHBTC, 'LTC/BTC': LTCBTC}\n+    return pairdata\n+\n+\n+def test_edge_process_downloaded_data(mocker, default_conf):\n+    default_conf['datadir'] = None\n+    freqtrade = get_patched_freqtradebot(mocker, default_conf)\n+    mocker.patch('freqtrade.exchange.Exchange.get_fee', MagicMock(return_value=0.001))\n+    mocker.patch('freqtrade.optimize.load_data', mocked_load_data)\n+    edge = Edge(default_conf, freqtrade.exchange, freqtrade.strategy)\n+\n+    assert edge.calculate()\n+    assert len(edge._cached_pairs) == 2\n+    assert edge._last_updated <= arrow.utcnow().timestamp + 2\n+\n+\n+def test_process_expectancy(mocker, edge_conf):\n+    edge_conf['edge']['min_trade_number'] = 2\n+    freqtrade = get_patched_freqtradebot(mocker, edge_conf)\n+\n+    def get_fee():\n+        return 0.001\n+\n+    freqtrade.exchange.get_fee = get_fee\n+    edge = Edge(edge_conf, freqtrade.exchange, freqtrade.strategy)\n+\n+    trades = [\n+        {'pair': 'TEST/BTC',\n+         'stoploss': -0.9,\n+         'profit_percent': '',\n+         'profit_abs': '',\n+         'open_time': np.datetime64('2018-10-03T00:05:00.000000000'),\n+         'close_time': np.datetime64('2018-10-03T00:10:00.000000000'),\n+         'open_index': 1,\n+         'close_index': 1,\n+         'trade_duration': '',\n+         'open_rate': 17,\n+         'close_rate': 17,\n+         'exit_type': 'sell_signal'},\n+\n+        {'pair': 'TEST/BTC',\n+         'stoploss': -0.9,\n+         'profit_percent': '',\n+         'profit_abs': '',\n+         'open_time': np.datetime64('2018-10-03T00:20:00.000000000'),\n+         'close_time': np.datetime64('2018-10-03T00:25:00.000000000'),\n+         'open_index': 4,\n+         'close_index': 4,\n+         'trade_duration': '',\n+         'open_rate': 20,\n+         'close_rate': 20,\n+         'exit_type': 'sell_signal'},\n+\n+        {'pair': 'TEST/BTC',\n+         'stoploss': -0.9,\n+         'profit_percent': '',\n+         'profit_abs': '',\n+         'open_time': np.datetime64('2018-10-03T00:30:00.000000000'),\n+         'close_time': np.datetime64('2018-10-03T00:40:00.000000000'),\n+         'open_index': 6,\n+         'close_index': 7,\n+         'trade_duration': '',\n+         'open_rate': 26,\n+         'close_rate': 34,\n+         'exit_type': 'sell_signal'}\n+    ]\n+\n+    trades_df = DataFrame(trades)\n+    trades_df = edge._fill_calculable_fields(trades_df)\n+    final = edge._process_expectancy(trades_df)\n+    assert len(final) == 1\n+\n+    assert 'TEST/BTC' in final\n+    assert final['TEST/BTC'].stoploss == -0.9\n+    assert round(final['TEST/BTC'].winrate, 10) == 0.3333333333\n+    assert round(final['TEST/BTC'].risk_reward_ratio, 10) == 306.5384615384\n+    assert round(final['TEST/BTC'].required_risk_reward, 10) == 2.0\n+    assert round(final['TEST/BTC'].expectancy, 10) == 101.5128205128\ndiff --git a/freqtrade/tests/optimize/__init__.py b/freqtrade/tests/optimize/__init__.py\nindex 2b7222e88d2..3d3066950f1 100644\n--- a/freqtrade/tests/optimize/__init__.py\n+++ b/freqtrade/tests/optimize/__init__.py\n@@ -31,7 +31,7 @@ class BTContainer(NamedTuple):\n \n def _get_frame_time_from_offset(offset):\n     return ticker_start_time.shift(\n-        minutes=(offset * ticker_interval_in_minute)).datetime\n+        minutes=(offset * ticker_interval_in_minute)).datetime.replace(tzinfo=None)\n \n \n def _build_backtest_dataframe(ticker_with_signals):\ndiff --git a/freqtrade/tests/optimize/test_backtest_detail.py b/freqtrade/tests/optimize/test_backtest_detail.py\nindex 806c136bc34..eaec3bf49f5 100644\n--- a/freqtrade/tests/optimize/test_backtest_detail.py\n+++ b/freqtrade/tests/optimize/test_backtest_detail.py\n@@ -1,4 +1,4 @@\n-# pragma pylint: disable=missing-docstring, W0212, line-too-long, C0103, unused-argument\n+# pragma pylint: disable=missing-docstring, W0212, line-too-long, C0103, C0330, unused-argument\n import logging\n from unittest.mock import MagicMock\n \n@@ -34,15 +34,15 @@\n # TC2: Stop-Loss Triggered 3% Loss\n tc1 = BTContainer(data=[\n     # D  O     H     L     C     V    B  S\n-    [0, 5000, 5025, 4975, 4987, 6172,    1, 0],\n-    [1, 5000, 5025, 4975, 4987, 6172,    0, 0],  # enter trade (signal on last candle)\n-    [2, 4987, 5012, 4962, 4975, 6172,    0, 0],\n-    [3, 4975, 5000, 4800, 4962, 6172,    0, 0],  # exit with stoploss hit\n-    [4, 4962, 4987, 4937, 4950, 6172,    0, 0],\n-    [5, 4950, 4975, 4925, 4950, 6172,    0, 0]],\n+    [0, 5000, 5025, 4975, 4987, 6172, 1, 0],\n+    [1, 5000, 5025, 4975, 4987, 6172, 0, 0],  # enter trade (signal on last candle)\n+    [2, 4987, 5012, 4962, 4975, 6172, 0, 0],\n+    [3, 4975, 5000, 4800, 4962, 6172, 0, 0],  # exit with stoploss hit\n+    [4, 4962, 4987, 4937, 4950, 6172, 0, 0],\n+    [5, 4950, 4975, 4925, 4950, 6172, 0, 0]],\n     stop_loss=-0.03, roi=1, profit_perc=-0.03,\n     trades=[BTrade(sell_reason=SellType.STOP_LOSS, open_tick=1, close_tick=3)]\n-    )\n+)\n \n \n # Test 3 Candle drops 4%, Recovers 1%.\n@@ -127,7 +127,7 @@\n     [5, 4950, 4975, 4925, 4950, 6172, 0, 0]],\n     stop_loss=-0.02, roi=0.03, profit_perc=0.03,\n     trades=[BTrade(sell_reason=SellType.ROI, open_tick=1, close_tick=2)]\n-    )\n+)\n \n TESTS = [\n     tc0,\ndiff --git a/freqtrade/tests/test_freqtradebot.py b/freqtrade/tests/test_freqtradebot.py\nindex 55479cc6f42..4cba9e308da 100644\n--- a/freqtrade/tests/test_freqtradebot.py\n+++ b/freqtrade/tests/test_freqtradebot.py\n@@ -18,7 +18,7 @@\n from freqtrade.rpc import RPCMessageType\n from freqtrade.state import State\n from freqtrade.strategy.interface import SellType, SellCheckTuple\n-from freqtrade.tests.conftest import log_has, patch_exchange\n+from freqtrade.tests.conftest import log_has, patch_exchange, patch_edge\n \n \n # Functions for recurrent object patching\n@@ -177,7 +177,7 @@ def test_get_trade_stake_amount(default_conf, ticker, limit_buy_order, fee, mock\n \n     freqtrade = FreqtradeBot(default_conf)\n \n-    result = freqtrade._get_trade_stake_amount()\n+    result = freqtrade._get_trade_stake_amount('ETH/BTC')\n     assert result == default_conf['stake_amount']\n \n \n@@ -195,7 +195,7 @@ def test_get_trade_stake_amount_no_stake_amount(default_conf,\n     freqtrade = FreqtradeBot(default_conf)\n \n     with pytest.raises(DependencyException, match=r'.*stake amount.*'):\n-        freqtrade._get_trade_stake_amount()\n+        freqtrade._get_trade_stake_amount('ETH/BTC')\n \n \n def test_get_trade_stake_amount_unlimited_amount(default_conf,\n@@ -224,28 +224,131 @@ def test_get_trade_stake_amount_unlimited_amount(default_conf,\n     patch_get_signal(freqtrade)\n \n     # no open trades, order amount should be 'balance / max_open_trades'\n-    result = freqtrade._get_trade_stake_amount()\n+    result = freqtrade._get_trade_stake_amount('ETH/BTC')\n     assert result == default_conf['stake_amount'] / conf['max_open_trades']\n \n     # create one trade, order amount should be 'balance / (max_open_trades - num_open_trades)'\n     freqtrade.create_trade()\n \n-    result = freqtrade._get_trade_stake_amount()\n+    result = freqtrade._get_trade_stake_amount('LTC/BTC')\n     assert result == default_conf['stake_amount'] / (conf['max_open_trades'] - 1)\n \n     # create 2 trades, order amount should be None\n     freqtrade.create_trade()\n \n-    result = freqtrade._get_trade_stake_amount()\n+    result = freqtrade._get_trade_stake_amount('XRP/BTC')\n     assert result is None\n \n     # set max_open_trades = None, so do not trade\n     conf['max_open_trades'] = 0\n     freqtrade = FreqtradeBot(conf)\n-    result = freqtrade._get_trade_stake_amount()\n+    result = freqtrade._get_trade_stake_amount('NEO/BTC')\n     assert result is None\n \n \n+def test_edge_called_in_process(mocker, edge_conf) -> None:\n+    patch_RPCManager(mocker)\n+    patch_edge(mocker)\n+\n+    def _refresh_whitelist(list):\n+        return ['ETH/BTC', 'LTC/BTC', 'XRP/BTC', 'NEO/BTC']\n+\n+    patch_exchange(mocker)\n+    freqtrade = FreqtradeBot(edge_conf)\n+    freqtrade._refresh_whitelist = _refresh_whitelist\n+    patch_get_signal(freqtrade)\n+    freqtrade._process()\n+    assert freqtrade.active_pair_whitelist == ['NEO/BTC', 'LTC/BTC']\n+\n+\n+def test_edge_overrides_stake_amount(mocker, edge_conf) -> None:\n+    patch_RPCManager(mocker)\n+    patch_exchange(mocker)\n+    patch_edge(mocker)\n+    freqtrade = FreqtradeBot(edge_conf)\n+\n+    assert freqtrade._get_trade_stake_amount('NEO/BTC') == (0.001 * 0.01) / 0.20\n+    assert freqtrade._get_trade_stake_amount('LTC/BTC') == (0.001 * 0.01) / 0.20\n+\n+\n+def test_edge_overrides_stoploss(limit_buy_order, fee, markets, caplog, mocker, edge_conf) -> None:\n+\n+    patch_RPCManager(mocker)\n+    patch_exchange(mocker)\n+    patch_edge(mocker)\n+\n+    # Strategy stoploss is -0.1 but Edge imposes a stoploss at -0.2\n+    # Thus, if price falls 21%, stoploss should be triggered\n+    #\n+    # mocking the ticker: price is falling ...\n+    buy_price = limit_buy_order['price']\n+    mocker.patch.multiple(\n+        'freqtrade.exchange.Exchange',\n+        get_ticker=MagicMock(return_value={\n+            'bid': buy_price * 0.79,\n+            'ask': buy_price * 0.79,\n+            'last': buy_price * 0.79\n+        }),\n+        buy=MagicMock(return_value={'id': limit_buy_order['id']}),\n+        get_fee=fee,\n+        get_markets=markets,\n+    )\n+    #############################################\n+\n+    # Create a trade with \"limit_buy_order\" price\n+    freqtrade = FreqtradeBot(edge_conf)\n+    freqtrade.active_pair_whitelist = ['NEO/BTC']\n+    patch_get_signal(freqtrade)\n+    freqtrade.strategy.min_roi_reached = lambda trade, current_profit, current_time: False\n+    freqtrade.create_trade()\n+    trade = Trade.query.first()\n+    trade.update(limit_buy_order)\n+    #############################################\n+\n+    # stoploss shoud be hit\n+    assert freqtrade.handle_trade(trade) is True\n+    assert log_has('executed sell, reason: SellType.STOP_LOSS', caplog.record_tuples)\n+    assert trade.sell_reason == SellType.STOP_LOSS.value\n+\n+\n+def test_edge_should_ignore_strategy_stoploss(limit_buy_order, fee, markets,\n+                                              mocker, edge_conf) -> None:\n+    patch_RPCManager(mocker)\n+    patch_exchange(mocker)\n+    patch_edge(mocker)\n+\n+    # Strategy stoploss is -0.1 but Edge imposes a stoploss at -0.2\n+    # Thus, if price falls 15%, stoploss should not be triggered\n+    #\n+    # mocking the ticker: price is falling ...\n+    buy_price = limit_buy_order['price']\n+    mocker.patch.multiple(\n+        'freqtrade.exchange.Exchange',\n+        get_ticker=MagicMock(return_value={\n+            'bid': buy_price * 0.85,\n+            'ask': buy_price * 0.85,\n+            'last': buy_price * 0.85\n+        }),\n+        buy=MagicMock(return_value={'id': limit_buy_order['id']}),\n+        get_fee=fee,\n+        get_markets=markets,\n+    )\n+    #############################################\n+\n+    # Create a trade with \"limit_buy_order\" price\n+    freqtrade = FreqtradeBot(edge_conf)\n+    freqtrade.active_pair_whitelist = ['NEO/BTC']\n+    patch_get_signal(freqtrade)\n+    freqtrade.strategy.min_roi_reached = lambda trade, current_profit, current_time: False\n+    freqtrade.create_trade()\n+    trade = Trade.query.first()\n+    trade.update(limit_buy_order)\n+    #############################################\n+\n+    # stoploss shoud not be hit\n+    assert freqtrade.handle_trade(trade) is False\n+\n+\n def test_get_min_pair_stake_amount(mocker, default_conf) -> None:\n     patch_RPCManager(mocker)\n     patch_exchange(mocker)\n@@ -494,7 +597,7 @@ def test_create_trade_limit_reached(default_conf, ticker, limit_buy_order,\n     patch_get_signal(freqtrade)\n \n     assert freqtrade.create_trade() is False\n-    assert freqtrade._get_trade_stake_amount() is None\n+    assert freqtrade._get_trade_stake_amount('ETH/BTC') is None\n \n \n def test_create_trade_no_pairs(default_conf, ticker, limit_buy_order, fee, markets, mocker) -> None:\n@@ -593,7 +696,7 @@ def test_process_trade_creation(default_conf, ticker, limit_buy_order,\n     assert trade.amount == 90.99181073703367\n \n     assert log_has(\n-        'Checking buy signals to create a new trade with stake_amount: 0.001000 ...',\n+        'Buy signal found: about create a new trade with stake_amount: 0.001000 ...',\n         caplog.record_tuples\n     )\n \n@@ -1547,7 +1650,7 @@ def test_sell_profit_only_enable_loss(default_conf, limit_buy_order, fee, market\n     freqtrade = FreqtradeBot(default_conf)\n     patch_get_signal(freqtrade)\n     freqtrade.strategy.stop_loss_reached = \\\n-        lambda current_rate, trade, current_time, current_profit: SellCheckTuple(\n+        lambda current_rate, trade, current_time, force_stoploss, current_profit: SellCheckTuple(\n             sell_flag=False, sell_type=SellType.NONE)\n     freqtrade.create_trade()\n \n@@ -1821,7 +1924,7 @@ def test_get_real_amount_quote(default_conf, trades_for_order, buy_order_fee, ca\n         exchange='binance',\n         open_rate=0.245441,\n         open_order_id=\"123456\"\n-        )\n+    )\n     freqtrade = FreqtradeBot(default_conf)\n     patch_get_signal(freqtrade)\n \n@@ -2097,9 +2200,9 @@ def test_order_book_bid_strategy2(mocker, default_conf, order_book_l2, markets)\n     \"\"\"\n     patch_exchange(mocker)\n     mocker.patch.multiple(\n-           'freqtrade.exchange.Exchange',\n-           get_markets=markets,\n-           get_order_book=order_book_l2\n+        'freqtrade.exchange.Exchange',\n+        get_markets=markets,\n+        get_order_book=order_book_l2\n     )\n     default_conf['exchange']['name'] = 'binance'\n     default_conf['bid_strategy']['use_order_book'] = True\ndiff --git a/requirements.txt b/requirements.txt\nindex 4e38f66deeb..5248e16fc0e 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -24,3 +24,9 @@ scikit-optimize==0.5.2\n \n # Required for plotting data\n #plotly==3.1.1\n+\n+# find first, C search in arrays\n+py_find_1st==1.1.2\n+\n+#Load ticker files 30% faster\n+ujson==1.35\ndiff --git a/setup.py b/setup.py\nindex 8853ef7f8ce..c5f61c34dda 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -37,6 +37,8 @@\n           'cachetools',\n           'coinmarketcap',\n           'scikit-optimize',\n+          'ujson',\n+          'py_find_1st'\n       ],\n       include_package_data=True,\n       zip_safe=False,\n",
    "diff_length": 70629
  },
  {
    "index": 3,
    "repository": "freqtrade/freqtrade",
    "pr_title": "Lev exchange",
    "pr_body": "This summary is out of date, there are a lot more changes than whats listed here\r\n___\r\n\r\n## Summary\r\nChanges needed for exchange classes to implement leverage\r\n\r\n## Quick changelog\r\n\r\n- stoploss_adjust takes side as a parameter\r\n\r\n## What's new?\r\nNew exchange functions\r\n- apply_leverage_to_stake_amount\r\n- get_max_leverage\r\n- get_interest_rate\r\n- set_leverage\r\n",
    "pr_number": 5387,
    "comments": [
      "Sorry to discuss that so late in this pull request. Just about leverage and i don't know if a step by step approach is possible with long/short feature but maybe start with no leverage -> 1. I don't know if it can reduce complexity in development but a lot of strategies have a max_drawdown > 50% this mean no money in the account with a leverage of 2 if use all money. By the way many tks for this work (have short and long trades open at the same time with equal amount will be helpful to hedge bitcoin and reduce correlation to him ). Have a nice day. ",
      "> Sorry to discuss that so late in this pull request. Just about leverage and i don't know if a step by step approach is possible with long/short feature but maybe start with no leverage -> 1. I don't know if it can reduce complexity in development but a lot of strategies have a max_drawdown > 50% this mean no money in the account with a leverage of 2 if use all money. By the way many tks for this work (have short and long trades open at the same time with equal amount will be helpful to hedge bitcoin and reduce correlation to him ). Have a nice day.\r\n\r\nI do agree with this, and we'll surely have to think of ways to warn people about using leverage - as it may seem to boost your profits, but it'll also heavily boost your risk.\r\n\r\nWe'll however need (most) of the base methods / functionalities anyway for short (you'll always borrow there - and leverage is basically just a multiplier to that).",
      "I'm not really sure what I should do for the tests `test_fill_leverage_brackets` and `test_set_leverage`, they're basically just calling the ccxt `functions`, should I just write tests like I would for any other test? With input and expected output?",
      "@xmatthias So everything I can think of to put in this PR is in there I think, except the `get_interest_rates` method, which apparently CCXT hasn't implemented for any exchanges yet. This isn't a problem for futures, but we will need these interest rates for margin trading\r\n\r\nThe tests are failing though, I still haven't wrapped my head completely around how those tests are supposed to work.\r\nIf you're able to take a look at them I would appreciate that. Thanks",
      "Last error that my tests are getting\r\n\r\n```\r\ndef test_fill_leverage_brackets_binance(default_conf, mocker):\r\n        api_mock = MagicMock()\r\n        api_mock.load_leverage_brackets = MagicMock(return_value={\r\n            'ADA/BUSD': [[0.0, '0.025'],\r\n            ...\r\n            \"ZEC/USDT\": [[0.0, '0.01'],\r\n                         [5000.0, '0.025'],\r\n                         ...\r\n    \r\n        })\r\n        exchange = get_patched_exchange(mocker, default_conf, api_mock, id=\"binance\")\r\n    \r\n>       assert exchange._leverage_brackets == {\r\n            'ADA/BUSD': [[0.0, '0.025'],\r\n             ...\r\n            \"ZEC/USDT\": [[0.0, '0.01'],\r\n                         [5000.0, '0.025'],\r\n                         ...\r\n        }\r\nE       AssertionError: assert {} == {'ADA/BUSD': ...00.0, '0.5']]}\r\nE         Right contains 3 more items:\r\nE         {'ADA/BUSD': [[0.0, '0.025'],\r\nE                       [100000.0, '0.05'],\r\nE         \r\nE         ...Full output truncated (18 lines hidden), use '-vv' to show\r\n\r\ntests/exchange/test_binance.py:179: AssertionError\r\n```\r\n\r\nWhen I insert a breakpoint here\r\n\r\n```\r\ndef fill_leverage_brackets(self):\r\n        \"\"\"\r\n            Assigns property _leverage_brackets to a dictionary of information about the leverage\r\n            allowed on each pair\r\n        \"\"\"\r\n        try:\r\n            leverage_brackets = self._api.load_leverage_brackets()\r\n            breakpoint()\r\n```\r\n\r\nand print out `leverage_brackets` in pdb, I get this printed to the console, instead of getting the value that I assigned as the return_value\r\n\r\n```\r\n<MagicMock name='mock.load_leverage_brackets()' id='5042498384'>\r\n```\r\n\r\nI think that this might be the problem, but I don't know how to solve it.",
      "I created a validation method `validate_trading_mode_and_collateral` which checks if the configured trading_mode and collateral type is implemented for each each on freqtrade, I think this is the only validation method that we'll need.\r\n\r\nThere are OperationalExceptions inside `fill_leverage_brackets` and `get_max_leverage` in order to prevent programming errors, and these shouldn't ever be raised for the user",
      "`test_fill_leverage_brackets_ftx` is the only test failing, but it only fails if called after `test_fill_leverage_brackets_binance`\r\nIt looks like `exchange._leverage_brackets` retains the value that is assigned to binance for the ftx tests\r\n\r\nIf I remove the line `exchange.fill_leverage_brackets()` from `test_fill_leverage_brackets_binance` then the ftx test passes when running `pytest tests/exchange`, but `test_fill_leverage_brackets_binance` does not pass\r\n\r\nHere I'm running just `test_ftx`\r\n\r\n```\r\n% pytest tests/exchange/test_ftx.py\r\n================== test session starts ===================\r\nplatform darwin -- Python 3.9.6, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nTest order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>\r\nrootdir: /Users/sam/Documents/dev/trading/freqtrade\r\nplugins: cov-2.12.1, asyncio-0.15.1, random-order-1.0.4, mock-3.6.1\r\ncollected 9 items                                        \r\n\r\ntests/exchange/test_ftx.py .........               [100%]\r\n\r\n==================== warnings summary ====================\r\n.env/lib/python3.9/site-packages/skopt/space/space.py:253\r\n  /Users/sam/Documents/dev/trading/freqtrade/.env/lib/python3.9/site-packages/skopt/space/space.py:253: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\r\n  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\r\n    name=None, dtype=np.float):\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n============== 9 passed, 1 warning in 0.16s ==============\r\n```\r\n\r\nand here I run all the exchange tests\r\n\r\n```\r\n% pytest tests/exchange\r\n================== test session starts ===================\r\nplatform darwin -- Python 3.9.6, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nTest order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>\r\nrootdir: /Users/sam/Documents/dev/trading/freqtrade\r\nplugins: cov-2.12.1, asyncio-0.15.1, random-order-1.0.4, mock-3.6.1\r\ncollected 628 items / 36 deselected / 592 selected       \r\n\r\ntests/exchange/test_binance.py ............        [  2%]\r\ntests/exchange/test_exchange.py .................. [  5%]\r\n.................................................. [ 13%]\r\n.................................................. [ 21%]\r\n.................................................. [ 30%]\r\n.................................................. [ 38%]\r\n.................................................. [ 47%]\r\n.................................................. [ 55%]\r\n.................................................. [ 64%]\r\n.................................................. [ 72%]\r\n.................................................. [ 81%]\r\n.................................................. [ 89%]\r\n..........................................         [ 96%]\r\ntests/exchange/test_ftx.py ........F               [ 98%]\r\ntests/exchange/test_kraken.py ...........          [100%]\r\n\r\n======================== FAILURES ========================\r\n____________ test_fill_leverage_brackets_ftx _____________\r\n\r\ndefault_conf = {'ask_strategy': {'order_book_top': 1, 'use_order_book': False}, 'bid_strategy': {'ask_last_balance': 0.0, 'check_dept...lse}, 'cancel_open_orders_on_exit': False, 'datadir': '/Users/sam/Documents/dev/trading/freqtrade/tests/testdata', ...}\r\nmocker = <pytest_mock.plugin.MockerFixture object at 0x129c230a0>\r\n\r\n    def test_fill_leverage_brackets_ftx(default_conf, mocker):\r\n        # FTX only has one account wide leverage, so there's no leverage brackets\r\n        exchange = get_patched_exchange(mocker, default_conf, id=\"ftx\")\r\n        exchange.fill_leverage_brackets()\r\n>       assert exchange._leverage_brackets == {}\r\nE       AssertionError: assert {'ADA/BUSD': ...0000.0, 0.5]]} == {}\r\nE         Left contains 3 more items:\r\nE         {'ADA/BUSD': [[0.0, 0.025],\r\nE                       [100000.0, 0.05],\r\nE                       [500000.0, 0.1],\r\nE                       [1000000.0, 0.15],\r\nE                       [2000000.0, 0.25],\r\nE                       [5000000.0, 0.5]],...\r\nE         \r\nE         ...Full output truncated (18 lines hidden), use '-vv' to show\r\n\r\ntests/exchange/test_ftx.py:212: AssertionError\r\n```",
      "@xmatthias Do you have any insight into the last comment I posted? I've tried to solve it again, and don't really understand what's going on, to my understanding when I call `exchange = get_patched_exchange(mocker, default_conf, id=\"ftx\") in test_fill_leverage_brackets_ftx`, I'm expecting to get a brand new variable, but it looks like `exchange._leverage_brackets` still retains the same value from `test_fill_leverage_brackets_binance`",
      "Also let me know if there's anything else you want on this PR, I removed the new interest methods because they're not needed right now, and aren't complete, I'll create a separate PR for interest",
      "I realized the short stoploss tests are missing, I'll write those up",
      "> @xmatthias Do you have any insight into the last comment I posted? \n\nWill have a look when time allows.",
      "> > @xmatthias Do you have any insight into the last comment I posted?\r\n> \r\n> Will have a look when time allows.\r\n\r\nsounds good, once that test passes then I this PR is pretty much done, unless you see some things that you think should be changed\r\n",
      "> > @xmatthias Do you have any insight into the last comment I posted?\r\n> \r\n> Will have a look when time allows.\r\n\r\nI added a patch solution where I just set `exchange._leverage_brackets = {}` before calling `exchange.set_leverage_brackets`, it fixes the failing test, but I feel like there's an underlying issue for why the test is failing that isn't solved. I don't think `exchange._leverage_brackets` should still have the binance value when it reaches this test, but this problem should probably be for another PR because It's probably a problem of the whole exchange object, and not of the `_leverage_brackets` property",
      "The tests are passing locally, if they fail again I don't know why",
      "Why do the tests pass locally, but fail on Github so frequently? I re-setup my virtual env to use python 3.7 and they're still failing",
      "@xmatthias Just let me know if there's anything more you want on this branch, not sure if you're merging it, or waiting for me to merge it",
      "So a few of the tests fail once I add \r\n\r\n```\r\nif self._config['dry_run']:\r\n            return\r\n```\r\n\r\nbecause these errrors are no longer thrown\r\n\r\n```\r\nccxt.DDoSProtection\r\n(ccxt.NetworkError, ccxt.ExchangeError)\r\nccxt.BaseError\r\n```\r\n\r\n",
      "> So a few of the tests fail once I add\r\n> \r\n> ```\r\n> if self._config['dry_run']:\r\n>             return\r\n> ```\r\n> \r\n> because these errrors are no longer thrown\r\n> \r\n> ```\r\n> ccxt.DDoSProtection\r\n> (ccxt.NetworkError, ccxt.ExchangeError)\r\n> ccxt.BaseError\r\n> ```\r\n\r\nYes - that's clear - dry-run will not call the exchange methods.\r\nThat's why, for all of these methods, we usually have 2 tests (or one test testing both cases) - one that tests with \"dry_run=True\" (which will not raise these exceptions, and should not call the exchange's private endpoints) - and one with \"dry_run=False\" - which will call the API (and needs different tests).\r\n",
      "> > So a few of the tests fail once I add\r\n> > ```\r\n> > if self._config['dry_run']:\r\n> >             return\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > because these errrors are no longer thrown\r\n> > ```\r\n> > ccxt.DDoSProtection\r\n> > (ccxt.NetworkError, ccxt.ExchangeError)\r\n> > ccxt.BaseError\r\n> > ```\r\n> \r\n> Yes - that's clear - dry-run will not call the exchange methods.\r\n> That's why, for all of these methods, we usually have 2 tests (or one test testing both cases) - one that tests with \"dry_run=True\" (which will not raise these exceptions, and should not call the exchange's private endpoints) - and one with \"dry_run=False\" - which will call the API (and needs different tests).\r\n\r\nI didn't include a dry_run = true test for some of them because all that happens is the method returns on dry run",
      "> Thank u\r\n\r\nIf you want to help out there's a number of tasks to still be done, and we have a thread going [in discord](https://discord.com/channels/700048804539400213/888978375882977350/888985582116687893) \r\n"
    ],
    "num_comments": 20,
    "diff": "diff --git a/docs/leverage.md b/docs/leverage.md\nindex c4b975a0bad..9448c64c371 100644\n--- a/docs/leverage.md\n+++ b/docs/leverage.md\n@@ -15,3 +15,7 @@ For longs, the currency which pays the interest fee for the `borrowed` will alre\n     Rollover fee = P (borrowed money) * R (quat_hourly_interest) * ceiling(T/4) (in hours)\n     I (interest) = Opening fee + Rollover fee\n     [source](https://support.kraken.com/hc/en-us/articles/206161568-What-are-the-fees-for-margin-trading-)\n+\n+# TODO-lev: Mention that says you can't run 2 bots on the same account with leverage,\n+\n+#TODO-lev: Create a huge risk disclaimer\n\\ No newline at end of file\ndiff --git a/freqtrade/exchange/bibox.py b/freqtrade/exchange/bibox.py\nindex f0c2dd00b59..074dd2b109e 100644\n--- a/freqtrade/exchange/bibox.py\n+++ b/freqtrade/exchange/bibox.py\n@@ -20,4 +20,7 @@ class Bibox(Exchange):\n \n     # fetchCurrencies API point requires authentication for Bibox,\n     # so switch it off for Freqtrade load_markets()\n-    _ccxt_config: Dict = {\"has\": {\"fetchCurrencies\": False}}\n+    @property\n+    def _ccxt_config(self) -> Dict:\n+        # Parameters to add directly to ccxt sync/async initialization.\n+        return {\"has\": {\"fetchCurrencies\": False}}\ndiff --git a/freqtrade/exchange/binance.py b/freqtrade/exchange/binance.py\nindex 8dced3894ba..35f427c343f 100644\n--- a/freqtrade/exchange/binance.py\n+++ b/freqtrade/exchange/binance.py\n@@ -1,10 +1,13 @@\n \"\"\" Binance exchange subclass \"\"\"\n+import json\n import logging\n-from typing import Dict, List\n+from pathlib import Path\n+from typing import Dict, List, Optional, Tuple\n \n import arrow\n import ccxt\n \n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import (DDosProtection, InsufficientFundsError, InvalidOrderException,\n                                   OperationalException, TemporaryError)\n from freqtrade.exchange import Exchange\n@@ -26,36 +29,74 @@ class Binance(Exchange):\n         \"l2_limit_range\": [5, 10, 20, 50, 100, 500, 1000],\n     }\n \n-    def stoploss_adjust(self, stop_loss: float, order: Dict) -> bool:\n+    _supported_trading_mode_collateral_pairs: List[Tuple[TradingMode, Collateral]] = [\n+        # TradingMode.SPOT always supported and not required in this list\n+        # (TradingMode.MARGIN, Collateral.CROSS),  # TODO-lev: Uncomment once supported\n+        # (TradingMode.FUTURES, Collateral.CROSS),  # TODO-lev: Uncomment once supported\n+        # (TradingMode.FUTURES, Collateral.ISOLATED) # TODO-lev: Uncomment once supported\n+    ]\n+\n+    @property\n+    def _ccxt_config(self) -> Dict:\n+        # Parameters to add directly to ccxt sync/async initialization.\n+        if self.trading_mode == TradingMode.MARGIN:\n+            return {\n+                \"options\": {\n+                    \"defaultType\": \"margin\"\n+                }\n+            }\n+        elif self.trading_mode == TradingMode.FUTURES:\n+            return {\n+                \"options\": {\n+                    \"defaultType\": \"future\"\n+                }\n+            }\n+        else:\n+            return {}\n+\n+    def stoploss_adjust(self, stop_loss: float, order: Dict, side: str) -> bool:\n         \"\"\"\n         Verify stop_loss against stoploss-order value (limit or price)\n         Returns True if adjustment is necessary.\n+        :param side: \"buy\" or \"sell\"\n         \"\"\"\n-        return order['type'] == 'stop_loss_limit' and stop_loss > float(order['info']['stopPrice'])\n+\n+        return order['type'] == 'stop_loss_limit' and (\n+            (side == \"sell\" and stop_loss > float(order['info']['stopPrice'])) or\n+            (side == \"buy\" and stop_loss < float(order['info']['stopPrice']))\n+        )\n \n     @retrier(retries=0)\n-    def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dict) -> Dict:\n+    def stoploss(self, pair: str, amount: float, stop_price: float,\n+                 order_types: Dict, side: str, leverage: float) -> Dict:\n         \"\"\"\n         creates a stoploss limit order.\n         this stoploss-limit is binance-specific.\n         It may work with a limited number of other exchanges, but this has not been tested yet.\n+        :param side: \"buy\" or \"sell\"\n         \"\"\"\n         # Limit price threshold: As limit price should always be below stop-price\n         limit_price_pct = order_types.get('stoploss_on_exchange_limit_ratio', 0.99)\n-        rate = stop_price * limit_price_pct\n+        if side == \"sell\":\n+            # TODO: Name limit_rate in other exchange subclasses\n+            rate = stop_price * limit_price_pct\n+        else:\n+            rate = stop_price * (2 - limit_price_pct)\n \n         ordertype = \"stop_loss_limit\"\n \n         stop_price = self.price_to_precision(pair, stop_price)\n \n+        bad_stop_price = (stop_price <= rate) if side == \"sell\" else (stop_price >= rate)\n+\n         # Ensure rate is less than stop price\n-        if stop_price <= rate:\n+        if bad_stop_price:\n             raise OperationalException(\n-                'In stoploss limit order, stop price should be more than limit price')\n+                'In stoploss limit order, stop price should be better than limit price')\n \n         if self._config['dry_run']:\n             dry_order = self.create_dry_run_order(\n-                pair, ordertype, \"sell\", amount, stop_price)\n+                pair, ordertype, side, amount, stop_price, leverage)\n             return dry_order\n \n         try:\n@@ -66,7 +107,8 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n \n             rate = self.price_to_precision(pair, rate)\n \n-            order = self._api.create_order(symbol=pair, type=ordertype, side='sell',\n+            self._lev_prep(pair, leverage)\n+            order = self._api.create_order(symbol=pair, type=ordertype, side=side,\n                                            amount=amount, price=rate, params=params)\n             logger.info('stoploss limit order added for %s. '\n                         'stop price: %s. limit: %s', pair, stop_price, rate)\n@@ -74,21 +116,96 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n             return order\n         except ccxt.InsufficientFunds as e:\n             raise InsufficientFundsError(\n-                f'Insufficient funds to create {ordertype} sell order on market {pair}. '\n-                f'Tried to sell amount {amount} at rate {rate}. '\n+                f'Insufficient funds to create {ordertype} {side} order on market {pair}. '\n+                f'Tried to {side} amount {amount} at rate {rate}. '\n                 f'Message: {e}') from e\n         except ccxt.InvalidOrder as e:\n             # Errors:\n             # `binance Order would trigger immediately.`\n             raise InvalidOrderException(\n-                f'Could not create {ordertype} sell order on market {pair}. '\n-                f'Tried to sell amount {amount} at rate {rate}. '\n+                f'Could not create {ordertype} {side} order on market {pair}. '\n+                f'Tried to {side} amount {amount} at rate {rate}. '\n                 f'Message: {e}') from e\n         except ccxt.DDoSProtection as e:\n             raise DDosProtection(e) from e\n         except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n             raise TemporaryError(\n-                f'Could not place sell order due to {e.__class__.__name__}. Message: {e}') from e\n+                f'Could not place {side} order due to {e.__class__.__name__}. Message: {e}') from e\n+        except ccxt.BaseError as e:\n+            raise OperationalException(e) from e\n+\n+    @retrier\n+    def fill_leverage_brackets(self):\n+        \"\"\"\n+            Assigns property _leverage_brackets to a dictionary of information about the leverage\n+            allowed on each pair\n+        \"\"\"\n+        if self.trading_mode == TradingMode.FUTURES:\n+            try:\n+                if self._config['dry_run']:\n+                    leverage_brackets_path = (\n+                        Path(__file__).parent / 'binance_leverage_brackets.json'\n+                    )\n+                    with open(leverage_brackets_path) as json_file:\n+                        leverage_brackets = json.load(json_file)\n+                else:\n+                    leverage_brackets = self._api.load_leverage_brackets()\n+\n+                for pair, brackets in leverage_brackets.items():\n+                    self._leverage_brackets[pair] = [\n+                        [\n+                            min_amount,\n+                            float(margin_req)\n+                        ] for [\n+                            min_amount,\n+                            margin_req\n+                        ] in brackets\n+                    ]\n+\n+            except ccxt.DDoSProtection as e:\n+                raise DDosProtection(e) from e\n+            except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n+                raise TemporaryError(f'Could not fetch leverage amounts due to'\n+                                     f'{e.__class__.__name__}. Message: {e}') from e\n+            except ccxt.BaseError as e:\n+                raise OperationalException(e) from e\n+\n+    def get_max_leverage(self, pair: Optional[str], nominal_value: Optional[float]) -> float:\n+        \"\"\"\n+            Returns the maximum leverage that a pair can be traded at\n+            :param pair: The base/quote currency pair being traded\n+            :nominal_value: The total value of the trade in quote currency (collateral + debt)\n+        \"\"\"\n+        pair_brackets = self._leverage_brackets[pair]\n+        max_lev = 1.0\n+        for [min_amount, margin_req] in pair_brackets:\n+            if nominal_value >= min_amount:\n+                max_lev = 1/margin_req\n+        return max_lev\n+\n+    @ retrier\n+    def _set_leverage(\n+        self,\n+        leverage: float,\n+        pair: Optional[str] = None,\n+        trading_mode: Optional[TradingMode] = None\n+    ):\n+        \"\"\"\n+            Set's the leverage before making a trade, in order to not\n+            have the same leverage on every trade\n+        \"\"\"\n+        trading_mode = trading_mode or self.trading_mode\n+\n+        if self._config['dry_run'] or trading_mode != TradingMode.FUTURES:\n+            return\n+\n+        try:\n+            self._api.set_leverage(symbol=pair, leverage=leverage)\n+        except ccxt.DDoSProtection as e:\n+            raise DDosProtection(e) from e\n+        except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n+            raise TemporaryError(\n+                f'Could not set leverage due to {e.__class__.__name__}. Message: {e}') from e\n         except ccxt.BaseError as e:\n             raise OperationalException(e) from e\n \ndiff --git a/freqtrade/exchange/binance_leverage_brackets.json b/freqtrade/exchange/binance_leverage_brackets.json\nnew file mode 100644\nindex 00000000000..4450b015e16\n--- /dev/null\n+++ b/freqtrade/exchange/binance_leverage_brackets.json\n@@ -0,0 +1,1214 @@\n+{\n+    \"1000SHIB/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t   [5000.0, \"0.025\"],\n+\t\t   [25000.0, \"0.05\"],\n+\t\t   [100000.0, \"0.1\"],\n+\t\t   [250000.0, \"0.125\"],\n+\t\t   [1000000.0, \"0.5\"]\n+\t],\n+    \"1INCH/USDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"AAVE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"ADA/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"ADA/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"AKRO/USDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ALGO/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.25\"],\n+\t\t[2000000.0, \"0.5\"]\n+\t],\n+    \"ALICE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ALPHA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ANKR/USDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ATA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ATOM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.25\"],\n+\t\t[2000000.0, \"0.5\"]\n+\t],\n+    \"AUDIO/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"AVAX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[750000.0, \"0.25\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"AXS/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"],\n+\t\t[15000000.0, \"0.5\"]\n+\t],\n+    \"BAKE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BAL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BAND/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BAT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BCH/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"BEL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BLZ/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BNB/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"BNB/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"BTC/BUSD\": [\n+\t\t[0.0, \"0.004\"],\n+\t\t[25000.0, \"0.005\"],\n+\t\t[100000.0, \"0.01\"],\n+\t\t[500000.0, \"0.025\"],\n+\t\t[1000000.0, \"0.05\"],\n+\t\t[2000000.0, \"0.1\"],\n+\t\t[5000000.0, \"0.125\"],\n+\t\t[10000000.0, \"0.15\"],\n+\t\t[20000000.0, \"0.25\"],\n+\t\t[30000000.0, \"0.5\"]\n+\t],\n+    \"BTC/USDT\": [\n+\t\t[0.0, \"0.004\"],\n+\t\t[50000.0, \"0.005\"],\n+\t\t[250000.0, \"0.01\"],\n+\t\t[1000000.0, \"0.025\"],\n+\t\t[5000000.0, \"0.05\"],\n+\t\t[20000000.0, \"0.1\"],\n+\t\t[50000000.0, \"0.125\"],\n+\t\t[100000000.0, \"0.15\"],\n+\t\t[200000000.0, \"0.25\"],\n+\t\t[300000000.0, \"0.5\"]\n+\t],\n+    \"BTCBUSD_210129\": [\n+\t\t[0.0, \"0.004\"],\n+\t\t[5000.0, \"0.005\"],\n+\t\t[25000.0, \"0.01\"],\n+\t\t[100000.0, \"0.025\"],\n+\t\t[500000.0, \"0.05\"],\n+\t\t[2000000.0, \"0.1\"],\n+\t\t[5000000.0, \"0.125\"],\n+\t\t[10000000.0, \"0.15\"],\n+\t\t[20000000.0, \"0.25\"]\n+\t],\n+    \"BTCBUSD_210226\": [\n+\t\t[0.0, \"0.004\"],\n+\t\t[5000.0, \"0.005\"],\n+\t\t[25000.0, \"0.01\"],\n+\t\t[100000.0, \"0.025\"],\n+\t\t[500000.0, \"0.05\"],\n+\t\t[2000000.0, \"0.1\"],\n+\t\t[5000000.0, \"0.125\"],\n+\t\t[10000000.0, \"0.15\"],\n+\t\t[20000000.0, \"0.25\"]\n+\t],\n+    \"BTCDOM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BTCSTUSDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BTCUSDT_210326\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"BTCUSDT_210625\": [\n+\t\t[0.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"BTCUSDT_210924\": [\n+\t\t[0.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"],\n+\t\t[20000000.0, \"0.5\"]\n+\t],\n+    \"BTS/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BTT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"BZRX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"C98/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CELR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CHR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CHZ/USDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"COMP/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"COTI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CRV/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CTK/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"CVC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DASH/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DEFI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DENT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DGB/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DODO/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DOGE/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"DOGE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[750000.0, \"0.25\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DOT/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"DOTECOUSDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"DYDX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"EGLD/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ENJ/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"EOS/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"ETC/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"ETH/BUSD\": [\n+\t\t[0.0, \"0.004\"],\n+\t\t[25000.0, \"0.005\"],\n+\t\t[100000.0, \"0.01\"],\n+\t\t[500000.0, \"0.025\"],\n+\t\t[1000000.0, \"0.05\"],\n+\t\t[2000000.0, \"0.1\"],\n+\t\t[5000000.0, \"0.125\"],\n+\t\t[10000000.0, \"0.15\"],\n+\t\t[20000000.0, \"0.25\"],\n+\t\t[30000000.0, \"0.5\"]\n+\t],\n+    \"ETH/USDT\": [\n+\t\t[0.0, \"0.005\"],\n+\t\t[10000.0, \"0.0065\"],\n+\t\t[100000.0, \"0.01\"],\n+\t\t[500000.0, \"0.02\"],\n+\t\t[1000000.0, \"0.05\"],\n+\t\t[2000000.0, \"0.1\"],\n+\t\t[5000000.0, \"0.125\"],\n+\t\t[10000000.0, \"0.15\"],\n+\t\t[20000000.0, \"0.25\"]\n+\t],\n+    \"ETHUSDT_210326\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"ETHUSDT_210625\": [\n+\t\t[0.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"ETHUSDT_210924\": [\n+\t\t[0.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"],\n+\t\t[20000000.0, \"0.5\"]\n+\t],\n+    \"FIL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"FLM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"FTM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[750000.0, \"0.25\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"FTT/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"GRT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"GTC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"HBAR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"HNT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"HOT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ICP/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ICX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"IOST/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"IOTA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"IOTX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"KAVA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"KEEP/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"KNC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"KSM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"LENDUSDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"LINA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"LINK/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"LIT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"LRC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"LTC/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"LUNA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"],\n+\t\t[15000000.0, \"0.5\"]\n+\t],\n+    \"MANA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"MASK/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"MATIC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[150000.0, \"0.05\"],\n+\t\t[250000.0, \"0.1\"],\n+\t\t[500000.0, \"0.125\"],\n+\t\t[750000.0, \"0.25\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"MKR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"MTL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"NEAR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"NEO/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"NKN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"OCEAN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"OGN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"OMG/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ONE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ONT/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"QTUM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"RAY/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"REEF/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"REN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"RLC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"RSR/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"RUNE/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"RVN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SAND/USDT\": [\n+\t\t[0.0, \"0.012\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SFP/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SKL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SNX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SOL/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"SOL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.25\"],\n+\t\t[10000000.0, \"0.5\"]\n+\t],\n+    \"SRM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"STMX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"STORJ/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SUSHI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"SXP/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"THETA/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.025\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"TLM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"TOMO/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"TRB/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"TRX/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"UNFI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"UNI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.1665\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"VET/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"WAVES/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"XEM/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"XLM/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"XMR/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"XRP/BUSD\": [\n+\t\t[0.0, \"0.025\"],\n+\t\t[100000.0, \"0.05\"],\n+\t\t[500000.0, \"0.1\"],\n+\t\t[1000000.0, \"0.15\"],\n+\t\t[2000000.0, \"0.25\"],\n+\t\t[5000000.0, \"0.5\"]\n+\t],\n+    \"XRP/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"XTZ/USDT\": [\n+\t\t[0.0, \"0.0065\"],\n+\t\t[10000.0, \"0.01\"],\n+\t\t[50000.0, \"0.02\"],\n+\t\t[250000.0, \"0.05\"],\n+\t\t[1000000.0, \"0.1\"],\n+\t\t[2000000.0, \"0.125\"],\n+\t\t[5000000.0, \"0.15\"],\n+\t\t[10000000.0, \"0.25\"]\n+\t],\n+    \"YFI/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"YFII/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ZEC/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ZEN/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ZIL/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t],\n+    \"ZRX/USDT\": [\n+\t\t[0.0, \"0.01\"],\n+\t\t[5000.0, \"0.025\"],\n+\t\t[25000.0, \"0.05\"],\n+\t\t[100000.0, \"0.1\"],\n+\t\t[250000.0, \"0.125\"],\n+\t\t[1000000.0, \"0.5\"]\n+\t]\n+}\ndiff --git a/freqtrade/exchange/exchange.py b/freqtrade/exchange/exchange.py\nindex 2b9b08d70d1..4617fd4c226 100644\n--- a/freqtrade/exchange/exchange.py\n+++ b/freqtrade/exchange/exchange.py\n@@ -22,6 +22,7 @@\n from freqtrade.constants import (DEFAULT_AMOUNT_RESERVE_PERCENT, NON_OPEN_EXCHANGE_STATES,\n                                  ListPairsWithTimeframes)\n from freqtrade.data.converter import ohlcv_to_dataframe, trades_dict_to_list\n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import (DDosProtection, ExchangeError, InsufficientFundsError,\n                                   InvalidOrderException, OperationalException, PricingError,\n                                   RetryableOrderError, TemporaryError)\n@@ -48,9 +49,6 @@ class Exchange:\n \n     _config: Dict = {}\n \n-    # Parameters to add directly to ccxt sync/async initialization.\n-    _ccxt_config: Dict = {}\n-\n     # Parameters to add directly to buy/sell calls (like agreeing to trading agreement)\n     _params: Dict = {}\n \n@@ -74,6 +72,10 @@ class Exchange:\n     }\n     _ft_has: Dict = {}\n \n+    _supported_trading_mode_collateral_pairs: List[Tuple[TradingMode, Collateral]] = [\n+        # TradingMode.SPOT always supported and not required in this list\n+    ]\n+\n     def __init__(self, config: Dict[str, Any], validate: bool = True) -> None:\n         \"\"\"\n         Initializes this module with the given config,\n@@ -83,6 +85,7 @@ def __init__(self, config: Dict[str, Any], validate: bool = True) -> None:\n         self._api: ccxt.Exchange = None\n         self._api_async: ccxt_async.Exchange = None\n         self._markets: Dict = {}\n+        self._leverage_brackets: Dict = {}\n \n         self._config.update(config)\n \n@@ -125,14 +128,25 @@ def __init__(self, config: Dict[str, Any], validate: bool = True) -> None:\n         self._trades_pagination = self._ft_has['trades_pagination']\n         self._trades_pagination_arg = self._ft_has['trades_pagination_arg']\n \n+        self.trading_mode: TradingMode = (\n+            TradingMode(config.get('trading_mode'))\n+            if config.get('trading_mode')\n+            else TradingMode.SPOT\n+        )\n+        self.collateral: Optional[Collateral] = (\n+            Collateral(config.get('collateral'))\n+            if config.get('collateral')\n+            else None\n+        )\n+\n         # Initialize ccxt objects\n-        ccxt_config = self._ccxt_config.copy()\n+        ccxt_config = self._ccxt_config\n         ccxt_config = deep_merge_dicts(exchange_config.get('ccxt_config', {}), ccxt_config)\n         ccxt_config = deep_merge_dicts(exchange_config.get('ccxt_sync_config', {}), ccxt_config)\n \n         self._api = self._init_ccxt(exchange_config, ccxt_kwargs=ccxt_config)\n \n-        ccxt_async_config = self._ccxt_config.copy()\n+        ccxt_async_config = self._ccxt_config\n         ccxt_async_config = deep_merge_dicts(exchange_config.get('ccxt_config', {}),\n                                              ccxt_async_config)\n         ccxt_async_config = deep_merge_dicts(exchange_config.get('ccxt_async_config', {}),\n@@ -140,6 +154,9 @@ def __init__(self, config: Dict[str, Any], validate: bool = True) -> None:\n         self._api_async = self._init_ccxt(\n             exchange_config, ccxt_async, ccxt_kwargs=ccxt_async_config)\n \n+        if self.trading_mode != TradingMode.SPOT:\n+            self.fill_leverage_brackets()\n+\n         logger.info('Using Exchange \"%s\"', self.name)\n \n         if validate:\n@@ -157,7 +174,7 @@ def __init__(self, config: Dict[str, Any], validate: bool = True) -> None:\n             self.validate_order_time_in_force(config.get('order_time_in_force', {}))\n             self.validate_required_startup_candles(config.get('startup_candle_count', 0),\n                                                    config.get('timeframe', ''))\n-\n+            self.validate_trading_mode_and_collateral(self.trading_mode, self.collateral)\n         # Converts the interval provided in minutes in config to seconds\n         self.markets_refresh_interval: int = exchange_config.get(\n             \"markets_refresh_interval\", 60) * 60\n@@ -190,6 +207,7 @@ def _init_ccxt(self, exchange_config: Dict[str, Any], ccxt_module: CcxtModuleTyp\n             'secret': exchange_config.get('secret'),\n             'password': exchange_config.get('password'),\n             'uid': exchange_config.get('uid', ''),\n+            # 'options': exchange_config.get('options', {})\n         }\n         if ccxt_kwargs:\n             logger.info('Applying additional ccxt config: %s', ccxt_kwargs)\n@@ -210,6 +228,11 @@ def _init_ccxt(self, exchange_config: Dict[str, Any], ccxt_module: CcxtModuleTyp\n \n         return api\n \n+    @property\n+    def _ccxt_config(self) -> Dict:\n+        # Parameters to add directly to ccxt sync/async initialization.\n+        return {}\n+\n     @property\n     def name(self) -> str:\n         \"\"\"exchange Name (from ccxt)\"\"\"\n@@ -355,6 +378,7 @@ def reload_markets(self) -> None:\n             # Also reload async markets to avoid issues with newly listed pairs\n             self._load_async_markets(reload=True)\n             self._last_markets_refresh = arrow.utcnow().int_timestamp\n+            self.fill_leverage_brackets()\n         except ccxt.BaseError:\n             logger.exception(\"Could not reload markets.\")\n \n@@ -370,7 +394,7 @@ def validate_stakecurrency(self, stake_currency: str) -> None:\n             raise OperationalException(\n                 'Could not load markets, therefore cannot start. '\n                 'Please investigate the above error for more details.'\n-                )\n+            )\n         quote_currencies = self.get_quote_currencies()\n         if stake_currency not in quote_currencies:\n             raise OperationalException(\n@@ -482,6 +506,25 @@ def validate_required_startup_candles(self, startup_candles: int, timeframe: str\n                 f\"This strategy requires {startup_candles} candles to start. \"\n                 f\"{self.name} only provides {candle_limit} for {timeframe}.\")\n \n+    def validate_trading_mode_and_collateral(\n+        self,\n+        trading_mode: TradingMode,\n+        collateral: Optional[Collateral]  # Only None when trading_mode = TradingMode.SPOT\n+    ):\n+        \"\"\"\n+            Checks if freqtrade can perform trades using the configured\n+            trading mode(Margin, Futures) and Collateral(Cross, Isolated)\n+            Throws OperationalException:\n+                If the trading_mode/collateral type are not supported by freqtrade on this exchange\n+        \"\"\"\n+        if trading_mode != TradingMode.SPOT and (\n+            (trading_mode, collateral) not in self._supported_trading_mode_collateral_pairs\n+        ):\n+            collateral_value = collateral and collateral.value\n+            raise OperationalException(\n+                f\"Freqtrade does not support {collateral_value} {trading_mode.value} on {self.name}\"\n+            )\n+\n     def exchange_has(self, endpoint: str) -> bool:\n         \"\"\"\n         Checks if exchange implements a specific API endpoint.\n@@ -541,8 +584,8 @@ def price_get_one_pip(self, pair: str, price: float) -> float:\n         else:\n             return 1 / pow(10, precision)\n \n-    def get_min_pair_stake_amount(self, pair: str, price: float,\n-                                  stoploss: float) -> Optional[float]:\n+    def get_min_pair_stake_amount(self, pair: str, price: float, stoploss: float,\n+                                  leverage: Optional[float] = 1.0) -> Optional[float]:\n         try:\n             market = self.markets[pair]\n         except KeyError:\n@@ -576,12 +619,24 @@ def get_min_pair_stake_amount(self, pair: str, price: float,\n         # The value returned should satisfy both limits: for amount (base currency) and\n         # for cost (quote, stake currency), so max() is used here.\n         # See also #2575 at github.\n-        return max(min_stake_amounts) * amount_reserve_percent\n+        return self._get_stake_amount_considering_leverage(\n+            max(min_stake_amounts) * amount_reserve_percent,\n+            leverage or 1.0\n+        )\n+\n+    def _get_stake_amount_considering_leverage(self, stake_amount: float, leverage: float):\n+        \"\"\"\n+        Takes the minimum stake amount for a pair with no leverage and returns the minimum\n+        stake amount when leverage is considered\n+        :param stake_amount: The stake amount for a pair before leverage is considered\n+        :param leverage: The amount of leverage being used on the current trade\n+        \"\"\"\n+        return stake_amount / leverage\n \n     # Dry-run methods\n \n     def create_dry_run_order(self, pair: str, ordertype: str, side: str, amount: float,\n-                             rate: float, params: Dict = {}) -> Dict[str, Any]:\n+                             rate: float, leverage: float, params: Dict = {}) -> Dict[str, Any]:\n         order_id = f'dry_run_{side}_{datetime.now().timestamp()}'\n         _amount = self.amount_to_precision(pair, amount)\n         dry_order: Dict[str, Any] = {\n@@ -598,7 +653,8 @@ def create_dry_run_order(self, pair: str, ordertype: str, side: str, amount: flo\n             'timestamp': arrow.utcnow().int_timestamp * 1000,\n             'status': \"closed\" if ordertype == \"market\" else \"open\",\n             'fee': None,\n-            'info': {}\n+            'info': {},\n+            'leverage': leverage\n         }\n         if dry_order[\"type\"] in [\"stop_loss_limit\", \"stop-loss-limit\"]:\n             dry_order[\"info\"] = {\"stopPrice\": dry_order[\"price\"]}\n@@ -608,7 +664,7 @@ def create_dry_run_order(self, pair: str, ordertype: str, side: str, amount: flo\n             average = self.get_dry_market_fill_price(pair, side, amount, rate)\n             dry_order.update({\n                 'average': average,\n-                'cost': dry_order['amount'] * average,\n+                'cost': (dry_order['amount'] * average) / leverage\n             })\n             dry_order = self.add_dry_order_fee(pair, dry_order)\n \n@@ -716,17 +772,26 @@ def fetch_dry_run_order(self, order_id) -> Dict[str, Any]:\n \n     # Order handling\n \n-    def create_order(self, pair: str, ordertype: str, side: str, amount: float,\n-                     rate: float, time_in_force: str = 'gtc') -> Dict:\n-\n-        if self._config['dry_run']:\n-            dry_order = self.create_dry_run_order(pair, ordertype, side, amount, rate)\n-            return dry_order\n+    def _lev_prep(self, pair: str, leverage: float):\n+        if self.trading_mode != TradingMode.SPOT:\n+            self.set_margin_mode(pair, self.collateral)\n+            self._set_leverage(leverage, pair)\n \n+    def _get_params(self, ordertype: str, leverage: float, time_in_force: str = 'gtc') -> Dict:\n         params = self._params.copy()\n         if time_in_force != 'gtc' and ordertype != 'market':\n             param = self._ft_has.get('time_in_force_parameter', '')\n             params.update({param: time_in_force})\n+        return params\n+\n+    def create_order(self, pair: str, ordertype: str, side: str, amount: float,\n+                     rate: float, leverage: float = 1.0, time_in_force: str = 'gtc') -> Dict:\n+        # TODO-lev: remove default for leverage\n+        if self._config['dry_run']:\n+            dry_order = self.create_dry_run_order(pair, ordertype, side, amount, rate, leverage)\n+            return dry_order\n+\n+        params = self._get_params(ordertype, leverage, time_in_force)\n \n         try:\n             # Set the precision for amount and price(rate) as accepted by the exchange\n@@ -735,6 +800,7 @@ def create_order(self, pair: str, ordertype: str, side: str, amount: float,\n                            or self._api.options.get(\"createMarketBuyOrderRequiresPrice\", False))\n             rate_for_order = self.price_to_precision(pair, rate) if needs_price else None\n \n+            self._lev_prep(pair, leverage)\n             order = self._api.create_order(pair, ordertype, side,\n                                            amount, rate_for_order, params)\n             self._log_exchange_response('create_order', order)\n@@ -758,14 +824,15 @@ def create_order(self, pair: str, ordertype: str, side: str, amount: float,\n         except ccxt.BaseError as e:\n             raise OperationalException(e) from e\n \n-    def stoploss_adjust(self, stop_loss: float, order: Dict) -> bool:\n+    def stoploss_adjust(self, stop_loss: float, order: Dict, side: str) -> bool:\n         \"\"\"\n         Verify stop_loss against stoploss-order value (limit or price)\n         Returns True if adjustment is necessary.\n         \"\"\"\n         raise OperationalException(f\"stoploss is not implemented for {self.name}.\")\n \n-    def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dict) -> Dict:\n+    def stoploss(self, pair: str, amount: float, stop_price: float,\n+                 order_types: Dict, side: str, leverage: float) -> Dict:\n         \"\"\"\n         creates a stoploss order.\n         The precise ordertype is determined by the order_types dict or exchange default.\n@@ -1528,6 +1595,69 @@ def get_historic_trades(self, pair: str,\n             self._async_get_trade_history(pair=pair, since=since,\n                                           until=until, from_id=from_id))\n \n+    def fill_leverage_brackets(self):\n+        \"\"\"\n+            # TODO-lev: Should maybe be renamed, leverage_brackets might not be accurate for kraken\n+            Assigns property _leverage_brackets to a dictionary of information about the leverage\n+            allowed on each pair\n+        \"\"\"\n+        return\n+\n+    def get_max_leverage(self, pair: Optional[str], nominal_value: Optional[float]) -> float:\n+        \"\"\"\n+            Returns the maximum leverage that a pair can be traded at\n+            :param pair: The base/quote currency pair being traded\n+            :nominal_value: The total value of the trade in quote currency (collateral + debt)\n+        \"\"\"\n+        return 1.0\n+\n+    @retrier\n+    def _set_leverage(\n+        self,\n+        leverage: float,\n+        pair: Optional[str] = None,\n+        trading_mode: Optional[TradingMode] = None\n+    ):\n+        \"\"\"\n+            Set's the leverage before making a trade, in order to not\n+            have the same leverage on every trade\n+        \"\"\"\n+        # TODO-lev: Make a documentation page that says you can't run 2 bots\n+        # TODO-lev: on the same account with leverage\n+        if self._config['dry_run'] or not self.exchange_has(\"setLeverage\"):\n+            # Some exchanges only support one collateral type\n+            return\n+\n+        try:\n+            self._api.set_leverage(symbol=pair, leverage=leverage)\n+        except ccxt.DDoSProtection as e:\n+            raise DDosProtection(e) from e\n+        except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n+            raise TemporaryError(\n+                f'Could not set leverage due to {e.__class__.__name__}. Message: {e}') from e\n+        except ccxt.BaseError as e:\n+            raise OperationalException(e) from e\n+\n+    @retrier\n+    def set_margin_mode(self, pair: str, collateral: Collateral, params: dict = {}):\n+        '''\n+            Set's the margin mode on the exchange to cross or isolated for a specific pair\n+            :param symbol: base/quote currency pair (e.g. \"ADA/USDT\")\n+        '''\n+        if self._config['dry_run'] or not self.exchange_has(\"setMarginMode\"):\n+            # Some exchanges only support one collateral type\n+            return\n+\n+        try:\n+            self._api.set_margin_mode(pair, collateral.value, params)\n+        except ccxt.DDoSProtection as e:\n+            raise DDosProtection(e) from e\n+        except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n+            raise TemporaryError(\n+                f'Could not set margin mode due to {e.__class__.__name__}. Message: {e}') from e\n+        except ccxt.BaseError as e:\n+            raise OperationalException(e) from e\n+\n \n def is_exchange_known_ccxt(exchange_name: str, ccxt_module: CcxtModuleType = None) -> bool:\n     return exchange_name in ccxt_exchanges(ccxt_module)\ndiff --git a/freqtrade/exchange/ftx.py b/freqtrade/exchange/ftx.py\nindex 6cd549d60ba..62adea04cf2 100644\n--- a/freqtrade/exchange/ftx.py\n+++ b/freqtrade/exchange/ftx.py\n@@ -1,9 +1,10 @@\n \"\"\" FTX exchange subclass \"\"\"\n import logging\n-from typing import Any, Dict\n+from typing import Any, Dict, List, Optional, Tuple\n \n import ccxt\n \n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import (DDosProtection, InsufficientFundsError, InvalidOrderException,\n                                   OperationalException, TemporaryError)\n from freqtrade.exchange import Exchange\n@@ -21,6 +22,12 @@ class Ftx(Exchange):\n         \"ohlcv_candle_limit\": 1500,\n     }\n \n+    _supported_trading_mode_collateral_pairs: List[Tuple[TradingMode, Collateral]] = [\n+        # TradingMode.SPOT always supported and not required in this list\n+        # (TradingMode.MARGIN, Collateral.CROSS),  # TODO-lev: Uncomment once supported\n+        # (TradingMode.FUTURES, Collateral.CROSS)  # TODO-lev: Uncomment once supported\n+    ]\n+\n     def market_is_tradable(self, market: Dict[str, Any]) -> bool:\n         \"\"\"\n         Check if the market symbol is tradable by Freqtrade.\n@@ -31,15 +38,19 @@ def market_is_tradable(self, market: Dict[str, Any]) -> bool:\n         return (parent_check and\n                 market.get('spot', False) is True)\n \n-    def stoploss_adjust(self, stop_loss: float, order: Dict) -> bool:\n+    def stoploss_adjust(self, stop_loss: float, order: Dict, side: str) -> bool:\n         \"\"\"\n         Verify stop_loss against stoploss-order value (limit or price)\n         Returns True if adjustment is necessary.\n         \"\"\"\n-        return order['type'] == 'stop' and stop_loss > float(order['price'])\n+        return order['type'] == 'stop' and (\n+            side == \"sell\" and stop_loss > float(order['price']) or\n+            side == \"buy\" and stop_loss < float(order['price'])\n+        )\n \n     @retrier(retries=0)\n-    def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dict) -> Dict:\n+    def stoploss(self, pair: str, amount: float, stop_price: float,\n+                 order_types: Dict, side: str, leverage: float) -> Dict:\n         \"\"\"\n         Creates a stoploss order.\n         depending on order_types.stoploss configuration, uses 'market' or limit order.\n@@ -47,7 +58,10 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n         Limit orders are defined by having orderPrice set, otherwise a market order is used.\n         \"\"\"\n         limit_price_pct = order_types.get('stoploss_on_exchange_limit_ratio', 0.99)\n-        limit_rate = stop_price * limit_price_pct\n+        if side == \"sell\":\n+            limit_rate = stop_price * limit_price_pct\n+        else:\n+            limit_rate = stop_price * (2 - limit_price_pct)\n \n         ordertype = \"stop\"\n \n@@ -55,7 +69,7 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n \n         if self._config['dry_run']:\n             dry_order = self.create_dry_run_order(\n-                pair, ordertype, \"sell\", amount, stop_price)\n+                pair, ordertype, side, amount, stop_price, leverage)\n             return dry_order\n \n         try:\n@@ -67,7 +81,8 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n             params['stopPrice'] = stop_price\n             amount = self.amount_to_precision(pair, amount)\n \n-            order = self._api.create_order(symbol=pair, type=ordertype, side='sell',\n+            self._lev_prep(pair, leverage)\n+            order = self._api.create_order(symbol=pair, type=ordertype, side=side,\n                                            amount=amount, params=params)\n             self._log_exchange_response('create_stoploss_order', order)\n             logger.info('stoploss order added for %s. '\n@@ -75,19 +90,19 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n             return order\n         except ccxt.InsufficientFunds as e:\n             raise InsufficientFundsError(\n-                f'Insufficient funds to create {ordertype} sell order on market {pair}. '\n+                f'Insufficient funds to create {ordertype} {side} order on market {pair}. '\n                 f'Tried to create stoploss with amount {amount} at stoploss {stop_price}. '\n                 f'Message: {e}') from e\n         except ccxt.InvalidOrder as e:\n             raise InvalidOrderException(\n-                f'Could not create {ordertype} sell order on market {pair}. '\n+                f'Could not create {ordertype} {side} order on market {pair}. '\n                 f'Tried to create stoploss with amount {amount} at stoploss {stop_price}. '\n                 f'Message: {e}') from e\n         except ccxt.DDoSProtection as e:\n             raise DDosProtection(e) from e\n         except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n             raise TemporaryError(\n-                f'Could not place sell order due to {e.__class__.__name__}. Message: {e}') from e\n+                f'Could not place {side} order due to {e.__class__.__name__}. Message: {e}') from e\n         except ccxt.BaseError as e:\n             raise OperationalException(e) from e\n \n@@ -152,3 +167,18 @@ def get_order_id_conditional(self, order: Dict[str, Any]) -> str:\n         if order['type'] == 'stop':\n             return safe_value_fallback2(order, order, 'id_stop', 'id')\n         return order['id']\n+\n+    def fill_leverage_brackets(self):\n+        \"\"\"\n+            FTX leverage is static across the account, and doesn't change from pair to pair,\n+            so _leverage_brackets doesn't need to be set\n+        \"\"\"\n+        return\n+\n+    def get_max_leverage(self, pair: Optional[str], nominal_value: Optional[float]) -> float:\n+        \"\"\"\n+            Returns the maximum leverage that a pair can be traded at, which is always 20 on ftx\n+            :param pair: Here for super method, not used on FTX\n+            :nominal_value: Here for super method, not used on FTX\n+        \"\"\"\n+        return 20.0\ndiff --git a/freqtrade/exchange/kraken.py b/freqtrade/exchange/kraken.py\nindex 1b069aa6c67..19d0a49675a 100644\n--- a/freqtrade/exchange/kraken.py\n+++ b/freqtrade/exchange/kraken.py\n@@ -1,9 +1,10 @@\n \"\"\" Kraken exchange subclass \"\"\"\n import logging\n-from typing import Any, Dict\n+from typing import Any, Dict, List, Optional, Tuple\n \n import ccxt\n \n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import (DDosProtection, InsufficientFundsError, InvalidOrderException,\n                                   OperationalException, TemporaryError)\n from freqtrade.exchange import Exchange\n@@ -23,6 +24,12 @@ class Kraken(Exchange):\n         \"trades_pagination_arg\": \"since\",\n     }\n \n+    _supported_trading_mode_collateral_pairs: List[Tuple[TradingMode, Collateral]] = [\n+        # TradingMode.SPOT always supported and not required in this list\n+        # (TradingMode.MARGIN, Collateral.CROSS),  # TODO-lev: Uncomment once supported\n+        # (TradingMode.FUTURES, Collateral.CROSS)  # TODO-lev: No CCXT support\n+    ]\n+\n     def market_is_tradable(self, market: Dict[str, Any]) -> bool:\n         \"\"\"\n         Check if the market symbol is tradable by Freqtrade.\n@@ -67,16 +74,19 @@ def get_balances(self) -> dict:\n         except ccxt.BaseError as e:\n             raise OperationalException(e) from e\n \n-    def stoploss_adjust(self, stop_loss: float, order: Dict) -> bool:\n+    def stoploss_adjust(self, stop_loss: float, order: Dict, side: str) -> bool:\n         \"\"\"\n         Verify stop_loss against stoploss-order value (limit or price)\n         Returns True if adjustment is necessary.\n         \"\"\"\n-        return (order['type'] in ('stop-loss', 'stop-loss-limit')\n-                and stop_loss > float(order['price']))\n+        return (order['type'] in ('stop-loss', 'stop-loss-limit') and (\n+                (side == \"sell\" and stop_loss > float(order['price'])) or\n+                (side == \"buy\" and stop_loss < float(order['price']))\n+                ))\n \n     @retrier(retries=0)\n-    def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dict) -> Dict:\n+    def stoploss(self, pair: str, amount: float, stop_price: float,\n+                 order_types: Dict, side: str, leverage: float) -> Dict:\n         \"\"\"\n         Creates a stoploss market order.\n         Stoploss market orders is the only stoploss type supported by kraken.\n@@ -86,7 +96,10 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n         if order_types.get('stoploss', 'market') == 'limit':\n             ordertype = \"stop-loss-limit\"\n             limit_price_pct = order_types.get('stoploss_on_exchange_limit_ratio', 0.99)\n-            limit_rate = stop_price * limit_price_pct\n+            if side == \"sell\":\n+                limit_rate = stop_price * limit_price_pct\n+            else:\n+                limit_rate = stop_price * (2 - limit_price_pct)\n             params['price2'] = self.price_to_precision(pair, limit_rate)\n         else:\n             ordertype = \"stop-loss\"\n@@ -95,13 +108,13 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n \n         if self._config['dry_run']:\n             dry_order = self.create_dry_run_order(\n-                pair, ordertype, \"sell\", amount, stop_price)\n+                pair, ordertype, side, amount, stop_price, leverage)\n             return dry_order\n \n         try:\n             amount = self.amount_to_precision(pair, amount)\n \n-            order = self._api.create_order(symbol=pair, type=ordertype, side='sell',\n+            order = self._api.create_order(symbol=pair, type=ordertype, side=side,\n                                            amount=amount, price=stop_price, params=params)\n             self._log_exchange_response('create_stoploss_order', order)\n             logger.info('stoploss order added for %s. '\n@@ -109,18 +122,70 @@ def stoploss(self, pair: str, amount: float, stop_price: float, order_types: Dic\n             return order\n         except ccxt.InsufficientFunds as e:\n             raise InsufficientFundsError(\n-                f'Insufficient funds to create {ordertype} sell order on market {pair}. '\n+                f'Insufficient funds to create {ordertype} {side} order on market {pair}. '\n                 f'Tried to create stoploss with amount {amount} at stoploss {stop_price}. '\n                 f'Message: {e}') from e\n         except ccxt.InvalidOrder as e:\n             raise InvalidOrderException(\n-                f'Could not create {ordertype} sell order on market {pair}. '\n+                f'Could not create {ordertype} {side} order on market {pair}. '\n                 f'Tried to create stoploss with amount {amount} at stoploss {stop_price}. '\n                 f'Message: {e}') from e\n         except ccxt.DDoSProtection as e:\n             raise DDosProtection(e) from e\n         except (ccxt.NetworkError, ccxt.ExchangeError) as e:\n             raise TemporaryError(\n-                f'Could not place sell order due to {e.__class__.__name__}. Message: {e}') from e\n+                f'Could not place {side} order due to {e.__class__.__name__}. Message: {e}') from e\n         except ccxt.BaseError as e:\n             raise OperationalException(e) from e\n+\n+    def fill_leverage_brackets(self):\n+        \"\"\"\n+            Assigns property _leverage_brackets to a dictionary of information about the leverage\n+            allowed on each pair\n+        \"\"\"\n+        leverages = {}\n+\n+        for pair, market in self.markets.items():\n+            leverages[pair] = [1]\n+            info = market['info']\n+            leverage_buy = info.get('leverage_buy', [])\n+            leverage_sell = info.get('leverage_sell', [])\n+            if len(leverage_buy) > 0 or len(leverage_sell) > 0:\n+                if leverage_buy != leverage_sell:\n+                    logger.warning(\n+                        f\"The buy({leverage_buy}) and sell({leverage_sell}) leverage are not equal\"\n+                        \"for {pair}. Please notify freqtrade because this has never happened before\"\n+                    )\n+                    if max(leverage_buy) <= max(leverage_sell):\n+                        leverages[pair] += [int(lev) for lev in leverage_buy]\n+                    else:\n+                        leverages[pair] += [int(lev) for lev in leverage_sell]\n+                else:\n+                    leverages[pair] += [int(lev) for lev in leverage_buy]\n+        self._leverage_brackets = leverages\n+\n+    def get_max_leverage(self, pair: Optional[str], nominal_value: Optional[float]) -> float:\n+        \"\"\"\n+            Returns the maximum leverage that a pair can be traded at\n+            :param pair: The base/quote currency pair being traded\n+            :nominal_value: Here for super class, not needed on Kraken\n+        \"\"\"\n+        return float(max(self._leverage_brackets[pair]))\n+\n+    def _set_leverage(\n+        self,\n+        leverage: float,\n+        pair: Optional[str] = None,\n+        trading_mode: Optional[TradingMode] = None\n+    ):\n+        \"\"\"\n+            Kraken set's the leverage as an option in the order object, so we need to\n+            add it to params\n+        \"\"\"\n+        return\n+\n+    def _get_params(self, ordertype: str, leverage: float, time_in_force: str = 'gtc') -> Dict:\n+        params = super()._get_params(ordertype, leverage, time_in_force)\n+        if leverage > 1.0:\n+            params['leverage'] = leverage\n+        return params\ndiff --git a/freqtrade/freqtradebot.py b/freqtrade/freqtradebot.py\nindex e147093248f..2738ec634e1 100644\n--- a/freqtrade/freqtradebot.py\n+++ b/freqtrade/freqtradebot.py\n@@ -732,9 +732,14 @@ def create_stoploss_order(self, trade: Trade, stop_price: float) -> bool:\n         :return: True if the order succeeded, and False in case of problems.\n         \"\"\"\n         try:\n-            stoploss_order = self.exchange.stoploss(pair=trade.pair, amount=trade.amount,\n-                                                    stop_price=stop_price,\n-                                                    order_types=self.strategy.order_types)\n+            stoploss_order = self.exchange.stoploss(\n+                pair=trade.pair,\n+                amount=trade.amount,\n+                stop_price=stop_price,\n+                order_types=self.strategy.order_types,\n+                side=trade.exit_side,\n+                leverage=trade.leverage\n+            )\n \n             order_obj = Order.parse_from_ccxt_object(stoploss_order, trade.pair, 'stoploss')\n             trade.orders.append(order_obj)\n@@ -826,11 +831,11 @@ def handle_stoploss_on_exchange(self, trade: Trade) -> bool:\n             # if trailing stoploss is enabled we check if stoploss value has changed\n             # in which case we cancel stoploss order and put another one with new\n             # value immediately\n-            self.handle_trailing_stoploss_on_exchange(trade, stoploss_order)\n+            self.handle_trailing_stoploss_on_exchange(trade, stoploss_order, side=trade.exit_side)\n \n         return False\n \n-    def handle_trailing_stoploss_on_exchange(self, trade: Trade, order: dict) -> None:\n+    def handle_trailing_stoploss_on_exchange(self, trade: Trade, order: dict, side: str) -> None:\n         \"\"\"\n         Check to see if stoploss on exchange should be updated\n         in case of trailing stoploss on exchange\n@@ -838,7 +843,7 @@ def handle_trailing_stoploss_on_exchange(self, trade: Trade, order: dict) -> Non\n         :param order: Current on exchange stoploss order\n         :return: None\n         \"\"\"\n-        if self.exchange.stoploss_adjust(trade.stop_loss, order):\n+        if self.exchange.stoploss_adjust(trade.stop_loss, order, side):\n             # we check if the update is necessary\n             update_beat = self.strategy.order_types.get('stoploss_on_exchange_interval', 60)\n             if (datetime.utcnow() - trade.stoploss_last_update).total_seconds() >= update_beat:\ndiff --git a/tests/conftest.py b/tests/conftest.py\nindex 609823409c4..d2f24fa69a1 100644\n--- a/tests/conftest.py\n+++ b/tests/conftest.py\n@@ -18,7 +18,7 @@\n from freqtrade.commands import Arguments\n from freqtrade.data.converter import ohlcv_to_dataframe\n from freqtrade.edge import Edge, PairInfo\n-from freqtrade.enums import RunMode\n+from freqtrade.enums import Collateral, RunMode, TradingMode\n from freqtrade.exchange import Exchange\n from freqtrade.freqtradebot import FreqtradeBot\n from freqtrade.persistence import LocalTrade, Trade, init_db\n@@ -81,7 +81,13 @@ def patched_configuration_load_config_file(mocker, config) -> None:\n     )\n \n \n-def patch_exchange(mocker, api_mock=None, id='binance', mock_markets=True) -> None:\n+def patch_exchange(\n+    mocker,\n+    api_mock=None,\n+    id='binance',\n+    mock_markets=True,\n+    mock_supported_modes=True\n+) -> None:\n     mocker.patch('freqtrade.exchange.Exchange._load_async_markets', MagicMock(return_value={}))\n     mocker.patch('freqtrade.exchange.Exchange.validate_pairs', MagicMock())\n     mocker.patch('freqtrade.exchange.Exchange.validate_timeframes', MagicMock())\n@@ -90,10 +96,22 @@ def patch_exchange(mocker, api_mock=None, id='binance', mock_markets=True) -> No\n     mocker.patch('freqtrade.exchange.Exchange.id', PropertyMock(return_value=id))\n     mocker.patch('freqtrade.exchange.Exchange.name', PropertyMock(return_value=id.title()))\n     mocker.patch('freqtrade.exchange.Exchange.precisionMode', PropertyMock(return_value=2))\n+\n     if mock_markets:\n         mocker.patch('freqtrade.exchange.Exchange.markets',\n                      PropertyMock(return_value=get_markets()))\n \n+    if mock_supported_modes:\n+        mocker.patch(\n+            f'freqtrade.exchange.{id.capitalize()}._supported_trading_mode_collateral_pairs',\n+            PropertyMock(return_value=[\n+                (TradingMode.MARGIN, Collateral.CROSS),\n+                (TradingMode.MARGIN, Collateral.ISOLATED),\n+                (TradingMode.FUTURES, Collateral.CROSS),\n+                (TradingMode.FUTURES, Collateral.ISOLATED)\n+            ])\n+        )\n+\n     if api_mock:\n         mocker.patch('freqtrade.exchange.Exchange._init_ccxt', MagicMock(return_value=api_mock))\n     else:\n@@ -101,8 +119,8 @@ def patch_exchange(mocker, api_mock=None, id='binance', mock_markets=True) -> No\n \n \n def get_patched_exchange(mocker, config, api_mock=None, id='binance',\n-                         mock_markets=True) -> Exchange:\n-    patch_exchange(mocker, api_mock, id, mock_markets)\n+                         mock_markets=True, mock_supported_modes=True) -> Exchange:\n+    patch_exchange(mocker, api_mock, id, mock_markets, mock_supported_modes)\n     config['exchange']['name'] = id\n     try:\n         exchange = ExchangeResolver.load_exchange(id, config)\n@@ -442,7 +460,10 @@ def get_markets():\n                     'max': 500000,\n                 },\n             },\n-            'info': {},\n+            'info': {\n+                'leverage_buy': ['2'],\n+                'leverage_sell': ['2'],\n+            },\n         },\n         'TKN/BTC': {\n             'id': 'tknbtc',\n@@ -468,7 +489,10 @@ def get_markets():\n                     'max': 500000,\n                 },\n             },\n-            'info': {},\n+            'info': {\n+                'leverage_buy': ['2', '3', '4', '5'],\n+                'leverage_sell': ['2', '3', '4', '5'],\n+            },\n         },\n         'BLK/BTC': {\n             'id': 'blkbtc',\n@@ -493,7 +517,10 @@ def get_markets():\n                     'max': 500000,\n                 },\n             },\n-            'info': {},\n+            'info': {\n+                'leverage_buy': ['2', '3'],\n+                'leverage_sell': ['2', '3'],\n+            },\n         },\n         'LTC/BTC': {\n             'id': 'ltcbtc',\n@@ -518,7 +545,10 @@ def get_markets():\n                     'max': 500000,\n                 },\n             },\n-            'info': {},\n+            'info': {\n+                'leverage_buy': [],\n+                'leverage_sell': [],\n+            },\n         },\n         'XRP/BTC': {\n             'id': 'xrpbtc',\n@@ -596,7 +626,10 @@ def get_markets():\n                     'max': None\n                 }\n             },\n-            'info': {},\n+            'info': {\n+                'leverage_buy': [],\n+                'leverage_sell': [],\n+            },\n         },\n         'ETH/USDT': {\n             'id': 'USDT-ETH',\n@@ -712,6 +745,8 @@ def get_markets():\n                     'max': None\n                 }\n             },\n+            'info': {\n+            }\n         },\n     }\n \ndiff --git a/tests/exchange/test_binance.py b/tests/exchange/test_binance.py\nindex dd85c3abea3..0c3e86fdda2 100644\n--- a/tests/exchange/test_binance.py\n+++ b/tests/exchange/test_binance.py\n@@ -1,21 +1,31 @@\n from datetime import datetime, timezone\n from random import randint\n-from unittest.mock import MagicMock\n+from unittest.mock import MagicMock, PropertyMock\n \n import ccxt\n import pytest\n \n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import DependencyException, InvalidOrderException, OperationalException\n from tests.conftest import get_mock_coro, get_patched_exchange, log_has_re\n from tests.exchange.test_exchange import ccxt_exceptionhandlers\n \n \n-@pytest.mark.parametrize('limitratio,expected', [\n-    (None, 220 * 0.99),\n-    (0.99, 220 * 0.99),\n-    (0.98, 220 * 0.98),\n+@pytest.mark.parametrize('limitratio,expected,side', [\n+    (None, 220 * 0.99, \"sell\"),\n+    (0.99, 220 * 0.99, \"sell\"),\n+    (0.98, 220 * 0.98, \"sell\"),\n+    (None, 220 * 1.01, \"buy\"),\n+    (0.99, 220 * 1.01, \"buy\"),\n+    (0.98, 220 * 1.02, \"buy\"),\n ])\n-def test_stoploss_order_binance(default_conf, mocker, limitratio, expected):\n+def test_stoploss_order_binance(\n+    default_conf,\n+    mocker,\n+    limitratio,\n+    expected,\n+    side\n+):\n     api_mock = MagicMock()\n     order_id = 'test_prod_buy_{}'.format(randint(0, 10 ** 6))\n     order_type = 'stop_loss_limit'\n@@ -33,19 +43,32 @@ def test_stoploss_order_binance(default_conf, mocker, limitratio, expected):\n     exchange = get_patched_exchange(mocker, default_conf, api_mock, 'binance')\n \n     with pytest.raises(OperationalException):\n-        order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=190,\n-                                  order_types={'stoploss_on_exchange_limit_ratio': 1.05})\n+        order = exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=190,\n+            side=side,\n+            order_types={'stoploss_on_exchange_limit_ratio': 1.05},\n+            leverage=1.0\n+        )\n \n     api_mock.create_order.reset_mock()\n     order_types = {} if limitratio is None else {'stoploss_on_exchange_limit_ratio': limitratio}\n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types=order_types)\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types=order_types,\n+        side=side,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n     assert order['id'] == order_id\n     assert api_mock.create_order.call_args_list[0][1]['symbol'] == 'ETH/BTC'\n     assert api_mock.create_order.call_args_list[0][1]['type'] == order_type\n-    assert api_mock.create_order.call_args_list[0][1]['side'] == 'sell'\n+    assert api_mock.create_order.call_args_list[0][1]['side'] == side\n     assert api_mock.create_order.call_args_list[0][1]['amount'] == 1\n     # Price should be 1% below stopprice\n     assert api_mock.create_order.call_args_list[0][1]['price'] == expected\n@@ -55,17 +78,31 @@ def test_stoploss_order_binance(default_conf, mocker, limitratio, expected):\n     with pytest.raises(DependencyException):\n         api_mock.create_order = MagicMock(side_effect=ccxt.InsufficientFunds(\"0 balance\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'binance')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0)\n \n     with pytest.raises(InvalidOrderException):\n         api_mock.create_order = MagicMock(\n             side_effect=ccxt.InvalidOrder(\"binance Order would trigger immediately.\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'binance')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0\n+        )\n \n     ccxt_exceptionhandlers(mocker, default_conf, api_mock, \"binance\",\n                            \"stoploss\", \"create_order\", retries=1,\n-                           pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+                           pair='ETH/BTC', amount=1, stop_price=220, order_types={},\n+                           side=side, leverage=1.0)\n \n \n def test_stoploss_order_dry_run_binance(default_conf, mocker):\n@@ -78,12 +115,25 @@ def test_stoploss_order_dry_run_binance(default_conf, mocker):\n     exchange = get_patched_exchange(mocker, default_conf, api_mock, 'binance')\n \n     with pytest.raises(OperationalException):\n-        order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=190,\n-                                  order_types={'stoploss_on_exchange_limit_ratio': 1.05})\n+        order = exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=190,\n+            side=\"sell\",\n+            order_types={'stoploss_on_exchange_limit_ratio': 1.05},\n+            leverage=1.0\n+        )\n \n     api_mock.create_order.reset_mock()\n \n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types={},\n+        side=\"sell\",\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n@@ -94,18 +144,202 @@ def test_stoploss_order_dry_run_binance(default_conf, mocker):\n     assert order['amount'] == 1\n \n \n-def test_stoploss_adjust_binance(mocker, default_conf):\n+@pytest.mark.parametrize('sl1,sl2,sl3,side', [\n+    (1501, 1499, 1501, \"sell\"),\n+    (1499, 1501, 1499, \"buy\")\n+])\n+def test_stoploss_adjust_binance(mocker, default_conf, sl1, sl2, sl3, side):\n     exchange = get_patched_exchange(mocker, default_conf, id='binance')\n     order = {\n         'type': 'stop_loss_limit',\n         'price': 1500,\n         'info': {'stopPrice': 1500},\n     }\n-    assert exchange.stoploss_adjust(1501, order)\n-    assert not exchange.stoploss_adjust(1499, order)\n+    assert exchange.stoploss_adjust(sl1, order, side=side)\n+    assert not exchange.stoploss_adjust(sl2, order, side=side)\n     # Test with invalid order case\n     order['type'] = 'stop_loss'\n-    assert not exchange.stoploss_adjust(1501, order)\n+    assert not exchange.stoploss_adjust(sl3, order, side=side)\n+\n+\n+@pytest.mark.parametrize('pair,nominal_value,max_lev', [\n+    (\"BNB/BUSD\", 0.0, 40.0),\n+    (\"BNB/USDT\", 100.0, 153.84615384615384),\n+    (\"BTC/USDT\", 170.30, 250.0),\n+    (\"BNB/BUSD\", 999999.9, 10.0),\n+    (\"BNB/USDT\", 5000000.0, 6.666666666666667),\n+    (\"BTC/USDT\", 300000000.1, 2.0),\n+])\n+def test_get_max_leverage_binance(default_conf, mocker, pair, nominal_value, max_lev):\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"binance\")\n+    exchange._leverage_brackets = {\n+        'BNB/BUSD': [[0.0, 0.025],\n+                     [100000.0, 0.05],\n+                     [500000.0, 0.1],\n+                     [1000000.0, 0.15],\n+                     [2000000.0, 0.25],\n+                     [5000000.0, 0.5]],\n+        'BNB/USDT': [[0.0, 0.0065],\n+                     [10000.0, 0.01],\n+                     [50000.0, 0.02],\n+                     [250000.0, 0.05],\n+                     [1000000.0, 0.1],\n+                     [2000000.0, 0.125],\n+                     [5000000.0, 0.15],\n+                     [10000000.0, 0.25]],\n+        'BTC/USDT': [[0.0, 0.004],\n+                     [50000.0, 0.005],\n+                     [250000.0, 0.01],\n+                     [1000000.0, 0.025],\n+                     [5000000.0, 0.05],\n+                     [20000000.0, 0.1],\n+                     [50000000.0, 0.125],\n+                     [100000000.0, 0.15],\n+                     [200000000.0, 0.25],\n+                     [300000000.0, 0.5]],\n+    }\n+    assert exchange.get_max_leverage(pair, nominal_value) == max_lev\n+\n+\n+def test_fill_leverage_brackets_binance(default_conf, mocker):\n+    api_mock = MagicMock()\n+    api_mock.load_leverage_brackets = MagicMock(return_value={\n+        'ADA/BUSD': [[0.0, 0.025],\n+                     [100000.0, 0.05],\n+                     [500000.0, 0.1],\n+                     [1000000.0, 0.15],\n+                     [2000000.0, 0.25],\n+                     [5000000.0, 0.5]],\n+        'BTC/USDT': [[0.0, 0.004],\n+                     [50000.0, 0.005],\n+                     [250000.0, 0.01],\n+                     [1000000.0, 0.025],\n+                     [5000000.0, 0.05],\n+                     [20000000.0, 0.1],\n+                     [50000000.0, 0.125],\n+                     [100000000.0, 0.15],\n+                     [200000000.0, 0.25],\n+                     [300000000.0, 0.5]],\n+        \"ZEC/USDT\": [[0.0, 0.01],\n+                     [5000.0, 0.025],\n+                     [25000.0, 0.05],\n+                     [100000.0, 0.1],\n+                     [250000.0, 0.125],\n+                     [1000000.0, 0.5]],\n+\n+    })\n+    default_conf['dry_run'] = False\n+    default_conf['trading_mode'] = TradingMode.FUTURES\n+    default_conf['collateral'] = Collateral.ISOLATED\n+    exchange = get_patched_exchange(mocker, default_conf, api_mock, id=\"binance\")\n+    exchange.fill_leverage_brackets()\n+\n+    assert exchange._leverage_brackets == {\n+        'ADA/BUSD': [[0.0, 0.025],\n+                     [100000.0, 0.05],\n+                     [500000.0, 0.1],\n+                     [1000000.0, 0.15],\n+                     [2000000.0, 0.25],\n+                     [5000000.0, 0.5]],\n+        'BTC/USDT': [[0.0, 0.004],\n+                     [50000.0, 0.005],\n+                     [250000.0, 0.01],\n+                     [1000000.0, 0.025],\n+                     [5000000.0, 0.05],\n+                     [20000000.0, 0.1],\n+                     [50000000.0, 0.125],\n+                     [100000000.0, 0.15],\n+                     [200000000.0, 0.25],\n+                     [300000000.0, 0.5]],\n+        \"ZEC/USDT\": [[0.0, 0.01],\n+                     [5000.0, 0.025],\n+                     [25000.0, 0.05],\n+                     [100000.0, 0.1],\n+                     [250000.0, 0.125],\n+                     [1000000.0, 0.5]],\n+    }\n+\n+    api_mock = MagicMock()\n+    api_mock.load_leverage_brackets = MagicMock()\n+    type(api_mock).has = PropertyMock(return_value={'loadLeverageBrackets': True})\n+\n+    ccxt_exceptionhandlers(\n+        mocker,\n+        default_conf,\n+        api_mock,\n+        \"binance\",\n+        \"fill_leverage_brackets\",\n+        \"load_leverage_brackets\"\n+    )\n+\n+\n+def test_fill_leverage_brackets_binance_dryrun(default_conf, mocker):\n+    api_mock = MagicMock()\n+    default_conf['trading_mode'] = TradingMode.FUTURES\n+    default_conf['collateral'] = Collateral.ISOLATED\n+    exchange = get_patched_exchange(mocker, default_conf, api_mock, id=\"binance\")\n+    exchange.fill_leverage_brackets()\n+\n+    leverage_brackets = {\n+        \"1000SHIB/USDT\": [\n+            [0.0, 0.01],\n+            [5000.0, 0.025],\n+            [25000.0, 0.05],\n+            [100000.0, 0.1],\n+            [250000.0, 0.125],\n+            [1000000.0, 0.5]\n+        ],\n+        \"1INCH/USDT\": [\n+            [0.0, 0.012],\n+            [5000.0, 0.025],\n+            [25000.0, 0.05],\n+            [100000.0, 0.1],\n+            [250000.0, 0.125],\n+            [1000000.0, 0.5]\n+        ],\n+        \"AAVE/USDT\": [\n+            [0.0, 0.01],\n+            [50000.0, 0.02],\n+            [250000.0, 0.05],\n+            [1000000.0, 0.1],\n+            [2000000.0, 0.125],\n+            [5000000.0, 0.1665],\n+            [10000000.0, 0.25]\n+        ],\n+        \"ADA/BUSD\": [\n+            [0.0, 0.025],\n+            [100000.0, 0.05],\n+            [500000.0, 0.1],\n+            [1000000.0, 0.15],\n+            [2000000.0, 0.25],\n+            [5000000.0, 0.5]\n+        ]\n+    }\n+\n+    for key, value in leverage_brackets.items():\n+        assert exchange._leverage_brackets[key] == value\n+\n+\n+def test__set_leverage_binance(mocker, default_conf):\n+\n+    api_mock = MagicMock()\n+    api_mock.set_leverage = MagicMock()\n+    type(api_mock).has = PropertyMock(return_value={'setLeverage': True})\n+    default_conf['dry_run'] = False\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"binance\")\n+    exchange._set_leverage(3.0, trading_mode=TradingMode.MARGIN)\n+\n+    ccxt_exceptionhandlers(\n+        mocker,\n+        default_conf,\n+        api_mock,\n+        \"binance\",\n+        \"_set_leverage\",\n+        \"set_leverage\",\n+        pair=\"XRP/USDT\",\n+        leverage=5.0,\n+        trading_mode=TradingMode.FUTURES\n+    )\n \n \n @pytest.mark.asyncio\n@@ -138,3 +372,15 @@ async def test__async_get_historic_ohlcv_binance(default_conf, mocker, caplog):\n     assert exchange._api_async.fetch_ohlcv.call_count == 2\n     assert res == ohlcv\n     assert log_has_re(r\"Candle-data for ETH/BTC available starting with .*\", caplog)\n+\n+\n+@pytest.mark.parametrize(\"trading_mode,collateral,config\", [\n+    (\"\", \"\", {}),\n+    (\"margin\", \"cross\", {\"options\": {\"defaultType\": \"margin\"}}),\n+    (\"futures\", \"isolated\", {\"options\": {\"defaultType\": \"future\"}}),\n+])\n+def test__ccxt_config(default_conf, mocker, trading_mode, collateral, config):\n+    default_conf['trading_mode'] = trading_mode\n+    default_conf['collateral'] = collateral\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"binance\")\n+    assert exchange._ccxt_config == config\ndiff --git a/tests/exchange/test_exchange.py b/tests/exchange/test_exchange.py\nindex 97bc33429e8..8b16a9f12bc 100644\n--- a/tests/exchange/test_exchange.py\n+++ b/tests/exchange/test_exchange.py\n@@ -11,6 +11,7 @@\n import pytest\n from pandas import DataFrame\n \n+from freqtrade.enums import Collateral, TradingMode\n from freqtrade.exceptions import (DDosProtection, DependencyException, InvalidOrderException,\n                                   OperationalException, PricingError, TemporaryError)\n from freqtrade.exchange import Binance, Bittrex, Exchange, Kraken\n@@ -131,6 +132,7 @@ def test_init_ccxt_kwargs(default_conf, mocker, caplog):\n \n     assert log_has(\"Applying additional ccxt config: {'TestKWARG': 11, 'TestKWARG44': 11}\", caplog)\n     assert ex._api.headers == {'hello': 'world'}\n+    assert ex._ccxt_config == {}\n     Exchange._headers = {}\n \n \n@@ -395,7 +397,11 @@ def test_get_min_pair_stake_amount(mocker, default_conf) -> None:\n         PropertyMock(return_value=markets)\n     )\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 1, stoploss)\n-    assert isclose(result, 2 * (1+0.05) / (1-abs(stoploss)))\n+    expected_result = 2 * (1+0.05) / (1-abs(stoploss))\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 1, stoploss, 3.0)\n+    assert isclose(result, expected_result/3)\n \n     # min amount is set\n     markets[\"ETH/BTC\"][\"limits\"] = {\n@@ -407,7 +413,11 @@ def test_get_min_pair_stake_amount(mocker, default_conf) -> None:\n         PropertyMock(return_value=markets)\n     )\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss)\n-    assert isclose(result, 2 * 2 * (1+0.05) / (1-abs(stoploss)))\n+    expected_result = 2 * 2 * (1+0.05) / (1-abs(stoploss))\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss, 5.0)\n+    assert isclose(result, expected_result/5)\n \n     # min amount and cost are set (cost is minimal)\n     markets[\"ETH/BTC\"][\"limits\"] = {\n@@ -419,7 +429,11 @@ def test_get_min_pair_stake_amount(mocker, default_conf) -> None:\n         PropertyMock(return_value=markets)\n     )\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss)\n-    assert isclose(result, max(2, 2 * 2) * (1+0.05) / (1-abs(stoploss)))\n+    expected_result = max(2, 2 * 2) * (1+0.05) / (1-abs(stoploss))\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss, 10)\n+    assert isclose(result, expected_result/10)\n \n     # min amount and cost are set (amount is minial)\n     markets[\"ETH/BTC\"][\"limits\"] = {\n@@ -431,14 +445,26 @@ def test_get_min_pair_stake_amount(mocker, default_conf) -> None:\n         PropertyMock(return_value=markets)\n     )\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss)\n-    assert isclose(result, max(8, 2 * 2) * (1+0.05) / (1-abs(stoploss)))\n+    expected_result = max(8, 2 * 2) * (1+0.05) / (1-abs(stoploss))\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, stoploss, 7.0)\n+    assert isclose(result, expected_result/7.0)\n \n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, -0.4)\n-    assert isclose(result, max(8, 2 * 2) * 1.5)\n+    expected_result = max(8, 2 * 2) * 1.5\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, -0.4, 8.0)\n+    assert isclose(result, expected_result/8.0)\n \n     # Really big stoploss\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, -1)\n-    assert isclose(result, max(8, 2 * 2) * 1.5)\n+    expected_result = max(8, 2 * 2) * 1.5\n+    assert isclose(result, expected_result)\n+    # With Leverage\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 2, -1, 12.0)\n+    assert isclose(result, expected_result/12)\n \n \n def test_get_min_pair_stake_amount_real_data(mocker, default_conf) -> None:\n@@ -456,10 +482,10 @@ def test_get_min_pair_stake_amount_real_data(mocker, default_conf) -> None:\n         PropertyMock(return_value=markets)\n     )\n     result = exchange.get_min_pair_stake_amount('ETH/BTC', 0.020405, stoploss)\n-    assert round(result, 8) == round(\n-        max(0.0001, 0.001 * 0.020405) * (1+0.05) / (1-abs(stoploss)),\n-        8\n-    )\n+    expected_result = max(0.0001, 0.001 * 0.020405) * (1+0.05) / (1-abs(stoploss))\n+    assert round(result, 8) == round(expected_result, 8)\n+    result = exchange.get_min_pair_stake_amount('ETH/BTC', 0.020405, stoploss, 3.0)\n+    assert round(result, 8) == round(expected_result/3, 8)\n \n \n def test_set_sandbox(default_conf, mocker):\n@@ -970,7 +996,13 @@ def test_create_dry_run_order(default_conf, mocker, side, exchange_name):\n     exchange = get_patched_exchange(mocker, default_conf, id=exchange_name)\n \n     order = exchange.create_dry_run_order(\n-        pair='ETH/BTC', ordertype='limit', side=side, amount=1, rate=200)\n+        pair='ETH/BTC',\n+        ordertype='limit',\n+        side=side,\n+        amount=1,\n+        rate=200,\n+        leverage=1.0\n+    )\n     assert 'id' in order\n     assert f'dry_run_{side}_' in order[\"id\"]\n     assert order[\"side\"] == side\n@@ -993,7 +1025,13 @@ def test_create_dry_run_order_limit_fill(default_conf, mocker, side, startprice,\n                           )\n \n     order = exchange.create_dry_run_order(\n-        pair='LTC/USDT', ordertype='limit', side=side, amount=1, rate=startprice)\n+        pair='LTC/USDT',\n+        ordertype='limit',\n+        side=side,\n+        amount=1,\n+        rate=startprice,\n+        leverage=1.0\n+    )\n     assert order_book_l2_usd.call_count == 1\n     assert 'id' in order\n     assert f'dry_run_{side}_' in order[\"id\"]\n@@ -1039,7 +1077,13 @@ def test_create_dry_run_order_market_fill(default_conf, mocker, side, rate, amou\n                           )\n \n     order = exchange.create_dry_run_order(\n-        pair='LTC/USDT', ordertype='market', side=side, amount=amount, rate=rate)\n+        pair='LTC/USDT',\n+        ordertype='market',\n+        side=side,\n+        amount=amount,\n+        rate=rate,\n+        leverage=1.0\n+    )\n     assert 'id' in order\n     assert f'dry_run_{side}_' in order[\"id\"]\n     assert order[\"side\"] == side\n@@ -1049,10 +1093,7 @@ def test_create_dry_run_order_market_fill(default_conf, mocker, side, rate, amou\n     assert round(order[\"average\"], 4) == round(endprice, 4)\n \n \n-@pytest.mark.parametrize(\"side\", [\n-    (\"buy\"),\n-    (\"sell\")\n-])\n+@pytest.mark.parametrize(\"side\", [\"buy\", \"sell\"])\n @pytest.mark.parametrize(\"ordertype,rate,marketprice\", [\n     (\"market\", None, None),\n     (\"market\", 200, True),\n@@ -1074,9 +1115,17 @@ def test_create_order(default_conf, mocker, side, ordertype, rate, marketprice,\n     mocker.patch('freqtrade.exchange.Exchange.amount_to_precision', lambda s, x, y: y)\n     mocker.patch('freqtrade.exchange.Exchange.price_to_precision', lambda s, x, y: y)\n     exchange = get_patched_exchange(mocker, default_conf, api_mock, id=exchange_name)\n+    exchange._set_leverage = MagicMock()\n+    exchange.set_margin_mode = MagicMock()\n \n     order = exchange.create_order(\n-        pair='ETH/BTC', ordertype=ordertype, side=side, amount=1, rate=200)\n+        pair='ETH/BTC',\n+        ordertype=ordertype,\n+        side=side,\n+        amount=1,\n+        rate=200,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n@@ -1086,6 +1135,21 @@ def test_create_order(default_conf, mocker, side, ordertype, rate, marketprice,\n     assert api_mock.create_order.call_args[0][2] == side\n     assert api_mock.create_order.call_args[0][3] == 1\n     assert api_mock.create_order.call_args[0][4] is rate\n+    assert exchange._set_leverage.call_count == 0\n+    assert exchange.set_margin_mode.call_count == 0\n+\n+    exchange.trading_mode = TradingMode.FUTURES\n+    order = exchange.create_order(\n+        pair='ETH/BTC',\n+        ordertype=ordertype,\n+        side=side,\n+        amount=1,\n+        rate=200,\n+        leverage=3.0\n+    )\n+\n+    assert exchange._set_leverage.call_count == 1\n+    assert exchange.set_margin_mode.call_count == 1\n \n \n def test_buy_dry_run(default_conf, mocker):\n@@ -2624,10 +2688,17 @@ def test_get_fee(default_conf, mocker, exchange_name):\n def test_stoploss_order_unsupported_exchange(default_conf, mocker):\n     exchange = get_patched_exchange(mocker, default_conf, id='bittrex')\n     with pytest.raises(OperationalException, match=r\"stoploss is not implemented .*\"):\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=\"sell\",\n+            leverage=1.0\n+        )\n \n     with pytest.raises(OperationalException, match=r\"stoploss is not implemented .*\"):\n-        exchange.stoploss_adjust(1, {})\n+        exchange.stoploss_adjust(1, {}, side=\"sell\")\n \n \n def test_merge_ft_has_dict(default_conf, mocker):\n@@ -2972,7 +3043,123 @@ def test_calculate_fee_rate(mocker, default_conf, order, expected) -> None:\n     (3, 5, 5),\n     (4, 5, 2),\n     (5, 5, 1),\n-\n ])\n def test_calculate_backoff(retrycount, max_retries, expected):\n     assert calculate_backoff(retrycount, max_retries) == expected\n+\n+\n+@pytest.mark.parametrize('exchange', ['binance', 'kraken', 'ftx'])\n+@pytest.mark.parametrize('stake_amount,leverage,min_stake_with_lev', [\n+    (9.0, 3.0, 3.0),\n+    (20.0, 5.0, 4.0),\n+    (100.0, 100.0, 1.0)\n+])\n+def test_get_stake_amount_considering_leverage(\n+    exchange,\n+    stake_amount,\n+    leverage,\n+    min_stake_with_lev,\n+    mocker,\n+    default_conf\n+):\n+    exchange = get_patched_exchange(mocker, default_conf, id=exchange)\n+    assert exchange._get_stake_amount_considering_leverage(\n+        stake_amount, leverage) == min_stake_with_lev\n+\n+\n+@pytest.mark.parametrize(\"exchange_name,trading_mode\", [\n+    (\"binance\", TradingMode.FUTURES),\n+    (\"ftx\", TradingMode.MARGIN),\n+    (\"ftx\", TradingMode.FUTURES)\n+])\n+def test__set_leverage(mocker, default_conf, exchange_name, trading_mode):\n+\n+    api_mock = MagicMock()\n+    api_mock.set_leverage = MagicMock()\n+    type(api_mock).has = PropertyMock(return_value={'setLeverage': True})\n+    default_conf['dry_run'] = False\n+\n+    ccxt_exceptionhandlers(\n+        mocker,\n+        default_conf,\n+        api_mock,\n+        exchange_name,\n+        \"_set_leverage\",\n+        \"set_leverage\",\n+        pair=\"XRP/USDT\",\n+        leverage=5.0,\n+        trading_mode=trading_mode\n+    )\n+\n+\n+@pytest.mark.parametrize(\"collateral\", [\n+    (Collateral.CROSS),\n+    (Collateral.ISOLATED)\n+])\n+def test_set_margin_mode(mocker, default_conf, collateral):\n+\n+    api_mock = MagicMock()\n+    api_mock.set_margin_mode = MagicMock()\n+    type(api_mock).has = PropertyMock(return_value={'setMarginMode': True})\n+    default_conf['dry_run'] = False\n+\n+    ccxt_exceptionhandlers(\n+        mocker,\n+        default_conf,\n+        api_mock,\n+        \"binance\",\n+        \"set_margin_mode\",\n+        \"set_margin_mode\",\n+        pair=\"XRP/USDT\",\n+        collateral=collateral\n+    )\n+\n+\n+@pytest.mark.parametrize(\"exchange_name, trading_mode, collateral, exception_thrown\", [\n+    (\"binance\", TradingMode.SPOT, None, False),\n+    (\"binance\", TradingMode.MARGIN, Collateral.ISOLATED, True),\n+    (\"kraken\", TradingMode.SPOT, None, False),\n+    (\"kraken\", TradingMode.MARGIN, Collateral.ISOLATED, True),\n+    (\"kraken\", TradingMode.FUTURES, Collateral.ISOLATED, True),\n+    (\"ftx\", TradingMode.SPOT, None, False),\n+    (\"ftx\", TradingMode.MARGIN, Collateral.ISOLATED, True),\n+    (\"ftx\", TradingMode.FUTURES, Collateral.ISOLATED, True),\n+    (\"bittrex\", TradingMode.SPOT, None, False),\n+    (\"bittrex\", TradingMode.MARGIN, Collateral.CROSS, True),\n+    (\"bittrex\", TradingMode.MARGIN, Collateral.ISOLATED, True),\n+    (\"bittrex\", TradingMode.FUTURES, Collateral.CROSS, True),\n+    (\"bittrex\", TradingMode.FUTURES, Collateral.ISOLATED, True),\n+\n+    # TODO-lev: Remove once implemented\n+    (\"binance\", TradingMode.MARGIN, Collateral.CROSS, True),\n+    (\"binance\", TradingMode.FUTURES, Collateral.CROSS, True),\n+    (\"binance\", TradingMode.FUTURES, Collateral.ISOLATED, True),\n+    (\"kraken\", TradingMode.MARGIN, Collateral.CROSS, True),\n+    (\"kraken\", TradingMode.FUTURES, Collateral.CROSS, True),\n+    (\"ftx\", TradingMode.MARGIN, Collateral.CROSS, True),\n+    (\"ftx\", TradingMode.FUTURES, Collateral.CROSS, True),\n+\n+    # TODO-lev: Uncomment once implemented\n+    # (\"binance\", TradingMode.MARGIN, Collateral.CROSS, False),\n+    # (\"binance\", TradingMode.FUTURES, Collateral.CROSS, False),\n+    # (\"binance\", TradingMode.FUTURES, Collateral.ISOLATED, False),\n+    # (\"kraken\", TradingMode.MARGIN, Collateral.CROSS, False),\n+    # (\"kraken\", TradingMode.FUTURES, Collateral.CROSS, False),\n+    # (\"ftx\", TradingMode.MARGIN, Collateral.CROSS, False),\n+    # (\"ftx\", TradingMode.FUTURES, Collateral.CROSS, False)\n+])\n+def test_validate_trading_mode_and_collateral(\n+    default_conf,\n+    mocker,\n+    exchange_name,\n+    trading_mode,\n+    collateral,\n+    exception_thrown\n+):\n+    exchange = get_patched_exchange(\n+        mocker, default_conf, id=exchange_name, mock_supported_modes=False)\n+    if (exception_thrown):\n+        with pytest.raises(OperationalException):\n+            exchange.validate_trading_mode_and_collateral(trading_mode, collateral)\n+    else:\n+        exchange.validate_trading_mode_and_collateral(trading_mode, collateral)\ndiff --git a/tests/exchange/test_ftx.py b/tests/exchange/test_ftx.py\nindex 3794bb79c51..ca6b24d64bb 100644\n--- a/tests/exchange/test_ftx.py\n+++ b/tests/exchange/test_ftx.py\n@@ -14,7 +14,11 @@\n STOPLOSS_ORDERTYPE = 'stop'\n \n \n-def test_stoploss_order_ftx(default_conf, mocker):\n+@pytest.mark.parametrize('order_price,exchangelimitratio,side', [\n+    (217.8, 1.05, \"sell\"),\n+    (222.2, 0.95, \"buy\"),\n+])\n+def test_stoploss_order_ftx(default_conf, mocker, order_price, exchangelimitratio, side):\n     api_mock = MagicMock()\n     order_id = 'test_prod_buy_{}'.format(randint(0, 10 ** 6))\n \n@@ -32,12 +36,18 @@ def test_stoploss_order_ftx(default_conf, mocker):\n     exchange = get_patched_exchange(mocker, default_conf, api_mock, 'ftx')\n \n     # stoploss_on_exchange_limit_ratio is irrelevant for ftx market orders\n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=190,\n-                              order_types={'stoploss_on_exchange_limit_ratio': 1.05})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=190,\n+        side=side,\n+        order_types={'stoploss_on_exchange_limit_ratio': exchangelimitratio},\n+        leverage=1.0\n+    )\n \n     assert api_mock.create_order.call_args_list[0][1]['symbol'] == 'ETH/BTC'\n     assert api_mock.create_order.call_args_list[0][1]['type'] == STOPLOSS_ORDERTYPE\n-    assert api_mock.create_order.call_args_list[0][1]['side'] == 'sell'\n+    assert api_mock.create_order.call_args_list[0][1]['side'] == side\n     assert api_mock.create_order.call_args_list[0][1]['amount'] == 1\n     assert 'orderPrice' not in api_mock.create_order.call_args_list[0][1]['params']\n     assert 'stopPrice' in api_mock.create_order.call_args_list[0][1]['params']\n@@ -47,51 +57,79 @@ def test_stoploss_order_ftx(default_conf, mocker):\n \n     api_mock.create_order.reset_mock()\n \n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types={},\n+        side=side,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n     assert order['id'] == order_id\n     assert api_mock.create_order.call_args_list[0][1]['symbol'] == 'ETH/BTC'\n     assert api_mock.create_order.call_args_list[0][1]['type'] == STOPLOSS_ORDERTYPE\n-    assert api_mock.create_order.call_args_list[0][1]['side'] == 'sell'\n+    assert api_mock.create_order.call_args_list[0][1]['side'] == side\n     assert api_mock.create_order.call_args_list[0][1]['amount'] == 1\n     assert 'orderPrice' not in api_mock.create_order.call_args_list[0][1]['params']\n     assert api_mock.create_order.call_args_list[0][1]['params']['stopPrice'] == 220\n \n     api_mock.create_order.reset_mock()\n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220,\n-                              order_types={'stoploss': 'limit'})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types={'stoploss': 'limit'}, side=side,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n     assert order['id'] == order_id\n     assert api_mock.create_order.call_args_list[0][1]['symbol'] == 'ETH/BTC'\n     assert api_mock.create_order.call_args_list[0][1]['type'] == STOPLOSS_ORDERTYPE\n-    assert api_mock.create_order.call_args_list[0][1]['side'] == 'sell'\n+    assert api_mock.create_order.call_args_list[0][1]['side'] == side\n     assert api_mock.create_order.call_args_list[0][1]['amount'] == 1\n     assert 'orderPrice' in api_mock.create_order.call_args_list[0][1]['params']\n-    assert api_mock.create_order.call_args_list[0][1]['params']['orderPrice'] == 217.8\n+    assert api_mock.create_order.call_args_list[0][1]['params']['orderPrice'] == order_price\n     assert api_mock.create_order.call_args_list[0][1]['params']['stopPrice'] == 220\n \n     # test exception handling\n     with pytest.raises(DependencyException):\n         api_mock.create_order = MagicMock(side_effect=ccxt.InsufficientFunds(\"0 balance\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'ftx')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0\n+        )\n \n     with pytest.raises(InvalidOrderException):\n         api_mock.create_order = MagicMock(\n             side_effect=ccxt.InvalidOrder(\"ftx Order would trigger immediately.\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'ftx')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0\n+        )\n \n     ccxt_exceptionhandlers(mocker, default_conf, api_mock, \"ftx\",\n                            \"stoploss\", \"create_order\", retries=1,\n-                           pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+                           pair='ETH/BTC', amount=1, stop_price=220, order_types={},\n+                           side=side, leverage=1.0)\n \n \n-def test_stoploss_order_dry_run_ftx(default_conf, mocker):\n+@pytest.mark.parametrize('side', [(\"sell\"), (\"buy\")])\n+def test_stoploss_order_dry_run_ftx(default_conf, mocker, side):\n     api_mock = MagicMock()\n     default_conf['dry_run'] = True\n     mocker.patch('freqtrade.exchange.Exchange.amount_to_precision', lambda s, x, y: y)\n@@ -101,7 +139,14 @@ def test_stoploss_order_dry_run_ftx(default_conf, mocker):\n \n     api_mock.create_order.reset_mock()\n \n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types={},\n+        side=side,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n@@ -112,20 +157,24 @@ def test_stoploss_order_dry_run_ftx(default_conf, mocker):\n     assert order['amount'] == 1\n \n \n-def test_stoploss_adjust_ftx(mocker, default_conf):\n+@pytest.mark.parametrize('sl1,sl2,sl3,side', [\n+    (1501, 1499, 1501, \"sell\"),\n+    (1499, 1501, 1499, \"buy\")\n+])\n+def test_stoploss_adjust_ftx(mocker, default_conf, sl1, sl2, sl3, side):\n     exchange = get_patched_exchange(mocker, default_conf, id='ftx')\n     order = {\n         'type': STOPLOSS_ORDERTYPE,\n         'price': 1500,\n     }\n-    assert exchange.stoploss_adjust(1501, order)\n-    assert not exchange.stoploss_adjust(1499, order)\n+    assert exchange.stoploss_adjust(sl1, order, side=side)\n+    assert not exchange.stoploss_adjust(sl2, order, side=side)\n     # Test with invalid order case ...\n     order['type'] = 'stop_loss_limit'\n-    assert not exchange.stoploss_adjust(1501, order)\n+    assert not exchange.stoploss_adjust(sl3, order, side=side)\n \n \n-def test_fetch_stoploss_order(default_conf, mocker, limit_sell_order):\n+def test_fetch_stoploss_order(default_conf, mocker, limit_sell_order, limit_buy_order):\n     default_conf['dry_run'] = True\n     order = MagicMock()\n     order.myid = 123\n@@ -158,6 +207,16 @@ def test_fetch_stoploss_order(default_conf, mocker, limit_sell_order):\n     assert resp['type'] == 'stop'\n     assert resp['status_stop'] == 'triggered'\n \n+    api_mock.fetch_order = MagicMock(return_value=limit_buy_order)\n+\n+    resp = exchange.fetch_stoploss_order('X', 'TKN/BTC')\n+    assert resp\n+    assert api_mock.fetch_order.call_count == 1\n+    assert resp['id_stop'] == 'mocked_limit_buy'\n+    assert resp['id'] == 'X'\n+    assert resp['type'] == 'stop'\n+    assert resp['status_stop'] == 'triggered'\n+\n     with pytest.raises(InvalidOrderException):\n         api_mock.fetch_orders = MagicMock(side_effect=ccxt.InvalidOrder(\"Order not found\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, id='ftx')\n@@ -191,3 +250,20 @@ def test_get_order_id(mocker, default_conf):\n         }\n     }\n     assert exchange.get_order_id_conditional(order) == '1111'\n+\n+\n+@pytest.mark.parametrize('pair,nominal_value,max_lev', [\n+    (\"ADA/BTC\", 0.0, 20.0),\n+    (\"BTC/EUR\", 100.0, 20.0),\n+    (\"ZEC/USD\", 173.31, 20.0),\n+])\n+def test_get_max_leverage_ftx(default_conf, mocker, pair, nominal_value, max_lev):\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"ftx\")\n+    assert exchange.get_max_leverage(pair, nominal_value) == max_lev\n+\n+\n+def test_fill_leverage_brackets_ftx(default_conf, mocker):\n+    # FTX only has one account wide leverage, so there's no leverage brackets\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"ftx\")\n+    exchange.fill_leverage_brackets()\n+    assert exchange._leverage_brackets == {}\ndiff --git a/tests/exchange/test_kraken.py b/tests/exchange/test_kraken.py\nindex eb79dfc10dd..a8cd8d8efa4 100644\n--- a/tests/exchange/test_kraken.py\n+++ b/tests/exchange/test_kraken.py\n@@ -166,7 +166,11 @@ def test_get_balances_prod(default_conf, mocker):\n \n \n @pytest.mark.parametrize('ordertype', ['market', 'limit'])\n-def test_stoploss_order_kraken(default_conf, mocker, ordertype):\n+@pytest.mark.parametrize('side,adjustedprice', [\n+    (\"sell\", 217.8),\n+    (\"buy\", 222.2),\n+])\n+def test_stoploss_order_kraken(default_conf, mocker, ordertype, side, adjustedprice):\n     api_mock = MagicMock()\n     order_id = 'test_prod_buy_{}'.format(randint(0, 10 ** 6))\n \n@@ -183,10 +187,17 @@ def test_stoploss_order_kraken(default_conf, mocker, ordertype):\n \n     exchange = get_patched_exchange(mocker, default_conf, api_mock, 'kraken')\n \n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220,\n-                              order_types={'stoploss': ordertype,\n-                                           'stoploss_on_exchange_limit_ratio': 0.99\n-                                           })\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        side=side,\n+        order_types={\n+            'stoploss': ordertype,\n+            'stoploss_on_exchange_limit_ratio': 0.99\n+        },\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n@@ -195,12 +206,14 @@ def test_stoploss_order_kraken(default_conf, mocker, ordertype):\n     if ordertype == 'limit':\n         assert api_mock.create_order.call_args_list[0][1]['type'] == STOPLOSS_LIMIT_ORDERTYPE\n         assert api_mock.create_order.call_args_list[0][1]['params'] == {\n-            'trading_agreement': 'agree', 'price2': 217.8}\n+            'trading_agreement': 'agree',\n+            'price2': adjustedprice\n+        }\n     else:\n         assert api_mock.create_order.call_args_list[0][1]['type'] == STOPLOSS_ORDERTYPE\n         assert api_mock.create_order.call_args_list[0][1]['params'] == {\n             'trading_agreement': 'agree'}\n-    assert api_mock.create_order.call_args_list[0][1]['side'] == 'sell'\n+    assert api_mock.create_order.call_args_list[0][1]['side'] == side\n     assert api_mock.create_order.call_args_list[0][1]['amount'] == 1\n     assert api_mock.create_order.call_args_list[0][1]['price'] == 220\n \n@@ -208,20 +221,36 @@ def test_stoploss_order_kraken(default_conf, mocker, ordertype):\n     with pytest.raises(DependencyException):\n         api_mock.create_order = MagicMock(side_effect=ccxt.InsufficientFunds(\"0 balance\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'kraken')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0\n+        )\n \n     with pytest.raises(InvalidOrderException):\n         api_mock.create_order = MagicMock(\n             side_effect=ccxt.InvalidOrder(\"kraken Order would trigger immediately.\"))\n         exchange = get_patched_exchange(mocker, default_conf, api_mock, 'kraken')\n-        exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+        exchange.stoploss(\n+            pair='ETH/BTC',\n+            amount=1,\n+            stop_price=220,\n+            order_types={},\n+            side=side,\n+            leverage=1.0\n+        )\n \n     ccxt_exceptionhandlers(mocker, default_conf, api_mock, \"kraken\",\n                            \"stoploss\", \"create_order\", retries=1,\n-                           pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+                           pair='ETH/BTC', amount=1, stop_price=220, order_types={},\n+                           side=side, leverage=1.0)\n \n \n-def test_stoploss_order_dry_run_kraken(default_conf, mocker):\n+@pytest.mark.parametrize('side', ['buy', 'sell'])\n+def test_stoploss_order_dry_run_kraken(default_conf, mocker, side):\n     api_mock = MagicMock()\n     default_conf['dry_run'] = True\n     mocker.patch('freqtrade.exchange.Exchange.amount_to_precision', lambda s, x, y: y)\n@@ -231,7 +260,14 @@ def test_stoploss_order_dry_run_kraken(default_conf, mocker):\n \n     api_mock.create_order.reset_mock()\n \n-    order = exchange.stoploss(pair='ETH/BTC', amount=1, stop_price=220, order_types={})\n+    order = exchange.stoploss(\n+        pair='ETH/BTC',\n+        amount=1,\n+        stop_price=220,\n+        order_types={},\n+        side=side,\n+        leverage=1.0\n+    )\n \n     assert 'id' in order\n     assert 'info' in order\n@@ -242,14 +278,54 @@ def test_stoploss_order_dry_run_kraken(default_conf, mocker):\n     assert order['amount'] == 1\n \n \n-def test_stoploss_adjust_kraken(mocker, default_conf):\n+@pytest.mark.parametrize('sl1,sl2,sl3,side', [\n+    (1501, 1499, 1501, \"sell\"),\n+    (1499, 1501, 1499, \"buy\")\n+])\n+def test_stoploss_adjust_kraken(mocker, default_conf, sl1, sl2, sl3, side):\n     exchange = get_patched_exchange(mocker, default_conf, id='kraken')\n     order = {\n         'type': STOPLOSS_ORDERTYPE,\n         'price': 1500,\n     }\n-    assert exchange.stoploss_adjust(1501, order)\n-    assert not exchange.stoploss_adjust(1499, order)\n+    assert exchange.stoploss_adjust(sl1, order, side=side)\n+    assert not exchange.stoploss_adjust(sl2, order, side=side)\n     # Test with invalid order case ...\n     order['type'] = 'stop_loss_limit'\n-    assert not exchange.stoploss_adjust(1501, order)\n+    assert not exchange.stoploss_adjust(sl3, order, side=side)\n+\n+\n+@pytest.mark.parametrize('pair,nominal_value,max_lev', [\n+    (\"ADA/BTC\", 0.0, 3.0),\n+    (\"BTC/EUR\", 100.0, 5.0),\n+    (\"ZEC/USD\", 173.31, 2.0),\n+])\n+def test_get_max_leverage_kraken(default_conf, mocker, pair, nominal_value, max_lev):\n+    exchange = get_patched_exchange(mocker, default_conf, id=\"kraken\")\n+    exchange._leverage_brackets = {\n+        'ADA/BTC': ['2', '3'],\n+        'BTC/EUR': ['2', '3', '4', '5'],\n+        'ZEC/USD': ['2']\n+    }\n+    assert exchange.get_max_leverage(pair, nominal_value) == max_lev\n+\n+\n+def test_fill_leverage_brackets_kraken(default_conf, mocker):\n+    api_mock = MagicMock()\n+    exchange = get_patched_exchange(mocker, default_conf, api_mock, id=\"kraken\")\n+    exchange.fill_leverage_brackets()\n+\n+    assert exchange._leverage_brackets == {\n+        'BLK/BTC': [1, 2, 3],\n+        'TKN/BTC': [1, 2, 3, 4, 5],\n+        'ETH/BTC': [1, 2],\n+        'LTC/BTC': [1],\n+        'XRP/BTC': [1],\n+        'NEO/BTC': [1],\n+        'BTT/BTC': [1],\n+        'ETH/USDT': [1],\n+        'LTC/USDT': [1],\n+        'LTC/USD': [1],\n+        'XLTCUSDT': [1],\n+        'LTC/ETH': [1]\n+    }\ndiff --git a/tests/test_freqtradebot.py b/tests/test_freqtradebot.py\nindex f278604be3b..28ca0ee49fb 100644\n--- a/tests/test_freqtradebot.py\n+++ b/tests/test_freqtradebot.py\n@@ -1252,6 +1252,7 @@ def test_create_stoploss_order_insufficient_funds(mocker, default_conf, caplog,\n @pytest.mark.usefixtures(\"init_persistence\")\n def test_handle_stoploss_on_exchange_trailing(mocker, default_conf, fee,\n                                               limit_buy_order, limit_sell_order) -> None:\n+    # TODO-lev: test for short\n     # When trailing stoploss is set\n     stoploss = MagicMock(return_value={'id': 13434334})\n     patch_RPCManager(mocker)\n@@ -1343,10 +1344,14 @@ def test_handle_stoploss_on_exchange_trailing(mocker, default_conf, fee,\n     assert freqtrade.handle_stoploss_on_exchange(trade) is False\n \n     cancel_order_mock.assert_called_once_with(100, 'ETH/BTC')\n-    stoploss_order_mock.assert_called_once_with(amount=85.32423208,\n-                                                pair='ETH/BTC',\n-                                                order_types=freqtrade.strategy.order_types,\n-                                                stop_price=0.00002346 * 0.95)\n+    stoploss_order_mock.assert_called_once_with(\n+        amount=85.32423208,\n+        pair='ETH/BTC',\n+        order_types=freqtrade.strategy.order_types,\n+        stop_price=0.00002346 * 0.95,\n+        side=\"sell\",\n+        leverage=1.0\n+    )\n \n     # price fell below stoploss, so dry-run sells trade.\n     mocker.patch('freqtrade.exchange.Exchange.fetch_ticker', MagicMock(return_value={\n@@ -1359,6 +1364,7 @@ def test_handle_stoploss_on_exchange_trailing(mocker, default_conf, fee,\n \n def test_handle_stoploss_on_exchange_trailing_error(mocker, default_conf, fee, caplog,\n                                                     limit_buy_order, limit_sell_order) -> None:\n+    # TODO-lev: test for short\n     # When trailing stoploss is set\n     stoploss = MagicMock(return_value={'id': 13434334})\n     patch_exchange(mocker)\n@@ -1417,7 +1423,7 @@ def test_handle_stoploss_on_exchange_trailing_error(mocker, default_conf, fee, c\n                  side_effect=InvalidOrderException())\n     mocker.patch('freqtrade.exchange.Binance.fetch_stoploss_order',\n                  return_value=stoploss_order_hanging)\n-    freqtrade.handle_trailing_stoploss_on_exchange(trade, stoploss_order_hanging)\n+    freqtrade.handle_trailing_stoploss_on_exchange(trade, stoploss_order_hanging, side=\"sell\")\n     assert log_has_re(r\"Could not cancel stoploss order abcd for pair ETH/BTC.*\", caplog)\n \n     # Still try to create order\n@@ -1427,7 +1433,7 @@ def test_handle_stoploss_on_exchange_trailing_error(mocker, default_conf, fee, c\n     caplog.clear()\n     cancel_mock = mocker.patch(\"freqtrade.exchange.Binance.cancel_stoploss_order\", MagicMock())\n     mocker.patch(\"freqtrade.exchange.Binance.stoploss\", side_effect=ExchangeError())\n-    freqtrade.handle_trailing_stoploss_on_exchange(trade, stoploss_order_hanging)\n+    freqtrade.handle_trailing_stoploss_on_exchange(trade, stoploss_order_hanging, side=\"sell\")\n     assert cancel_mock.call_count == 1\n     assert log_has_re(r\"Could not create trailing stoploss order for pair ETH/BTC\\..*\", caplog)\n \n@@ -1436,6 +1442,7 @@ def test_handle_stoploss_on_exchange_trailing_error(mocker, default_conf, fee, c\n def test_handle_stoploss_on_exchange_custom_stop(mocker, default_conf, fee,\n                                                  limit_buy_order, limit_sell_order) -> None:\n     # When trailing stoploss is set\n+    # TODO-lev: test for short\n     stoploss = MagicMock(return_value={'id': 13434334})\n     patch_RPCManager(mocker)\n     mocker.patch.multiple(\n@@ -1526,10 +1533,14 @@ def test_handle_stoploss_on_exchange_custom_stop(mocker, default_conf, fee,\n     assert freqtrade.handle_stoploss_on_exchange(trade) is False\n \n     cancel_order_mock.assert_called_once_with(100, 'ETH/BTC')\n-    stoploss_order_mock.assert_called_once_with(amount=85.32423208,\n-                                                pair='ETH/BTC',\n-                                                order_types=freqtrade.strategy.order_types,\n-                                                stop_price=0.00002346 * 0.96)\n+    stoploss_order_mock.assert_called_once_with(\n+        amount=85.32423208,\n+        pair='ETH/BTC',\n+        order_types=freqtrade.strategy.order_types,\n+        stop_price=0.00002346 * 0.96,\n+        side=\"sell\",\n+        leverage=1.0\n+    )\n \n     # price fell below stoploss, so dry-run sells trade.\n     mocker.patch('freqtrade.exchange.Exchange.fetch_ticker', MagicMock(return_value={\n@@ -1542,7 +1553,7 @@ def test_handle_stoploss_on_exchange_custom_stop(mocker, default_conf, fee,\n \n def test_tsl_on_exchange_compatible_with_edge(mocker, edge_conf, fee, caplog,\n                                               limit_buy_order, limit_sell_order) -> None:\n-\n+    # TODO-lev: test for short\n     # When trailing stoploss is set\n     stoploss = MagicMock(return_value={'id': 13434334})\n     patch_RPCManager(mocker)\n@@ -1647,10 +1658,14 @@ def test_tsl_on_exchange_compatible_with_edge(mocker, edge_conf, fee, caplog,\n     # stoploss should be set to 1% as trailing is on\n     assert trade.stop_loss == 0.00002346 * 0.99\n     cancel_order_mock.assert_called_once_with(100, 'NEO/BTC')\n-    stoploss_order_mock.assert_called_once_with(amount=2132892.49146757,\n-                                                pair='NEO/BTC',\n-                                                order_types=freqtrade.strategy.order_types,\n-                                                stop_price=0.00002346 * 0.99)\n+    stoploss_order_mock.assert_called_once_with(\n+        amount=2132892.49146757,\n+        pair='NEO/BTC',\n+        order_types=freqtrade.strategy.order_types,\n+        stop_price=0.00002346 * 0.99,\n+        side=\"sell\",\n+        leverage=1.0\n+    )\n \n \n def test_enter_positions(mocker, default_conf, caplog) -> None:\n",
    "diff_length": 120256
  },
  {
    "index": 4,
    "repository": "freqtrade/freqtrade",
    "pr_title": "Margin db",
    "pr_body": "# Margin-db Pull Request Review\r\n\r\n## Short Summary\r\n\r\nAdding margin trading columns and calculations to the database. Updates `freqtrade/persistence` to account for leverage and shorting\r\n\r\nSolves part of the issue: #2183 \r\n\r\n## Calculations\r\n\r\n### Binance interest formula\r\n\r\n    I (interest) = P (borrowed money) * R (daily_interest/24) * ceiling(T) (in hours)\r\n\r\n[source](https://www.binance.com/en/support/faq/360030157812)\r\n\r\n### Kraken interest formula\r\n\r\n    Opening fee  = P (borrowed money)",
    "pr_number": 5157,
    "comments": [
      "Can I run all those checks(Freqtrade CI / build_linux  ...) locally?\r\n",
      "> Can I run all those checks(Freqtrade CI / build_linux ...) locally?\r\n\r\nYou can (and should) https://www.freqtrade.io/en/stable/developer/#developer-setup\r\n\r\nBasically, it's `pytest` - followed by `flake8`, `isort .` and `mypy freqtrade`. obviously the sequence is not important (but all 4 are ran in CI, so should pass)\r\n\r\n",
      "In the mock trades, how is `close_profit_abs` calculated? \r\n\r\nFor trade 3, I tried `amount * close_rate - amount * open_rate` = `(123 * 0.06) - (123 * 0.05)` = `1.23` but the amount given in that test is `0.000155` \r\n\r\nWhat is `0.000155` calculated from?\r\n\r\nAlso why is the `close_profit` just `0.06 - 0.05`? Why doesn't it take `amount` into account?",
      "> In the mock trades, how is close_profit_abs calculated?\r\n\r\nit's a mock trade - might not be 100% correct for all trades (the mock-trades are not used to verify calculations afaik)\r\nnow technically - it should be - but the way you ask the question makes me assume it probably isn't :) ",
      "\n[![Coverage Status](https://coveralls.io/builds/41671103/badge)](https://coveralls.io/builds/41671103)\n\nCoverage decreased (-0.03%) to 98.115% when pulling **10d214ccadb02bb257c1fffffff8489b71ce6783 on samgermain:margin-db** into **27fe6e0a1b0a520db6f3770315296c166afba1d5 on freqtrade:develop**.\n",
      "> I'll leave it at that for now - but i'm still missing a detailed review of the calculations and of the 2 new test files - and of performance implications to backtesting/hyperopt (which can potentially call these methods many many times).\r\n> \r\n> Obviously - everything i spot there can point me to something else again - but in general i think we're pretty close.\r\n\r\nThe two new test files are essentially the `test_persistence.py` test file again, but with the added variables of leverage and shorting.\r\n\r\nI added the calculations and source for the interest equations, but for the profit ratio calculation I've just been going by what people have been saying in discord. For longs the only difference is that I multiply the result by the leverage. \r\n\r\nI don't know what the performance implications to backtesting/hyperopt are, I also don't know how to check/test for that. I didn't add any loops so that's a good sign.",
      "> The two new test files are essentially the test_persistence.py test file again, but with the added variables of leverage and shorting.\r\n\r\nI know that - still will want to understand how the tests work - reviewing tests had me discover bugs not just once ... :laughing: \r\n\r\n> I don't know what the performance implications to backtesting/hyperopt are, I also don't know how to check/test for that. I didn't add any loops so that's a good sign.\r\n\r\nbasically running the same backtest (different strategies with different characteristics) against this branch and against develop - using `time freqtrade ...` to measure the duration. Not very scientific - but works :laughing: \r\n\r\nNot having loops is a good thing to start with - but it's not the only thing to look at  - However calling multiple functions in sequence can also cause performance issues - as depending on where it's used, i've seen functions in the trade object called 100.000 times for one backtest ...",
      "> I know that - still will want to understand how the tests work - reviewing tests had me discover bugs not just once ... ðŸ˜†\r\n\r\nIs there an example I can look at? If there's already one for tests/test_persistence.py then mine would be really similar",
      "> Is there an example I can look at? If there's already one for tests/test_persistence.py then mine would be really similar\r\n\r\nthere can't be i'd say - it's me reading through test cases / scenarios - being pointed at looking at something related, and in consequence finding that some case was not handled / tested.\r\nIt's not ... science, and not guaranteed it'll happen - but it's the reason i'll also read (or rather think!) through the tests (which will obviously take some time) ",
      "I wrote something up, and posted it in the original comment on this pull request. I don't know if it's enough, let me know if you want something.\r\nFor the profit ratio calculation, I don't really know what more to put, I've kind of just been going off what people in the discord have been saying",
      "> I wrote something up, and posted it in the original comment on this pull request. I don't know if it's enough, let me know if you want something.\r\n> For the profit ratio calculation, I don't really know what more to put, I've kind of just been going off what people in the discord have been saying\r\n\r\nI don't think you understood my comment above - it's not that i need something from you - all i need is a few hours of uninterrupted time to look at it in detail - no explanation can change this i think :laughing: ",
      "@xmatthias Don't worry about checking backtesting, I'm running a script that will put the results from a bunch of strategies into a csv. I'll run it for develop and this branch",
      "Not sure why some tests fail on this commit, they pass locally, and all this commit did was change a variable name",
      ">  - assuming we put a very clear `TODO short:` there \r\n\r\nI've been using `TODO-mg`, which stands for margin\r\n\r\n",
      "> I've been using `TODO-mg`, which stands for margin\r\n\r\nThat works perfectly fine.\r\ni saw it and honestly thought it stands for your name (which includes \"mg\" after all - so i thought maybe that's the 2-letter shortcut you use sometimes :laughing: ) ",
      "> To be honest, this PR was very close to merging - and i think the changes you made i asked for would've been ok - but now it's another 12 new commits which add new classes, new unfinished enums, ...\r\n> \r\n> Now you've added that whole liquidation stuff to this branch (which is a seperate PR, too).\r\n> Please keep these things seperate (especially if there is a Branch/PR for it already!).\r\n\r\nAll right, I rolled it back",
      "> All right, I rolled it back\r\n\r\nGreat, thanks!\r\nOne last request (hopefully) for this PR - if you're able to merge develop (or feat/short) onto this branch to resolve conflicts it'll be good to go (unless there's something wrong with the merge, obviously)."
    ],
    "num_comments": 17,
    "diff": "diff --git a/docs/leverage.md b/docs/leverage.md\nnew file mode 100644\nindex 00000000000..c4b975a0bad\n--- /dev/null\n+++ b/docs/leverage.md\n@@ -0,0 +1,17 @@\n+# Leverage\n+\n+For shorts, the currency which pays the interest fee for the `borrowed` currency is purchased at the same time of the closing trade (This means that the amount purchased in short closing trades is greater than the amount sold in short opening trades).\n+\n+For longs, the currency which pays the interest fee for the `borrowed` will already be owned by the user and does not need to be purchased. The interest is subtracted from the close_value of the trade.\n+\n+## Binance margin trading interest formula\n+\n+    I (interest) = P (borrowed money) * R (daily_interest/24) * ceiling(T) (in hours)\n+    [source](https://www.binance.com/en/support/faq/360030157812)\n+\n+## Kraken margin trading interest formula\n+\n+    Opening fee  = P (borrowed money) * R (quat_hourly_interest)\n+    Rollover fee = P (borrowed money) * R (quat_hourly_interest) * ceiling(T/4) (in hours)\n+    I (interest) = Opening fee + Rollover fee\n+    [source](https://support.kraken.com/hc/en-us/articles/206161568-What-are-the-fees-for-margin-trading-)\ndiff --git a/freqtrade/enums/__init__.py b/freqtrade/enums/__init__.py\nindex d803baf31da..6099f70034b 100644\n--- a/freqtrade/enums/__init__.py\n+++ b/freqtrade/enums/__init__.py\n@@ -1,5 +1,6 @@\n # flake8: noqa: F401\n from freqtrade.enums.backteststate import BacktestState\n+from freqtrade.enums.interestmode import InterestMode\n from freqtrade.enums.rpcmessagetype import RPCMessageType\n from freqtrade.enums.runmode import NON_UTIL_MODES, OPTIMIZE_MODES, TRADING_MODES, RunMode\n from freqtrade.enums.selltype import SellType\ndiff --git a/freqtrade/enums/interestmode.py b/freqtrade/enums/interestmode.py\nnew file mode 100644\nindex 00000000000..89c71a8b4b4\n--- /dev/null\n+++ b/freqtrade/enums/interestmode.py\n@@ -0,0 +1,28 @@\n+from decimal import Decimal\n+from enum import Enum\n+from math import ceil\n+\n+from freqtrade.exceptions import OperationalException\n+\n+\n+one = Decimal(1.0)\n+four = Decimal(4.0)\n+twenty_four = Decimal(24.0)\n+\n+\n+class InterestMode(Enum):\n+    \"\"\"Equations to calculate interest\"\"\"\n+\n+    HOURSPERDAY = \"HOURSPERDAY\"\n+    HOURSPER4 = \"HOURSPER4\"  # Hours per 4 hour segment\n+    NONE = \"NONE\"\n+\n+    def __call__(self, borrowed: Decimal, rate: Decimal, hours: Decimal):\n+\n+        if self.name == \"HOURSPERDAY\":\n+            return borrowed * rate * ceil(hours)/twenty_four\n+        elif self.name == \"HOURSPER4\":\n+            # Rounded based on https://kraken-fees-calculator.github.io/\n+            return borrowed * rate * (1+ceil(hours/four))\n+        else:\n+            raise OperationalException(\"Leverage not available on this exchange with freqtrade\")\ndiff --git a/freqtrade/freqtradebot.py b/freqtrade/freqtradebot.py\nindex 09aa06adf40..179c99d2c90 100644\n--- a/freqtrade/freqtradebot.py\n+++ b/freqtrade/freqtradebot.py\n@@ -268,7 +268,7 @@ def update_closed_trades_without_assigned_fees(self):\n             # Updating open orders in dry-run does not make sense and will fail.\n             return\n \n-        trades: List[Trade] = Trade.get_sold_trades_without_assigned_fees()\n+        trades: List[Trade] = Trade.get_closed_trades_without_assigned_fees()\n         for trade in trades:\n \n             if not trade.is_open and not trade.fee_updated('sell'):\ndiff --git a/freqtrade/persistence/migrations.py b/freqtrade/persistence/migrations.py\nindex 1839c41301d..03f412724f1 100644\n--- a/freqtrade/persistence/migrations.py\n+++ b/freqtrade/persistence/migrations.py\n@@ -48,6 +48,13 @@ def migrate_trades_table(decl_base, inspector, engine, table_back_name: str, col\n     sell_reason = get_column_def(cols, 'sell_reason', 'null')\n     strategy = get_column_def(cols, 'strategy', 'null')\n     buy_tag = get_column_def(cols, 'buy_tag', 'null')\n+\n+    leverage = get_column_def(cols, 'leverage', '1.0')\n+    interest_rate = get_column_def(cols, 'interest_rate', '0.0')\n+    isolated_liq = get_column_def(cols, 'isolated_liq', 'null')\n+    # sqlite does not support literals for booleans\n+    is_short = get_column_def(cols, 'is_short', '0')\n+    interest_mode = get_column_def(cols, 'interest_mode', 'null')\n     # If ticker-interval existed use that, else null.\n     if has_column(cols, 'ticker_interval'):\n         timeframe = get_column_def(cols, 'timeframe', 'ticker_interval')\n@@ -59,6 +66,7 @@ def migrate_trades_table(decl_base, inspector, engine, table_back_name: str, col\n     close_profit_abs = get_column_def(\n         cols, 'close_profit_abs',\n         f\"(amount * close_rate * (1 - {fee_close})) - {open_trade_value}\")\n+    # TODO-mg: update to exit order status\n     sell_order_status = get_column_def(cols, 'sell_order_status', 'null')\n     amount_requested = get_column_def(cols, 'amount_requested', 'amount')\n \n@@ -83,7 +91,8 @@ def migrate_trades_table(decl_base, inspector, engine, table_back_name: str, col\n             stop_loss, stop_loss_pct, initial_stop_loss, initial_stop_loss_pct,\n             stoploss_order_id, stoploss_last_update,\n             max_rate, min_rate, sell_reason, sell_order_status, strategy, buy_tag,\n-            timeframe, open_trade_value, close_profit_abs\n+            timeframe, open_trade_value, close_profit_abs,\n+            leverage, interest_rate, isolated_liq, is_short, interest_mode\n             )\n         select id, lower(exchange), pair,\n             is_open, {fee_open} fee_open, {fee_open_cost} fee_open_cost,\n@@ -99,7 +108,10 @@ def migrate_trades_table(decl_base, inspector, engine, table_back_name: str, col\n             {max_rate} max_rate, {min_rate} min_rate, {sell_reason} sell_reason,\n             {sell_order_status} sell_order_status,\n             {strategy} strategy, {buy_tag} buy_tag, {timeframe} timeframe,\n-            {open_trade_value} open_trade_value, {close_profit_abs} close_profit_abs\n+            {open_trade_value} open_trade_value, {close_profit_abs} close_profit_abs,\n+            {leverage} leverage, {interest_rate} interest_rate,\n+            {isolated_liq} isolated_liq, {is_short} is_short,\n+            {interest_mode} interest_mode\n             from {table_back_name}\n             \"\"\"))\n \n@@ -134,14 +146,16 @@ def migrate_orders_table(decl_base, inspector, engine, table_back_name: str, col\n \n     # let SQLAlchemy create the schema as required\n     decl_base.metadata.create_all(engine)\n+    leverage = get_column_def(cols, 'leverage', '1.0')\n+    # sqlite does not support literals for booleans\n     with engine.begin() as connection:\n         connection.execute(text(f\"\"\"\n             insert into orders ( id, ft_trade_id, ft_order_side, ft_pair, ft_is_open, order_id,\n             status, symbol, order_type, side, price, amount, filled, average, remaining, cost,\n-            order_date, order_filled_date, order_update_date)\n+            order_date, order_filled_date, order_update_date, leverage)\n             select id, ft_trade_id, ft_order_side, ft_pair, ft_is_open, order_id,\n             status, symbol, order_type, side, price, amount, filled, null average, remaining, cost,\n-            order_date, order_filled_date, order_update_date\n+            order_date, order_filled_date, order_update_date, {leverage} leverage\n             from {table_back_name}\n             \"\"\"))\n \n@@ -157,7 +171,7 @@ def check_migrate(engine, decl_base, previous_tables) -> None:\n     table_back_name = get_backup_name(tabs, 'trades_bak')\n \n     # Check for latest column\n-    if not has_column(cols, 'buy_tag'):\n+    if not has_column(cols, 'is_short'):\n         logger.info(f'Running database migration for trades - backup: {table_back_name}')\n         migrate_trades_table(decl_base, inspector, engine, table_back_name, cols)\n         # Reread columns - the above recreated the table!\n@@ -170,9 +184,11 @@ def check_migrate(engine, decl_base, previous_tables) -> None:\n     else:\n         cols_order = inspector.get_columns('orders')\n \n-        if not has_column(cols_order, 'average'):\n+        # Last added column of order table\n+        # To determine if migrations need to run\n+        if not has_column(cols_order, 'leverage'):\n             tabs = get_table_names_for_table(inspector, 'orders')\n             # Empty for now - as there is only one iteration of the orders table so far.\n             table_back_name = get_backup_name(tabs, 'orders_bak')\n \n-            migrate_orders_table(decl_base, inspector, engine, table_back_name, cols)\n+            migrate_orders_table(decl_base, inspector, engine, table_back_name, cols_order)\ndiff --git a/freqtrade/persistence/models.py b/freqtrade/persistence/models.py\nindex 43fbec8c0d0..d09c5ed687e 100644\n--- a/freqtrade/persistence/models.py\n+++ b/freqtrade/persistence/models.py\n@@ -6,7 +6,7 @@\n from decimal import Decimal\n from typing import Any, Dict, List, Optional\n \n-from sqlalchemy import (Boolean, Column, DateTime, Float, ForeignKey, Integer, String,\n+from sqlalchemy import (Boolean, Column, DateTime, Enum, Float, ForeignKey, Integer, String,\n                         create_engine, desc, func, inspect)\n from sqlalchemy.exc import NoSuchModuleError\n from sqlalchemy.orm import Query, declarative_base, relationship, scoped_session, sessionmaker\n@@ -14,7 +14,7 @@\n from sqlalchemy.sql.schema import UniqueConstraint\n \n from freqtrade.constants import DATETIME_PRINT_FORMAT\n-from freqtrade.enums import SellType\n+from freqtrade.enums import InterestMode, SellType\n from freqtrade.exceptions import DependencyException, OperationalException\n from freqtrade.misc import safe_value_fallback\n from freqtrade.persistence.migrations import check_migrate\n@@ -29,13 +29,13 @@\n \n def init_db(db_url: str, clean_open_orders: bool = False) -> None:\n     \"\"\"\n-    Initializes this module with the given config,\n-    registers all known command handlers\n-    and starts polling for message updates\n-    :param db_url: Database to use\n-    :param clean_open_orders: Remove open orders from the database.\n-        Useful for dry-run or if all orders have been reset on the exchange.\n-    :return: None\n+        Initializes this module with the given config,\n+        registers all known command handlers\n+        and starts polling for message updates\n+        :param db_url: Database to use\n+        :param clean_open_orders: Remove open orders from the database.\n+            Useful for dry-run or if all orders have been reset on the exchange.\n+        :return: None\n     \"\"\"\n     kwargs = {}\n \n@@ -132,6 +132,8 @@ class Order(_DECL_BASE):\n     order_filled_date = Column(DateTime, nullable=True)\n     order_update_date = Column(DateTime, nullable=True)\n \n+    leverage = Column(Float, nullable=True, default=1.0)\n+\n     def __repr__(self):\n \n         return (f'Order(id={self.id}, order_id={self.order_id}, trade_id={self.ft_trade_id}, '\n@@ -155,6 +157,8 @@ def update_from_ccxt_object(self, order):\n         self.average = order.get('average', self.average)\n         self.remaining = order.get('remaining', self.remaining)\n         self.cost = order.get('cost', self.cost)\n+        self.leverage = order.get('leverage', self.leverage)\n+\n         if 'timestamp' in order and order['timestamp'] is not None:\n             self.order_date = datetime.fromtimestamp(order['timestamp'] / 1000, tz=timezone.utc)\n \n@@ -232,7 +236,7 @@ class LocalTrade():\n     close_rate_requested: Optional[float] = None\n     close_profit: Optional[float] = None\n     close_profit_abs: Optional[float] = None\n-    stake_amount: float = 0.0\n+    stake_amount: float = 0.0  # TODO: This should probably be computed\n     amount: float = 0.0\n     amount_requested: Optional[float] = None\n     open_date: datetime\n@@ -260,16 +264,31 @@ class LocalTrade():\n     buy_tag: Optional[str] = None\n     timeframe: Optional[int] = None\n \n-    def __init__(self, **kwargs):\n-        for key in kwargs:\n-            setattr(self, key, kwargs[key])\n-        self.recalc_open_trade_value()\n+    # Margin trading properties\n+    interest_rate: float = 0.0\n+    isolated_liq: Optional[float] = None\n+    is_short: bool = False\n+    leverage: float = 1.0\n+    interest_mode: InterestMode = InterestMode.NONE\n \n-    def __repr__(self):\n-        open_since = self.open_date.strftime(DATETIME_PRINT_FORMAT) if self.is_open else 'closed'\n+    @property\n+    def has_no_leverage(self) -> bool:\n+        \"\"\"Returns true if this is a non-leverage, non-short trade\"\"\"\n+        return ((self.leverage or self.leverage is None) == 1.0 and not self.is_short)\n \n-        return (f'Trade(id={self.id}, pair={self.pair}, amount={self.amount:.8f}, '\n-                f'open_rate={self.open_rate:.8f}, open_since={open_since})')\n+    @property\n+    def borrowed(self) -> float:\n+        \"\"\"\n+            The amount of currency borrowed from the exchange for leverage trades\n+            If a long trade, the amount is in base currency\n+            If a short trade, the amount is in the other currency being traded\n+        \"\"\"\n+        if self.has_no_leverage:\n+            return 0.0\n+        elif not self.is_short:\n+            return (self.amount * self.open_rate) * ((self.leverage-1)/self.leverage)\n+        else:\n+            return self.amount\n \n     @property\n     def open_date_utc(self):\n@@ -279,6 +298,77 @@ def open_date_utc(self):\n     def close_date_utc(self):\n         return self.close_date.replace(tzinfo=timezone.utc)\n \n+    @property\n+    def enter_side(self) -> str:\n+        if self.is_short:\n+            return \"sell\"\n+        else:\n+            return \"buy\"\n+\n+    @property\n+    def exit_side(self) -> str:\n+        if self.is_short:\n+            return \"buy\"\n+        else:\n+            return \"sell\"\n+\n+    def __init__(self, **kwargs):\n+        for key in kwargs:\n+            setattr(self, key, kwargs[key])\n+        if self.isolated_liq:\n+            self.set_isolated_liq(self.isolated_liq)\n+        self.recalc_open_trade_value()\n+\n+    def _set_stop_loss(self, stop_loss: float, percent: float):\n+        \"\"\"\n+            Method you should use to set self.stop_loss.\n+            Assures stop_loss is not passed the liquidation price\n+        \"\"\"\n+        if self.isolated_liq is not None:\n+            if self.is_short:\n+                sl = min(stop_loss, self.isolated_liq)\n+            else:\n+                sl = max(stop_loss, self.isolated_liq)\n+        else:\n+            sl = stop_loss\n+\n+        if not self.stop_loss:\n+            self.initial_stop_loss = sl\n+        self.stop_loss = sl\n+\n+        if self.is_short:\n+            self.stop_loss_pct = abs(percent)\n+        else:\n+            self.stop_loss_pct = -1 * abs(percent)\n+        self.stoploss_last_update = datetime.utcnow()\n+\n+    def set_isolated_liq(self, isolated_liq: float):\n+        \"\"\"\n+            Method you should use to set self.liquidation price.\n+            Assures stop_loss is not passed the liquidation price\n+        \"\"\"\n+        if self.stop_loss is not None:\n+            if self.is_short:\n+                self.stop_loss = min(self.stop_loss, isolated_liq)\n+            else:\n+                self.stop_loss = max(self.stop_loss, isolated_liq)\n+        else:\n+            self.initial_stop_loss = isolated_liq\n+            self.stop_loss = isolated_liq\n+\n+        self.isolated_liq = isolated_liq\n+\n+    def __repr__(self):\n+        open_since = self.open_date.strftime(DATETIME_PRINT_FORMAT) if self.is_open else 'closed'\n+        leverage = self.leverage or 1.0\n+        is_short = self.is_short or False\n+\n+        return (\n+            f'Trade(id={self.id}, pair={self.pair}, amount={self.amount:.8f}, '\n+            f'is_short={is_short}, leverage={leverage}, '\n+            f'open_rate={self.open_rate:.8f}, open_since={open_since})'\n+        )\n+\n     def to_json(self) -> Dict[str, Any]:\n         return {\n             'trade_id': self.id,\n@@ -342,6 +432,11 @@ def to_json(self) -> Dict[str, Any]:\n             'min_rate': self.min_rate,\n             'max_rate': self.max_rate,\n \n+            'leverage': self.leverage,\n+            'interest_rate': self.interest_rate,\n+            'isolated_liq': self.isolated_liq,\n+            'is_short': self.is_short,\n+\n             'open_order_id': self.open_order_id,\n         }\n \n@@ -361,12 +456,6 @@ def adjust_min_max_rates(self, current_price: float) -> None:\n         self.max_rate = max(current_price, self.max_rate or self.open_rate)\n         self.min_rate = min(current_price, self.min_rate or self.open_rate)\n \n-    def _set_new_stoploss(self, new_loss: float, stoploss: float):\n-        \"\"\"Assign new stop value\"\"\"\n-        self.stop_loss = new_loss\n-        self.stop_loss_pct = -1 * abs(stoploss)\n-        self.stoploss_last_update = datetime.utcnow()\n-\n     def adjust_stop_loss(self, current_price: float, stoploss: float,\n                          initial: bool = False) -> None:\n         \"\"\"\n@@ -380,20 +469,39 @@ def adjust_stop_loss(self, current_price: float, stoploss: float,\n             # Don't modify if called with initial and nothing to do\n             return\n \n-        new_loss = float(current_price * (1 - abs(stoploss)))\n+        if self.is_short:\n+            new_loss = float(current_price * (1 + abs(stoploss)))\n+            # If trading on margin, don't set the stoploss below the liquidation price\n+            if self.isolated_liq:\n+                new_loss = min(self.isolated_liq, new_loss)\n+        else:\n+            new_loss = float(current_price * (1 - abs(stoploss)))\n+            # If trading on margin, don't set the stoploss below the liquidation price\n+            if self.isolated_liq:\n+                new_loss = max(self.isolated_liq, new_loss)\n \n         # no stop loss assigned yet\n         if not self.stop_loss:\n             logger.debug(f\"{self.pair} - Assigning new stoploss...\")\n-            self._set_new_stoploss(new_loss, stoploss)\n+            self._set_stop_loss(new_loss, stoploss)\n             self.initial_stop_loss = new_loss\n-            self.initial_stop_loss_pct = -1 * abs(stoploss)\n+            if self.is_short:\n+                self.initial_stop_loss_pct = abs(stoploss)\n+            else:\n+                self.initial_stop_loss_pct = -1 * abs(stoploss)\n \n         # evaluate if the stop loss needs to be updated\n         else:\n-            if new_loss > self.stop_loss:  # stop losses only walk up, never down!\n+\n+            higher_stop = new_loss > self.stop_loss\n+            lower_stop = new_loss < self.stop_loss\n+\n+            # stop losses only walk up, never down!,\n+            #   ? But adding more to a margin account would create a lower liquidation price,\n+            #   ? decreasing the minimum stoploss\n+            if (higher_stop and not self.is_short) or (lower_stop and self.is_short):\n                 logger.debug(f\"{self.pair} - Adjusting stoploss...\")\n-                self._set_new_stoploss(new_loss, stoploss)\n+                self._set_stop_loss(new_loss, stoploss)\n             else:\n                 logger.debug(f\"{self.pair} - Keeping current stoploss...\")\n \n@@ -412,24 +520,35 @@ def update(self, order: Dict) -> None:\n         :return: None\n         \"\"\"\n         order_type = order['type']\n+\n+        if 'is_short' in order and order['side'] == 'sell':\n+            # Only set's is_short on opening trades, ignores non-shorts\n+            self.is_short = order['is_short']\n+\n         # Ignore open and cancelled orders\n         if order['status'] == 'open' or safe_value_fallback(order, 'average', 'price') is None:\n             return\n \n         logger.info('Updating trade (id=%s) ...', self.id)\n \n-        if order_type in ('market', 'limit') and order['side'] == 'buy':\n+        if order_type in ('market', 'limit') and self.enter_side == order['side']:\n             # Update open rate and actual amount\n             self.open_rate = float(safe_value_fallback(order, 'average', 'price'))\n             self.amount = float(safe_value_fallback(order, 'filled', 'amount'))\n+            if 'leverage' in order:\n+                self.leverage = order['leverage']\n             self.recalc_open_trade_value()\n             if self.is_open:\n-                logger.info(f'{order_type.upper()}_BUY has been fulfilled for {self}.')\n+                payment = \"SELL\" if self.is_short else \"BUY\"\n+                logger.info(f'{order_type.upper()}_{payment} has been fulfilled for {self}.')\n             self.open_order_id = None\n-        elif order_type in ('market', 'limit') and order['side'] == 'sell':\n+        elif order_type in ('market', 'limit') and self.exit_side == order['side']:\n             if self.is_open:\n-                logger.info(f'{order_type.upper()}_SELL has been fulfilled for {self}.')\n-            self.close(safe_value_fallback(order, 'average', 'price'))\n+                payment = \"BUY\" if self.is_short else \"SELL\"\n+                # TODO-mg: On shorts, you buy a little bit more than the amount (amount + interest)\n+                # This wll only print the original amount\n+                logger.info(f'{order_type.upper()}_{payment} has been fulfilled for {self}.')\n+            self.close(safe_value_fallback(order, 'average', 'price'))  # TODO-mg: Double check this\n         elif order_type in ('stop_loss_limit', 'stop-loss', 'stop-loss-limit', 'stop'):\n             self.stoploss_order_id = None\n             self.close_rate_requested = self.stop_loss\n@@ -447,9 +566,9 @@ def close(self, rate: float, *, show_msg: bool = True) -> None:\n         and marks trade as closed\n         \"\"\"\n         self.close_rate = rate\n+        self.close_date = self.close_date or datetime.utcnow()\n         self.close_profit = self.calc_profit_ratio()\n         self.close_profit_abs = self.calc_profit()\n-        self.close_date = self.close_date or datetime.utcnow()\n         self.is_open = False\n         self.sell_order_status = 'closed'\n         self.open_order_id = None\n@@ -464,14 +583,14 @@ def update_fee(self, fee_cost: float, fee_currency: Optional[str], fee_rate: Opt\n         \"\"\"\n         Update Fee parameters. Only acts once per side\n         \"\"\"\n-        if side == 'buy' and self.fee_open_currency is None:\n+        if self.enter_side == side and self.fee_open_currency is None:\n             self.fee_open_cost = fee_cost\n             self.fee_open_currency = fee_currency\n             if fee_rate is not None:\n                 self.fee_open = fee_rate\n                 # Assume close-fee will fall into the same fee category and take an educated guess\n                 self.fee_close = fee_rate\n-        elif side == 'sell' and self.fee_close_currency is None:\n+        elif self.exit_side == side and self.fee_close_currency is None:\n             self.fee_close_cost = fee_cost\n             self.fee_close_currency = fee_currency\n             if fee_rate is not None:\n@@ -481,9 +600,9 @@ def fee_updated(self, side: str) -> bool:\n         \"\"\"\n         Verify if this side (buy / sell) has already been updated\n         \"\"\"\n-        if side == 'buy':\n+        if self.enter_side == side:\n             return self.fee_open_currency is not None\n-        elif side == 'sell':\n+        elif self.exit_side == side:\n             return self.fee_close_currency is not None\n         else:\n             return False\n@@ -496,67 +615,129 @@ def _calc_open_trade_value(self) -> float:\n         Calculate the open_rate including open_fee.\n         :return: Price in of the open trade incl. Fees\n         \"\"\"\n-        buy_trade = Decimal(self.amount) * Decimal(self.open_rate)\n-        fees = buy_trade * Decimal(self.fee_open)\n-        return float(buy_trade + fees)\n+        open_trade = Decimal(self.amount) * Decimal(self.open_rate)\n+        fees = open_trade * Decimal(self.fee_open)\n+        if self.is_short:\n+            return float(open_trade - fees)\n+        else:\n+            return float(open_trade + fees)\n \n     def recalc_open_trade_value(self) -> None:\n         \"\"\"\n         Recalculate open_trade_value.\n-        Must be called whenever open_rate or fee_open is changed.\n+        Must be called whenever open_rate, fee_open or is_short is changed.\n+\n         \"\"\"\n         self.open_trade_value = self._calc_open_trade_value()\n \n+    def calculate_interest(self, interest_rate: Optional[float] = None) -> Decimal:\n+        \"\"\"\n+        : param interest_rate: interest_charge for borrowing this coin(optional).\n+        If interest_rate is not set self.interest_rate will be used\n+        \"\"\"\n+\n+        zero = Decimal(0.0)\n+        # If nothing was borrowed\n+        if self.has_no_leverage:\n+            return zero\n+\n+        open_date = self.open_date.replace(tzinfo=None)\n+        now = (self.close_date or datetime.now(timezone.utc)).replace(tzinfo=None)\n+        sec_per_hour = Decimal(3600)\n+        total_seconds = Decimal((now - open_date).total_seconds())\n+        hours = total_seconds/sec_per_hour or zero\n+\n+        rate = Decimal(interest_rate or self.interest_rate)\n+        borrowed = Decimal(self.borrowed)\n+\n+        return self.interest_mode(borrowed=borrowed, rate=rate, hours=hours)\n+\n     def calc_close_trade_value(self, rate: Optional[float] = None,\n-                               fee: Optional[float] = None) -> float:\n+                               fee: Optional[float] = None,\n+                               interest_rate: Optional[float] = None) -> float:\n         \"\"\"\n         Calculate the close_rate including fee\n         :param fee: fee to use on the close rate (optional).\n             If rate is not set self.fee will be used\n         :param rate: rate to compare with (optional).\n             If rate is not set self.close_rate will be used\n+        :param interest_rate: interest_charge for borrowing this coin (optional).\n+            If interest_rate is not set self.interest_rate will be used\n         :return: Price in BTC of the open trade\n         \"\"\"\n         if rate is None and not self.close_rate:\n             return 0.0\n \n-        sell_trade = Decimal(self.amount) * Decimal(rate or self.close_rate)  # type: ignore\n-        fees = sell_trade * Decimal(fee or self.fee_close)\n-        return float(sell_trade - fees)\n+        interest = self.calculate_interest(interest_rate)\n+        if self.is_short:\n+            amount = Decimal(self.amount) + Decimal(interest)\n+        else:\n+            # Currency already owned for longs, no need to purchase\n+            amount = Decimal(self.amount)\n+\n+        close_trade = Decimal(amount) * Decimal(rate or self.close_rate)  # type: ignore\n+        fees = close_trade * Decimal(fee or self.fee_close)\n+\n+        if self.is_short:\n+            return float(close_trade + fees)\n+        else:\n+            return float(close_trade - fees - interest)\n \n     def calc_profit(self, rate: Optional[float] = None,\n-                    fee: Optional[float] = None) -> float:\n+                    fee: Optional[float] = None,\n+                    interest_rate: Optional[float] = None) -> float:\n         \"\"\"\n         Calculate the absolute profit in stake currency between Close and Open trade\n         :param fee: fee to use on the close rate (optional).\n-            If rate is not set self.fee will be used\n+            If fee is not set self.fee will be used\n         :param rate: close rate to compare with (optional).\n             If rate is not set self.close_rate will be used\n+        :param interest_rate: interest_charge for borrowing this coin (optional).\n+            If interest_rate is not set self.interest_rate will be used\n         :return:  profit in stake currency as float\n         \"\"\"\n         close_trade_value = self.calc_close_trade_value(\n             rate=(rate or self.close_rate),\n-            fee=(fee or self.fee_close)\n+            fee=(fee or self.fee_close),\n+            interest_rate=(interest_rate or self.interest_rate)\n         )\n-        profit = close_trade_value - self.open_trade_value\n+\n+        if self.is_short:\n+            profit = self.open_trade_value - close_trade_value\n+        else:\n+            profit = close_trade_value - self.open_trade_value\n         return float(f\"{profit:.8f}\")\n \n     def calc_profit_ratio(self, rate: Optional[float] = None,\n-                          fee: Optional[float] = None) -> float:\n+                          fee: Optional[float] = None,\n+                          interest_rate: Optional[float] = None) -> float:\n         \"\"\"\n         Calculates the profit as ratio (including fee).\n         :param rate: rate to compare with (optional).\n             If rate is not set self.close_rate will be used\n         :param fee: fee to use on the close rate (optional).\n+        :param interest_rate: interest_charge for borrowing this coin (optional).\n+            If interest_rate is not set self.interest_rate will be used\n         :return: profit ratio as float\n         \"\"\"\n         close_trade_value = self.calc_close_trade_value(\n             rate=(rate or self.close_rate),\n-            fee=(fee or self.fee_close)\n+            fee=(fee or self.fee_close),\n+            interest_rate=(interest_rate or self.interest_rate)\n         )\n-        if self.open_trade_value == 0.0:\n+\n+        short_close_zero = (self.is_short and close_trade_value == 0.0)\n+        long_close_zero = (not self.is_short and self.open_trade_value == 0.0)\n+        leverage = self.leverage or 1.0\n+\n+        if (short_close_zero or long_close_zero):\n             return 0.0\n-        profit_ratio = (close_trade_value / self.open_trade_value) - 1\n+        else:\n+            if self.is_short:\n+                profit_ratio = (1 - (close_trade_value/self.open_trade_value)) * leverage\n+            else:\n+                profit_ratio = ((close_trade_value/self.open_trade_value) - 1) * leverage\n+\n         return float(f\"{profit_ratio:.8f}\")\n \n     def select_order(self, order_side: str, is_open: Optional[bool]) -> Optional[Order]:\n@@ -702,12 +883,20 @@ class Trade(_DECL_BASE, LocalTrade):\n     max_rate = Column(Float, nullable=True, default=0.0)\n     # Lowest price reached\n     min_rate = Column(Float, nullable=True)\n-    sell_reason = Column(String(100), nullable=True)\n-    sell_order_status = Column(String(100), nullable=True)\n+    sell_reason = Column(String(100), nullable=True)  # TODO-mg: Change to close_reason\n+    sell_order_status = Column(String(100), nullable=True)  # TODO-mg: Change to close_order_status\n     strategy = Column(String(100), nullable=True)\n     buy_tag = Column(String(100), nullable=True)\n     timeframe = Column(Integer, nullable=True)\n \n+    # Margin trading properties\n+    leverage = Column(Float, nullable=True, default=1.0)\n+    interest_rate = Column(Float, nullable=False, default=0.0)\n+    isolated_liq = Column(Float, nullable=True)\n+    is_short = Column(Boolean, nullable=False, default=False)\n+    interest_mode = Column(Enum(InterestMode), nullable=True)\n+    # End of margin trading properties\n+\n     def __init__(self, **kwargs):\n         super().__init__(**kwargs)\n         self.recalc_open_trade_value()\n@@ -794,7 +983,7 @@ def get_open_trades_without_assigned_fees():\n                                  ]).all()\n \n     @staticmethod\n-    def get_sold_trades_without_assigned_fees():\n+    def get_closed_trades_without_assigned_fees():\n         \"\"\"\n         Returns all closed trades which don't have fees set correctly\n         NOTE: Not supported in Backtesting.\ndiff --git a/mkdocs.yml b/mkdocs.yml\nindex 854939ca08f..59f2bae73d9 100644\n--- a/mkdocs.yml\n+++ b/mkdocs.yml\n@@ -3,61 +3,62 @@ site_url: https://www.freqtrade.io/\n repo_url: https://github.com/freqtrade/freqtrade\n use_directory_urls: True\n nav:\n-    - Home: index.md\n-    - Quickstart with Docker: docker_quickstart.md\n-    - Installation:\n-        - Linux/MacOS/Raspberry: installation.md\n-        - Windows: windows_installation.md\n-    - Freqtrade Basics: bot-basics.md\n-    - Configuration: configuration.md\n-    - Strategy Customization: strategy-customization.md\n-    - Plugins: plugins.md\n-    - Stoploss: stoploss.md\n-    - Start the bot: bot-usage.md\n-    - Control the bot:\n-        - Telegram: telegram-usage.md\n-        - REST API & FreqUI: rest-api.md\n-        - Web Hook: webhook-config.md\n-    - Data Downloading: data-download.md\n-    - Backtesting: backtesting.md\n-    - Hyperopt: hyperopt.md\n-    - Utility Sub-commands: utils.md\n-    - Plotting: plotting.md\n-    - Data Analysis:\n-        - Jupyter Notebooks: data-analysis.md\n-        - Strategy analysis: strategy_analysis_example.md\n-    - Exchange-specific Notes: exchanges.md\n-    - Advanced Topics:\n-        - Advanced Post-installation Tasks: advanced-setup.md\n-        - Edge Positioning: edge.md\n-        - Advanced Strategy: strategy-advanced.md\n-        - Advanced Hyperopt: advanced-hyperopt.md\n-        - Sandbox Testing: sandbox-testing.md\n-    - FAQ: faq.md\n-    - SQL Cheat-sheet: sql_cheatsheet.md\n-    - Updating Freqtrade: updating.md\n-    - Deprecated Features: deprecated.md\n-    - Contributors Guide: developer.md\n+  - Home: index.md\n+  - Quickstart with Docker: docker_quickstart.md\n+  - Installation:\n+      - Linux/MacOS/Raspberry: installation.md\n+      - Windows: windows_installation.md\n+  - Freqtrade Basics: bot-basics.md\n+  - Configuration: configuration.md\n+  - Strategy Customization: strategy-customization.md\n+  - Plugins: plugins.md\n+  - Stoploss: stoploss.md\n+  - Start the bot: bot-usage.md\n+  - Control the bot:\n+      - Telegram: telegram-usage.md\n+      - REST API & FreqUI: rest-api.md\n+      - Web Hook: webhook-config.md\n+  - Data Downloading: data-download.md\n+  - Backtesting: backtesting.md\n+  - Leverage: leverage.md\n+  - Hyperopt: hyperopt.md\n+  - Utility Sub-commands: utils.md\n+  - Plotting: plotting.md\n+  - Data Analysis:\n+      - Jupyter Notebooks: data-analysis.md\n+      - Strategy analysis: strategy_analysis_example.md\n+  - Exchange-specific Notes: exchanges.md\n+  - Advanced Topics:\n+      - Advanced Post-installation Tasks: advanced-setup.md\n+      - Edge Positioning: edge.md\n+      - Advanced Strategy: strategy-advanced.md\n+      - Advanced Hyperopt: advanced-hyperopt.md\n+      - Sandbox Testing: sandbox-testing.md\n+  - FAQ: faq.md\n+  - SQL Cheat-sheet: sql_cheatsheet.md\n+  - Updating Freqtrade: updating.md\n+  - Deprecated Features: deprecated.md\n+  - Contributors Guide: developer.md\n theme:\n   name: material\n-  logo: 'images/logo.png'\n-  favicon: 'images/logo.png'\n-  custom_dir: 'docs/overrides'\n+  logo: \"images/logo.png\"\n+  favicon: \"images/logo.png\"\n+  custom_dir: \"docs/overrides\"\n   palette:\n     - scheme: default\n-      primary: 'blue grey'\n-      accent: 'tear'\n+      primary: \"blue grey\"\n+      accent: \"tear\"\n       toggle:\n         icon: material/toggle-switch-off-outline\n         name: Switch to dark mode\n     - scheme: slate\n-      primary: 'blue grey'\n-      accent: 'tear'\n+      primary: \"blue grey\"\n+      accent: \"tear\"\n       toggle:\n         icon: material/toggle-switch-off-outline\n         name: Switch to dark mode\n extra_css:\n-  - 'stylesheets/ft.extra.css'\n+  - \"stylesheets/ft.extra.css\"\n extra_javascript:\n   - javascripts/config.js\n   - https://polyfill.io/v3/polyfill.min.js?features=es6\ndiff --git a/tests/conftest.py b/tests/conftest.py\nindex 1924e1f9560..859c34aae58 100644\n--- a/tests/conftest.py\n+++ b/tests/conftest.py\n@@ -23,8 +23,8 @@\n from freqtrade.persistence import LocalTrade, Trade, init_db\n from freqtrade.resolvers import ExchangeResolver\n from freqtrade.worker import Worker\n-from tests.conftest_trades import (mock_trade_1, mock_trade_2, mock_trade_3, mock_trade_4,\n-                                   mock_trade_5, mock_trade_6)\n+from tests.conftest_trades import (leverage_trade, mock_trade_1, mock_trade_2, mock_trade_3,\n+                                   mock_trade_4, mock_trade_5, mock_trade_6, short_trade)\n \n \n logging.getLogger('').setLevel(logging.INFO)\n@@ -225,6 +225,43 @@ def add_trade(trade):\n         Trade.query.session.flush()\n \n \n+def create_mock_trades_with_leverage(fee, use_db: bool = True):\n+    \"\"\"\n+    Create some fake trades ...\n+    \"\"\"\n+    def add_trade(trade):\n+        if use_db:\n+            Trade.query.session.add(trade)\n+        else:\n+            LocalTrade.add_bt_trade(trade)\n+    # Simulate dry_run entries\n+    trade = mock_trade_1(fee)\n+    add_trade(trade)\n+\n+    trade = mock_trade_2(fee)\n+    add_trade(trade)\n+\n+    trade = mock_trade_3(fee)\n+    add_trade(trade)\n+\n+    trade = mock_trade_4(fee)\n+    add_trade(trade)\n+\n+    trade = mock_trade_5(fee)\n+    add_trade(trade)\n+\n+    trade = mock_trade_6(fee)\n+    add_trade(trade)\n+\n+    trade = short_trade(fee)\n+    add_trade(trade)\n+\n+    trade = leverage_trade(fee)\n+    add_trade(trade)\n+    if use_db:\n+        Trade.query.session.flush()\n+\n+\n @pytest.fixture(autouse=True)\n def patch_coingekko(mocker) -> None:\n     \"\"\"\ndiff --git a/tests/conftest_trades.py b/tests/conftest_trades.py\nindex b92b511447f..cad6d195c37 100644\n--- a/tests/conftest_trades.py\n+++ b/tests/conftest_trades.py\n@@ -1,5 +1,6 @@\n from datetime import datetime, timedelta, timezone\n \n+from freqtrade.enums import InterestMode\n from freqtrade.persistence.models import Order, Trade\n \n \n@@ -303,3 +304,180 @@ def mock_trade_6(fee):\n     o = Order.parse_from_ccxt_object(mock_order_6_sell(), 'LTC/BTC', 'sell')\n     trade.orders.append(o)\n     return trade\n+\n+\n+def short_order():\n+    return {\n+        'id': '1236',\n+        'symbol': 'ETC/BTC',\n+        'status': 'closed',\n+        'side': 'sell',\n+        'type': 'limit',\n+        'price': 0.123,\n+        'amount': 123.0,\n+        'filled': 123.0,\n+        'remaining': 0.0,\n+    }\n+\n+\n+def exit_short_order():\n+    return {\n+        'id': '12367',\n+        'symbol': 'ETC/BTC',\n+        'status': 'closed',\n+        'side': 'buy',\n+        'type': 'limit',\n+        'price': 0.128,\n+        'amount': 123.0,\n+        'filled': 123.0,\n+        'remaining': 0.0,\n+    }\n+\n+\n+def short_trade(fee):\n+    \"\"\"\n+        10 minute short limit trade on binance\n+\n+        Short trade\n+        fee: 0.25% base\n+        interest_rate: 0.05% per day\n+        open_rate: 0.123 base\n+        close_rate: 0.128 base\n+        amount: 123.0 crypto\n+        stake_amount: 15.129 base\n+        borrowed: 123.0  crypto\n+        time-periods: 10 minutes(rounds up to 1/24 time-period of 1 day)\n+        interest: borrowed * interest_rate * time-periods\n+                    = 123.0 * 0.0005 * 1/24 = 0.0025625 crypto\n+        open_value: (amount * open_rate) - (amount * open_rate * fee)\n+            = (123 * 0.123) - (123 * 0.123 * 0.0025)\n+            = 15.091177499999999\n+        amount_closed: amount + interest = 123 + 0.0025625 = 123.0025625\n+        close_value: (amount_closed * close_rate) + (amount_closed * close_rate * fee)\n+            = (123.0025625 * 0.128) + (123.0025625 * 0.128 * 0.0025)\n+            = 15.78368882\n+        total_profit = open_value - close_value\n+            = 15.091177499999999 - 15.78368882\n+            = -0.6925113200000013\n+        total_profit_percentage = total_profit / stake_amount\n+            = -0.6925113200000013 / 15.129\n+            = -0.04577376693766946\n+\n+    \"\"\"\n+    trade = Trade(\n+        pair='ETC/BTC',\n+        stake_amount=15.129,\n+        amount=123.0,\n+        amount_requested=123.0,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        open_rate=0.123,\n+        # close_rate=0.128,\n+        # close_profit=-0.04577376693766946,\n+        # close_profit_abs=-0.6925113200000013,\n+        exchange='binance',\n+        is_open=True,\n+        open_order_id='dry_run_exit_short_12345',\n+        strategy='DefaultStrategy',\n+        timeframe=5,\n+        sell_reason='sell_signal',  # TODO-mg: Update to exit/close reason\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=20),\n+        # close_date=datetime.now(tz=timezone.utc) - timedelta(minutes=2),\n+        is_short=True,\n+        interest_mode=InterestMode.HOURSPERDAY\n+    )\n+    o = Order.parse_from_ccxt_object(short_order(), 'ETC/BTC', 'sell')\n+    trade.orders.append(o)\n+    o = Order.parse_from_ccxt_object(exit_short_order(), 'ETC/BTC', 'sell')\n+    trade.orders.append(o)\n+    return trade\n+\n+\n+def leverage_order():\n+    return {\n+        'id': '1237',\n+        'symbol': 'DOGE/BTC',\n+        'status': 'closed',\n+        'side': 'buy',\n+        'type': 'limit',\n+        'price': 0.123,\n+        'amount': 123.0,\n+        'filled': 123.0,\n+        'remaining': 0.0,\n+        'leverage': 5.0\n+    }\n+\n+\n+def leverage_order_sell():\n+    return {\n+        'id': '12368',\n+        'symbol': 'DOGE/BTC',\n+        'status': 'closed',\n+        'side': 'sell',\n+        'type': 'limit',\n+        'price': 0.128,\n+        'amount': 123.0,\n+        'filled': 123.0,\n+        'remaining': 0.0,\n+        'leverage': 5.0\n+    }\n+\n+\n+def leverage_trade(fee):\n+    \"\"\"\n+    5 hour short limit trade on kraken\n+\n+        Short trade\n+        fee: 0.25% base\n+        interest_rate: 0.05% per day\n+        open_rate: 0.123 base\n+        close_rate: 0.128 base\n+        amount: 615 crypto\n+        stake_amount: 15.129 base\n+        borrowed: 60.516  base\n+        leverage: 5\n+        hours: 5\n+        interest: borrowed * interest_rate * ceil(1 + hours/4)\n+                    = 60.516 * 0.0005 * ceil(1 + 5/4) = 0.090774 base\n+        open_value: (amount * open_rate) + (amount * open_rate * fee)\n+            = (615.0 * 0.123) + (615.0 * 0.123 * 0.0025)\n+            = 75.83411249999999\n+\n+        close_value: (amount_closed * close_rate) - (amount_closed * close_rate * fee) - interest\n+            = (615.0 * 0.128) - (615.0 * 0.128 * 0.0025) - 0.090774\n+            = 78.432426\n+        total_profit = close_value - open_value\n+            = 78.432426 - 75.83411249999999\n+            = 2.5983135000000175\n+        total_profit_percentage = ((close_value/open_value)-1) * leverage\n+            = ((78.432426/75.83411249999999)-1) * 5\n+            = 0.1713156134055116\n+    \"\"\"\n+    trade = Trade(\n+        pair='DOGE/BTC',\n+        stake_amount=15.129,\n+        amount=615.0,\n+        leverage=5.0,\n+        amount_requested=615.0,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        open_rate=0.123,\n+        close_rate=0.128,\n+        close_profit=0.1713156134055116,\n+        close_profit_abs=2.5983135000000175,\n+        exchange='kraken',\n+        is_open=False,\n+        open_order_id='dry_run_leverage_buy_12368',\n+        strategy='DefaultStrategy',\n+        timeframe=5,\n+        sell_reason='sell_signal',  # TODO-mg: Update to exit/close reason\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=300),\n+        close_date=datetime.now(tz=timezone.utc),\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPER4\n+    )\n+    o = Order.parse_from_ccxt_object(leverage_order(), 'DOGE/BTC', 'sell')\n+    trade.orders.append(o)\n+    o = Order.parse_from_ccxt_object(leverage_order_sell(), 'DOGE/BTC', 'sell')\n+    trade.orders.append(o)\n+    return trade\ndiff --git a/tests/rpc/test_rpc.py b/tests/rpc/test_rpc.py\nindex 136fa157cda..db7ad484c10 100644\n--- a/tests/rpc/test_rpc.py\n+++ b/tests/rpc/test_rpc.py\n@@ -108,6 +108,10 @@ def test_rpc_trade_status(default_conf, ticker, fee, mocker) -> None:\n         'stoploss_entry_dist_ratio': -0.10448878,\n         'open_order': None,\n         'exchange': 'binance',\n+        'leverage': 1.0,\n+        'interest_rate': 0.0,\n+        'isolated_liq': None,\n+        'is_short': False,\n     }\n \n     mocker.patch('freqtrade.exchange.Exchange.get_rate',\n@@ -175,6 +179,10 @@ def test_rpc_trade_status(default_conf, ticker, fee, mocker) -> None:\n         'stoploss_entry_dist_ratio': -0.10448878,\n         'open_order': None,\n         'exchange': 'binance',\n+        'leverage': 1.0,\n+        'interest_rate': 0.0,\n+        'isolated_liq': None,\n+        'is_short': False,\n     }\n \n \ndiff --git a/tests/test_freqtradebot.py b/tests/test_freqtradebot.py\nindex b1e02a99bff..7c37bb26914 100644\n--- a/tests/test_freqtradebot.py\n+++ b/tests/test_freqtradebot.py\n@@ -2434,6 +2434,7 @@ def test_check_handle_timedout_exception(default_conf, ticker, open_trade, mocke\n \n     freqtrade.check_handle_timedout()\n     assert log_has_re(r\"Cannot query order for Trade\\(id=1, pair=ETH/BTC, amount=90.99181073, \"\n+                      r\"is_short=False, leverage=1.0, \"\n                       r\"open_rate=0.00001099, open_since=\"\n                       f\"{open_trade.open_date.strftime('%Y-%m-%d %H:%M:%S')}\"\n                       r\"\\) due to Traceback \\(most recent call last\\):\\n*\",\n@@ -3619,9 +3620,11 @@ def test_get_real_amount_quote(default_conf, trades_for_order, buy_order_fee, fe\n \n     # Amount is reduced by \"fee\"\n     assert freqtrade.get_real_amount(trade, buy_order_fee) == amount - (amount * 0.001)\n-    assert log_has('Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n-                   'open_rate=0.24544100, open_since=closed) (from 8.0 to 7.992).',\n-                   caplog)\n+    assert log_has(\n+        'Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, is_short=False,'\n+        ' leverage=1.0, open_rate=0.24544100, open_since=closed) (from 8.0 to 7.992).',\n+        caplog\n+    )\n \n \n def test_get_real_amount_quote_dust(default_conf, trades_for_order, buy_order_fee, fee,\n@@ -3666,9 +3669,12 @@ def test_get_real_amount_no_trade(default_conf, buy_order_fee, caplog, mocker, f\n \n     # Amount is reduced by \"fee\"\n     assert freqtrade.get_real_amount(trade, buy_order_fee) == amount\n-    assert log_has('Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n-                   'open_rate=0.24544100, open_since=closed) failed: myTrade-Dict empty found',\n-                   caplog)\n+    assert log_has(\n+        'Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n+        'is_short=False, leverage=1.0, open_rate=0.24544100, open_since=closed) failed: '\n+        'myTrade-Dict empty found',\n+        caplog\n+    )\n \n \n def test_get_real_amount_stake(default_conf, trades_for_order, buy_order_fee, fee, mocker):\n@@ -3752,9 +3758,11 @@ def test_get_real_amount_multi(default_conf, trades_for_order2, buy_order_fee, c\n \n     # Amount is reduced by \"fee\"\n     assert freqtrade.get_real_amount(trade, buy_order_fee) == amount - (amount * 0.001)\n-    assert log_has('Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n-                   'open_rate=0.24544100, open_since=closed) (from 8.0 to 7.992).',\n-                   caplog)\n+    assert log_has(\n+        'Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, is_short=False,'\n+        ' leverage=1.0, open_rate=0.24544100, open_since=closed) (from 8.0 to 7.992).',\n+        caplog\n+    )\n \n     assert trade.fee_open == 0.001\n     assert trade.fee_close == 0.001\n@@ -3788,9 +3796,11 @@ def test_get_real_amount_multi2(default_conf, trades_for_order3, buy_order_fee,\n \n     # Amount is reduced by \"fee\"\n     assert freqtrade.get_real_amount(trade, buy_order_fee) == amount - (amount * 0.0005)\n-    assert log_has('Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n-                   'open_rate=0.24544100, open_since=closed) (from 8.0 to 7.996).',\n-                   caplog)\n+    assert log_has(\n+        'Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, is_short=False,'\n+        ' leverage=1.0, open_rate=0.24544100, open_since=closed) (from 8.0 to 7.996).',\n+        caplog\n+    )\n     # Overall fee is average of both trade's fee\n     assert trade.fee_open == 0.001518575\n     assert trade.fee_open_cost is not None\n@@ -3822,9 +3832,11 @@ def test_get_real_amount_fromorder(default_conf, trades_for_order, buy_order_fee\n \n     # Amount is reduced by \"fee\"\n     assert freqtrade.get_real_amount(trade, limit_buy_order) == amount - 0.004\n-    assert log_has('Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, '\n-                   'open_rate=0.24544100, open_since=closed) (from 8.0 to 7.996).',\n-                   caplog)\n+    assert log_has(\n+        'Applying fee on amount for Trade(id=None, pair=LTC/ETH, amount=8.00000000, is_short=False,'\n+        ' leverage=1.0, open_rate=0.24544100, open_since=closed) (from 8.0 to 7.996).',\n+        caplog\n+    )\n \n \n def test_get_real_amount_invalid_order(default_conf, trades_for_order, buy_order_fee, fee, mocker):\ndiff --git a/tests/test_persistence.py b/tests/test_persistence.py\nindex f7bcad80667..16469f6fc5a 100644\n--- a/tests/test_persistence.py\n+++ b/tests/test_persistence.py\n@@ -11,9 +11,10 @@\n from sqlalchemy import create_engine, inspect, text\n \n from freqtrade import constants\n+from freqtrade.enums import InterestMode\n from freqtrade.exceptions import DependencyException, OperationalException\n from freqtrade.persistence import LocalTrade, Order, Trade, clean_dry_run_db, init_db\n-from tests.conftest import create_mock_trades, log_has, log_has_re\n+from tests.conftest import create_mock_trades, create_mock_trades_with_leverage, log_has, log_has_re\n \n \n def test_init_create_session(default_conf):\n@@ -64,29 +65,434 @@ def test_init_dryrun_db(default_conf, tmpdir):\n     assert Path(filename).is_file()\n \n \n+@pytest.mark.usefixtures(\"init_persistence\")\n+def test_enter_exit_side(fee):\n+    trade = Trade(\n+        id=2,\n+        pair='ADA/USDT',\n+        stake_amount=0.001,\n+        open_rate=0.01,\n+        amount=5,\n+        is_open=True,\n+        open_date=arrow.utcnow().datetime,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+        is_short=False,\n+        leverage=2.0\n+    )\n+    assert trade.enter_side == 'buy'\n+    assert trade.exit_side == 'sell'\n+\n+    trade.is_short = True\n+\n+    assert trade.enter_side == 'sell'\n+    assert trade.exit_side == 'buy'\n+\n+\n+@pytest.mark.usefixtures(\"init_persistence\")\n+def test__set_stop_loss_isolated_liq(fee):\n+    trade = Trade(\n+        id=2,\n+        pair='ADA/USDT',\n+        stake_amount=60.0,\n+        open_rate=2.0,\n+        amount=30.0,\n+        is_open=True,\n+        open_date=arrow.utcnow().datetime,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+        is_short=False,\n+        leverage=2.0\n+    )\n+    trade.set_isolated_liq(0.09)\n+    assert trade.isolated_liq == 0.09\n+    assert trade.stop_loss == 0.09\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade._set_stop_loss(0.1, (1.0/9.0))\n+    assert trade.isolated_liq == 0.09\n+    assert trade.stop_loss == 0.1\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade.set_isolated_liq(0.08)\n+    assert trade.isolated_liq == 0.08\n+    assert trade.stop_loss == 0.1\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade.set_isolated_liq(0.11)\n+    assert trade.isolated_liq == 0.11\n+    assert trade.stop_loss == 0.11\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade._set_stop_loss(0.1, 0)\n+    assert trade.isolated_liq == 0.11\n+    assert trade.stop_loss == 0.11\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade.stop_loss = None\n+    trade.isolated_liq = None\n+    trade.initial_stop_loss = None\n+\n+    trade._set_stop_loss(0.07, 0)\n+    assert trade.isolated_liq is None\n+    assert trade.stop_loss == 0.07\n+    assert trade.initial_stop_loss == 0.07\n+\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    trade.stop_loss = None\n+    trade.initial_stop_loss = None\n+\n+    trade.set_isolated_liq(0.09)\n+    assert trade.isolated_liq == 0.09\n+    assert trade.stop_loss == 0.09\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade._set_stop_loss(0.08, (1.0/9.0))\n+    assert trade.isolated_liq == 0.09\n+    assert trade.stop_loss == 0.08\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade.set_isolated_liq(0.1)\n+    assert trade.isolated_liq == 0.1\n+    assert trade.stop_loss == 0.08\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade.set_isolated_liq(0.07)\n+    assert trade.isolated_liq == 0.07\n+    assert trade.stop_loss == 0.07\n+    assert trade.initial_stop_loss == 0.09\n+\n+    trade._set_stop_loss(0.1, (1.0/8.0))\n+    assert trade.isolated_liq == 0.07\n+    assert trade.stop_loss == 0.07\n+    assert trade.initial_stop_loss == 0.09\n+\n+\n+@pytest.mark.usefixtures(\"init_persistence\")\n+def test_interest(market_buy_order_usdt, fee):\n+    \"\"\"\n+        10min, 5hr limit trade on Binance/Kraken at 3x,5x leverage\n+        fee: 0.25 % quote\n+        interest_rate: 0.05 % per 4 hrs\n+        open_rate: 2.00 quote\n+        close_rate: 2.20 quote\n+        amount: = 30.0 crypto\n+        stake_amount\n+            3x, -3x: 20.0  quote\n+            5x, -5x: 12.0  quote\n+        borrowed\n+          10min\n+             3x: 40 quote\n+            -3x: 30 crypto\n+             5x: 48 quote\n+            -5x: 30 crypto\n+             1x: 0\n+            -1x: 30 crypto\n+        hours: 1/6 (10 minutes)\n+        time-periods:\n+            10min\n+                kraken: (1 + 1) 4hr_periods = 2 4hr_periods\n+                binance: 1/24 24hr_periods\n+            4.95hr\n+                kraken: ceil(1 + 4.95/4) 4hr_periods = 3 4hr_periods\n+                binance: ceil(4.95)/24 24hr_periods = 5/24 24hr_periods\n+        interest: borrowed * interest_rate * time-periods\n+          10min\n+            binance     3x: 40 * 0.0005 * 1/24 = 0.0008333333333333334 quote\n+            kraken      3x: 40 * 0.0005 * 2    = 0.040 quote\n+            binace     -3x: 30 * 0.0005 * 1/24 = 0.000625 crypto\n+            kraken     -3x: 30 * 0.0005 * 2    = 0.030 crypto\n+          5hr\n+            binance     3x: 40 * 0.0005 * 5/24 = 0.004166666666666667 quote\n+            kraken      3x: 40 * 0.0005 * 3    = 0.06 quote\n+            binace     -3x: 30 * 0.0005 * 5/24 = 0.0031249999999999997 crypto\n+            kraken     -3x: 30 * 0.0005 * 3    = 0.045 crypto\n+          0.00025 interest\n+            binance     3x: 40 * 0.00025 * 5/24 = 0.0020833333333333333 quote\n+            kraken      3x: 40 * 0.00025 * 3    = 0.03 quote\n+            binace     -3x: 30 * 0.00025 * 5/24 = 0.0015624999999999999 crypto\n+            kraken     -3x: 30 * 0.00025 * 3    = 0.0225 crypto\n+          5x leverage, 0.0005 interest, 5hr\n+            binance     5x: 48 * 0.0005 * 5/24 = 0.005 quote\n+            kraken      5x: 48 * 0.0005 * 3    = 0.07200000000000001 quote\n+            binace     -5x: 30 * 0.0005 * 5/24 = 0.0031249999999999997 crypto\n+            kraken     -5x: 30 * 0.0005 * 3    = 0.045 crypto\n+          1x leverage, 0.0005 interest, 5hr\n+            binance,kraken 1x: 0.0 quote\n+            binace        -1x: 30 * 0.0005 * 5/24 = 0.003125 crypto\n+            kraken        -1x: 30 * 0.0005 * 3    = 0.045 crypto\n+    \"\"\"\n+\n+    trade = Trade(\n+        pair='ADA/USDT',\n+        stake_amount=20.0,\n+        amount=30.0,\n+        open_rate=2.0,\n+        open_date=datetime.utcnow() - timedelta(hours=0, minutes=10),\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='kraken',\n+        leverage=3.0,\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY\n+    )\n+\n+    # 10min, 3x leverage\n+    # binance\n+    assert round(float(trade.calculate_interest()), 8) == round(0.0008333333333333334, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.040\n+    # Short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # binace\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert float(trade.calculate_interest()) == 0.000625\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert isclose(float(trade.calculate_interest()), 0.030)\n+\n+    # 5hr, long\n+    trade.open_date = datetime.utcnow() - timedelta(hours=4, minutes=55)\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    # binance\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest()), 8) == round(0.004166666666666667, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.06\n+    # short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # binace\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest()), 8) == round(0.0031249999999999997, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.045\n+\n+    # 0.00025 interest, 5hr, long\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    # binance\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest(interest_rate=0.00025)),\n+                 8) == round(0.0020833333333333333, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert isclose(float(trade.calculate_interest(interest_rate=0.00025)), 0.03)\n+    # short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # binace\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest(interest_rate=0.00025)),\n+                 8) == round(0.0015624999999999999, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest(interest_rate=0.00025)) == 0.0225\n+\n+    # 5x leverage, 0.0005 interest, 5hr, long\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    trade.leverage = 5.0\n+    # binance\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest()), 8) == 0.005\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == round(0.07200000000000001, 8)\n+    # short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # binace\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(float(trade.calculate_interest()), 8) == round(0.0031249999999999997, 8)\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.045\n+\n+    # 1x leverage, 0.0005 interest, 5hr\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    trade.leverage = 1.0\n+    # binance\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert float(trade.calculate_interest()) == 0.0\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.0\n+    # short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # binace\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert float(trade.calculate_interest()) == 0.003125\n+    # kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert float(trade.calculate_interest()) == 0.045\n+\n+\n+@pytest.mark.usefixtures(\"init_persistence\")\n+def test_borrowed(limit_buy_order_usdt, limit_sell_order_usdt, fee, caplog):\n+    \"\"\"\n+        10 minute limit trade on Binance/Kraken at 1x, 3x leverage\n+        fee: 0.25% quote\n+        interest_rate: 0.05% per 4 hrs\n+        open_rate: 2.00 quote\n+        close_rate: 2.20 quote\n+        amount: = 30.0 crypto\n+        stake_amount\n+            1x,-1x: 60.0  quote\n+            3x,-3x: 20.0  quote\n+        borrowed\n+             1x:  0 quote\n+             3x: 40 quote\n+            -1x: 30 crypto\n+            -3x: 30 crypto\n+        hours: 1/6 (10 minutes)\n+        time-periods:\n+            kraken: (1 + 1) 4hr_periods = 2 4hr_periods\n+            binance: 1/24 24hr_periods\n+        interest: borrowed * interest_rate * time-periods\n+            1x            :  /\n+            binance     3x: 40 * 0.0005 * 1/24 = 0.0008333333333333334 quote\n+            kraken      3x: 40 * 0.0005 * 2 = 0.040 quote\n+            binace -1x,-3x: 30 * 0.0005 * 1/24 = 0.000625 crypto\n+            kraken -1x,-3x: 30 * 0.0005 * 2 = 0.030 crypto\n+        open_value: (amount * open_rate) Â± (amount * open_rate * fee)\n+             1x, 3x: 30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n+            -1x,-3x: 30 * 2 - 30 * 2 * 0.0025 = 59.850 quote\n+        amount_closed:\n+            1x, 3x         : amount\n+            -1x, -3x       : amount + interest\n+            binance -1x,-3x: 30 + 0.000625 = 30.000625 crypto\n+            kraken  -1x,-3x: 30 + 0.03 = 30.03 crypto\n+        close_value:\n+             1x, 3x: (amount_closed * close_rate) - (amount_closed * close_rate * fee) - interest\n+            -1x,-3x: (amount_closed * close_rate) + (amount_closed * close_rate * fee)\n+            binance,kraken 1x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025)         = 65.835\n+            binance        3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.00083333 = 65.83416667\n+            kraken         3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.040 = 65.795\n+            binance   -1x,-3x: (30.000625 * 2.20) + (30.000625 * 2.20 * 0.0025) = 66.16637843750001\n+            kraken    -1x,-3x: (30.03 * 2.20) + (30.03 * 2.20 * 0.0025)         = 66.231165\n+        total_profit:\n+            1x, 3x : close_value - open_value\n+            -1x,-3x: open_value  - close_value\n+            binance,kraken 1x: 65.835 - 60.15             = 5.685\n+            binance        3x: 65.83416667 - 60.15        = 5.684166670000003\n+            kraken         3x: 65.795 - 60.15             = 5.645\n+            binance   -1x,-3x: 59.850 - 66.16637843750001 = -6.316378437500013\n+            kraken    -1x,-3x: 59.850 - 66.231165          = -6.381165\n+        total_profit_ratio:\n+            1x, 3x : ((close_value/open_value) - 1) * leverage\n+            -1x,-3x: (1 - (close_value/open_value)) * leverage\n+            binance  1x: ((65.835 / 60.15) - 1)  * 1 = 0.0945137157107232\n+            binance  3x: ((65.83416667 / 60.15) - 1)  * 3 = 0.2834995845386534\n+            kraken   1x: ((65.835 / 60.15) - 1)  * 1 = 0.0945137157107232\n+            kraken   3x: ((65.795 / 60.15) - 1)  * 3 = 0.2815461346633419\n+            binance -1x: (1-(66.1663784375 / 59.85)) * 1 = -0.1055368159983292\n+            binance -3x: (1-(66.1663784375 / 59.85)) * 3 = -0.3166104479949876\n+            kraken  -1x: (1-(66.2311650 / 59.85)) * 1    = -0.106619298245614\n+            kraken  -3x: (1-(66.2311650 / 59.85)) * 3    = -0.319857894736842\n+    \"\"\"\n+\n+    trade = Trade(\n+        id=2,\n+        pair='ADA/USDT',\n+        stake_amount=60.0,\n+        open_rate=2.0,\n+        amount=30.0,\n+        is_open=True,\n+        open_date=arrow.utcnow().datetime,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+    )\n+    assert trade.borrowed == 0\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    assert trade.borrowed == 30.0\n+    trade.leverage = 3.0\n+    assert trade.borrowed == 30.0\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    assert trade.borrowed == 40.0\n+\n+\n @pytest.mark.usefixtures(\"init_persistence\")\n def test_update_limit_order(limit_buy_order_usdt, limit_sell_order_usdt, fee, caplog):\n     \"\"\"\n-        On this test we will buy and sell a crypto currency.\n+        10 minute limit trade on Binance/Kraken at 1x, 3x leverage\n         fee: 0.25% quote\n+        interest_rate: 0.05% per 4 hrs\n         open_rate: 2.00 quote\n         close_rate: 2.20 quote\n         amount: = 30.0 crypto\n         stake_amount\n-            60.0  quote\n+            1x,-1x: 60.0  quote\n+            3x,-3x: 20.0  quote\n         borrowed\n-             0 quote\n-        open_value: (amount * open_rate) + (amount * open_rate * fee)\n-             30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n+             1x:  0 quote\n+             3x: 40 quote\n+            -1x: 30 crypto\n+            -3x: 30 crypto\n+        hours: 1/6 (10 minutes)\n+        time-periods:\n+            kraken: (1 + 1) 4hr_periods = 2 4hr_periods\n+            binance: 1/24 24hr_periods\n+        interest: borrowed * interest_rate * time-periods\n+            1x            :  /\n+            binance     3x: 40 * 0.0005 * 1/24 = 0.0008333333333333334 quote\n+            kraken      3x: 40 * 0.0005 * 2 = 0.040 quote\n+            binace -1x,-3x: 30 * 0.0005 * 1/24 = 0.000625 crypto\n+            kraken -1x,-3x: 30 * 0.0005 * 2 = 0.030 crypto\n+        open_value: (amount * open_rate) Â± (amount * open_rate * fee)\n+             1x, 3x: 30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n+            -1x,-3x: 30 * 2 - 30 * 2 * 0.0025 = 59.850 quote\n+        amount_closed:\n+            1x, 3x         : amount\n+            -1x, -3x       : amount + interest\n+            binance -1x,-3x: 30 + 0.000625 = 30.000625 crypto\n+            kraken  -1x,-3x: 30 + 0.03 = 30.03 crypto\n         close_value:\n-            (amount * close_rate) - (amount * close_rate * fee) - interest\n-            (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) = 65.835\n+             1x, 3x: (amount_closed * close_rate) - (amount_closed * close_rate * fee) - interest\n+            -1x,-3x: (amount_closed * close_rate) + (amount_closed * close_rate * fee)\n+            binance,kraken 1x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025)         = 65.835\n+            binance        3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.00083333 = 65.83416667\n+            kraken         3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.040 = 65.795\n+            binance   -1x,-3x: (30.000625 * 2.20) + (30.000625 * 2.20 * 0.0025) = 66.16637843750001\n+            kraken    -1x,-3x: (30.03 * 2.20) + (30.03 * 2.20 * 0.0025)         = 66.231165\n         total_profit:\n-            close_value - open_value\n-            65.835 - 60.15             = 5.685\n+            1x, 3x : close_value - open_value\n+            -1x,-3x: open_value  - close_value\n+            binance,kraken 1x: 65.835 - 60.15             = 5.685\n+            binance        3x: 65.83416667 - 60.15        = 5.684166670000003\n+            kraken         3x: 65.795 - 60.15             = 5.645\n+            binance   -1x,-3x: 59.850 - 66.16637843750001 = -6.316378437500013\n+            kraken    -1x,-3x: 59.850 - 66.231165          = -6.381165\n         total_profit_ratio:\n-            ((close_value/open_value) - 1) * leverage\n-            ((65.835 / 60.15) - 1)  * 1 = 0.0945137157107232\n+            1x, 3x : ((close_value/open_value) - 1) * leverage\n+            -1x,-3x: (1 - (close_value/open_value)) * leverage\n+            binance  1x: ((65.835 / 60.15) - 1)  * 1 = 0.0945137157107232\n+            binance  3x: ((65.83416667 / 60.15) - 1)  * 3 = 0.2834995845386534\n+            kraken   1x: ((65.835 / 60.15) - 1)  * 1 = 0.0945137157107232\n+            kraken   3x: ((65.795 / 60.15) - 1)  * 3 = 0.2815461346633419\n+            binance -1x: (1-(66.1663784375 / 59.85)) * 1 = -0.1055368159983292\n+            binance -3x: (1-(66.1663784375 / 59.85)) * 3 = -0.3166104479949876\n+            kraken  -1x: (1-(66.2311650 / 59.85)) * 1    = -0.106619298245614\n+            kraken  -3x: (1-(66.2311650 / 59.85)) * 3    = -0.319857894736842\n+        open_rate: 2.2, close_rate: 2.0, -3x, binance, short\n+            open_value: 30 * 2.2 - 30 * 2.2 * 0.0025 = 65.835 quote\n+            amount_closed: 30 + 0.000625 = 30.000625 crypto\n+            close_value: (30.000625 * 2.0) + (30.000625 * 2.0 * 0.0025) = 60.151253125\n+            total_profit: 65.835 - 60.151253125 = 5.683746874999997\n+            total_profit_ratio: (1-(60.151253125/65.835)) * 3 = 0.2589996297562085\n \n     \"\"\"\n \n@@ -113,7 +519,8 @@ def test_update_limit_order(limit_buy_order_usdt, limit_sell_order_usdt, fee, ca\n     assert trade.close_profit is None\n     assert trade.close_date is None\n     assert log_has_re(r\"LIMIT_BUY has been fulfilled for Trade\\(id=2, \"\n-                      r\"pair=ADA/USDT, amount=30.00000000, open_rate=2.00000000, open_since=.*\\).\",\n+                      r'pair=ADA/USDT, amount=30.00000000, '\n+                      r\"is_short=False, leverage=1.0, open_rate=2.00000000, open_since=.*\\).\",\n                       caplog)\n \n     caplog.clear()\n@@ -124,7 +531,50 @@ def test_update_limit_order(limit_buy_order_usdt, limit_sell_order_usdt, fee, ca\n     assert trade.close_profit == round(0.0945137157107232, 8)\n     assert trade.close_date is not None\n     assert log_has_re(r\"LIMIT_SELL has been fulfilled for Trade\\(id=2, \"\n-                      r\"pair=ADA/USDT, amount=30.00000000, open_rate=2.00000000, open_since=.*\\).\",\n+                      r\"pair=ADA/USDT, amount=30.00000000, \"\n+                      r\"is_short=False, leverage=1.0, open_rate=2.00000000, open_since=.*\\).\",\n+                      caplog)\n+    caplog.clear()\n+\n+    trade = Trade(\n+        id=226531,\n+        pair='ADA/USDT',\n+        stake_amount=20.0,\n+        open_rate=2.0,\n+        amount=30.0,\n+        is_open=True,\n+        open_date=arrow.utcnow().datetime,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+        is_short=True,\n+        leverage=3.0,\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY\n+    )\n+    trade.open_order_id = 'something'\n+    trade.update(limit_sell_order_usdt)\n+\n+    assert trade.open_order_id is None\n+    assert trade.open_rate == 2.20\n+    assert trade.close_profit is None\n+    assert trade.close_date is None\n+\n+    assert log_has_re(r\"LIMIT_SELL has been fulfilled for Trade\\(id=226531, \"\n+                      r\"pair=ADA/USDT, amount=30.00000000, \"\n+                      r\"is_short=True, leverage=3.0, open_rate=2.20000000, open_since=.*\\).\",\n+                      caplog)\n+    caplog.clear()\n+\n+    trade.open_order_id = 'something'\n+    trade.update(limit_buy_order_usdt)\n+    assert trade.open_order_id is None\n+    assert trade.close_rate == 2.00\n+    assert trade.close_profit == round(0.2589996297562085, 8)\n+    assert trade.close_date is not None\n+    assert log_has_re(r\"LIMIT_BUY has been fulfilled for Trade\\(id=226531, \"\n+                      r\"pair=ADA/USDT, amount=30.00000000, \"\n+                      r\"is_short=True, leverage=3.0, open_rate=2.20000000, open_since=.*\\).\",\n                       caplog)\n     caplog.clear()\n \n@@ -151,7 +601,8 @@ def test_update_market_order(market_buy_order_usdt, market_sell_order_usdt, fee,\n     assert trade.close_profit is None\n     assert trade.close_date is None\n     assert log_has_re(r\"MARKET_BUY has been fulfilled for Trade\\(id=1, \"\n-                      r\"pair=ADA/USDT, amount=30.00000000, open_rate=2.00000000, open_since=.*\\).\",\n+                      r\"pair=ADA/USDT, amount=30.00000000, is_short=False, leverage=1.0, \"\n+                      r\"open_rate=2.00000000, open_since=.*\\).\",\n                       caplog)\n \n     caplog.clear()\n@@ -163,7 +614,8 @@ def test_update_market_order(market_buy_order_usdt, market_sell_order_usdt, fee,\n     assert trade.close_profit == round(0.0945137157107232, 8)\n     assert trade.close_date is not None\n     assert log_has_re(r\"MARKET_SELL has been fulfilled for Trade\\(id=1, \"\n-                      r\"pair=ADA/USDT, amount=30.00000000, open_rate=2.00000000, open_since=.*\\).\",\n+                      r\"pair=ADA/USDT, amount=30.00000000, is_short=False, leverage=1.0, \"\n+                      r\"open_rate=2.00000000, open_since=.*\\).\",\n                       caplog)\n \n \n@@ -174,6 +626,9 @@ def test_calc_open_close_trade_price(limit_buy_order_usdt, limit_sell_order_usdt\n         stake_amount=60.0,\n         open_rate=2.0,\n         amount=30.0,\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=10),\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY,\n         fee_open=fee.return_value,\n         fee_close=fee.return_value,\n         exchange='binance',\n@@ -181,15 +636,50 @@ def test_calc_open_close_trade_price(limit_buy_order_usdt, limit_sell_order_usdt\n \n     trade.open_order_id = 'something'\n     trade.update(limit_buy_order_usdt)\n-    assert trade._calc_open_trade_value() == 60.15\n     trade.update(limit_sell_order_usdt)\n+    # 1x leverage, binance\n+    assert trade._calc_open_trade_value() == 60.15\n     assert isclose(trade.calc_close_trade_value(), 65.835)\n-\n-    # Profit in USDT\n     assert trade.calc_profit() == 5.685\n-\n-    # Profit in percent\n     assert trade.calc_profit_ratio() == round(0.0945137157107232, 8)\n+    # 3x leverage, binance\n+    trade.leverage = 3\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert trade._calc_open_trade_value() == 60.15\n+    assert round(trade.calc_close_trade_value(), 8) == 65.83416667\n+    assert trade.calc_profit() == round(5.684166670000003, 8)\n+    assert trade.calc_profit_ratio() == round(0.2834995845386534, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    # 3x leverage, kraken\n+    assert trade._calc_open_trade_value() == 60.15\n+    assert trade.calc_close_trade_value() == 65.795\n+    assert trade.calc_profit() == 5.645\n+    assert trade.calc_profit_ratio() == round(0.2815461346633419, 8)\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # 3x leverage, short, kraken\n+    assert trade._calc_open_trade_value() == 59.850\n+    assert trade.calc_close_trade_value() == 66.231165\n+    assert trade.calc_profit() == round(-6.381165000000003, 8)\n+    assert trade.calc_profit_ratio() == round(-0.319857894736842, 8)\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    # 3x leverage, short, binance\n+    assert trade._calc_open_trade_value() == 59.85\n+    assert trade.calc_close_trade_value() == 66.1663784375\n+    assert trade.calc_profit() == round(-6.316378437500013, 8)\n+    assert trade.calc_profit_ratio() == round(-0.3166104479949876, 8)\n+    # 1x leverage, short, binance\n+    trade.leverage = 1.0\n+    assert trade._calc_open_trade_value() == 59.850\n+    assert trade.calc_close_trade_value() == 66.1663784375\n+    assert trade.calc_profit() == round(-6.316378437500013, 8)\n+    assert trade.calc_profit_ratio() == round(-0.1055368159983292, 8)\n+    # 1x leverage, short, kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert trade._calc_open_trade_value() == 59.850\n+    assert trade.calc_close_trade_value() == 66.231165\n+    assert trade.calc_profit() == -6.381165\n+    assert trade.calc_profit_ratio() == round(-0.106619298245614, 8)\n \n \n @pytest.mark.usefixtures(\"init_persistence\")\n@@ -202,7 +692,9 @@ def test_trade_close(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n         is_open=True,\n         fee_open=fee.return_value,\n         fee_close=fee.return_value,\n-        open_date=arrow.Arrow(2020, 2, 1, 15, 5, 1).datetime,\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=10),\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY,\n         exchange='binance',\n     )\n     assert trade.close_profit is None\n@@ -281,18 +773,20 @@ def test_update_invalid_order(limit_buy_order_usdt):\n \n @pytest.mark.usefixtures(\"init_persistence\")\n def test_calc_open_trade_value(limit_buy_order_usdt, fee):\n-    \"\"\"\n-        fee: 0.25 %, 0.3% quote\n-        open_rate: 2.00 quote\n-        amount: = 30.0 crypto\n-        stake_amount\n-            60.0  quote\n-        open_value: (amount * open_rate) + (amount * open_rate * fee)\n-        0.25% fee\n-            30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n-        0.3% fee\n-            30 * 2 + 30 * 2 * 0.003  = 60.18 quote\n-    \"\"\"\n+    # 10 minute limit trade on Binance/Kraken at 1x, 3x leverage\n+    # fee: 0.25 %, 0.3% quote\n+    # open_rate: 2.00 quote\n+    # amount: = 30.0 crypto\n+    # stake_amount\n+    #     1x, -1x: 60.0  quote\n+    #     3x, -3x: 20.0  quote\n+    # open_value: (amount * open_rate) Â± (amount * open_rate * fee)\n+    # 0.25% fee\n+    #      1x, 3x: 30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n+    #     -1x,-3x: 30 * 2 - 30 * 2 * 0.0025 = 59.85 quote\n+    # 0.3% fee\n+    #      1x, 3x: 30 * 2 + 30 * 2 * 0.003  = 60.18 quote\n+    #     -1x,-3x: 30 * 2 - 30 * 2 * 0.003  = 59.82 quote\n     trade = Trade(\n         pair='ADA/USDT',\n         stake_amount=60.0,\n@@ -303,13 +797,27 @@ def test_calc_open_trade_value(limit_buy_order_usdt, fee):\n         exchange='binance',\n     )\n     trade.open_order_id = 'open_trade'\n-    trade.update(limit_buy_order_usdt)  # Buy @ 2.0\n+    trade.update(limit_buy_order_usdt)\n \n     # Get the open rate price with the standard fee rate\n     assert trade._calc_open_trade_value() == 60.15\n-    trade.fee_open = 0.003\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    assert trade._calc_open_trade_value() == 59.85\n+    trade.leverage = 3\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert trade._calc_open_trade_value() == 59.85\n+    trade.is_short = False\n+    trade.recalc_open_trade_value()\n+    assert trade._calc_open_trade_value() == 60.15\n+\n     # Get the open rate price with a custom fee rate\n+    trade.fee_open = 0.003\n+\n     assert trade._calc_open_trade_value() == 60.18\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    assert trade._calc_open_trade_value() == 59.82\n \n \n @pytest.mark.usefixtures(\"init_persistence\")\n@@ -319,29 +827,63 @@ def test_calc_close_trade_price(limit_buy_order_usdt, limit_sell_order_usdt, fee\n         stake_amount=60.0,\n         amount=30.0,\n         open_rate=2.0,\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=10),\n         fee_open=fee.return_value,\n         fee_close=fee.return_value,\n         exchange='binance',\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY\n     )\n     trade.open_order_id = 'close_trade'\n-    trade.update(limit_buy_order_usdt)  # Buy @ 2.0\n+    trade.update(limit_buy_order_usdt)\n \n-    # Get the close rate price with a custom close rate and a regular fee rate\n+    # 1x leverage binance\n     assert trade.calc_close_trade_value(rate=2.5) == 74.8125\n-    # Get the close rate price with a custom close rate and a custom fee rate\n     assert trade.calc_close_trade_value(rate=2.5, fee=0.003) == 74.775\n-    # Test when we apply a Sell order, and ask price with a custom fee rate\n     trade.update(limit_sell_order_usdt)\n     assert trade.calc_close_trade_value(fee=0.005) == 65.67\n \n+    # 3x leverage binance\n+    trade.leverage = 3.0\n+    assert round(trade.calc_close_trade_value(rate=2.5), 8) == 74.81166667\n+    assert round(trade.calc_close_trade_value(rate=2.5, fee=0.003), 8) == 74.77416667\n+\n+    # 3x leverage kraken\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert trade.calc_close_trade_value(rate=2.5) == 74.7725\n+    assert trade.calc_close_trade_value(rate=2.5, fee=0.003) == 74.735\n+\n+    # 3x leverage kraken, short\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    assert round(trade.calc_close_trade_value(rate=2.5), 8) == 75.2626875\n+    assert trade.calc_close_trade_value(rate=2.5, fee=0.003) == 75.300225\n+\n+    # 3x leverage binance, short\n+    trade.interest_mode = InterestMode.HOURSPERDAY\n+    assert round(trade.calc_close_trade_value(rate=2.5), 8) == 75.18906641\n+    assert round(trade.calc_close_trade_value(rate=2.5, fee=0.003), 8) == 75.22656719\n+\n+    trade.leverage = 1.0\n+    # 1x leverage binance, short\n+    assert round(trade.calc_close_trade_value(rate=2.5), 8) == 75.18906641\n+    assert round(trade.calc_close_trade_value(rate=2.5, fee=0.003), 8) == 75.22656719\n+\n+    # 1x leverage kraken, short\n+    trade.interest_mode = InterestMode.HOURSPER4\n+    assert round(trade.calc_close_trade_value(rate=2.5), 8) == 75.2626875\n+    assert trade.calc_close_trade_value(rate=2.5, fee=0.003) == 75.300225\n+\n \n @pytest.mark.usefixtures(\"init_persistence\")\n def test_calc_profit(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n     \"\"\"\n+        10 minute limit trade on Binance/Kraken at 1x, 3x leverage\n         arguments:\n             fee:\n                 0.25% quote\n                 0.30% quote\n+            interest_rate: 0.05% per 4 hrs\n             open_rate: 2.0 quote\n             close_rate:\n                 1.9 quote\n@@ -349,51 +891,117 @@ def test_calc_profit(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n                 2.2 quote\n             amount: = 30.0 crypto\n             stake_amount\n-                60.0  quote\n-        open_value: (amount * open_rate) + (amount * open_rate * fee)\n+                1x,-1x: 60.0  quote\n+                3x,-3x: 20.0  quote\n+            hours: 1/6 (10 minutes)\n+        borrowed\n+             1x:  0 quote\n+             3x: 40 quote\n+            -1x: 30 crypto\n+            -3x: 30 crypto\n+        time-periods:\n+            kraken: (1 + 1) 4hr_periods = 2 4hr_periods\n+            binance: 1/24 24hr_periods\n+        interest: borrowed * interest_rate * time-periods\n+            1x            :  /\n+            binance     3x: 40 * 0.0005 * 1/24 = 0.0008333333333333334 quote\n+            kraken      3x: 40 * 0.0005 * 2    = 0.040 quote\n+            binace -1x,-3x: 30 * 0.0005 * 1/24 = 0.000625 crypto\n+            kraken -1x,-3x: 30 * 0.0005 * 2    = 0.030 crypto\n+        open_value: (amount * open_rate) Â± (amount * open_rate * fee)\n           0.0025 fee\n-            30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n-            30 * 2 - 30 * 2 * 0.0025 = 59.85 quote\n+             1x, 3x: 30 * 2 + 30 * 2 * 0.0025 = 60.15 quote\n+            -1x,-3x: 30 * 2 - 30 * 2 * 0.0025 = 59.85 quote\n           0.003 fee: Is only applied to close rate in this test\n+        amount_closed:\n+            1x, 3x                         = amount\n+            -1x, -3x                       = amount + interest\n+            binance -1x,-3x: 30 + 0.000625 = 30.000625 crypto\n+            kraken  -1x,-3x: 30 + 0.03     = 30.03 crypto\n         close_value:\n             equations:\n-                (amount_closed * close_rate) - (amount_closed * close_rate * fee)\n+                1x, 3x: (amount_closed * close_rate) - (amount_closed * close_rate * fee) - interest\n+                -1x,-3x: (amount_closed * close_rate) + (amount_closed * close_rate * fee)\n             2.1 quote\n-                (30.00 * 2.1) - (30.00 * 2.1 * 0.0025)   = 62.8425\n+                bin,krak  1x: (30.00 * 2.1) - (30.00 * 2.1 * 0.0025)                = 62.8425\n+                bin       3x: (30.00 * 2.1) - (30.00 * 2.1 * 0.0025) - 0.0008333333 = 62.8416666667\n+                krak      3x: (30.00 * 2.1) - (30.00 * 2.1 * 0.0025) - 0.040        = 62.8025\n+                bin  -1x,-3x: (30.000625 * 2.1) + (30.000625 * 2.1 * 0.0025)        = 63.15881578125\n+                krak -1x,-3x: (30.03 * 2.1) + (30.03 * 2.1 * 0.0025)                = 63.2206575\n             1.9 quote\n-                (30.00 * 1.9) - (30.00 * 1.9 * 0.0025)   = 56.8575\n+                bin,krak  1x: (30.00 * 1.9) - (30.00 * 1.9 * 0.0025)                = 56.8575\n+                bin       3x: (30.00 * 1.9) - (30.00 * 1.9 * 0.0025) - 0.0008333333 = 56.85666667\n+                krak      3x: (30.00 * 1.9) - (30.00 * 1.9 * 0.0025) - 0.040        = 56.8175\n+                bin  -1x,-3x: (30.000625 * 1.9) + (30.000625 * 1.9 * 0.0025)        = 57.14369046875\n+                krak -1x,-3x: (30.03 * 1.9) + (30.03 * 1.9 * 0.0025)                = 57.1996425\n             2.2 quote\n-                (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) = 65.835\n+                bin,krak  1x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025)              = 65.835\n+                bin       3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.00083333 = 65.83416667\n+                krak      3x: (30.00 * 2.20) - (30.00 * 2.20 * 0.0025) - 0.040      = 65.795\n+                bin  -1x,-3x: (30.000625 * 2.20) + (30.000625 * 2.20 * 0.0025)      = 66.1663784375\n+                krak -1x,-3x: (30.03 * 2.20) + (30.03 * 2.20 * 0.0025)              = 66.231165\n         total_profit:\n             equations:\n-                close_value - open_value\n+                1x, 3x : close_value - open_value\n+                -1x,-3x: open_value - close_value\n             2.1 quote\n-                62.8425 - 60.15 = 2.6925\n+                binance,kraken 1x: 62.8425     - 60.15          = 2.6925\n+                binance        3x: 62.84166667 - 60.15          = 2.69166667\n+                kraken         3x: 62.8025     - 60.15          = 2.6525\n+                binance   -1x,-3x: 59.850      - 63.15881578125 = -3.308815781249997\n+                kraken    -1x,-3x: 59.850      - 63.2206575     = -3.3706575\n             1.9 quote\n-                56.8575 - 60.15 = -3.2925\n+                binance,kraken 1x: 56.8575     - 60.15          = -3.2925\n+                binance        3x: 56.85666667 - 60.15          = -3.29333333\n+                kraken         3x: 56.8175     - 60.15          = -3.3325\n+                binance   -1x,-3x: 59.850      - 57.14369046875 = 2.7063095312499996\n+                kraken    -1x,-3x: 59.850      - 57.1996425     = 2.6503575\n             2.2 quote\n-                65.835  - 60.15 = 5.685\n+                binance,kraken 1x: 65.835      - 60.15          = 5.685\n+                binance        3x: 65.83416667 - 60.15          = 5.68416667\n+                kraken         3x: 65.795      - 60.15          = 5.645\n+                binance   -1x,-3x: 59.850      - 66.1663784375  = -6.316378437499999\n+                kraken    -1x,-3x: 59.850      - 66.231165      = -6.381165\n         total_profit_ratio:\n             equations:\n-                ((close_value/open_value) - 1) * leverage\n+                1x, 3x : ((close_value/open_value) - 1) * leverage\n+                -1x,-3x: (1 - (close_value/open_value)) * leverage\n             2.1 quote\n-                (62.8425 / 60.15) - 1 = 0.04476309226932673\n+                binance,kraken 1x: (62.8425 / 60.15) - 1             = 0.04476309226932673\n+                binance        3x: ((62.84166667 / 60.15) - 1)*3     = 0.13424771421446402\n+                kraken         3x: ((62.8025 / 60.15) - 1)*3         = 0.13229426433915248\n+                binance       -1x: 1 - (63.15881578125 / 59.850)     = -0.05528514254385963\n+                binance       -3x: (1 - (63.15881578125 / 59.850))*3 = -0.1658554276315789\n+                kraken        -1x: 1 - (63.2206575 / 59.850)         = -0.05631842105263152\n+                kraken        -3x: (1 - (63.2206575 / 59.850))*3     = -0.16895526315789455\n             1.9 quote\n-                (56.8575 / 60.15) - 1 = -0.05473815461346632\n+                binance,kraken 1x: (56.8575 / 60.15) - 1             = -0.05473815461346632\n+                binance        3x: ((56.85666667 / 60.15) - 1)*3     = -0.16425602643391513\n+                kraken         3x: ((56.8175 / 60.15) - 1)*3         = -0.16620947630922667\n+                binance       -1x: 1 - (57.14369046875 / 59.850)     = 0.045218204365079395\n+                binance       -3x: (1 - (57.14369046875 / 59.850))*3 = 0.13565461309523819\n+                kraken        -1x: 1 - (57.1996425 / 59.850)         = 0.04428333333333334\n+                kraken        -3x: (1 - (57.1996425 / 59.850))*3     = 0.13285000000000002\n             2.2 quote\n-                (65.835 / 60.15) - 1  = 0.0945137157107232\n-        fee: 0.003\n+                binance,kraken 1x: (65.835 / 60.15) - 1             = 0.0945137157107232\n+                binance        3x: ((65.83416667 / 60.15) - 1)*3     = 0.2834995845386534\n+                kraken         3x: ((65.795 / 60.15) - 1)*3         = 0.2815461346633419\n+                binance       -1x: 1 - (66.1663784375 / 59.850)     = -0.1055368159983292\n+                binance       -3x: (1 - (66.1663784375 / 59.850))*3 = -0.3166104479949876\n+                kraken        -1x: 1 - (66.231165 / 59.850)         = -0.106619298245614\n+                kraken        -3x: (1 - (66.231165 / 59.850))*3     = -0.319857894736842\n+        fee: 0.003, 1x\n             close_value:\n                 2.1 quote: (30.00 * 2.1) - (30.00 * 2.1 * 0.003) = 62.811\n                 1.9 quote: (30.00 * 1.9) - (30.00 * 1.9 * 0.003) = 56.829\n                 2.2 quote: (30.00 * 2.2) - (30.00 * 2.2 * 0.003) = 65.802\n             total_profit\n-                fee: 0.003\n+                fee: 0.003, 1x\n                     2.1 quote: 62.811 - 60.15 = 2.6610000000000014\n                     1.9 quote: 56.829 - 60.15 = -3.320999999999998\n                     2.2 quote: 65.802 - 60.15 = 5.652000000000008\n             total_profit_ratio\n-                fee: 0.003\n+                fee: 0.003, 1x\n                     2.1 quote: (62.811 / 60.15) - 1 = 0.04423940149625927\n                     1.9 quote: (56.829 / 60.15) - 1 = -0.05521197007481293\n                     2.2 quote: (65.802 / 60.15) - 1 = 0.09396508728179565\n@@ -403,13 +1011,17 @@ def test_calc_profit(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n         stake_amount=60.0,\n         amount=30.0,\n         open_rate=2.0,\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=10),\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY,\n         fee_open=fee.return_value,\n         fee_close=fee.return_value,\n-        exchange='binance',\n+        exchange='binance'\n     )\n     trade.open_order_id = 'something'\n     trade.update(limit_buy_order_usdt)  # Buy @ 2.0\n \n+    # 1x Leverage, long\n     # Custom closing rate and regular fee rate\n     # Higher than open rate - 2.1 quote\n     assert trade.calc_profit(rate=2.1) == 2.6925\n@@ -429,6 +1041,70 @@ def test_calc_profit(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n     # Test with a custom fee rate on the close trade\n     assert trade.calc_profit(fee=0.003) == round(5.652000000000008, 8)\n \n+    trade.open_trade_value = 0.0\n+    trade.open_trade_value = trade._calc_open_trade_value()\n+\n+    # 3x leverage, long ###################################################\n+    trade.leverage = 3.0\n+    # Higher than open rate - 2.1 quote\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == 2.69166667\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == 2.6525\n+\n+    # 1.9 quote\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == -3.29333333\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == -3.3325\n+\n+    # 2.2 quote\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(fee=0.0025) == 5.68416667\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(fee=0.0025) == 5.645\n+\n+    # 3x leverage, short ###################################################\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # 2.1 quote - Higher than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == round(-3.308815781249997, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == -3.3706575\n+\n+    # 1.9 quote - Lower than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == round(2.7063095312499996, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == 2.6503575\n+\n+    # Test when we apply a Sell order. Uses sell order used above\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(fee=0.0025) == round(-6.316378437499999, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(fee=0.0025) == -6.381165\n+\n+    # 1x leverage, short ###################################################\n+    trade.leverage = 1.0\n+    # 2.1 quote - Higher than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == round(-3.308815781249997, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=2.1, fee=0.0025) == -3.3706575\n+\n+    # 1.9 quote - Lower than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == round(2.7063095312499996, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(rate=1.9, fee=0.0025) == 2.6503575\n+\n+    # Test when we apply a Sell order. Uses sell order used above\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit(fee=0.0025) == round(-6.316378437499999, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit(fee=0.0025) == -6.381165\n+\n \n @pytest.mark.usefixtures(\"init_persistence\")\n def test_calc_profit_ratio(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n@@ -437,6 +1113,9 @@ def test_calc_profit_ratio(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n         stake_amount=60.0,\n         amount=30.0,\n         open_rate=2.0,\n+        open_date=datetime.now(tz=timezone.utc) - timedelta(minutes=10),\n+        interest_rate=0.0005,\n+        interest_mode=InterestMode.HOURSPERDAY,\n         fee_open=fee.return_value,\n         fee_close=fee.return_value,\n         exchange='binance'\n@@ -444,6 +1123,8 @@ def test_calc_profit_ratio(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n     trade.open_order_id = 'something'\n     trade.update(limit_buy_order_usdt)  # Buy @ 2.0\n \n+    # 1x Leverage, long\n+    # Custom closing rate and regular fee rate\n     # Higher than open rate - 2.1 quote\n     assert trade.calc_profit_ratio(rate=2.1) == round(0.04476309226932673, 8)\n     # Lower than open rate - 1.9 quote\n@@ -464,6 +1145,68 @@ def test_calc_profit_ratio(limit_buy_order_usdt, limit_sell_order_usdt, fee):\n \n     trade.open_trade_value = 0.0\n     assert trade.calc_profit_ratio(fee=0.003) == 0.0\n+    trade.open_trade_value = trade._calc_open_trade_value()\n+\n+    # 3x leverage, long ###################################################\n+    trade.leverage = 3.0\n+    # 2.1 quote - Higher than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=2.1) == round(0.13424771421446402, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=2.1) == round(0.13229426433915248, 8)\n+\n+    # 1.9 quote - Lower than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=1.9) == round(-0.16425602643391513, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=1.9) == round(-0.16620947630922667, 8)\n+\n+    # Test when we apply a Sell order. Uses sell order used above\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio() == round(0.2834995845386534, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio() == round(0.2815461346633419, 8)\n+\n+    # 3x leverage, short ###################################################\n+    trade.is_short = True\n+    trade.recalc_open_trade_value()\n+    # 2.1 quote - Higher than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=2.1) == round(-0.1658554276315789, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=2.1) == round(-0.16895526315789455, 8)\n+\n+    # 1.9 quote - Lower than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=1.9) == round(0.13565461309523819, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=1.9) == round(0.13285000000000002, 8)\n+\n+    # Test when we apply a Sell order. Uses sell order used above\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio() == round(-0.3166104479949876, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio() == round(-0.319857894736842, 8)\n+\n+    # 1x leverage, short ###################################################\n+    trade.leverage = 1.0\n+    # 2.1 quote - Higher than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=2.1) == round(-0.05528514254385963, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=2.1) == round(-0.05631842105263152, 8)\n+\n+    # 1.9 quote - Lower than open rate\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio(rate=1.9) == round(0.045218204365079395, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio(rate=1.9) == round(0.04428333333333334, 8)\n+\n+    # Test when we apply a Sell order. Uses sell order used above\n+    trade.interest_mode = InterestMode.HOURSPERDAY  # binance\n+    assert trade.calc_profit_ratio() == round(-0.1055368159983292, 8)\n+    trade.interest_mode = InterestMode.HOURSPER4    # kraken\n+    assert trade.calc_profit_ratio() == round(-0.106619298245614, 8)\n \n \n @pytest.mark.usefixtures(\"init_persistence\")\n@@ -788,6 +1531,60 @@ def test_adjust_stop_loss(fee):\n     assert trade.stop_loss_pct == -0.1\n \n \n+def test_adjust_stop_loss_short(fee):\n+    trade = Trade(\n+        pair='ADA/USDT',\n+        stake_amount=0.001,\n+        amount=5,\n+        fee_open=fee.return_value,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+        open_rate=1,\n+        max_rate=1,\n+        is_short=True,\n+        interest_mode=InterestMode.HOURSPERDAY\n+    )\n+    trade.adjust_stop_loss(trade.open_rate, 0.05, True)\n+    assert trade.stop_loss == 1.05\n+    assert trade.stop_loss_pct == 0.05\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    # Get percent of profit with a lower rate\n+    trade.adjust_stop_loss(1.04, 0.05)\n+    assert trade.stop_loss == 1.05\n+    assert trade.stop_loss_pct == 0.05\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    # Get percent of profit with a custom rate (Higher than open rate)\n+    trade.adjust_stop_loss(0.7, 0.1)\n+    # If the price goes down to 0.7, with a trailing stop of 0.1,\n+    # the new stoploss at 0.1 above 0.7 would be 0.7*0.1 higher\n+    assert round(trade.stop_loss, 8) == 0.77\n+    assert trade.stop_loss_pct == 0.1\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    # current rate lower again ... should not change\n+    trade.adjust_stop_loss(0.8, -0.1)\n+    assert round(trade.stop_loss, 8) == 0.77\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    # current rate higher... should raise stoploss\n+    trade.adjust_stop_loss(0.6, -0.1)\n+    assert round(trade.stop_loss, 8) == 0.66\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    #  Initial is true but stop_loss set - so doesn't do anything\n+    trade.adjust_stop_loss(0.3, -0.1, True)\n+    assert round(trade.stop_loss, 8) == 0.66  # TODO-mg: What is this test?\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    assert trade.stop_loss_pct == 0.1\n+    trade.set_isolated_liq(0.63)\n+    trade.adjust_stop_loss(0.59, -0.1)\n+    assert trade.stop_loss == 0.63\n+    assert trade.isolated_liq == 0.63\n+\n+\n def test_adjust_min_max_rates(fee):\n     trade = Trade(\n         pair='ADA/USDT',\n@@ -831,12 +1628,24 @@ def test_get_open(fee, use_db):\n     Trade.use_db = True\n \n \n+@pytest.mark.usefixtures(\"init_persistence\")\n+@pytest.mark.parametrize('use_db', [True, False])\n+def test_get_open_lev(fee, use_db):\n+    Trade.use_db = use_db\n+    Trade.reset_trades()\n+\n+    create_mock_trades_with_leverage(fee, use_db)\n+    assert len(Trade.get_open_trades()) == 5\n+\n+    Trade.use_db = True\n+\n+\n @pytest.mark.usefixtures(\"init_persistence\")\n def test_to_json(default_conf, fee):\n \n     # Simulate dry_run entries\n     trade = Trade(\n-        pair='ETH/BTC',\n+        pair='ADA/USDT',\n         stake_amount=0.001,\n         amount=123.0,\n         amount_requested=123.0,\n@@ -852,7 +1661,7 @@ def test_to_json(default_conf, fee):\n     assert isinstance(result, dict)\n \n     assert result == {'trade_id': None,\n-                      'pair': 'ETH/BTC',\n+                      'pair': 'ADA/USDT',\n                       'is_open': None,\n                       'open_date': trade.open_date.strftime(\"%Y-%m-%d %H:%M:%S\"),\n                       'open_timestamp': int(trade.open_date.timestamp() * 1000),\n@@ -898,6 +1707,10 @@ def test_to_json(default_conf, fee):\n                       'buy_tag': None,\n                       'timeframe': None,\n                       'exchange': 'binance',\n+                      'leverage': None,\n+                      'interest_rate': None,\n+                      'isolated_liq': None,\n+                      'is_short': None,\n                       }\n \n     # Simulate dry_run entries\n@@ -965,6 +1778,10 @@ def test_to_json(default_conf, fee):\n                       'buy_tag': 'buys_signal_001',\n                       'timeframe': None,\n                       'exchange': 'binance',\n+                      'leverage': None,\n+                      'interest_rate': None,\n+                      'isolated_liq': None,\n+                      'is_short': None,\n                       }\n \n \n@@ -1028,6 +1845,66 @@ def test_stoploss_reinitialization(default_conf, fee):\n     assert trade_adj.initial_stop_loss_pct == -0.04\n \n \n+def test_stoploss_reinitialization_short(default_conf, fee):\n+    init_db(default_conf['db_url'])\n+    trade = Trade(\n+        pair='ADA/USDT',\n+        stake_amount=0.001,\n+        fee_open=fee.return_value,\n+        open_date=arrow.utcnow().shift(hours=-2).datetime,\n+        amount=10,\n+        fee_close=fee.return_value,\n+        exchange='binance',\n+        open_rate=1,\n+        max_rate=1,\n+        is_short=True,\n+        leverage=3.0,\n+        interest_mode=InterestMode.HOURSPERDAY\n+    )\n+    trade.adjust_stop_loss(trade.open_rate, -0.05, True)\n+    assert trade.stop_loss == 1.05\n+    assert trade.stop_loss_pct == 0.05\n+    assert trade.initial_stop_loss == 1.05\n+    assert trade.initial_stop_loss_pct == 0.05\n+    Trade.query.session.add(trade)\n+    # Lower stoploss\n+    Trade.stoploss_reinitialization(-0.06)\n+    trades = Trade.get_open_trades()\n+    assert len(trades) == 1\n+    trade_adj = trades[0]\n+    assert trade_adj.stop_loss == 1.06\n+    assert trade_adj.stop_loss_pct == 0.06\n+    assert trade_adj.initial_stop_loss == 1.06\n+    assert trade_adj.initial_stop_loss_pct == 0.06\n+    # Raise stoploss\n+    Trade.stoploss_reinitialization(-0.04)\n+    trades = Trade.get_open_trades()\n+    assert len(trades) == 1\n+    trade_adj = trades[0]\n+    assert trade_adj.stop_loss == 1.04\n+    assert trade_adj.stop_loss_pct == 0.04\n+    assert trade_adj.initial_stop_loss == 1.04\n+    assert trade_adj.initial_stop_loss_pct == 0.04\n+    # Trailing stoploss\n+    trade.adjust_stop_loss(0.98, -0.04)\n+    assert trade_adj.stop_loss == 1.0192\n+    assert trade_adj.initial_stop_loss == 1.04\n+    Trade.stoploss_reinitialization(-0.04)\n+    trades = Trade.get_open_trades()\n+    assert len(trades) == 1\n+    trade_adj = trades[0]\n+    # Stoploss should not change in this case.\n+    assert trade_adj.stop_loss == 1.0192\n+    assert trade_adj.stop_loss_pct == 0.04\n+    assert trade_adj.initial_stop_loss == 1.04\n+    assert trade_adj.initial_stop_loss_pct == 0.04\n+    # Stoploss can't go above liquidation price\n+    trade_adj.set_isolated_liq(1.0)\n+    trade.adjust_stop_loss(0.97, -0.04)\n+    assert trade_adj.stop_loss == 1.0\n+    assert trade_adj.stop_loss == 1.0\n+\n+\n def test_update_fee(fee):\n     trade = Trade(\n         pair='ADA/USDT',\n@@ -1185,19 +2062,32 @@ def test_get_best_pair(fee):\n     assert res[1] == 0.01\n \n \n+@pytest.mark.usefixtures(\"init_persistence\")\n+def test_get_best_pair_lev(fee):\n+\n+    res = Trade.get_best_pair()\n+    assert res is None\n+\n+    create_mock_trades_with_leverage(fee)\n+    res = Trade.get_best_pair()\n+    assert len(res) == 2\n+    assert res[0] == 'DOGE/BTC'\n+    assert res[1] == 0.1713156134055116\n+\n+\n @pytest.mark.usefixtures(\"init_persistence\")\n def test_update_order_from_ccxt(caplog):\n     # Most basic order return (only has orderid)\n-    o = Order.parse_from_ccxt_object({'id': '1234'}, 'ETH/BTC', 'buy')\n+    o = Order.parse_from_ccxt_object({'id': '1234'}, 'ADA/USDT', 'buy')\n     assert isinstance(o, Order)\n-    assert o.ft_pair == 'ETH/BTC'\n+    assert o.ft_pair == 'ADA/USDT'\n     assert o.ft_order_side == 'buy'\n     assert o.order_id == '1234'\n     assert o.ft_is_open\n     ccxt_order = {\n         'id': '1234',\n         'side': 'buy',\n-        'symbol': 'ETH/BTC',\n+        'symbol': 'ADA/USDT',\n         'type': 'limit',\n         'price': 1234.5,\n         'amount':  20.0,\n@@ -1206,9 +2096,9 @@ def test_update_order_from_ccxt(caplog):\n         'status': 'open',\n         'timestamp': 1599394315123\n     }\n-    o = Order.parse_from_ccxt_object(ccxt_order, 'ETH/BTC', 'buy')\n+    o = Order.parse_from_ccxt_object(ccxt_order, 'ADA/USDT', 'buy')\n     assert isinstance(o, Order)\n-    assert o.ft_pair == 'ETH/BTC'\n+    assert o.ft_pair == 'ADA/USDT'\n     assert o.ft_order_side == 'buy'\n     assert o.order_id == '1234'\n     assert o.order_type == 'limit'\n@@ -1303,7 +2193,7 @@ def test_Trade_object_idem():\n         'get_overall_performance',\n         'get_total_closed_profit',\n         'total_open_trades_stakes',\n-        'get_sold_trades_without_assigned_fees',\n+        'get_closed_trades_without_assigned_fees',\n         'get_open_trades_without_assigned_fees',\n         'get_open_order_trades',\n         'get_trades',\n",
    "diff_length": 105555
  },
  {
    "index": 5,
    "repository": "mingrammer/diagrams",
    "pr_title": "Some reorg in order to help and allow others to contribute more",
    "pr_body": "Hey @mingrammer,\r\n\r\nI'm aware that this PR is a big change but I believe it will help a lot for the maintainability of the project.\r\n ",
    "pr_number": 439,
    "comments": [
      "There is a lot of changes, so I need to review this feature carefully. (and there seems to be breaking changes) Let's take some time to review it and will get back.",
      "Before the review, the approaches suggested by @bkmeneguello (#438 ) and @gabriel-tessier (https://github.com/mingrammer/diagrams/pull/407#issuecomment-751638239) also looks good to me personally. But I'm not sure which is the best for now before review it completely. (just comment)",
      "I understand, I made sure to split the changes to logical commits, so may I\nsuggest to review it by commit.\n\nThanks.\n\nOn Thu, Jan 28, 2021, 20:56 MinJae Kwon <notifications@github.com> wrote:\n\n> Before the review, the approach also suggested by @bkmeneguello\n> <https://github.com/bkmeneguello> (#438\n> <https://github.com/mingrammer/diagrams/pull/438> ) and @gabriel-tessier\n> <https://github.com/gabriel-tessier> (#407 (comment)\n> <https://github.com/mingrammer/diagrams/pull/407#issuecomment-751638239>)\n> looks good to me personally. But I'm not sure which is best for now before\n> review it completely. (just comment)\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mingrammer/diagrams/pull/439#issuecomment-769300784>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AMGJMVH7O5Z44Z7CBKNZ6U3S4GXMPANCNFSM4WP7JAYA>\n> .\n>\n",
      "@dan-ash \r\n\r\nI tried your PR but it's not working like the other ones (specially #438):\r\n\r\n```python\r\nfrom diagrams import Cluster, Diagram\r\nfrom diagrams.aws.compute import ECS\r\nfrom diagrams.aws.database import RDS, Aurora\r\nfrom diagrams.aws.network import Route53, VPC\r\n\r\nwith Diagram(\"Simple Web Service with DB Cluster\", show=True, filename=\"mysql\"):\r\n    dns = Route53(\"dns\")\r\n    web = ECS(\"service\")\r\n\r\n    with VPC('VPC'):\r\n        # using cluster with an icon\r\n        with ECS(\"DB ClusterA\"):\r\n            db_master1 = RDS(\"main\")\r\n            db_master1 - [RDS(\"replica1\"), RDS(\"replica2\")]\r\n        # using the node\r\n        with Aurora(\"DB ClusterA\") as db2:\r\n            db_master2 = RDS(\"main\")\r\n            db_master2 - [RDS(\"replica1\"), RDS(\"replica2\")]\r\n\r\n        dns >> web >> db_master1\r\n        # link to/from cluster\r\n        dns >> web >> db2\r\n```\r\n![mysql](https://user-images.githubusercontent.com/1322552/106467841-f50da800-647b-11eb-9853-cde7dcd4c25d.png)\r\n",
      "@dan-ash \r\n\r\nI can confirm the problem raised bellow I just updated the name of the cluster to make it more clear:\r\n\r\n```python\r\nfrom diagrams import Cluster, Diagram\r\nfrom diagrams.aws.compute import ECS\r\nfrom diagrams.aws.database import RDS, Aurora\r\nfrom diagrams.aws.network import Route53, VPC\r\n\r\nwith Diagram(\"Simple Web Service with DB Cluster\", show=True, filename=\"mysql\"):\r\n    dns = Route53(\"dns\")\r\n    web = ECS(\"service\")\r\n\r\n    with VPC('VPC'):\r\n        # using cluster with an icon\r\n        with ECS(\"DB ClusterA\"):\r\n            db_master1 = RDS(\"main\")\r\n            db_master1 - [RDS(\"replica1\"), RDS(\"replica2\")]\r\n        # using the node\r\n        with Aurora(\"DB ClusterB\") as db2:\r\n            db_master2 = RDS(\"main\")\r\n            db_master2 - [RDS(\"replica1\"), RDS(\"replica2\")]\r\n\r\n        dns >> web >> db_master1\r\n        # link to/from cluster\r\n        dns >> web >> db2\r\n\r\n```\r\nwhich render like this on your branch:\r\n![mysql](https://user-images.githubusercontent.com/283765/108701095-d9f9f980-754a-11eb-8a7a-6864a378c573.png)\r\n\r\nand same code on bkmeneguello PR:\r\n![mysql](https://user-images.githubusercontent.com/283765/108701167-f5650480-754a-11eb-879d-e04191659d80.png)\r\n\r\n@bkmeneguello \r\nIn your example you named both cluster \"DB ClusterA\" which make not clear what going on, but at least it's a good example...\r\n\r\nOn this PR there's also the same error about the color order reported on the pull/438:\r\n\r\nhttps://github.com/mingrammer/diagrams/pull/438#issuecomment-783291179\r\n\r\nBut the \"graph_attr\" is working correctly in this PR.",
      "Any update and/or anything anyone can do to help - test, review code?",
      "I will try to fix the issue that was found this weekend, but have some\npersonal issues.\n\nOn Sun, Mar 7, 2021, 06:09 Scott Stirling <notifications@github.com> wrote:\n\n> Any update and/or anything anyone can do to help - test, review code?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mingrammer/diagrams/pull/439#issuecomment-792198510>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AMGJMVCKF7BLZPSMWKPOOHDTCL4A5ANCNFSM4WP7JAYA>\n> .\n>\n",
      "Hey, I started using Diagrams and that PR looks like something that would be very helpful for me. Unfortunately, it looks outdated.  @dan-ash and @mingrammer would it be a problem if I would raise a series of smaller PRs that would implement what was implemented in this PR? ",
      "I'll really be happy to see this go through, I was unable to push this\nmyself due lack of time.\n\nIn order to not waste our time, how about we get @mingrammer\n<https://github.com/mingrammer> POV on this and have some discussion, so it\nwont get stuck again?\n\nI have a bit more time now days so I can work on this also.\n\nThanks for raising this\n\n\nOn Mon, May 24, 2021, 15:04 Robert Matusewicz ***@***.***>\nwrote:\n\n> Hey, I started using Diagrams and that PR looks like something that would\n> be very helpful for me. Unfortunately, it looks outdated. @dan-ash\n> <https://github.com/dan-ash> and @mingrammer\n> <https://github.com/mingrammer> would it be a problem if I would raise a\n> series of smaller PRs that would implement what was implemented in this PR?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mingrammer/diagrams/pull/439#issuecomment-846996635>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AMGJMVAW57OMLJYOJTYLH6LTPI6DJANCNFSM4WP7JAYA>\n> .\n>\n",
      "I think that it's a good idea. From my side, I would propose splitting that PR into refactoring one (so moving classes outside of __init__) and a functional one. The first should be fairly easy to review and then we can focus on a juicy, functional part!",
      "@dan-ash might be good to split this PR into smaller entities -- pulling out the re-org by itself would be non-breaking, I imagine, and then that could get merged relatively quickly I'd hope (cc @mingrammer )\r\n\r\nDo we know what the breaking changes are?\r\n\r\nWhat are your thoughts on https://github.com/mingrammer/diagrams/pull/438, also, which looks to be solving the same issues?",
      "@chadfurman \r\nAbout #438 I already review and test with all the available example on the website (which took a lot of time). The fix I suggest solve the main bugs I found. So far nobody move....\r\nI already built a pip package with this changes and a couple of other PR that are still pending. \r\nIf you are interested I can share it but as it's not the official version you will not have any upgrade and I don't think I will take time to maintain (except for my needs) so you will use it at your own risk (so far nobody get hurt using it! ðŸ˜€)\r\n",
      "Where are we on this one and/or #438 ? Would love to have this functionality!",
      "@chadfurman @mingrammer I reverted the changes for the Nodes as clusters (aka branded clusters) hope that this will allow you with merging this change that is only related to ordering of the classes, I will then create a follow up PR with the changes that allows for using Nodes as Clusters.",
      "@mingrammer is there a plan to get this merged?",
      "just found this project recently. really need the ability to have edges between Clusters rather than just nodes. ",
      "It takes years (at least 2), and I am doubt there is something blocks all related PR merge.\r\nHope to have these features.",
      "Please resolve the conflicts from master :)",
      "Hey,\nIt has been a while since I created this PR but I will try to look over it and address the comments.",
      "@mingrammer Could you please review and merge this one? This is a very cool feature",
      "Would be awesome to get this feature.",
      "Is this review still ongoing ? The ability of linking clusters would be a game changer to link different scales together",
      "@LaTrissTitude Thanks for raising it again, I got a bit frustrated with this project after so many years, but I had a bit of time, so I decided to update the PR.\r\nI hope @mingrammer or another maintainer will give it some attention. Over the years, this PR got a lot of similar responses, so I hope this time it will be reviewed and merged, and once that happens, I could contribute the PR that allows for Nodes to act as clusters, which will allow linking.",
      "Bump!\r\nFor both reasons - branding clusters with service icons, and connecting clusters.",
      "To be fair, at this point, we might just have to use dan's fork while\r\nwaiting for a merge ðŸ˜…\r\n\r\nLe sam. 2 dÃ©c. 2023, 11:49, Ivan Voras ***@***.***> a Ã©crit :\r\n\r\n> Bump!\r\n> For both reasons - branding clusters with service icons, and connecting\r\n> clusters.\r\n>\r\n> â€”\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/mingrammer/diagrams/pull/439#issuecomment-1837118196>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ABHYJKDPWHUB2XODNYSI2T3YHMBTLAVCNFSM4WP7JAYKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCOBTG4YTCOBRHE3A>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "I've basically just been using mermaid\r\n\r\nOn Sat, Dec 2, 2023, 06:12 Triss Jacquiot ***@***.***> wrote:\r\n\r\n> To be fair, at this point, we might just have to use dan's fork while\r\n> waiting for a merge ðŸ˜…\r\n>\r\n> Le sam. 2 dÃ©c. 2023, 11:49, Ivan Voras ***@***.***> a Ã©crit :\r\n>\r\n> > Bump!\r\n> > For both reasons - branding clusters with service icons, and connecting\r\n> > clusters.\r\n> >\r\n> > â€”\r\n> > Reply to this email directly, view it on GitHub\r\n> > <https://github.com/mingrammer/diagrams/pull/439#issuecomment-1837118196>,\r\n>\r\n> > or unsubscribe\r\n> > <\r\n> https://github.com/notifications/unsubscribe-auth/ABHYJKDPWHUB2XODNYSI2T3YHMBTLAVCNFSM4WP7JAYKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCOBTG4YTCOBRHE3A>\r\n>\r\n> > .\r\n> > You are receiving this because you were mentioned.Message ID:\r\n> > ***@***.***>\r\n> >\r\n>\r\n> â€”\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/mingrammer/diagrams/pull/439#issuecomment-1837122683>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAE3CIXJC3UDJP2OXQ336O3YHMEKBAVCNFSM4WP7JAYKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TCOBTG4YTEMRWHAZQ>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "I forked diagrams with cluster changes and the fixes I reported + other features, the lib is actively used by me for the web version and if you really want to use cluster as node give it a try.\r\n\r\nhttps://github.com/diagrams-web/diagrams-xtd\r\n\r\nI can push release or publish it on pypi if people use it."
    ],
    "num_comments": 27,
    "diff": "diff --git a/diagrams/__init__.py b/diagrams/__init__.py\nindex 6fe2a8024..1ade79536 100644\n--- a/diagrams/__init__.py\n+++ b/diagrams/__init__.py\n@@ -1,555 +1,6 @@\n-import contextvars\n-import os\n-import uuid\n-from pathlib import Path\n-from typing import Dict, List, Optional, Union\n-\n-from graphviz import Digraph\n-\n-# Global contexts for a diagrams and a cluster.\n-#\n-# These global contexts are for letting the clusters and nodes know\n-# where context they are belong to. So the all clusters and nodes does\n-# not need to specify the current diagrams or cluster via parameters.\n-__diagram = contextvars.ContextVar(\"diagrams\")\n-__cluster = contextvars.ContextVar(\"cluster\")\n-\n-\n-def getdiagram() -> \"Diagram\":\n-    try:\n-        return __diagram.get()\n-    except LookupError:\n-        return None\n-\n-\n-def setdiagram(diagram: \"Diagram\"):\n-    __diagram.set(diagram)\n-\n-\n-def getcluster() -> \"Cluster\":\n-    try:\n-        return __cluster.get()\n-    except LookupError:\n-        return None\n-\n-\n-def setcluster(cluster: \"Cluster\"):\n-    __cluster.set(cluster)\n-\n-\n-class Diagram:\n-    __directions = (\"TB\", \"BT\", \"LR\", \"RL\")\n-    __curvestyles = (\"ortho\", \"curved\")\n-    __outformats = (\"png\", \"jpg\", \"svg\", \"pdf\", \"dot\")\n-\n-    # fmt: off\n-    _default_graph_attrs = {\n-        \"pad\": \"2.0\",\n-        \"splines\": \"ortho\",\n-        \"nodesep\": \"0.60\",\n-        \"ranksep\": \"0.75\",\n-        \"fontname\": \"Sans-Serif\",\n-        \"fontsize\": \"15\",\n-        \"fontcolor\": \"#2D3436\",\n-    }\n-    _default_node_attrs = {\n-        \"shape\": \"box\",\n-        \"style\": \"rounded\",\n-        \"fixedsize\": \"true\",\n-        \"width\": \"1.4\",\n-        \"height\": \"1.4\",\n-        \"labelloc\": \"b\",\n-        # imagepos attribute is not backward compatible\n-        # TODO: check graphviz version to see if \"imagepos\" is available >= 2.40\n-        # https://github.com/xflr6/graphviz/blob/master/graphviz/backend.py#L248\n-        # \"imagepos\": \"tc\",\n-        \"imagescale\": \"true\",\n-        \"fontname\": \"Sans-Serif\",\n-        \"fontsize\": \"13\",\n-        \"fontcolor\": \"#2D3436\",\n-    }\n-    _default_edge_attrs = {\n-        \"color\": \"#7B8894\",\n-    }\n-\n-    # fmt: on\n-\n-    # TODO: Label position option\n-    # TODO: Save directory option (filename + directory?)\n-    def __init__(\n-        self,\n-        name: str = \"\",\n-        filename: str = \"\",\n-        direction: str = \"LR\",\n-        curvestyle: str = \"ortho\",\n-        outformat: str = \"png\",\n-        autolabel: bool = False,\n-        show: bool = True,\n-        strict: bool = False,\n-        graph_attr: Optional[dict] = None,\n-        node_attr: Optional[dict] = None,\n-        edge_attr: Optional[dict] = None,\n-    ):\n-        \"\"\"Diagram represents a global diagrams context.\n-\n-        :param name: Diagram name. It will be used for output filename if the\n-            filename isn't given.\n-        :param filename: The output filename, without the extension (.png).\n-            If not given, it will be generated from the name.\n-        :param direction: Data flow direction. Default is 'left to right'.\n-        :param curvestyle: Curve bending style. One of \"ortho\" or \"curved\".\n-        :param outformat: Output file format. Default is 'png'.\n-        :param show: Open generated image after save if true, just only save otherwise.\n-        :param graph_attr: Provide graph_attr dot config attributes.\n-        :param node_attr: Provide node_attr dot config attributes.\n-        :param edge_attr: Provide edge_attr dot config attributes.\n-        :param strict: Rendering should merge multi-edges.\n-        \"\"\"\n-        if graph_attr is None:\n-            graph_attr = {}\n-        if node_attr is None:\n-            node_attr = {}\n-        if edge_attr is None:\n-            edge_attr = {}\n-        self.name = name\n-        if not name and not filename:\n-            filename = \"diagrams_image\"\n-        elif not filename:\n-            filename = \"_\".join(self.name.split()).lower()\n-        self.filename = filename\n-        self.dot = Digraph(self.name, filename=self.filename, strict=strict)\n-\n-        # Set attributes.\n-        for k, v in self._default_graph_attrs.items():\n-            self.dot.graph_attr[k] = v\n-        self.dot.graph_attr[\"label\"] = self.name\n-        for k, v in self._default_node_attrs.items():\n-            self.dot.node_attr[k] = v\n-        for k, v in self._default_edge_attrs.items():\n-            self.dot.edge_attr[k] = v\n-\n-        if not self._validate_direction(direction):\n-            raise ValueError(f'\"{direction}\" is not a valid direction')\n-        self.dot.graph_attr[\"rankdir\"] = direction\n-\n-        if not self._validate_curvestyle(curvestyle):\n-            raise ValueError(f'\"{curvestyle}\" is not a valid curvestyle')\n-        self.dot.graph_attr[\"splines\"] = curvestyle\n-\n-        if isinstance(outformat, list):\n-            for one_format in outformat:\n-                if not self._validate_outformat(one_format):\n-                    raise ValueError(f'\"{one_format}\" is not a valid output format')\n-        else:\n-            if not self._validate_outformat(outformat):\n-                raise ValueError(f'\"{outformat}\" is not a valid output format')\n-        self.outformat = outformat\n-\n-        # Merge passed in attributes\n-        self.dot.graph_attr.update(graph_attr)\n-        self.dot.node_attr.update(node_attr)\n-        self.dot.edge_attr.update(edge_attr)\n-\n-        self.show = show\n-        self.autolabel = autolabel\n-\n-    def __str__(self) -> str:\n-        return str(self.dot)\n-\n-    def __enter__(self):\n-        setdiagram(self)\n-        return self\n-\n-    def __exit__(self, exc_type, exc_value, traceback):\n-        self.render()\n-        # Remove the graphviz file leaving only the image.\n-        os.remove(self.filename)\n-        setdiagram(None)\n-\n-    def _repr_png_(self):\n-        return self.dot.pipe(format=\"png\")\n-\n-    def _validate_direction(self, direction: str) -> bool:\n-        return direction.upper() in self.__directions\n-\n-    def _validate_curvestyle(self, curvestyle: str) -> bool:\n-        return curvestyle.lower() in self.__curvestyles\n-\n-    def _validate_outformat(self, outformat: str) -> bool:\n-        return outformat.lower() in self.__outformats\n-\n-    def node(self, nodeid: str, label: str, **attrs) -> None:\n-        \"\"\"Create a new node.\"\"\"\n-        self.dot.node(nodeid, label=label, **attrs)\n-\n-    def connect(self, node: \"Node\", node2: \"Node\", edge: \"Edge\") -> None:\n-        \"\"\"Connect the two Nodes.\"\"\"\n-        self.dot.edge(node.nodeid, node2.nodeid, **edge.attrs)\n-\n-    def subgraph(self, dot: Digraph) -> None:\n-        \"\"\"Create a subgraph for clustering\"\"\"\n-        self.dot.subgraph(dot)\n-\n-    def render(self) -> None:\n-        if isinstance(self.outformat, list):\n-            for one_format in self.outformat:\n-                self.dot.render(format=one_format, view=self.show, quiet=True)\n-        else:\n-            self.dot.render(format=self.outformat, view=self.show, quiet=True)\n-\n-\n-class Cluster:\n-    __directions = (\"TB\", \"BT\", \"LR\", \"RL\")\n-    __bgcolors = (\"#E5F5FD\", \"#EBF3E7\", \"#ECE8F6\", \"#FDF7E3\")\n-\n-    # fmt: off\n-    _default_graph_attrs = {\n-        \"shape\": \"box\",\n-        \"style\": \"rounded\",\n-        \"labeljust\": \"l\",\n-        \"pencolor\": \"#AEB6BE\",\n-        \"fontname\": \"Sans-Serif\",\n-        \"fontsize\": \"12\",\n-    }\n-\n-    # fmt: on\n-\n-    # FIXME:\n-    #  Cluster direction does not work now. Graphviz couldn't render\n-    #  correctly for a subgraph that has a different rank direction.\n-    def __init__(\n-        self,\n-        label: str = \"cluster\",\n-        direction: str = \"LR\",\n-        graph_attr: Optional[dict] = None,\n-    ):\n-        \"\"\"Cluster represents a cluster context.\n-\n-        :param label: Cluster label.\n-        :param direction: Data flow direction. Default is 'left to right'.\n-        :param graph_attr: Provide graph_attr dot config attributes.\n-        \"\"\"\n-        if graph_attr is None:\n-            graph_attr = {}\n-        self.label = label\n-        self.name = \"cluster_\" + self.label\n-\n-        self.dot = Digraph(self.name)\n-\n-        # Set attributes.\n-        for k, v in self._default_graph_attrs.items():\n-            self.dot.graph_attr[k] = v\n-        self.dot.graph_attr[\"label\"] = self.label\n-\n-        if not self._validate_direction(direction):\n-            raise ValueError(f'\"{direction}\" is not a valid direction')\n-        self.dot.graph_attr[\"rankdir\"] = direction\n-\n-        # Node must be belong to a diagrams.\n-        self._diagram = getdiagram()\n-        if self._diagram is None:\n-            raise EnvironmentError(\"Global diagrams context not set up\")\n-        self._parent = getcluster()\n-\n-        # Set cluster depth for distinguishing the background color\n-        self.depth = self._parent.depth + 1 if self._parent else 0\n-        coloridx = self.depth % len(self.__bgcolors)\n-        self.dot.graph_attr[\"bgcolor\"] = self.__bgcolors[coloridx]\n-\n-        # Merge passed in attributes\n-        self.dot.graph_attr.update(graph_attr)\n-\n-    def __enter__(self):\n-        setcluster(self)\n-        return self\n-\n-    def __exit__(self, exc_type, exc_value, traceback):\n-        if self._parent:\n-            self._parent.subgraph(self.dot)\n-        else:\n-            self._diagram.subgraph(self.dot)\n-        setcluster(self._parent)\n-\n-    def _validate_direction(self, direction: str) -> bool:\n-        return direction.upper() in self.__directions\n-\n-    def node(self, nodeid: str, label: str, **attrs) -> None:\n-        \"\"\"Create a new node in the cluster.\"\"\"\n-        self.dot.node(nodeid, label=label, **attrs)\n-\n-    def subgraph(self, dot: Digraph) -> None:\n-        self.dot.subgraph(dot)\n-\n-\n-class Node:\n-    \"\"\"Node represents a node for a specific backend service.\"\"\"\n-\n-    _provider = None\n-    _type = None\n-\n-    _icon_dir = None\n-    _icon = None\n-\n-    _height = 1.9\n-\n-    def __init__(self, label: str = \"\", *, nodeid: str = None, **attrs: Dict):\n-        \"\"\"Node represents a system component.\n-\n-        :param label: Node label.\n-        \"\"\"\n-        # Generates an ID for identifying a node, unless specified\n-        self._id = nodeid or self._rand_id()\n-        self.label = label\n-\n-        # Node must be belong to a diagrams.\n-        self._diagram = getdiagram()\n-        if self._diagram is None:\n-            raise EnvironmentError(\"Global diagrams context not set up\")\n-\n-        if self._diagram.autolabel:\n-            prefix = self.__class__.__name__\n-            if self.label:\n-                self.label = prefix + \"\\n\" + self.label\n-            else:\n-                self.label = prefix\n-\n-        # fmt: off\n-        # If a node has an icon, increase the height slightly to avoid\n-        # that label being spanned between icon image and white space.\n-        # Increase the height by the number of new lines included in the label.\n-        padding = 0.4 * (self.label.count('\\n'))\n-        self._attrs = {\n-            \"shape\": \"none\",\n-            \"height\": str(self._height + padding),\n-            \"image\": self._load_icon(),\n-        } if self._icon else {}\n-\n-        # fmt: on\n-        self._attrs.update(attrs)\n-\n-        self._cluster = getcluster()\n-\n-        # If a node is in the cluster context, add it to cluster.\n-        if self._cluster:\n-            self._cluster.node(self._id, self.label, **self._attrs)\n-        else:\n-            self._diagram.node(self._id, self.label, **self._attrs)\n-\n-    def __repr__(self):\n-        _name = self.__class__.__name__\n-        return f\"<{self._provider}.{self._type}.{_name}>\"\n-\n-    def __sub__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n-        \"\"\"Implement Self - Node, Self - [Nodes] and Self - Edge.\"\"\"\n-        if isinstance(other, list):\n-            for node in other:\n-                self.connect(node, Edge(self))\n-            return other\n-        elif isinstance(other, Node):\n-            return self.connect(other, Edge(self))\n-        else:\n-            other.node = self\n-            return other\n-\n-    def __rsub__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n-        \"\"\"Called for [Nodes] and [Edges] - Self because list don't have __sub__ operators.\"\"\"\n-        for o in other:\n-            if isinstance(o, Edge):\n-                o.connect(self)\n-            else:\n-                o.connect(self, Edge(self))\n-        return self\n-\n-    def __rshift__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n-        \"\"\"Implements Self >> Node, Self >> [Nodes] and Self Edge.\"\"\"\n-        if isinstance(other, list):\n-            for node in other:\n-                self.connect(node, Edge(self, forward=True))\n-            return other\n-        elif isinstance(other, Node):\n-            return self.connect(other, Edge(self, forward=True))\n-        else:\n-            other.forward = True\n-            other.node = self\n-            return other\n-\n-    def __lshift__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n-        \"\"\"Implements Self << Node, Self << [Nodes] and Self << Edge.\"\"\"\n-        if isinstance(other, list):\n-            for node in other:\n-                self.connect(node, Edge(self, reverse=True))\n-            return other\n-        elif isinstance(other, Node):\n-            return self.connect(other, Edge(self, reverse=True))\n-        else:\n-            other.reverse = True\n-            return other.connect(self)\n-\n-    def __rrshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n-        \"\"\"Called for [Nodes] and [Edges] >> Self because list don't have __rshift__ operators.\"\"\"\n-        for o in other:\n-            if isinstance(o, Edge):\n-                o.forward = True\n-                o.connect(self)\n-            else:\n-                o.connect(self, Edge(self, forward=True))\n-        return self\n-\n-    def __rlshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n-        \"\"\"Called for [Nodes] << Self because list of Nodes don't have __lshift__ operators.\"\"\"\n-        for o in other:\n-            if isinstance(o, Edge):\n-                o.reverse = True\n-                o.connect(self)\n-            else:\n-                o.connect(self, Edge(self, reverse=True))\n-        return self\n-\n-    @property\n-    def nodeid(self):\n-        return self._id\n-\n-    # TODO: option for adding flow description to the connection edge\n-    def connect(self, node: \"Node\", edge: \"Edge\"):\n-        \"\"\"Connect to other node.\n-\n-        :param node: Other node instance.\n-        :param edge: Type of the edge.\n-        :return: Connected node.\n-        \"\"\"\n-        if not isinstance(node, Node):\n-            ValueError(f\"{node} is not a valid Node\")\n-        if not isinstance(edge, Edge):\n-            ValueError(f\"{edge} is not a valid Edge\")\n-        # An edge must be added on the global diagrams, not a cluster.\n-        self._diagram.connect(self, node, edge)\n-        return node\n-\n-    @staticmethod\n-    def _rand_id():\n-        return uuid.uuid4().hex\n-\n-    def _load_icon(self):\n-        basedir = Path(os.path.abspath(os.path.dirname(__file__)))\n-        return os.path.join(basedir.parent, self._icon_dir, self._icon)\n-\n-\n-class Edge:\n-    \"\"\"Edge represents an edge between two nodes.\"\"\"\n-\n-    _default_edge_attrs = {\n-        \"fontcolor\": \"#2D3436\",\n-        \"fontname\": \"Sans-Serif\",\n-        \"fontsize\": \"13\",\n-    }\n-\n-    def __init__(\n-        self,\n-        node: \"Node\" = None,\n-        forward: bool = False,\n-        reverse: bool = False,\n-        label: str = \"\",\n-        color: str = \"\",\n-        style: str = \"\",\n-        **attrs: Dict,\n-    ):\n-        \"\"\"Edge represents an edge between two nodes.\n-\n-        :param node: Parent node.\n-        :param forward: Points forward.\n-        :param reverse: Points backward.\n-        :param label: Edge label.\n-        :param color: Edge color.\n-        :param style: Edge style.\n-        :param attrs: Other edge attributes\n-        \"\"\"\n-        if node is not None:\n-            assert isinstance(node, Node)\n-\n-        self.node = node\n-        self.forward = forward\n-        self.reverse = reverse\n-\n-        self._attrs = {}\n-\n-        # Set attributes.\n-        for k, v in self._default_edge_attrs.items():\n-            self._attrs[k] = v\n-\n-        if label:\n-            # Graphviz complaining about using label for edges, so replace it with xlabel.\n-            # Update: xlabel option causes the misaligned label position: https://github.com/mingrammer/diagrams/issues/83\n-            self._attrs[\"label\"] = label\n-        if color:\n-            self._attrs[\"color\"] = color\n-        if style:\n-            self._attrs[\"style\"] = style\n-        self._attrs.update(attrs)\n-\n-    def __sub__(self, other: Union[\"Node\", \"Edge\", List[\"Node\"]]):\n-        \"\"\"Implement Self - Node or Edge and Self - [Nodes]\"\"\"\n-        return self.connect(other)\n-\n-    def __rsub__(self, other: Union[List[\"Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n-        \"\"\"Called for [Nodes] or [Edges] - Self because list don't have __sub__ operators.\"\"\"\n-        return self.append(other)\n-\n-    def __rshift__(self, other: Union[\"Node\", \"Edge\", List[\"Node\"]]):\n-        \"\"\"Implements Self >> Node or Edge and Self >> [Nodes].\"\"\"\n-        self.forward = True\n-        return self.connect(other)\n-\n-    def __lshift__(self, other: Union[\"Node\", \"Edge\", List[\"Node\"]]):\n-        \"\"\"Implements Self << Node or Edge and Self << [Nodes].\"\"\"\n-        self.reverse = True\n-        return self.connect(other)\n-\n-    def __rrshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n-        \"\"\"Called for [Nodes] or [Edges] >> Self because list of Edges don't have __rshift__ operators.\"\"\"\n-        return self.append(other, forward=True)\n-\n-    def __rlshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n-        \"\"\"Called for [Nodes] or [Edges] << Self because list of Edges don't have __lshift__ operators.\"\"\"\n-        return self.append(other, reverse=True)\n-\n-    def append(self, other: Union[List[\"Node\"], List[\"Edge\"]], forward=None, reverse=None) -> List[\"Edge\"]:\n-        result = []\n-        for o in other:\n-            if isinstance(o, Edge):\n-                o.forward = forward if forward else o.forward\n-                o.reverse = forward if forward else o.reverse\n-                self._attrs = o.attrs.copy()\n-                result.append(o)\n-            else:\n-                result.append(Edge(o, forward=forward, reverse=reverse, **self._attrs))\n-        return result\n-\n-    def connect(self, other: Union[\"Node\", \"Edge\", List[\"Node\"]]):\n-        if isinstance(other, list):\n-            for node in other:\n-                self.node.connect(node, self)\n-            return other\n-        elif isinstance(other, Edge):\n-            self._attrs = other._attrs.copy()\n-            return self\n-        else:\n-            if self.node is not None:\n-                return self.node.connect(other, self)\n-            else:\n-                self.node = other\n-                return self\n-\n-    @property\n-    def attrs(self) -> Dict:\n-        if self.forward and self.reverse:\n-            direction = \"both\"\n-        elif self.forward:\n-            direction = \"forward\"\n-        elif self.reverse:\n-            direction = \"back\"\n-        else:\n-            direction = \"none\"\n-        return {**self._attrs, \"dir\": direction}\n-\n-\n+from .diagram import Diagram\n+from .cluster import Cluster\n+from .node import Node\n+from .edge import Edge\n+from .utils import getdiagram, setdiagram, getcluster, setcluster\n Group = Cluster\ndiff --git a/diagrams/cluster.py b/diagrams/cluster.py\nnew file mode 100644\nindex 000000000..e9fd6241a\n--- /dev/null\n+++ b/diagrams/cluster.py\n@@ -0,0 +1,74 @@\n+from graphviz import Digraph\n+from typing import Optional\n+from .context import Context\n+from .utils import setcluster, getcluster, getdiagram\n+\n+class Cluster(Context):\n+    __bgcolors = (\"#E5F5FD\", \"#EBF3E7\", \"#ECE8F6\", \"#FDF7E3\")\n+\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"rounded\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#AEB6BE\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+\n+    # fmt: on\n+\n+    # FIXME:\n+    #  Cluster direction does not work now. Graphviz couldn't render\n+    #  correctly for a subgraph that has a different rank direction.\n+    def __init__(\n+        self,\n+        label: str = \"cluster\",\n+        direction: str = \"LR\",\n+        graph_attr: Optional[dict] = None,\n+    ):\n+        \"\"\"Cluster represents a cluster context.\n+\n+        :param label: Cluster label.\n+        :param direction: Data flow direction. Default is 'left to right'.\n+        :param graph_attr: Provide graph_attr dot config attributes.\n+        \"\"\"\n+        if graph_attr is None:\n+            graph_attr = {}\n+        self.label = label\n+        super().__init__(\"cluster_\" + self.label)\n+\n+        # Set attributes.\n+        for k, v in self._default_graph_attrs.items():\n+            self.dot.graph_attr[k] = v\n+        self.dot.graph_attr[\"label\"] = self.label\n+\n+        if not self._validate_direction(direction):\n+            raise ValueError(f'\"{direction}\" is not a valid direction')\n+        self.dot.graph_attr[\"rankdir\"] = direction\n+\n+        # Node must be belong to a diagrams.\n+        self._diagram = getdiagram()\n+        if self._diagram is None:\n+            raise EnvironmentError(\"Global diagrams context not set up\")\n+        self._parent = getcluster()\n+\n+        # Set cluster depth for distinguishing the background color\n+        self.depth = self._parent.depth + 1 if self._parent else 0\n+        coloridx = self.depth % len(self.__bgcolors)\n+        self.dot.graph_attr[\"bgcolor\"] = self.__bgcolors[coloridx]\n+\n+        # Merge passed in attributes\n+        self.dot.graph_attr.update(graph_attr)\n+\n+    def __enter__(self):\n+        setcluster(self)\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        if self._parent:\n+            self._parent.subgraph(self.dot)\n+        else:\n+            self._diagram.subgraph(self.dot)\n+        setcluster(self._parent)\n+        \n\\ No newline at end of file\ndiff --git a/diagrams/context.py b/diagrams/context.py\nnew file mode 100644\nindex 000000000..8677a5e85\n--- /dev/null\n+++ b/diagrams/context.py\n@@ -0,0 +1,27 @@\n+from graphviz import Digraph\n+from abc import ABC, abstractmethod\n+\n+class Context(ABC):\n+    __directions = (\"TB\", \"BT\", \"LR\", \"RL\")\n+\n+    def __init__(self, name, **kwargs):\n+        self.name = name\n+        self.dot = Digraph(self.name, **kwargs)\n+\n+    @abstractmethod\n+    def __enter__(self):\n+        pass\n+\n+    @abstractmethod\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        pass\n+\n+    def _validate_direction(self, direction: str) -> bool:\n+        return direction.upper() in self.__directions\n+\n+    def node(self, nodeid: str, label: str, **attrs) -> None:\n+        \"\"\"Create a new node in the cluster.\"\"\"\n+        self.dot.node(nodeid, label=label, **attrs)\n+\n+    def subgraph(self, dot: Digraph) -> None:\n+        self.dot.subgraph(dot)\n\\ No newline at end of file\ndiff --git a/diagrams/diagram.py b/diagrams/diagram.py\nnew file mode 100644\nindex 000000000..a304f9ea1\n--- /dev/null\n+++ b/diagrams/diagram.py\n@@ -0,0 +1,149 @@\n+import os\n+from .node import Node\n+from .edge import Edge\n+from typing import Optional\n+from graphviz import Digraph\n+from .context import Context\n+from .utils import setdiagram\n+\n+\n+class Diagram(Context):\n+    __curvestyles = (\"ortho\", \"curved\")\n+    __outformats = (\"png\", \"jpg\", \"svg\", \"pdf\", \"dot\")\n+\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"pad\": \"2.0\",\n+        \"splines\": \"ortho\",\n+        \"nodesep\": \"0.60\",\n+        \"ranksep\": \"0.75\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"15\",\n+        \"fontcolor\": \"#2D3436\",\n+    }\n+    _default_node_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"rounded\",\n+        \"fixedsize\": \"true\",\n+        \"width\": \"1.4\",\n+        \"height\": \"1.4\",\n+        \"labelloc\": \"b\",\n+        # imagepos attribute is not backward compatible\n+        # TODO: check graphviz version to see if \"imagepos\" is available >= 2.40\n+        # https://github.com/xflr6/graphviz/blob/master/graphviz/backend.py#L248\n+        # \"imagepos\": \"tc\",\n+        \"imagescale\": \"true\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"13\",\n+        \"fontcolor\": \"#2D3436\",\n+    }\n+    _default_edge_attrs = {\n+        \"color\": \"#7B8894\",\n+    }\n+\n+    # fmt: on\n+\n+    # TODO: Label position option\n+    # TODO: Save directory option (filename + directory?)\n+    def __init__(\n+        self,\n+        name: str = \"\",\n+        filename: str = \"\",\n+        direction: str = \"LR\",\n+        curvestyle: str = \"ortho\",\n+        outformats: list = [\"png\"],\n+        autolabel: bool = False,\n+        show: bool = True,\n+        strict: bool = False,\n+        graph_attr: Optional[dict] = None,\n+        node_attr: Optional[dict] = None,\n+        edge_attr: Optional[dict] = None,\n+    ):\n+        \"\"\"Diagram represents a global diagrams context.\n+\n+        :param name: Diagram name. It will be used for output filename if the\n+            filename isn't given.\n+        :param filename: The output filename, without the extension (.png).\n+            If not given, it will be generated from the name.\n+        :param direction: Data flow direction. Default is 'left to right'.\n+        :param curvestyle: Curve bending style. One of \"ortho\" or \"curved\".\n+        :param outformats: List of output file formats. Default is ['png'].\n+        :param show: Open generated image after save if true, just only save otherwise.\n+        :param graph_attr: Provide graph_attr dot config attributes.\n+        :param node_attr: Provide node_attr dot config attributes.\n+        :param edge_attr: Provide edge_attr dot config attributes.\n+        :param strict: Rendering should merge multi-edges.\n+        \"\"\"\n+        if graph_attr is None:\n+            graph_attr = {}\n+        if node_attr is None:\n+            node_attr = {}\n+        if edge_attr is None:\n+            edge_attr = {}\n+        \n+        if not name and not filename:\n+            filename = \"diagrams_image\"\n+        elif not filename:\n+            filename = \"_\".join(name.split()).lower()\n+        self.filename = filename\n+        super().__init__(name, filename=self.filename, strict=strict)\n+\n+        # Set attributes.\n+        for k, v in self._default_graph_attrs.items():\n+            self.dot.graph_attr[k] = v\n+        self.dot.graph_attr[\"label\"] = self.name\n+        for k, v in self._default_node_attrs.items():\n+            self.dot.node_attr[k] = v\n+        for k, v in self._default_edge_attrs.items():\n+            self.dot.edge_attr[k] = v\n+\n+        if not self._validate_direction(direction):\n+            raise ValueError(f'\"{direction}\" is not a valid direction')\n+        self.dot.graph_attr[\"rankdir\"] = direction\n+\n+        if not self._validate_curvestyle(curvestyle):\n+            raise ValueError(f'\"{curvestyle}\" is not a valid curvestyle')\n+        self.dot.graph_attr[\"splines\"] = curvestyle\n+\n+        for outformat in outformats:\n+            if not self._validate_outformat(outformat):\n+                raise ValueError(f'\"{outformat}\" is not a valid output format')\n+        self.outformats = outformats\n+\n+        # Merge passed in attributes\n+        self.dot.graph_attr.update(graph_attr)\n+        self.dot.node_attr.update(node_attr)\n+        self.dot.edge_attr.update(edge_attr)\n+\n+        self.show = show\n+        self.autolabel = autolabel\n+\n+    def __str__(self) -> str:\n+        return str(self.dot)\n+\n+    def __enter__(self):\n+        setdiagram(self)\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        self.render()\n+        # Remove the graphviz file leaving only the image.\n+        os.remove(self.filename)\n+        setdiagram(None)\n+\n+    def _repr_png_(self):\n+        return self.dot.pipe(format=\"png\")\n+\n+    def _validate_curvestyle(self, curvestyle: str) -> bool:\n+        return curvestyle.lower() in self.__curvestyles\n+\n+    def _validate_outformat(self, outformat: str) -> bool:\n+        return outformat.lower() in self.__outformats\n+\n+    def connect(self, node: \"Node\", node2: \"Node\", edge: \"Edge\") -> None:\n+        \"\"\"Connect the two Nodes.\"\"\"\n+        self.dot.edge(node.nodeid, node2.nodeid, **edge.attrs)\n+\n+    def render(self) -> None:\n+        for outformat in self.outformats:\n+            self.dot.render(format=outformat, view=self.show, quiet=True)\ndiff --git a/diagrams/edge.py b/diagrams/edge.py\nnew file mode 100644\nindex 000000000..b4fc88e8e\n--- /dev/null\n+++ b/diagrams/edge.py\n@@ -0,0 +1,119 @@\n+from . import node\n+from typing import List, Union, Dict\n+\n+class Edge:\n+    \"\"\"Edge represents an edge between two nodes.\"\"\"\n+\n+    _default_edge_attrs = {\n+        \"fontcolor\": \"#2D3436\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"13\",\n+    }\n+\n+    def __init__(\n+        self,\n+        n: \"node.Node\" = None,\n+        forward: bool = False,\n+        reverse: bool = False,\n+        label: str = \"\",\n+        color: str = \"\",\n+        style: str = \"\",\n+        **attrs: Dict,\n+    ):\n+        \"\"\"Edge represents an edge between two nodes.\n+\n+        :param n: Parent node.\n+        :param forward: Points forward.\n+        :param reverse: Points backward.\n+        :param label: Edge label.\n+        :param color: Edge color.\n+        :param style: Edge style.\n+        :param attrs: Other edge attributes\n+        \"\"\"\n+        if n is not None:\n+            assert isinstance(n, node.Node)\n+\n+        self.node = n\n+        self.forward = forward\n+        self.reverse = reverse\n+\n+        self._attrs = {}\n+\n+        # Set attributes.\n+        for k, v in self._default_edge_attrs.items():\n+            self._attrs[k] = v\n+\n+        if label:\n+            # Graphviz complaining about using label for edges, so replace it with xlabel.\n+            # Update: xlabel option causes the misaligned label position: https://github.com/mingrammer/diagrams/issues/83\n+            self._attrs[\"label\"] = label\n+        if color:\n+            self._attrs[\"color\"] = color\n+        if style:\n+            self._attrs[\"style\"] = style\n+        self._attrs.update(attrs)\n+\n+    def __sub__(self, other: Union[\"node.Node\", \"Edge\", List[\"node.Node\"]]):\n+        \"\"\"Implement Self - Node or Edge and Self - [Nodes]\"\"\"\n+        return self.connect(other)\n+\n+    def __rsub__(self, other: Union[List[\"node.Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n+        \"\"\"Called for [Nodes] or [Edges] - Self because list don't have __sub__ operators.\"\"\"\n+        return self.append(other)\n+\n+    def __rshift__(self, other: Union[\"node.Node\", \"Edge\", List[\"node.Node\"]]):\n+        \"\"\"Implements Self >> Node or Edge and Self >> [Nodes].\"\"\"\n+        self.forward = True\n+        return self.connect(other)\n+\n+    def __lshift__(self, other: Union[\"node.Node\", \"Edge\", List[\"node.Node\"]]):\n+        \"\"\"Implements Self << Node or Edge and Self << [Nodes].\"\"\"\n+        self.reverse = True\n+        return self.connect(other)\n+\n+    def __rrshift__(self, other: Union[List[\"node.Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n+        \"\"\"Called for [Nodes] or [Edges] >> Self because list of Edges don't have __rshift__ operators.\"\"\"\n+        return self.append(other, forward=True)\n+\n+    def __rlshift__(self, other: Union[List[\"node.Node\"], List[\"Edge\"]]) -> List[\"Edge\"]:\n+        \"\"\"Called for [Nodes] or [Edges] << Self because list of Edges don't have __lshift__ operators.\"\"\"\n+        return self.append(other, reverse=True)\n+\n+    def append(self, other: Union[List[\"node.Node\"], List[\"Edge\"]], forward=None, reverse=None) -> List[\"Edge\"]:\n+        result = []\n+        for o in other:\n+            if isinstance(o, Edge):\n+                o.forward = forward if forward else o.forward\n+                o.reverse = forward if forward else o.reverse\n+                self._attrs = o.attrs.copy()\n+                result.append(o)\n+            else:\n+                result.append(Edge(o, forward=forward, reverse=reverse, **self._attrs))\n+        return result\n+\n+    def connect(self, other: Union[\"node.Node\", \"Edge\", List[\"node.Node\"]]):\n+        if isinstance(other, list):\n+            for n in other:\n+                self.node.connect(n, self)\n+            return other\n+        elif isinstance(other, Edge):\n+            self._attrs = other._attrs.copy()\n+            return self\n+        else:\n+            if self.node is not None:\n+                return self.node.connect(other, self)\n+            else:\n+                self.node = other\n+                return self\n+\n+    @property\n+    def attrs(self) -> Dict:\n+        if self.forward and self.reverse:\n+            direction = \"both\"\n+        elif self.forward:\n+            direction = \"forward\"\n+        elif self.reverse:\n+            direction = \"back\"\n+        else:\n+            direction = \"none\"\n+        return {**self._attrs, \"dir\": direction}\n\\ No newline at end of file\ndiff --git a/diagrams/node.py b/diagrams/node.py\nnew file mode 100644\nindex 000000000..83f015ab9\n--- /dev/null\n+++ b/diagrams/node.py\n@@ -0,0 +1,158 @@\n+import os\n+import uuid\n+from pathlib import Path\n+from typing import List, Union, Dict\n+from .edge import Edge\n+from .utils import getcluster, getdiagram\n+\n+class Node:\n+    \"\"\"Node represents a node for a specific backend service.\"\"\"\n+\n+    _provider = None\n+    _type = None\n+\n+    _icon_dir = None\n+    _icon = None\n+\n+    _height = 1.9\n+\n+    def __init__(self, label: str = \"\", *, nodeid: str = None, **attrs: Dict):\n+        \"\"\"Node represents a system component.\n+\n+        :param label: Node label.\n+        \"\"\"\n+        # Generates an ID for identifying a node, unless specified\n+        self._id = nodeid or self._rand_id()\n+        self.label = label\n+\n+        # Node must be belong to a diagrams.\n+        self._diagram = getdiagram()\n+        if self._diagram is None:\n+            raise EnvironmentError(\"Global diagrams context not set up\")\n+\n+        if self._diagram.autolabel:\n+            prefix = self.__class__.__name__\n+            if self.label:\n+                self.label = prefix + \"\\n\" + self.label\n+            else:\n+                self.label = prefix\n+\n+        # fmt: off\n+        # If a node has an icon, increase the height slightly to avoid\n+        # that label being spanned between icon image and white space.\n+        # Increase the height by the number of new lines included in the label.\n+        padding = 0.4 * (self.label.count('\\n'))\n+        self._attrs = {\n+            \"shape\": \"none\",\n+            \"height\": str(self._height + padding),\n+            \"image\": self._load_icon(),\n+        } if self._icon else {}\n+\n+        # fmt: on\n+        self._attrs.update(attrs)\n+\n+        self._cluster = getcluster()\n+\n+        # If a node is in the cluster context, add it to cluster.\n+        if self._cluster:\n+            self._cluster.node(self._id, self.label, **self._attrs)\n+        else:\n+            self._diagram.node(self._id, self.label, **self._attrs)\n+\n+    def __repr__(self):\n+        _name = self.__class__.__name__\n+        return f\"<{self._provider}.{self._type}.{_name}>\"\n+\n+    def __sub__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n+        \"\"\"Implement Self - Node, Self - [Nodes] and Self - Edge.\"\"\"\n+        if isinstance(other, list):\n+            for node in other:\n+                self.connect(node, Edge(self))\n+            return other\n+        elif isinstance(other, Node):\n+            return self.connect(other, Edge(self))\n+        else:\n+            other.node = self\n+            return other\n+\n+    def __rsub__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n+        \"\"\"Called for [Nodes] and [Edges] - Self because list don't have __sub__ operators.\"\"\"\n+        for o in other:\n+            if isinstance(o, Edge):\n+                o.connect(self)\n+            else:\n+                o.connect(self, Edge(self))\n+        return self\n+\n+    def __rshift__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n+        \"\"\"Implements Self >> Node, Self >> [Nodes] and Self Edge.\"\"\"\n+        if isinstance(other, list):\n+            for node in other:\n+                self.connect(node, Edge(self, forward=True))\n+            return other\n+        elif isinstance(other, Node):\n+            return self.connect(other, Edge(self, forward=True))\n+        else:\n+            other.forward = True\n+            other.node = self\n+            return other\n+\n+    def __lshift__(self, other: Union[\"Node\", List[\"Node\"], \"Edge\"]):\n+        \"\"\"Implements Self << Node, Self << [Nodes] and Self << Edge.\"\"\"\n+        if isinstance(other, list):\n+            for node in other:\n+                self.connect(node, Edge(self, reverse=True))\n+            return other\n+        elif isinstance(other, Node):\n+            return self.connect(other, Edge(self, reverse=True))\n+        else:\n+            other.reverse = True\n+            return other.connect(self)\n+\n+    def __rrshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n+        \"\"\"Called for [Nodes] and [Edges] >> Self because list don't have __rshift__ operators.\"\"\"\n+        for o in other:\n+            if isinstance(o, Edge):\n+                o.forward = True\n+                o.connect(self)\n+            else:\n+                o.connect(self, Edge(self, forward=True))\n+        return self\n+\n+    def __rlshift__(self, other: Union[List[\"Node\"], List[\"Edge\"]]):\n+        \"\"\"Called for [Nodes] << Self because list of Nodes don't have __lshift__ operators.\"\"\"\n+        for o in other:\n+            if isinstance(o, Edge):\n+                o.reverse = True\n+                o.connect(self)\n+            else:\n+                o.connect(self, Edge(self, reverse=True))\n+        return self\n+\n+    @property\n+    def nodeid(self):\n+        return self._id\n+\n+    # TODO: option for adding flow description to the connection edge\n+    def connect(self, node: \"Node\", edge: \"Edge\"):\n+        \"\"\"Connect to other node.\n+\n+        :param node: Other node instance.\n+        :param edge: Type of the edge.\n+        :return: Connected node.\n+        \"\"\"\n+        if not isinstance(node, Node):\n+            ValueError(f\"{node} is not a valid Node\")\n+        if not isinstance(edge, Edge):\n+            ValueError(f\"{edge} is not a valid Edge\")\n+        # An edge must be added on the global diagrams, not a cluster.\n+        self._diagram.connect(self, node, edge)\n+        return node\n+\n+    @staticmethod\n+    def _rand_id():\n+        return uuid.uuid4().hex\n+\n+    def _load_icon(self):\n+        basedir = Path(os.path.abspath(os.path.dirname(__file__)))\n+        return os.path.join(basedir.parent, self._icon_dir, self._icon)\ndiff --git a/diagrams/utils.py b/diagrams/utils.py\nnew file mode 100644\nindex 000000000..706508f21\n--- /dev/null\n+++ b/diagrams/utils.py\n@@ -0,0 +1,31 @@\n+import contextvars\n+\n+# Global contexts for a diagrams and a cluster.\n+#\n+# These global contexts are for letting the clusters and nodes know\n+# where context they are belong to. So the all clusters and nodes does\n+# not need to specify the current diagrams or cluster via parameters.\n+__diagram = contextvars.ContextVar(\"diagrams\")\n+__cluster = contextvars.ContextVar(\"cluster\")\n+\n+\n+def getdiagram() -> \"Diagram\":\n+    try:\n+        return __diagram.get()\n+    except LookupError:\n+        return None\n+\n+\n+def setdiagram(diagram: \"Diagram\"):\n+    __diagram.set(diagram)\n+\n+\n+def getcluster() -> \"Cluster\":\n+    try:\n+        return __cluster.get()\n+    except LookupError:\n+        return None\n+\n+\n+def setcluster(cluster: \"Cluster\"):\n+    __cluster.set(cluster)\n\\ No newline at end of file\ndiff --git a/poetry.lock b/poetry.lock\nindex 3c271de36..5432b5d1d 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1,15 +1,14 @@\n-# This file is automatically @generated by Poetry and should not be changed by hand.\n+# This file is automatically @generated by Poetry 1.5.1 and should not be changed by hand.\n \n [[package]]\n name = \"astroid\"\n-version = \"2.9.0\"\n+version = \"2.11.7\"\n description = \"An abstract syntax tree for Python with inference support.\"\n-category = \"dev\"\n optional = false\n-python-versions = \"~=3.6\"\n+python-versions = \">=3.6.2\"\n files = [\n-    {file = \"astroid-2.9.0-py3-none-any.whl\", hash = \"sha256:776ca0b748b4ad69c00bfe0fff38fa2d21c338e12c84aa9715ee0d473c422778\"},\n-    {file = \"astroid-2.9.0.tar.gz\", hash = \"sha256:5939cf55de24b92bda00345d4d0659d01b3c7dafb5055165c330bc7c568ba273\"},\n+    {file = \"astroid-2.11.7-py3-none-any.whl\", hash = \"sha256:86b0a340a512c65abf4368b80252754cda17c02cdbbd3f587dddf98112233e7b\"},\n+    {file = \"astroid-2.11.7.tar.gz\", hash = \"sha256:bb24615c77f4837c707669d16907331374ae8a964650a66999da3f5ca68dc946\"},\n ]\n \n [package.dependencies]\n@@ -17,13 +16,12 @@ lazy-object-proxy = \">=1.4.0\"\n setuptools = \">=20.0\"\n typed-ast = {version = \">=1.4.0,<2.0\", markers = \"implementation_name == \\\"cpython\\\" and python_version < \\\"3.8\\\"\"}\n typing-extensions = {version = \">=3.10\", markers = \"python_version < \\\"3.10\\\"\"}\n-wrapt = \">=1.11,<1.14\"\n+wrapt = \">=1.11,<2\"\n \n [[package]]\n name = \"black\"\n version = \"22.12.0\"\n description = \"The uncompromising code formatter.\"\n-category = \"dev\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n@@ -58,14 +56,13 @@ uvloop = [\"uvloop (>=0.15.2)\"]\n \n [[package]]\n name = \"click\"\n-version = \"8.1.3\"\n+version = \"8.1.6\"\n description = \"Composable command line interface toolkit\"\n-category = \"dev\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"click-8.1.3-py3-none-any.whl\", hash = \"sha256:bb4d8133cb15a609f44e8213d9b391b0809795062913b383c62be0ee95b1db48\"},\n-    {file = \"click-8.1.3.tar.gz\", hash = \"sha256:7682dc8afb30297001674575ea00d1814d808d6a36af415a82bd481d37ba7b8e\"},\n+    {file = \"click-8.1.6-py3-none-any.whl\", hash = \"sha256:fa244bb30b3b5ee2cae3da8f55c9e5e0c0e86093306301fb418eb9dc40fbded5\"},\n+    {file = \"click-8.1.6.tar.gz\", hash = \"sha256:48ee849951919527a045bfe3bf7baa8a959c423134e1a5b98c05c20ba75a1cbd\"},\n ]\n \n [package.dependencies]\n@@ -74,26 +71,38 @@ importlib-metadata = {version = \"*\", markers = \"python_version < \\\"3.8\\\"\"}\n \n [[package]]\n name = \"colorama\"\n-version = \"0.4.3\"\n+version = \"0.4.6\"\n description = \"Cross-platform colored terminal text.\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n+python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\n files = [\n-    {file = \"colorama-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:7d73d2a99753107a36ac6b455ee49046802e59d9d076ef8e47b61499fa29afff\"},\n-    {file = \"colorama-0.4.3.tar.gz\", hash = \"sha256:e96da0d330793e2cb9485e9ddfd918d456036c7149416295932478192f4436a1\"},\n+    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n+    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n ]\n \n+[[package]]\n+name = \"dill\"\n+version = \"0.3.7\"\n+description = \"serialize all of Python\"\n+optional = false\n+python-versions = \">=3.7\"\n+files = [\n+    {file = \"dill-0.3.7-py3-none-any.whl\", hash = \"sha256:76b122c08ef4ce2eedcd4d1abd8e641114bfc6c2867f49f3c41facf65bf19f5e\"},\n+    {file = \"dill-0.3.7.tar.gz\", hash = \"sha256:cc1c8b182eb3013e24bd475ff2e9295af86c1a38eb1aff128dac8962a9ce3c03\"},\n+]\n+\n+[package.extras]\n+graph = [\"objgraph (>=1.7.2)\"]\n+\n [[package]]\n name = \"exceptiongroup\"\n-version = \"1.1.0\"\n+version = \"1.1.2\"\n description = \"Backport of PEP 654 (exception groups)\"\n-category = \"dev\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"exceptiongroup-1.1.0-py3-none-any.whl\", hash = \"sha256:327cbda3da756e2de031a3107b81ab7b3770a602c4d16ca618298c526f4bec1e\"},\n-    {file = \"exceptiongroup-1.1.0.tar.gz\", hash = \"sha256:bcb67d800a4497e1b404c2dd44fca47d3b7a5e5433dbab67f96c1a685cdfdf23\"},\n+    {file = \"exceptiongroup-1.1.2-py3-none-any.whl\", hash = \"sha256:e346e69d186172ca7cf029c8c1d16235aa0e04035e5750b4b95039e65204328f\"},\n+    {file = \"exceptiongroup-1.1.2.tar.gz\", hash = \"sha256:12c3e887d6485d16943a309616de20ae5582633e0a2eda17f4e10fd61c1e8af5\"},\n ]\n \n [package.extras]\n@@ -103,7 +112,6 @@ test = [\"pytest (>=6)\"]\n name = \"graphviz\"\n version = \"0.20.1\"\n description = \"Simple Python interface for Graphviz\"\n-category = \"main\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n@@ -116,42 +124,52 @@ dev = [\"flake8\", \"pep8-naming\", \"tox (>=3)\", \"twine\", \"wheel\"]\n docs = [\"sphinx (>=5)\", \"sphinx-autodoc-typehints\", \"sphinx-rtd-theme\"]\n test = [\"coverage\", \"mock (>=4)\", \"pytest (>=7)\", \"pytest-cov\", \"pytest-mock (>=3)\"]\n \n+[[package]]\n+name = \"html3\"\n+version = \"1.18\"\n+description = \"simple, elegant HTML, XHTML and XML generation for python3 (based on html)\"\n+optional = false\n+python-versions = \">=3.5\"\n+files = [\n+    {file = \"html3-1.18-py3-none-any.whl\", hash = \"sha256:83756c2af7e63b36e334c7581726ca955d054d7992948dea6abf57ec256c3a60\"},\n+    {file = \"html3-1.18.tar.gz\", hash = \"sha256:b30e61398e6a7b424b2b0bcd9a3021830b37fdb3b231235b74defec010a4f587\"},\n+]\n+\n [[package]]\n name = \"importlib-metadata\"\n-version = \"1.5.0\"\n+version = \"6.7.0\"\n description = \"Read metadata from Python packages\"\n-category = \"dev\"\n optional = false\n-python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"importlib_metadata-1.5.0-py2.py3-none-any.whl\", hash = \"sha256:b97607a1a18a5100839aec1dc26a1ea17ee0d93b20b0f008d80a5a050afb200b\"},\n-    {file = \"importlib_metadata-1.5.0.tar.gz\", hash = \"sha256:06f5b3a99029c7134207dd882428a66992a9de2bef7c2b699b5641f9886c3302\"},\n+    {file = \"importlib_metadata-6.7.0-py3-none-any.whl\", hash = \"sha256:cb52082e659e97afc5dac71e79de97d8681de3aa07ff18578330904a9d18e5b5\"},\n+    {file = \"importlib_metadata-6.7.0.tar.gz\", hash = \"sha256:1aaf550d4f73e5d6783e7acb77aec43d49da8017410afae93822cc9cca98c4d4\"},\n ]\n \n [package.dependencies]\n+typing-extensions = {version = \">=3.6.4\", markers = \"python_version < \\\"3.8\\\"\"}\n zipp = \">=0.5\"\n \n [package.extras]\n-docs = [\"rst.linker\", \"sphinx\"]\n-testing = [\"importlib-resources\", \"packaging\"]\n+docs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\n+perf = [\"ipython\"]\n+testing = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"packaging\", \"pyfakefs\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf (>=0.9.2)\", \"pytest-ruff\"]\n \n [[package]]\n name = \"iniconfig\"\n-version = \"1.1.1\"\n-description = \"iniconfig: brain-dead simple config-ini parsing\"\n-category = \"dev\"\n+version = \"2.0.0\"\n+description = \"brain-dead simple config-ini parsing\"\n optional = false\n-python-versions = \"*\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"iniconfig-1.1.1-py2.py3-none-any.whl\", hash = \"sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3\"},\n-    {file = \"iniconfig-1.1.1.tar.gz\", hash = \"sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32\"},\n+    {file = \"iniconfig-2.0.0-py3-none-any.whl\", hash = \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"},\n+    {file = \"iniconfig-2.0.0.tar.gz\", hash = \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\"},\n ]\n \n [[package]]\n name = \"isort\"\n version = \"4.3.21\"\n description = \"A Python utility / library to sort Python imports.\"\n-category = \"dev\"\n optional = false\n python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n files = [\n@@ -169,7 +187,6 @@ xdg-home = [\"appdirs (>=1.4.0)\"]\n name = \"jinja2\"\n version = \"3.1.2\"\n description = \"A very fast and expressive template engine.\"\n-category = \"main\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n@@ -185,191 +202,179 @@ i18n = [\"Babel (>=2.7)\"]\n \n [[package]]\n name = \"lazy-object-proxy\"\n-version = \"1.4.3\"\n+version = \"1.9.0\"\n description = \"A fast and thorough lazy object proxy.\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"lazy-object-proxy-1.4.3.tar.gz\", hash = \"sha256:f3900e8a5de27447acbf900b4750b0ddfd7ec1ea7fbaf11dfa911141bc522af0\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-macosx_10_13_x86_64.whl\", hash = \"sha256:a2238e9d1bb71a56cd710611a1614d1194dc10a175c1e08d75e1a7bcc250d442\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-win32.whl\", hash = \"sha256:efa1909120ce98bbb3777e8b6f92237f5d5c8ea6758efea36a473e1d38f7d3e4\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-win_amd64.whl\", hash = \"sha256:4677f594e474c91da97f489fea5b7daa17b5517190899cf213697e48d3902f5a\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:0c4b206227a8097f05c4dbdd323c50edf81f15db3b8dc064d08c62d37e1a504d\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-manylinux1_x86_64.whl\", hash = \"sha256:d945239a5639b3ff35b70a88c5f2f491913eb94871780ebfabb2568bd58afc5a\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-win32.whl\", hash = \"sha256:9651375199045a358eb6741df3e02a651e0330be090b3bc79f6d0de31a80ec3e\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-win_amd64.whl\", hash = \"sha256:eba7011090323c1dadf18b3b689845fd96a61ba0a1dfbd7f24b921398affc357\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:48dab84ebd4831077b150572aec802f303117c8cc5c871e182447281ebf3ac50\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-win32.whl\", hash = \"sha256:ca0a928a3ddbc5725be2dd1cf895ec0a254798915fb3a36af0964a0a4149e3db\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-win_amd64.whl\", hash = \"sha256:194d092e6f246b906e8f70884e620e459fc54db3259e60cf69a4d66c3fda3449\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:97bb5884f6f1cdce0099f86b907aa41c970c3c672ac8b9c8352789e103cf3156\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-win32.whl\", hash = \"sha256:cb2c7c57005a6804ab66f106ceb8482da55f5314b7fcb06551db1edae4ad1531\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8d859b89baf8ef7f8bc6b00aa20316483d67f0b1cbf422f5b4dc56701c8f2ffb\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-macosx_10_13_x86_64.whl\", hash = \"sha256:1be7e4c9f96948003609aa6c974ae59830a6baecc5376c25c92d7d697e684c08\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:d74bb8693bf9cf75ac3b47a54d716bbb1a92648d5f781fc799347cfc95952383\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-win32.whl\", hash = \"sha256:9b15f3f4c0f35727d3a0fba4b770b3c4ebbb1fa907dbcc046a1d2799f3edd142\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9254f4358b9b541e3441b007a0ea0764b9d056afdeafc1a5569eee1cc6c1b9ea\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:a6ae12d08c0bf9909ce12385803a543bfe99b95fe01e752536a60af2b7797c62\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-win32.whl\", hash = \"sha256:5541cada25cd173702dbd99f8e22434105456314462326f06dba3e180f203dfd\"},\n-    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:59f79fef100b09564bc2df42ea2d8d21a64fdcda64979c0fa3db7bdaabaf6239\"},\n+    {file = \"lazy-object-proxy-1.9.0.tar.gz\", hash = \"sha256:659fb5809fa4629b8a1ac5106f669cfc7bef26fbb389dda53b3e010d1ac4ebae\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b40387277b0ed2d0602b8293b94d7257e17d1479e257b4de114ea11a8cb7f2d7\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e8c6cfb338b133fbdbc5cfaa10fe3c6aeea827db80c978dbd13bc9dd8526b7d4\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:721532711daa7db0d8b779b0bb0318fa87af1c10d7fe5e52ef30f8eff254d0cd\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:66a3de4a3ec06cd8af3f61b8e1ec67614fbb7c995d02fa224813cb7afefee701\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:1aa3de4088c89a1b69f8ec0dcc169aa725b0ff017899ac568fe44ddc1396df46\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-win32.whl\", hash = \"sha256:f0705c376533ed2a9e5e97aacdbfe04cecd71e0aa84c7c0595d02ef93b6e4455\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:ea806fd4c37bf7e7ad82537b0757999264d5f70c45468447bb2b91afdbe73a6e\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:946d27deaff6cf8452ed0dba83ba38839a87f4f7a9732e8f9fd4107b21e6ff07\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:79a31b086e7e68b24b99b23d57723ef7e2c6d81ed21007b6281ebcd1688acb0a\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f699ac1c768270c9e384e4cbd268d6e67aebcfae6cd623b4d7c3bfde5a35db59\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:bfb38f9ffb53b942f2b5954e0f610f1e721ccebe9cce9025a38c8ccf4a5183a4\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:189bbd5d41ae7a498397287c408617fe5c48633e7755287b21d741f7db2706a9\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-win32.whl\", hash = \"sha256:81fc4d08b062b535d95c9ea70dbe8a335c45c04029878e62d744bdced5141586\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:f2457189d8257dd41ae9b434ba33298aec198e30adf2dcdaaa3a28b9994f6adb\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:d9e25ef10a39e8afe59a5c348a4dbf29b4868ab76269f81ce1674494e2565a6e\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cbf9b082426036e19c6924a9ce90c740a9861e2bdc27a4834fd0a910742ac1e8\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f5fa4a61ce2438267163891961cfd5e32ec97a2c444e5b842d574251ade27d2\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:8fa02eaab317b1e9e03f69aab1f91e120e7899b392c4fc19807a8278a07a97e8\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:e7c21c95cae3c05c14aafffe2865bbd5e377cfc1348c4f7751d9dc9a48ca4bda\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-win32.whl\", hash = \"sha256:f12ad7126ae0c98d601a7ee504c1122bcef553d1d5e0c3bfa77b16b3968d2734\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:edd20c5a55acb67c7ed471fa2b5fb66cb17f61430b7a6b9c3b4a1e40293b1671\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2d0daa332786cf3bb49e10dc6a17a52f6a8f9601b4cf5c295a4f85854d61de63\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9cd077f3d04a58e83d04b20e334f678c2b0ff9879b9375ed107d5d07ff160171\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:660c94ea760b3ce47d1855a30984c78327500493d396eac4dfd8bd82041b22be\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:212774e4dfa851e74d393a2370871e174d7ff0ebc980907723bb67d25c8a7c30\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:f0117049dd1d5635bbff65444496c90e0baa48ea405125c088e93d9cf4525b11\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-win32.whl\", hash = \"sha256:0a891e4e41b54fd5b8313b96399f8b0e173bbbfc03c7631f01efbe29bb0bcf82\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:9990d8e71b9f6488e91ad25f322898c136b008d87bf852ff65391b004da5e17b\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:9e7551208b2aded9c1447453ee366f1c4070602b3d932ace044715d89666899b\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5f83ac4d83ef0ab017683d715ed356e30dd48a93746309c8f3517e1287523ef4\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7322c3d6f1766d4ef1e51a465f47955f1e8123caee67dd641e67d539a534d006\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:18b78ec83edbbeb69efdc0e9c1cb41a3b1b1ed11ddd8ded602464c3fc6020494\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:09763491ce220c0299688940f8dc2c5d05fd1f45af1e42e636b2e8b2303e4382\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-win32.whl\", hash = \"sha256:9090d8e53235aa280fc9239a86ae3ea8ac58eff66a705fa6aa2ec4968b95c821\"},\n+    {file = \"lazy_object_proxy-1.9.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:db1c1722726f47e10e0b5fdbf15ac3b8adb58c091d12b3ab713965795036985f\"},\n ]\n \n [[package]]\n name = \"markupsafe\"\n-version = \"2.0.1\"\n+version = \"2.1.3\"\n description = \"Safely add untrusted strings to HTML/XML markup.\"\n-category = \"main\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d8446c54dc28c01e5a2dbac5a25f071f6653e6e40f3a8818e8b45d790fe6ef53\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:36bc903cbb393720fad60fc28c10de6acf10dc6cc883f3e24ee4012371399a38\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2d7d807855b419fc2ed3e631034685db6079889a1f01d5d9dac950f764da3dad\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:add36cb2dbb8b736611303cd3bfcee00afd96471b09cda130da3581cbdc56a6d\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:168cd0a3642de83558a5153c8bd34f175a9a6e7f6dc6384b9655d2697312a646\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:4dc8f9fb58f7364b63fd9f85013b780ef83c11857ae79f2feda41e270468dd9b\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:20dca64a3ef2d6e4d5d615a3fd418ad3bde77a47ec8a23d984a12b5b4c74491a\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:cdfba22ea2f0029c9261a4bd07e830a8da012291fbe44dc794e488b6c9bb353a\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-win32.whl\", hash = \"sha256:99df47edb6bda1249d3e80fdabb1dab8c08ef3975f69aed437cb69d0a5de1e28\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:e0f138900af21926a02425cf736db95be9f4af72ba1bb21453432a07f6082134\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f9081981fe268bd86831e5c75f7de206ef275defcb82bc70740ae6dc507aee51\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:0955295dd5eec6cb6cc2fe1698f4c6d84af2e92de33fbcac4111913cd100a6ff\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:0446679737af14f45767963a1a9ef7620189912317d095f2d9ffa183a4d25d2b\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:f826e31d18b516f653fe296d967d700fddad5901ae07c622bb3705955e1faa94\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:fa130dd50c57d53368c9d59395cb5526eda596d3ffe36666cd81a44d56e48872\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:905fec760bd2fa1388bb5b489ee8ee5f7291d692638ea5f67982d968366bef9f\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf5d821ffabf0ef3533c39c518f3357b171a1651c1ff6827325e4489b0e46c3c\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:0d4b31cc67ab36e3392bbf3862cfbadac3db12bdd8b02a2731f509ed5b829724\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:baa1a4e8f868845af802979fcdbf0bb11f94f1cb7ced4c4b8a351bb60d108145\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:deb993cacb280823246a026e3b2d81c493c53de6acfd5e6bfe31ab3402bb37dd\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:63f3268ba69ace99cab4e3e3b5840b03340efed0948ab8f78d2fd87ee5442a4f\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d206346619592c6200148b01a2142798c989edcb9c896f9ac9722a99d4e77e6\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-win32.whl\", hash = \"sha256:6c4ca60fa24e85fe25b912b01e62cb969d69a23a5d5867682dd3e80b5b02581d\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:b2f4bf27480f5e5e8ce285a8c8fd176c0b03e93dcc6646477d4630e83440c6a9\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:0717a7390a68be14b8c793ba258e075c6f4ca819f15edfc2a3a027c823718567\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:6557b31b5e2c9ddf0de32a691f2312a32f77cd7681d8af66c2692efdbef84c18\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:49e3ceeabbfb9d66c3aef5af3a60cc43b85c33df25ce03d0031a608b0a8b2e3f\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:d7f9850398e85aba693bb640262d3611788b1f29a79f0c93c565694658f4071f\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:6a7fae0dd14cf60ad5ff42baa2e95727c3d81ded453457771d02b7d2b3f9c0c2\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:b7f2d075102dc8c794cbde1947378051c4e5180d52d276987b8d28a3bd58c17d\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e9936f0b261d4df76ad22f8fee3ae83b60d7c3e871292cd42f40b81b70afae85\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:2a7d351cbd8cfeb19ca00de495e224dea7e7d919659c2841bbb7f420ad03e2d6\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:60bf42e36abfaf9aff1f50f52644b336d4f0a3fd6d8a60ca0d054ac9f713a864\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:d6c7ebd4e944c85e2c3421e612a7057a2f48d478d79e61800d81468a8d842207\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:f0567c4dc99f264f49fe27da5f735f414c4e7e7dd850cfd8e69f0862d7c74ea9\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:89c687013cb1cd489a0f0ac24febe8c7a666e6e221b783e53ac50ebf68e45d86\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-win32.whl\", hash = \"sha256:a30e67a65b53ea0a5e62fe23682cfe22712e01f453b95233b25502f7c61cb415\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:611d1ad9a4288cf3e3c16014564df047fe08410e628f89805e475368bd304914\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:5bb28c636d87e840583ee3adeb78172efc47c8b26127267f54a9c0ec251d41a9\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:be98f628055368795d818ebf93da628541e10b75b41c559fdf36d104c5787066\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:1d609f577dc6e1aa17d746f8bd3c31aa4d258f4070d61b2aa5c4166c1539de35\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:7d91275b0245b1da4d4cfa07e0faedd5b0812efc15b702576d103293e252af1b\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:01a9b8ea66f1658938f65b93a85ebe8bc016e6769611be228d797c9d998dd298\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:47ab1e7b91c098ab893b828deafa1203de86d0bc6ab587b160f78fe6c4011f75\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:97383d78eb34da7e1fa37dd273c20ad4320929af65d156e35a5e2d89566d9dfb\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6fcf051089389abe060c9cd7caa212c707e58153afa2c649f00346ce6d260f1b\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:5855f8438a7d1d458206a2466bf82b0f104a3724bf96a1c781ab731e4201731a\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:3dd007d54ee88b46be476e293f48c85048603f5f516008bee124ddd891398ed6\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:aca6377c0cb8a8253e493c6b451565ac77e98c2951c45f913e0b52facdcff83f\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:04635854b943835a6ea959e948d19dcd311762c5c0c6e1f0e16ee57022669194\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:6300b8454aa6930a24b9618fbb54b5a68135092bc666f7b06901f897fa5c2fee\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-win32.whl\", hash = \"sha256:023cb26ec21ece8dc3907c0e8320058b2e0cb3c55cf9564da612bc325bed5e64\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:984d76483eb32f1bcb536dc27e4ad56bba4baa70be32fa87152832cdd9db0833\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:2ef54abee730b502252bcdf31b10dacb0a416229b72c18b19e24a4509f273d26\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3c112550557578c26af18a1ccc9e090bfe03832ae994343cfdacd287db6a6ae7\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:53edb4da6925ad13c07b6d26c2a852bd81e364f95301c66e930ab2aef5b5ddd8\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:f5653a225f31e113b152e56f154ccbe59eeb1c7487b39b9d9f9cdb58e6c79dc5\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:4efca8f86c54b22348a5467704e3fec767b2db12fc39c6d963168ab1d3fc9135\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:ab3ef638ace319fa26553db0624c4699e31a28bb2a835c5faca8f8acf6a5a902\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:f8ba0e8349a38d3001fae7eadded3f6606f0da5d748ee53cc1dab1d6527b9509\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c47adbc92fc1bb2b3274c4b3a43ae0e4573d9fbff4f54cd484555edbf030baf1\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:37205cac2a79194e3750b0af2a5720d95f786a55ce7df90c3af697bfa100eaac\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:1f2ade76b9903f39aa442b4aadd2177decb66525062db244b35d71d0ee8599b6\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:4296f2b1ce8c86a6aea78613c34bb1a672ea0e3de9c6ba08a960efe0b0a09047\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:9f02365d4e99430a12647f09b6cc8bab61a6564363f313126f775eb4f6ef798e\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5b6d930f030f8ed98e3e6c98ffa0652bdb82601e7a016ec2ab5d7ff23baa78d1\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-win32.whl\", hash = \"sha256:10f82115e21dc0dfec9ab5c0223652f7197feb168c940f3ef61563fc2d6beb74\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:693ce3f9e70a6cf7d2fb9e6c9d8b204b6b39897a2c4a1aa65728d5ac97dcc1d8\"},\n-    {file = \"MarkupSafe-2.0.1.tar.gz\", hash = \"sha256:594c67807fb16238b30c44bdf74f36c02cdf22d1c8cda91ef8a0ed8dabf5620a\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-win32.whl\", hash = \"sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431\"},\n+    {file = \"MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-win32.whl\", hash = \"sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb\"},\n+    {file = \"MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-win32.whl\", hash = \"sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0\"},\n+    {file = \"MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-win32.whl\", hash = \"sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5\"},\n+    {file = \"MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-win32.whl\", hash = \"sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2\"},\n+    {file = \"MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba\"},\n+    {file = \"MarkupSafe-2.1.3.tar.gz\", hash = \"sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad\"},\n ]\n \n [[package]]\n name = \"mccabe\"\n-version = \"0.6.1\"\n+version = \"0.7.0\"\n description = \"McCabe checker, plugin for flake8\"\n-category = \"dev\"\n optional = false\n-python-versions = \"*\"\n+python-versions = \">=3.6\"\n files = [\n-    {file = \"mccabe-0.6.1-py2.py3-none-any.whl\", hash = \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\"},\n-    {file = \"mccabe-0.6.1.tar.gz\", hash = \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"},\n+    {file = \"mccabe-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"},\n+    {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},\n ]\n \n [[package]]\n name = \"mypy-extensions\"\n-version = \"0.4.3\"\n-description = \"Experimental type system extensions for programs checked with the mypy typechecker.\"\n-category = \"dev\"\n+version = \"1.0.0\"\n+description = \"Type system extensions for programs checked with the mypy type checker.\"\n optional = false\n-python-versions = \"*\"\n+python-versions = \">=3.5\"\n files = [\n-    {file = \"mypy_extensions-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\"},\n-    {file = \"mypy_extensions-0.4.3.tar.gz\", hash = \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"},\n+    {file = \"mypy_extensions-1.0.0-py3-none-any.whl\", hash = \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\"},\n+    {file = \"mypy_extensions-1.0.0.tar.gz\", hash = \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"},\n ]\n \n [[package]]\n name = \"packaging\"\n-version = \"20.8\"\n+version = \"23.1\"\n description = \"Core utilities for Python packages\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"packaging-20.8-py2.py3-none-any.whl\", hash = \"sha256:24e0da08660a87484d1602c30bb4902d74816b6985b93de36926f5bc95741858\"},\n-    {file = \"packaging-20.8.tar.gz\", hash = \"sha256:78598185a7008a470d64526a8059de9aaa449238f280fc9eb6b13ba6c4109093\"},\n+    {file = \"packaging-23.1-py3-none-any.whl\", hash = \"sha256:994793af429502c4ea2ebf6bf664629d07c1a9fe974af92966e4b8d2df7edc61\"},\n+    {file = \"packaging-23.1.tar.gz\", hash = \"sha256:a392980d2b6cffa644431898be54b0045151319d1e7ec34f0cfed48767dd334f\"},\n ]\n \n-[package.dependencies]\n-pyparsing = \">=2.0.2\"\n-\n [[package]]\n name = \"pathspec\"\n-version = \"0.10.1\"\n+version = \"0.11.1\"\n description = \"Utility library for gitignore style pattern matching of file paths.\"\n-category = \"dev\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"pathspec-0.10.1-py3-none-any.whl\", hash = \"sha256:46846318467efc4556ccfd27816e004270a9eeeeb4d062ce5e6fc7a87c573f93\"},\n-    {file = \"pathspec-0.10.1.tar.gz\", hash = \"sha256:7ace6161b621d31e7902eb6b5ae148d12cfd23f4a249b9ffb6b9fee12084323d\"},\n+    {file = \"pathspec-0.11.1-py3-none-any.whl\", hash = \"sha256:d8af70af76652554bd134c22b3e8a1cc46ed7d91edcdd721ef1a0c51a84a5293\"},\n+    {file = \"pathspec-0.11.1.tar.gz\", hash = \"sha256:2798de800fa92780e33acca925945e9a19a133b715067cf165b8866c15a31687\"},\n ]\n \n [[package]]\n name = \"platformdirs\"\n-version = \"2.4.0\"\n-description = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\n-category = \"dev\"\n+version = \"3.9.1\"\n+description = \"A small Python package for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"platformdirs-2.4.0-py3-none-any.whl\", hash = \"sha256:8868bbe3c3c80d42f20156f22e7131d2fb321f5bc86a2a345375c6481a67021d\"},\n-    {file = \"platformdirs-2.4.0.tar.gz\", hash = \"sha256:367a5e80b3d04d2428ffa76d33f124cf11e8fff2acdaa9b43d545f5c7d661ef2\"},\n+    {file = \"platformdirs-3.9.1-py3-none-any.whl\", hash = \"sha256:ad8291ae0ae5072f66c16945166cb11c63394c7a3ad1b1bc9828ca3162da8c2f\"},\n+    {file = \"platformdirs-3.9.1.tar.gz\", hash = \"sha256:1b42b450ad933e981d56e59f1b97495428c9bd60698baab9f3eb3d00d5822421\"},\n ]\n \n+[package.dependencies]\n+typing-extensions = {version = \">=4.6.3\", markers = \"python_version < \\\"3.8\\\"\"}\n+\n [package.extras]\n-docs = [\"Sphinx (>=4)\", \"furo (>=2021.7.5b38)\", \"proselint (>=0.10.2)\", \"sphinx-autodoc-typehints (>=1.12)\"]\n-test = [\"appdirs (==1.4.4)\", \"pytest (>=6)\", \"pytest-cov (>=2.7)\", \"pytest-mock (>=3.6)\"]\n+docs = [\"furo (>=2023.5.20)\", \"proselint (>=0.13)\", \"sphinx (>=7.0.1)\", \"sphinx-autodoc-typehints (>=1.23,!=1.23.4)\"]\n+test = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=7.3.1)\", \"pytest-cov (>=4.1)\", \"pytest-mock (>=3.10)\"]\n \n [[package]]\n name = \"pluggy\"\n-version = \"0.13.1\"\n+version = \"1.2.0\"\n description = \"plugin and hook calling mechanisms for python\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"pluggy-0.13.1-py2.py3-none-any.whl\", hash = \"sha256:966c145cd83c96502c3c3868f50408687b38434af77734af1e9ca461a4081d2d\"},\n-    {file = \"pluggy-0.13.1.tar.gz\", hash = \"sha256:15b2acde666561e1298d71b523007ed7364de07029219b604cf808bfa1c765b0\"},\n+    {file = \"pluggy-1.2.0-py3-none-any.whl\", hash = \"sha256:c2fd55a7d7a3863cba1a013e4e2414658b1d07b6bc57b3919e0c63c9abb99849\"},\n+    {file = \"pluggy-1.2.0.tar.gz\", hash = \"sha256:d12f0c4b579b15f5e054301bb226ee85eeeba08ffec228092f8defbaa3a4c4b3\"},\n ]\n \n [package.dependencies]\n@@ -377,50 +382,41 @@ importlib-metadata = {version = \">=0.12\", markers = \"python_version < \\\"3.8\\\"\"}\n \n [package.extras]\n dev = [\"pre-commit\", \"tox\"]\n+testing = [\"pytest\", \"pytest-benchmark\"]\n \n [[package]]\n name = \"pylint\"\n-version = \"2.12.0\"\n+version = \"2.13.9\"\n description = \"python code static checker\"\n-category = \"dev\"\n optional = false\n-python-versions = \"~=3.6\"\n+python-versions = \">=3.6.2\"\n files = [\n-    {file = \"pylint-2.12.0-py3-none-any.whl\", hash = \"sha256:ba00afcb1550bc217bbcb0eb76c10cb8335f7417a3323bdd980c29fb5b59f8d2\"},\n-    {file = \"pylint-2.12.0.tar.gz\", hash = \"sha256:245c87e5da54c35b623c21b35debf87d93b18bf9e0229515cc172d0b83d627cd\"},\n+    {file = \"pylint-2.13.9-py3-none-any.whl\", hash = \"sha256:705c620d388035bdd9ff8b44c5bcdd235bfb49d276d488dd2c8ff1736aa42526\"},\n+    {file = \"pylint-2.13.9.tar.gz\", hash = \"sha256:095567c96e19e6f57b5b907e67d265ff535e588fe26b12b5ebe1fc5645b2c731\"},\n ]\n \n [package.dependencies]\n-astroid = \">=2.9.0,<2.10\"\n+astroid = \">=2.11.5,<=2.12.0-dev0\"\n colorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\n+dill = \">=0.2\"\n isort = \">=4.2.5,<6\"\n-mccabe = \">=0.6,<0.7\"\n+mccabe = \">=0.6,<0.8\"\n platformdirs = \">=2.2.0\"\n-toml = \">=0.9.2\"\n+tomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\n typing-extensions = {version = \">=3.10.0\", markers = \"python_version < \\\"3.10\\\"\"}\n \n-[[package]]\n-name = \"pyparsing\"\n-version = \"2.4.7\"\n-description = \"Python parsing module\"\n-category = \"dev\"\n-optional = false\n-python-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\n-files = [\n-    {file = \"pyparsing-2.4.7-py2.py3-none-any.whl\", hash = \"sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b\"},\n-    {file = \"pyparsing-2.4.7.tar.gz\", hash = \"sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1\"},\n-]\n+[package.extras]\n+testutil = [\"gitpython (>3)\"]\n \n [[package]]\n name = \"pytest\"\n-version = \"7.3.0\"\n+version = \"7.4.0\"\n description = \"pytest: simple powerful testing with Python\"\n-category = \"dev\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"pytest-7.3.0-py3-none-any.whl\", hash = \"sha256:933051fa1bfbd38a21e73c3960cebdad4cf59483ddba7696c48509727e17f201\"},\n-    {file = \"pytest-7.3.0.tar.gz\", hash = \"sha256:58ecc27ebf0ea643ebfdf7fb1249335da761a00c9f955bcd922349bcb68ee57d\"},\n+    {file = \"pytest-7.4.0-py3-none-any.whl\", hash = \"sha256:78bf16451a2eb8c7a2ea98e32dc119fd2aa758f1d5d66dbf0a59d69a3969df32\"},\n+    {file = \"pytest-7.4.0.tar.gz\", hash = \"sha256:b4bf8c45bd59934ed84001ad51e11b4ee40d40a1229d2c79f9c592b0a3f6bd8a\"},\n ]\n \n [package.dependencies]\n@@ -433,13 +429,12 @@ pluggy = \">=0.12,<2.0\"\n tomli = {version = \">=1.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\n \n [package.extras]\n-testing = [\"argcomplete\", \"attrs (>=19.2.0)\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"xmlschema\"]\n+testing = [\"argcomplete\", \"attrs (>=19.2.0)\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"setuptools\", \"xmlschema\"]\n \n [[package]]\n name = \"rope\"\n version = \"0.14.0\"\n description = \"a python refactoring library...\"\n-category = \"dev\"\n optional = false\n python-versions = \"*\"\n files = [\n@@ -450,118 +445,192 @@ files = [\n \n [[package]]\n name = \"setuptools\"\n-version = \"59.6.0\"\n+version = \"68.0.0\"\n description = \"Easily download, build, install, upgrade, and uninstall Python packages\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"setuptools-59.6.0-py3-none-any.whl\", hash = \"sha256:4ce92f1e1f8f01233ee9952c04f6b81d1e02939d6e1b488428154974a4d0783e\"},\n-    {file = \"setuptools-59.6.0.tar.gz\", hash = \"sha256:22c7348c6d2976a52632c67f7ab0cdf40147db7789f9aed18734643fe9cf3373\"},\n+    {file = \"setuptools-68.0.0-py3-none-any.whl\", hash = \"sha256:11e52c67415a381d10d6b462ced9cfb97066179f0e871399e006c4ab101fc85f\"},\n+    {file = \"setuptools-68.0.0.tar.gz\", hash = \"sha256:baf1fdb41c6da4cd2eae722e135500da913332ab3f2f5c7d33af9b492acb5235\"},\n ]\n \n [package.extras]\n-docs = [\"furo\", \"jaraco.packaging (>=8.2)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"rst.linker (>=1.9)\", \"sphinx\", \"sphinx-inline-tabs\", \"sphinxcontrib-towncrier\"]\n-testing = [\"flake8-2020\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"mock\", \"paver\", \"pip (>=19.1)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.0.1)\", \"pytest-flake8\", \"pytest-mypy\", \"pytest-virtualenv (>=1.2.7)\", \"pytest-xdist\", \"sphinx\", \"virtualenv (>=13.0.0)\", \"wheel\"]\n-\n-[[package]]\n-name = \"toml\"\n-version = \"0.10.0\"\n-description = \"Python Library for Tom's Obvious, Minimal Language\"\n-category = \"dev\"\n-optional = false\n-python-versions = \"*\"\n-files = [\n-    {file = \"toml-0.10.0-py2.py3-none-any.whl\", hash = \"sha256:235682dd292d5899d361a811df37e04a8828a5b1da3115886b73cf81ebc9100e\"},\n-    {file = \"toml-0.10.0.tar.gz\", hash = \"sha256:229f81c57791a41d65e399fc06bf0848bab550a9dfd5ed66df18ce5f05e73d5c\"},\n-]\n+docs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-hoverxref (<2)\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (==0.8.3)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\"]\n+testing = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"flake8-2020\", \"ini2toml[lite] (>=0.9)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pip (>=19.1)\", \"pip-run (>=8.8)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf\", \"pytest-ruff\", \"pytest-timeout\", \"pytest-xdist\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel\"]\n+testing-integration = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pytest\", \"pytest-enabler\", \"pytest-xdist\", \"tomli\", \"virtualenv (>=13.0.0)\", \"wheel\"]\n \n [[package]]\n name = \"tomli\"\n-version = \"1.2.3\"\n+version = \"2.0.1\"\n description = \"A lil' TOML parser\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"tomli-1.2.3-py3-none-any.whl\", hash = \"sha256:e3069e4be3ead9668e21cb9b074cd948f7b3113fd9c8bba083f48247aab8b11c\"},\n-    {file = \"tomli-1.2.3.tar.gz\", hash = \"sha256:05b6166bff487dc068d322585c7ea4ef78deed501cc124060e0f238e89a9231f\"},\n+    {file = \"tomli-2.0.1-py3-none-any.whl\", hash = \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\"},\n+    {file = \"tomli-2.0.1.tar.gz\", hash = \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"},\n ]\n \n [[package]]\n name = \"typed-ast\"\n-version = \"1.5.4\"\n+version = \"1.5.5\"\n description = \"a fork of Python 2 and 3 ast modules with type comment support\"\n-category = \"main\"\n optional = false\n python-versions = \">=3.6\"\n files = [\n-    {file = \"typed_ast-1.5.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:669dd0c4167f6f2cd9f57041e03c3c2ebf9063d0757dc89f79ba1daa2bfca9d4\"},\n-    {file = \"typed_ast-1.5.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:211260621ab1cd7324e0798d6be953d00b74e0428382991adfddb352252f1d62\"},\n-    {file = \"typed_ast-1.5.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:267e3f78697a6c00c689c03db4876dd1efdfea2f251a5ad6555e82a26847b4ac\"},\n-    {file = \"typed_ast-1.5.4-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:c542eeda69212fa10a7ada75e668876fdec5f856cd3d06829e6aa64ad17c8dfe\"},\n-    {file = \"typed_ast-1.5.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:a9916d2bb8865f973824fb47436fa45e1ebf2efd920f2b9f99342cb7fab93f72\"},\n-    {file = \"typed_ast-1.5.4-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:79b1e0869db7c830ba6a981d58711c88b6677506e648496b1f64ac7d15633aec\"},\n-    {file = \"typed_ast-1.5.4-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a94d55d142c9265f4ea46fab70977a1944ecae359ae867397757d836ea5a3f47\"},\n-    {file = \"typed_ast-1.5.4-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:183afdf0ec5b1b211724dfef3d2cad2d767cbefac291f24d69b00546c1837fb6\"},\n-    {file = \"typed_ast-1.5.4-cp36-cp36m-win_amd64.whl\", hash = \"sha256:639c5f0b21776605dd6c9dbe592d5228f021404dafd377e2b7ac046b0349b1a1\"},\n-    {file = \"typed_ast-1.5.4-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:cf4afcfac006ece570e32d6fa90ab74a17245b83dfd6655a6f68568098345ff6\"},\n-    {file = \"typed_ast-1.5.4-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed855bbe3eb3715fca349c80174cfcfd699c2f9de574d40527b8429acae23a66\"},\n-    {file = \"typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:6778e1b2f81dfc7bc58e4b259363b83d2e509a65198e85d5700dfae4c6c8ff1c\"},\n-    {file = \"typed_ast-1.5.4-cp37-cp37m-win_amd64.whl\", hash = \"sha256:0261195c2062caf107831e92a76764c81227dae162c4f75192c0d489faf751a2\"},\n-    {file = \"typed_ast-1.5.4-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2efae9db7a8c05ad5547d522e7dbe62c83d838d3906a3716d1478b6c1d61388d\"},\n-    {file = \"typed_ast-1.5.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:7d5d014b7daa8b0bf2eaef684295acae12b036d79f54178b92a2b6a56f92278f\"},\n-    {file = \"typed_ast-1.5.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:370788a63915e82fd6f212865a596a0fefcbb7d408bbbb13dea723d971ed8bdc\"},\n-    {file = \"typed_ast-1.5.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:4e964b4ff86550a7a7d56345c7864b18f403f5bd7380edf44a3c1fb4ee7ac6c6\"},\n-    {file = \"typed_ast-1.5.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:683407d92dc953c8a7347119596f0b0e6c55eb98ebebd9b23437501b28dcbb8e\"},\n-    {file = \"typed_ast-1.5.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:4879da6c9b73443f97e731b617184a596ac1235fe91f98d279a7af36c796da35\"},\n-    {file = \"typed_ast-1.5.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3e123d878ba170397916557d31c8f589951e353cc95fb7f24f6bb69adc1a8a97\"},\n-    {file = \"typed_ast-1.5.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ebd9d7f80ccf7a82ac5f88c521115cc55d84e35bf8b446fcd7836eb6b98929a3\"},\n-    {file = \"typed_ast-1.5.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:98f80dee3c03455e92796b58b98ff6ca0b2a6f652120c263efdba4d6c5e58f72\"},\n-    {file = \"typed_ast-1.5.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:0fdbcf2fef0ca421a3f5912555804296f0b0960f0418c440f5d6d3abb549f3e1\"},\n-    {file = \"typed_ast-1.5.4.tar.gz\", hash = \"sha256:39e21ceb7388e4bb37f4c679d72707ed46c2fbf2a5609b8b8ebc4b067d977df2\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:4bc1efe0ce3ffb74784e06460f01a223ac1f6ab31c6bc0376a21184bf5aabe3b\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:5f7a8c46a8b333f71abd61d7ab9255440d4a588f34a21f126bbfc95f6049e686\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:597fc66b4162f959ee6a96b978c0435bd63791e31e4f410622d19f1686d5e769\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d41b7a686ce653e06c2609075d397ebd5b969d821b9797d029fccd71fdec8e04\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:5fe83a9a44c4ce67c796a1b466c270c1272e176603d5e06f6afbc101a572859d\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:d5c0c112a74c0e5db2c75882a0adf3133adedcdbfd8cf7c9d6ed77365ab90a1d\"},\n+    {file = \"typed_ast-1.5.5-cp310-cp310-win_amd64.whl\", hash = \"sha256:e1a976ed4cc2d71bb073e1b2a250892a6e968ff02aa14c1f40eba4f365ffec02\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c631da9710271cb67b08bd3f3813b7af7f4c69c319b75475436fcab8c3d21bee\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:b445c2abfecab89a932b20bd8261488d574591173d07827c1eda32c457358b18\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cc95ffaaab2be3b25eb938779e43f513e0e538a84dd14a5d844b8f2932593d88\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:61443214d9b4c660dcf4b5307f15c12cb30bdfe9588ce6158f4a005baeb167b2\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:6eb936d107e4d474940469e8ec5b380c9b329b5f08b78282d46baeebd3692dc9\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e48bf27022897577d8479eaed64701ecaf0467182448bd95759883300ca818c8\"},\n+    {file = \"typed_ast-1.5.5-cp311-cp311-win_amd64.whl\", hash = \"sha256:83509f9324011c9a39faaef0922c6f720f9623afe3fe220b6d0b15638247206b\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:44f214394fc1af23ca6d4e9e744804d890045d1643dd7e8229951e0ef39429b5\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:118c1ce46ce58fda78503eae14b7664163aa735b620b64b5b725453696f2a35c\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:be4919b808efa61101456e87f2d4c75b228f4e52618621c77f1ddcaae15904fa\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:fc2b8c4e1bc5cd96c1a823a885e6b158f8451cf6f5530e1829390b4d27d0807f\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:16f7313e0a08c7de57f2998c85e2a69a642e97cb32f87eb65fbfe88381a5e44d\"},\n+    {file = \"typed_ast-1.5.5-cp36-cp36m-win_amd64.whl\", hash = \"sha256:2b946ef8c04f77230489f75b4b5a4a6f24c078be4aed241cfabe9cbf4156e7e5\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:2188bc33d85951ea4ddad55d2b35598b2709d122c11c75cffd529fbc9965508e\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0635900d16ae133cab3b26c607586131269f88266954eb04ec31535c9a12ef1e\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:57bfc3cf35a0f2fdf0a88a3044aafaec1d2f24d8ae8cd87c4f58d615fb5b6311\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:fe58ef6a764de7b4b36edfc8592641f56e69b7163bba9f9c8089838ee596bfb2\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d09d930c2d1d621f717bb217bf1fe2584616febb5138d9b3e8cdd26506c3f6d4\"},\n+    {file = \"typed_ast-1.5.5-cp37-cp37m-win_amd64.whl\", hash = \"sha256:d40c10326893ecab8a80a53039164a224984339b2c32a6baf55ecbd5b1df6431\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:fd946abf3c31fb50eee07451a6aedbfff912fcd13cf357363f5b4e834cc5e71a\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:ed4a1a42df8a3dfb6b40c3d2de109e935949f2f66b19703eafade03173f8f437\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:045f9930a1550d9352464e5149710d56a2aed23a2ffe78946478f7b5416f1ede\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:381eed9c95484ceef5ced626355fdc0765ab51d8553fec08661dce654a935db4\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:bfd39a41c0ef6f31684daff53befddae608f9daf6957140228a08e51f312d7e6\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:8c524eb3024edcc04e288db9541fe1f438f82d281e591c548903d5b77ad1ddd4\"},\n+    {file = \"typed_ast-1.5.5-cp38-cp38-win_amd64.whl\", hash = \"sha256:7f58fabdde8dcbe764cef5e1a7fcb440f2463c1bbbec1cf2a86ca7bc1f95184b\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:042eb665ff6bf020dd2243307d11ed626306b82812aba21836096d229fdc6a10\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:622e4a006472b05cf6ef7f9f2636edc51bda670b7bbffa18d26b255269d3d814\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1efebbbf4604ad1283e963e8915daa240cb4bf5067053cf2f0baadc4d4fb51b8\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f0aefdd66f1784c58f65b502b6cf8b121544680456d1cebbd300c2c813899274\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:48074261a842acf825af1968cd912f6f21357316080ebaca5f19abbb11690c8a\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:429ae404f69dc94b9361bb62291885894b7c6fb4640d561179548c849f8492ba\"},\n+    {file = \"typed_ast-1.5.5-cp39-cp39-win_amd64.whl\", hash = \"sha256:335f22ccb244da2b5c296e6f96b06ee9bed46526db0de38d2f0e5a6597b81155\"},\n+    {file = \"typed_ast-1.5.5.tar.gz\", hash = \"sha256:94282f7a354f36ef5dbce0ef3467ebf6a258e370ab33d5b40c249fa996e590dd\"},\n ]\n \n [[package]]\n name = \"typing-extensions\"\n-version = \"4.1.1\"\n-description = \"Backported and Experimental Type Hints for Python 3.6+\"\n-category = \"dev\"\n+version = \"4.7.1\"\n+description = \"Backported and Experimental Type Hints for Python 3.7+\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"typing_extensions-4.1.1-py3-none-any.whl\", hash = \"sha256:21c85e0fe4b9a155d0799430b0ad741cdce7e359660ccbd8b530613e8df88ce2\"},\n-    {file = \"typing_extensions-4.1.1.tar.gz\", hash = \"sha256:1a9462dcc3347a79b1f1c0271fbe79e844580bb598bafa1ed208b94da3cdcd42\"},\n+    {file = \"typing_extensions-4.7.1-py3-none-any.whl\", hash = \"sha256:440d5dd3af93b060174bf433bccd69b0babc3b15b1a8dca43789fd7f61514b36\"},\n+    {file = \"typing_extensions-4.7.1.tar.gz\", hash = \"sha256:b75ddc264f0ba5615db7ba217daeb99701ad295353c45f9e95963337ceeeffb2\"},\n ]\n \n [[package]]\n name = \"wrapt\"\n-version = \"1.11.2\"\n+version = \"1.15.0\"\n description = \"Module for decorators, wrappers and monkey patching.\"\n-category = \"dev\"\n optional = false\n-python-versions = \"*\"\n+python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7\"\n files = [\n-    {file = \"wrapt-1.11.2.tar.gz\", hash = \"sha256:565a021fd19419476b9362b05eeaa094178de64f8361e44468f9e9d7843901e1\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:ca1cccf838cd28d5a0883b342474c630ac48cac5df0ee6eacc9c7290f76b11c1\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:e826aadda3cae59295b95343db8f3d965fb31059da7de01ee8d1c40a60398b29\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:5fc8e02f5984a55d2c653f5fea93531e9836abbd84342c1d1e17abc4a15084c2\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:96e25c8603a155559231c19c0349245eeb4ac0096fe3c1d0be5c47e075bd4f46\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:40737a081d7497efea35ab9304b829b857f21558acfc7b3272f908d33b0d9d4c\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:f87ec75864c37c4c6cb908d282e1969e79763e0d9becdfe9fe5473b7bb1e5f09\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:1286eb30261894e4c70d124d44b7fd07825340869945c79d05bda53a40caa079\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:493d389a2b63c88ad56cdc35d0fa5752daac56ca755805b1b0c530f785767d5e\"},\n+    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:58d7a75d731e8c63614222bcb21dd992b4ab01a399f1f09dd82af17bbfc2368a\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:21f6d9a0d5b3a207cdf7acf8e58d7d13d463e639f0c7e01d82cdb671e6cb7923\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:ce42618f67741d4697684e501ef02f29e758a123aa2d669e2d964ff734ee00ee\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:41d07d029dd4157ae27beab04d22b8e261eddfc6ecd64ff7000b10dc8b3a5727\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:54accd4b8bc202966bafafd16e69da9d5640ff92389d33d28555c5fd4f25ccb7\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2fbfbca668dd15b744418265a9607baa970c347eefd0db6a518aaf0cfbd153c0\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:76e9c727a874b4856d11a32fb0b389afc61ce8aaf281ada613713ddeadd1cfec\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:e20076a211cd6f9b44a6be58f7eeafa7ab5720eb796975d0c03f05b47d89eb90\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:a74d56552ddbde46c246b5b89199cb3fd182f9c346c784e1a93e4dc3f5ec9975\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-win32.whl\", hash = \"sha256:26458da5653aa5b3d8dc8b24192f574a58984c749401f98fff994d41d3f08da1\"},\n+    {file = \"wrapt-1.15.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:75760a47c06b5974aa5e01949bf7e66d2af4d08cb8c1d6516af5e39595397f5e\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ba1711cda2d30634a7e452fc79eabcadaffedf241ff206db2ee93dd2c89a60e7\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:56374914b132c702aa9aa9959c550004b8847148f95e1b824772d453ac204a72\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a89ce3fd220ff144bd9d54da333ec0de0399b52c9ac3d2ce34b569cf1a5748fb\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3bbe623731d03b186b3d6b0d6f51865bf598587c38d6f7b0be2e27414f7f214e\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3abbe948c3cbde2689370a262a8d04e32ec2dd4f27103669a45c6929bcdbfe7c\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:b67b819628e3b748fd3c2192c15fb951f549d0f47c0449af0764d7647302fda3\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:7eebcdbe3677e58dd4c0e03b4f2cfa346ed4049687d839adad68cc38bb559c92\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:74934ebd71950e3db69960a7da29204f89624dde411afbfb3b4858c1409b1e98\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-win32.whl\", hash = \"sha256:bd84395aab8e4d36263cd1b9308cd504f6cf713b7d6d3ce25ea55670baec5416\"},\n+    {file = \"wrapt-1.15.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:a487f72a25904e2b4bbc0817ce7a8de94363bd7e79890510174da9d901c38705\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:4ff0d20f2e670800d3ed2b220d40984162089a6e2c9646fdb09b85e6f9a8fc29\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:9ed6aa0726b9b60911f4aed8ec5b8dd7bf3491476015819f56473ffaef8959bd\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux2010_i686.whl\", hash = \"sha256:896689fddba4f23ef7c718279e42f8834041a21342d95e56922e1c10c0cc7afb\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:75669d77bb2c071333417617a235324a1618dba66f82a750362eccbe5b61d248\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-win32.whl\", hash = \"sha256:fbec11614dba0424ca72f4e8ba3c420dba07b4a7c206c8c8e4e73f2e98f4c559\"},\n+    {file = \"wrapt-1.15.0-cp35-cp35m-win_amd64.whl\", hash = \"sha256:fd69666217b62fa5d7c6aa88e507493a34dec4fa20c5bd925e4bc12fce586639\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:b0724f05c396b0a4c36a3226c31648385deb6a65d8992644c12a4963c70326ba\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bbeccb1aa40ab88cd29e6c7d8585582c99548f55f9b2581dfc5ba68c59a85752\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:38adf7198f8f154502883242f9fe7333ab05a5b02de7d83aa2d88ea621f13364\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:578383d740457fa790fdf85e6d346fda1416a40549fe8db08e5e9bd281c6a475\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:a4cbb9ff5795cd66f0066bdf5947f170f5d63a9274f99bdbca02fd973adcf2a8\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:af5bd9ccb188f6a5fdda9f1f09d9f4c86cc8a539bd48a0bfdc97723970348418\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:b56d5519e470d3f2fe4aa7585f0632b060d532d0696c5bdfb5e8319e1d0f69a2\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-win32.whl\", hash = \"sha256:77d4c1b881076c3ba173484dfa53d3582c1c8ff1f914c6461ab70c8428b796c1\"},\n+    {file = \"wrapt-1.15.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:077ff0d1f9d9e4ce6476c1a924a3332452c1406e59d90a2cf24aeb29eeac9420\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:5c5aa28df055697d7c37d2099a7bc09f559d5053c3349b1ad0c39000e611d317\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3a8564f283394634a7a7054b7983e47dbf39c07712d7b177b37e03f2467a024e\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:780c82a41dc493b62fc5884fb1d3a3b81106642c5c5c78d6a0d4cbe96d62ba7e\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e169e957c33576f47e21864cf3fc9ff47c223a4ebca8960079b8bd36cb014fd0\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b02f21c1e2074943312d03d243ac4388319f2456576b2c6023041c4d57cd7019\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:f2e69b3ed24544b0d3dbe2c5c0ba5153ce50dcebb576fdc4696d52aa22db6034\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d787272ed958a05b2c86311d3a4135d3c2aeea4fc655705f074130aa57d71653\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-win32.whl\", hash = \"sha256:02fce1852f755f44f95af51f69d22e45080102e9d00258053b79367d07af39c0\"},\n+    {file = \"wrapt-1.15.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:abd52a09d03adf9c763d706df707c343293d5d106aea53483e0ec8d9e310ad5e\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:cdb4f085756c96a3af04e6eca7f08b1345e94b53af8921b25c72f096e704e145\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:230ae493696a371f1dbffaad3dafbb742a4d27a0afd2b1aecebe52b740167e7f\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:63424c681923b9f3bfbc5e3205aafe790904053d42ddcc08542181a30a7a51bd\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d6bcbfc99f55655c3d93feb7ef3800bd5bbe963a755687cbf1f490a71fb7794b\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c99f4309f5145b93eca6e35ac1a988f0dc0a7ccf9ccdcd78d3c0adf57224e62f\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:b130fe77361d6771ecf5a219d8e0817d61b236b7d8b37cc045172e574ed219e6\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:96177eb5645b1c6985f5c11d03fc2dbda9ad24ec0f3a46dcce91445747e15094\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:d5fe3e099cf07d0fb5a1e23d399e5d4d1ca3e6dfcbe5c8570ccff3e9208274f7\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-win32.whl\", hash = \"sha256:abd8f36c99512755b8456047b7be10372fca271bf1467a1caa88db991e7c421b\"},\n+    {file = \"wrapt-1.15.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:b06fa97478a5f478fb05e1980980a7cdf2712015493b44d0c87606c1513ed5b1\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:2e51de54d4fb8fb50d6ee8327f9828306a959ae394d3e01a1ba8b2f937747d86\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0970ddb69bba00670e58955f8019bec4a42d1785db3faa043c33d81de2bf843c\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:76407ab327158c510f44ded207e2f76b657303e17cb7a572ffe2f5a8a48aa04d\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cd525e0e52a5ff16653a3fc9e3dd827981917d34996600bbc34c05d048ca35cc\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9d37ac69edc5614b90516807de32d08cb8e7b12260a285ee330955604ed9dd29\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:078e2a1a86544e644a68422f881c48b84fef6d18f8c7a957ffd3f2e0a74a0d4a\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:2cf56d0e237280baed46f0b5316661da892565ff58309d4d2ed7dba763d984b8\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:7dc0713bf81287a00516ef43137273b23ee414fe41a3c14be10dd95ed98a2df9\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-win32.whl\", hash = \"sha256:46ed616d5fb42f98630ed70c3529541408166c22cdfd4540b88d5f21006b0eff\"},\n+    {file = \"wrapt-1.15.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:eef4d64c650f33347c1f9266fa5ae001440b232ad9b98f1f43dfe7a79435c0a6\"},\n+    {file = \"wrapt-1.15.0-py3-none-any.whl\", hash = \"sha256:64b1df0f83706b4ef4cfb4fb0e4c2669100fd7ecacfb59e091fad300d4e04640\"},\n+    {file = \"wrapt-1.15.0.tar.gz\", hash = \"sha256:d06730c6aed78cee4126234cf2d071e01b44b915e725a6cb439a879ec9754a3a\"},\n ]\n \n [[package]]\n name = \"zipp\"\n-version = \"3.1.0\"\n+version = \"3.15.0\"\n description = \"Backport of pathlib-compatible object wrapper for zip files\"\n-category = \"dev\"\n optional = false\n-python-versions = \">=3.6\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"zipp-3.1.0-py3-none-any.whl\", hash = \"sha256:aa36550ff0c0b7ef7fa639055d797116ee891440eac1a56f378e2d3179e0320b\"},\n-    {file = \"zipp-3.1.0.tar.gz\", hash = \"sha256:c599e4d75c98f6798c509911d08a22e6c021d074469042177c8c86fb92eefd96\"},\n+    {file = \"zipp-3.15.0-py3-none-any.whl\", hash = \"sha256:48904fc76a60e542af151aded95726c1a5c34ed43ab4134b597665c86d7ad556\"},\n+    {file = \"zipp-3.15.0.tar.gz\", hash = \"sha256:112929ad649da941c23de50f356a2b5570c954b65150642bccdd66bf194d224b\"},\n ]\n \n [package.extras]\n-docs = [\"jaraco.packaging (>=3.2)\", \"rst.linker (>=1.9)\", \"sphinx\"]\n-testing = [\"func-timeout\", \"jaraco.itertools\"]\n+docs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\n+testing = [\"big-O\", \"flake8 (<5)\", \"jaraco.functools\", \"jaraco.itertools\", \"more-itertools\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-flake8\", \"pytest-mypy (>=0.9.1)\"]\n \n [metadata]\n lock-version = \"2.0\"\n python-versions = \"^3.7\"\n-content-hash = \"5c2b82d1c8a6a283f63558fc693271f42fdcaeab73616713eb9b38b0b59787fc\"\n+content-hash = \"43397b26df9c6dbc5bf88dad18b65d5b4fba2cdbbe9ad81bfeacd34651a8bb97\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 05eb30082..70d833205 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -15,6 +15,8 @@ graphviz = \">=0.13.2,<0.21.0\"\n jinja2 = \">=2.10,<4.0\"\n contextvars = { version = \"^2.4\", python = \"~3.6\" }\n typed-ast = \"^1.5.4\"\n+black = \"^22.10.0\"\n+html3 = \"1.18\"\n \n [tool.poetry.dev-dependencies]\n pytest = \"^7.3\"\ndiff --git a/tests/test_diagram.py b/tests/test_diagram.py\nindex 00bdacc6e..d67229bd7 100644\n--- a/tests/test_diagram.py\n+++ b/tests/test_diagram.py\n@@ -47,12 +47,12 @@ def test_validate_curvestyle(self):\n     def test_validate_outformat(self):\n         # Normal output formats.\n         for fmt in (\"png\", \"jpg\", \"svg\", \"pdf\", \"PNG\", \"dot\"):\n-            Diagram(outformat=fmt)\n+            Diagram(outformats=[fmt])\n \n         # Invalid output formats.\n         for fmt in (\"pnp\", \"jpe\", \"unknown\"):\n             with self.assertRaises(ValueError):\n-                Diagram(outformat=fmt)\n+                Diagram(outformats=[fmt])\n \n     def test_with_global_context(self):\n         self.assertIsNone(getdiagram())\n@@ -115,12 +115,14 @@ def test_autolabel(self):\n \n \n     def test_outformat_list(self):\n-        \"\"\"Check that outformat render all the files from the list.\"\"\"\n+        \"\"\"Check that outformats render all the files from the list.\"\"\"\n         self.name = 'diagrams_image'\n-        with Diagram(show=False, outformat=[\"dot\", \"png\"]):\n+        with Diagram(show=False, outformats=[\"dot\", \"png\", \"svg\", \"pdf\"]):\n             Node(\"node1\")\n         # both files must exist\n         self.assertTrue(os.path.exists(f\"{self.name}.png\"))\n+        self.assertTrue(os.path.exists(f\"{self.name}.svg\"))\n+        self.assertTrue(os.path.exists(f\"{self.name}.pdf\"))\n         self.assertTrue(os.path.exists(f\"{self.name}.dot\"))\n \n         # clean the dot file as it only generated here\n",
    "diff_length": 115203
  },
  {
    "index": 6,
    "repository": "mingrammer/diagrams",
    "pr_title": "Add new provider GIS",
    "pr_body": "I am starting this new provider to gather all GIS (Geographical Information System) related nodes.",
    "pr_number": 847,
    "comments": [
      "I also took the opportunity to update the contribution documentation in order to describe what must be done to add a new provider.",
      "@mingrammer any chance to have it integrated?",
      "@gabriel-tessier I just applied all your suggestions.",
      "@tvqphuoc01 hello! I just pushed the asked changes.",
      "@AlexGacon @tvqphuoc01 \r\n\r\nJust another comment, the icon mapnik is in the cplusplus section, what about move it to 'toolkit' that is more generic name. \r\nAs cplusplus is a language and if they rewrite it in Rust it will no more be correct.\r\n\r\nI found the name 'toolkit' when I searched mapnik on wikipedia!",
      "Hi I will take care of it tomorrow!\r\n\r\nLe mer. 15 janv. 2025, 12:29, gabriel-tessier ***@***.***> a\r\nÃ©crit :\r\n\r\n> @AlexGacon <https://github.com/AlexGacon> @tvqphuoc01\r\n> <https://github.com/tvqphuoc01>\r\n>\r\n> Just another comment, the icon mapnik is in the cplusplus section, what\r\n> about move it to 'toolkit' that is more generic name.\r\n> As cplusplus is a language and if they rewrite it in Rust it will no more\r\n> be correct.\r\n>\r\n> I found the name 'toolkit' when I searched mapnik on wikipedia!\r\n>\r\n> â€”\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/mingrammer/diagrams/pull/847#issuecomment-2592452637>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAXE4XMSHFGAJHPA5OH5R432KZBC5AVCNFSM6AAAAABVCOVG5CVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDKOJSGQ2TENRTG4>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "@gabriel-tessier regarding mapnik, I have a folder \"CLI\" which can be seen as toolkit too. Should I rename it \"toolkit\" or move mapnik into \"cli\"?",
      "@gabriel-tessier I just pushed the asked changes. It was in progress work I didn't track correctly. Sorry for the work.",
      "> @gabriel-tessier regarding mapnik, I have a folder \"CLI\" which can be seen as toolkit too. Should I rename it \"toolkit\" or move mapnik into \"cli\"?\r\n\r\nLet's put it 'cli' with other nodes.",
      "@gabriel-tessier should I change something to pass the pre-commit check?",
      "@AlexGacon Sorry for the delay, the pre-commit failure is not related with your changes so it's ok to ignore it.\r\n\r\nThank you again for the PR and the fixes."
    ],
    "num_comments": 11,
    "diff": "diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json\nindex ec9c08b74..a4c234321 100644\n--- a/.devcontainer/devcontainer.json\n+++ b/.devcontainer/devcontainer.json\n@@ -17,4 +17,4 @@\n \t},\n \t\"workspaceMount\": \"source=${localWorkspaceFolder},target=/usr/src/diagrams,type=bind\",\n \t\"workspaceFolder\": \"/usr/src/diagrams\"\n-}\n\\ No newline at end of file\n+}\ndiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex d1c430d2c..1997d6573 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -43,6 +43,21 @@ Then just run the `./autogen.sh` to generate the added or updated node classes.\n [black]: https://pypi.org/project/black\n [inkscape]: https://inkscape.org/ko/release\n \n+### Add new provider\n+\n+To add a new provider to Diagrams, please follow the steps below in addition to the image intructions above:\n+- in `autogen.sh` add in the `providers` variable the new provider code\n+- in `config.py`:\n+  - in the `providers` variable, add the new provider code\n+  - in the `FILE_PREFIXES` variable, add a new entry with your new provider code. And eventually a file prefix\n+  - Optionnaly, update the `UPPER_WORDS` variable to a new entry with your new provider code.\n+  - in the `ALIASES` variable, add a new entry with your new provider code. See below on how to add new aliases.\n+- in `scripts/resource.py`:\n+  - add a function `cleaner_XXX` (replace XXX by your provider name). For the implementation look at the existing functions\n+  - in the `cleaners` variable, add an entry with your new provider code and the function defined above\n+- in `sidebars.json`, update the `Nodes` array to add the reference of the new provider\n+- in the `diagrams` folder, add a new file `__init__.py` for the new provider. For the content look at the existing providers\n+\n ### Update Aliases\n \n Some node classes have alias. For example, `aws.compute.ECS` class is an alias\ndiff --git a/autogen.sh b/autogen.sh\nindex f5e065b35..325da3960 100755\n--- a/autogen.sh\n+++ b/autogen.sh\n@@ -20,6 +20,7 @@ providers=(\n   \"generic\"\n   \"openstack\"\n   \"outscale\"\n+  \"gis\"\n )\n \n if ! [ -x \"$(command -v round)\" ]; then\ndiff --git a/config.py b/config.py\nindex 86a58342b..ce3828eda 100644\n--- a/config.py\n+++ b/config.py\n@@ -29,6 +29,7 @@\n     \"generic\",\n     \"openstack\",\n     \"outscale\",\n+    \"gis\"\n )\n \n #########################\n@@ -59,6 +60,7 @@\n     \"outscale\": (),\n     \"generic\": (),\n     \"openstack\": (),\n+    \"gis\": (),\n }\n \n #########################\n@@ -89,6 +91,7 @@\n     \"openstack\": (\"rpm\", \"loci\", \"nfv\", \"ec2api\"),\n     \"pve\": (\"pve\"),\n     \"ibm\": (\"ibm\"),\n+    \"gis\": (\"gis\",\"ban\",\"ign\",\"ogc\",\"qgis\",\"wfs\",\"wms\"),\n }\n \n TITLE_WORDS = {\n@@ -411,6 +414,7 @@\n         }\n     },\n     \"digitalocean\": {},\n+    \"gis\": {},\n     \"oci\": {\n         \"compute\": {\n             \"VM\": \"VirtualMachine\",\ndiff --git a/diagrams/gis/__init__.py b/diagrams/gis/__init__.py\nnew file mode 100644\nindex 000000000..684dca023\n--- /dev/null\n+++ b/diagrams/gis/__init__.py\n@@ -0,0 +1,12 @@\n+\"\"\"\n+GIS provides a set of services for Geographic Information Systems provider.\n+\"\"\"\n+\n+from diagrams import Node\n+\n+\n+class _GIS(Node):\n+    _provider = \"gis\"\n+    _icon_dir = \"resources/gis\"\n+\n+    fontcolor = \"#2d3436\"\ndiff --git a/diagrams/gis/cli.py b/diagrams/gis/cli.py\nnew file mode 100644\nindex 000000000..4cf8e9f18\n--- /dev/null\n+++ b/diagrams/gis/cli.py\n@@ -0,0 +1,35 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Cli(_GIS):\n+    _type = \"cli\"\n+    _icon_dir = \"resources/gis/cli\"\n+\n+\n+class Gdal(_Cli):\n+    _icon = \"gdal.png\"\n+\n+\n+class Imposm(_Cli):\n+    _icon = \"imposm.png\"\n+\n+\n+class Lastools(_Cli):\n+    _icon = \"lastools.png\"\n+\n+\n+class Mapnik(_Cli):\n+    _icon = \"mapnik.png\"\n+\n+\n+class Mdal(_Cli):\n+    _icon = \"mdal.png\"\n+\n+\n+class Pdal(_Cli):\n+    _icon = \"pdal.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/cplusplus.py b/diagrams/gis/cplusplus.py\nnew file mode 100644\nindex 000000000..a772d45d4\n--- /dev/null\n+++ b/diagrams/gis/cplusplus.py\n@@ -0,0 +1,15 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Cplusplus(_GIS):\n+    _type = \"cplusplus\"\n+    _icon_dir = \"resources/gis/cplusplus\"\n+\n+\n+class Mapnik(_Cplusplus):\n+    _icon = \"mapnik.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/data.py b/diagrams/gis/data.py\nnew file mode 100644\nindex 000000000..4da2ff435\n--- /dev/null\n+++ b/diagrams/gis/data.py\n@@ -0,0 +1,27 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Data(_GIS):\n+    _type = \"data\"\n+    _icon_dir = \"resources/gis/data\"\n+\n+\n+class BAN(_Data):\n+    _icon = \"ban.png\"\n+\n+\n+class Here(_Data):\n+    _icon = \"here.png\"\n+\n+\n+class IGN(_Data):\n+    _icon = \"ign.png\"\n+\n+\n+class Openstreetmap(_Data):\n+    _icon = \"openstreetmap.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/database.py b/diagrams/gis/database.py\nnew file mode 100644\nindex 000000000..04ee2f724\n--- /dev/null\n+++ b/diagrams/gis/database.py\n@@ -0,0 +1,15 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Database(_GIS):\n+    _type = \"database\"\n+    _icon_dir = \"resources/gis/database\"\n+\n+\n+class Postgis(_Database):\n+    _icon = \"postgis.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/desktop.py b/diagrams/gis/desktop.py\nnew file mode 100644\nindex 000000000..b39ff2227\n--- /dev/null\n+++ b/diagrams/gis/desktop.py\n@@ -0,0 +1,19 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Desktop(_GIS):\n+    _type = \"desktop\"\n+    _icon_dir = \"resources/gis/desktop\"\n+\n+\n+class Maptunik(_Desktop):\n+    _icon = \"maptunik.png\"\n+\n+\n+class QGIS(_Desktop):\n+    _icon = \"qgis.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/format.py b/diagrams/gis/format.py\nnew file mode 100644\nindex 000000000..3c932a1fc\n--- /dev/null\n+++ b/diagrams/gis/format.py\n@@ -0,0 +1,19 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Format(_GIS):\n+    _type = \"format\"\n+    _icon_dir = \"resources/gis/format\"\n+\n+\n+class Geopackage(_Format):\n+    _icon = \"geopackage.png\"\n+\n+\n+class Geoparquet(_Format):\n+    _icon = \"geoparquet.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/geocoding.py b/diagrams/gis/geocoding.py\nnew file mode 100644\nindex 000000000..de5332771\n--- /dev/null\n+++ b/diagrams/gis/geocoding.py\n@@ -0,0 +1,27 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Geocoding(_GIS):\n+    _type = \"geocoding\"\n+    _icon_dir = \"resources/gis/geocoding\"\n+\n+\n+class Addok(_Geocoding):\n+    _icon = \"addok.png\"\n+\n+\n+class Gisgraphy(_Geocoding):\n+    _icon = \"gisgraphy.png\"\n+\n+\n+class Nominatim(_Geocoding):\n+    _icon = \"nominatim.png\"\n+\n+\n+class Pelias(_Geocoding):\n+    _icon = \"pelias.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/georchestra.py b/diagrams/gis/georchestra.py\nnew file mode 100644\nindex 000000000..fc1b8ebf8\n--- /dev/null\n+++ b/diagrams/gis/georchestra.py\n@@ -0,0 +1,11 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Georchestra(_GIS):\n+    _type = \"georchestra\"\n+    _icon_dir = \"resources/gis/georchestra\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/java.py b/diagrams/gis/java.py\nnew file mode 100644\nindex 000000000..371b847f5\n--- /dev/null\n+++ b/diagrams/gis/java.py\n@@ -0,0 +1,15 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Java(_GIS):\n+    _type = \"java\"\n+    _icon_dir = \"resources/gis/java\"\n+\n+\n+class Geotools(_Java):\n+    _icon = \"geotools.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/javascript.py b/diagrams/gis/javascript.py\nnew file mode 100644\nindex 000000000..4a9c73913\n--- /dev/null\n+++ b/diagrams/gis/javascript.py\n@@ -0,0 +1,43 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Javascript(_GIS):\n+    _type = \"javascript\"\n+    _icon_dir = \"resources/gis/javascript\"\n+\n+\n+class Cesium(_Javascript):\n+    _icon = \"cesium.png\"\n+\n+\n+class Geostyler(_Javascript):\n+    _icon = \"geostyler.png\"\n+\n+\n+class Keplerjs(_Javascript):\n+    _icon = \"keplerjs.png\"\n+\n+\n+class Leaflet(_Javascript):\n+    _icon = \"leaflet.png\"\n+\n+\n+class Maplibre(_Javascript):\n+    _icon = \"maplibre.png\"\n+\n+\n+class OlExt(_Javascript):\n+    _icon = \"ol-ext.png\"\n+\n+\n+class Openlayers(_Javascript):\n+    _icon = \"openlayers.png\"\n+\n+\n+class Turfjs(_Javascript):\n+    _icon = \"turfjs.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/mobile.py b/diagrams/gis/mobile.py\nnew file mode 100644\nindex 000000000..b798eddd5\n--- /dev/null\n+++ b/diagrams/gis/mobile.py\n@@ -0,0 +1,23 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Mobile(_GIS):\n+    _type = \"mobile\"\n+    _icon_dir = \"resources/gis/mobile\"\n+\n+\n+class Mergin(_Mobile):\n+    _icon = \"mergin.png\"\n+\n+\n+class Qfield(_Mobile):\n+    _icon = \"qfield.png\"\n+\n+\n+class Smash(_Mobile):\n+    _icon = \"smash.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/ogc.py b/diagrams/gis/ogc.py\nnew file mode 100644\nindex 000000000..956df61ea\n--- /dev/null\n+++ b/diagrams/gis/ogc.py\n@@ -0,0 +1,23 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _OGC(_GIS):\n+    _type = \"ogc\"\n+    _icon_dir = \"resources/gis/ogc\"\n+\n+\n+class OGC(_OGC):\n+    _icon = \"ogc.png\"\n+\n+\n+class WFS(_OGC):\n+    _icon = \"wfs.png\"\n+\n+\n+class WMS(_OGC):\n+    _icon = \"wms.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/organization.py b/diagrams/gis/organization.py\nnew file mode 100644\nindex 000000000..5fc49441b\n--- /dev/null\n+++ b/diagrams/gis/organization.py\n@@ -0,0 +1,15 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Organization(_GIS):\n+    _type = \"organization\"\n+    _icon_dir = \"resources/gis/organization\"\n+\n+\n+class Osgeo(_Organization):\n+    _icon = \"osgeo.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/python.py b/diagrams/gis/python.py\nnew file mode 100644\nindex 000000000..340139d88\n--- /dev/null\n+++ b/diagrams/gis/python.py\n@@ -0,0 +1,19 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Python(_GIS):\n+    _type = \"python\"\n+    _icon_dir = \"resources/gis/python\"\n+\n+\n+class Geopandas(_Python):\n+    _icon = \"geopandas.png\"\n+\n+\n+class Pysal(_Python):\n+    _icon = \"pysal.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/routing.py b/diagrams/gis/routing.py\nnew file mode 100644\nindex 000000000..2176df711\n--- /dev/null\n+++ b/diagrams/gis/routing.py\n@@ -0,0 +1,27 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Routing(_GIS):\n+    _type = \"routing\"\n+    _icon_dir = \"resources/gis/routing\"\n+\n+\n+class Graphhopper(_Routing):\n+    _icon = \"graphhopper.png\"\n+\n+\n+class Osrm(_Routing):\n+    _icon = \"osrm.png\"\n+\n+\n+class Pgrouting(_Routing):\n+    _icon = \"pgrouting.png\"\n+\n+\n+class Valhalla(_Routing):\n+    _icon = \"valhalla.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/server.py b/diagrams/gis/server.py\nnew file mode 100644\nindex 000000000..c6ac41065\n--- /dev/null\n+++ b/diagrams/gis/server.py\n@@ -0,0 +1,99 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Server(_GIS):\n+    _type = \"server\"\n+    _icon_dir = \"resources/gis/server\"\n+\n+\n+class Actinia(_Server):\n+    _icon = \"actinia.png\"\n+\n+\n+class Baremaps(_Server):\n+    _icon = \"baremaps.png\"\n+\n+\n+class Deegree(_Server):\n+    _icon = \"deegree.png\"\n+\n+\n+class G3WSuite(_Server):\n+    _icon = \"g3w-suite.png\"\n+\n+\n+class Geohealthcheck(_Server):\n+    _icon = \"geohealthcheck.png\"\n+\n+\n+class Geomapfish(_Server):\n+    _icon = \"geomapfish.png\"\n+\n+\n+class Geomesa(_Server):\n+    _icon = \"geomesa.png\"\n+\n+\n+class Geonetwork(_Server):\n+    _icon = \"geonetwork.png\"\n+\n+\n+class Geonode(_Server):\n+    _icon = \"geonode.png\"\n+\n+\n+class Georchestra(_Server):\n+    _icon = \"georchestra.png\"\n+\n+\n+class Geoserver(_Server):\n+    _icon = \"geoserver.png\"\n+\n+\n+class Geowebcache(_Server):\n+    _icon = \"geowebcache.png\"\n+\n+\n+class Kepler(_Server):\n+    _icon = \"kepler.png\"\n+\n+\n+class Mapproxy(_Server):\n+    _icon = \"mapproxy.png\"\n+\n+\n+class Mapserver(_Server):\n+    _icon = \"mapserver.png\"\n+\n+\n+class Mapstore(_Server):\n+    _icon = \"mapstore.png\"\n+\n+\n+class Mviewer(_Server):\n+    _icon = \"mviewer.png\"\n+\n+\n+class Pg_Tileserv(_Server):\n+    _icon = \"pg_tileserv.png\"\n+\n+\n+class Pycsw(_Server):\n+    _icon = \"pycsw.png\"\n+\n+\n+class Pygeoapi(_Server):\n+    _icon = \"pygeoapi.png\"\n+\n+\n+class QGISServer(_Server):\n+    _icon = \"qgis-server.png\"\n+\n+\n+class Zooproject(_Server):\n+    _icon = \"zooproject.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/gis/toolkit.py b/diagrams/gis/toolkit.py\nnew file mode 100644\nindex 000000000..d67d1d810\n--- /dev/null\n+++ b/diagrams/gis/toolkit.py\n@@ -0,0 +1,11 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GIS\n+\n+\n+class _Toolkit(_GIS):\n+    _type = \"toolkit\"\n+    _icon_dir = \"resources/gis/toolkit\"\n+\n+\n+# Aliases\ndiff --git a/docs/nodes/gis.md b/docs/nodes/gis.md\nnew file mode 100644\nindex 000000000..f73aeb70d\n--- /dev/null\n+++ b/docs/nodes/gis.md\n@@ -0,0 +1,242 @@\n+---\n+id: gis\n+title: GIS\n+---\n+\n+Node classes list of the gis provider.\n+\n+## gis.cli\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/gdal.png\" alt=\"Gdal\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Gdal**\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/imposm.png\" alt=\"Imposm\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Imposm**\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/lastools.png\" alt=\"Lastools\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Lastools**\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/mapnik.png\" alt=\"Mapnik\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Mapnik**\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/mdal.png\" alt=\"Mdal\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Mdal**\n+\n+<img width=\"30\" src=\"/img/resources/gis/cli/pdal.png\" alt=\"Pdal\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.cli.Pdal**\n+\n+## gis.data\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/data/ban.png\" alt=\"BAN\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.data.BAN**\n+\n+<img width=\"30\" src=\"/img/resources/gis/data/here.png\" alt=\"Here\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.data.Here**\n+\n+<img width=\"30\" src=\"/img/resources/gis/data/ign.png\" alt=\"IGN\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.data.IGN**\n+\n+<img width=\"30\" src=\"/img/resources/gis/data/openstreetmap.png\" alt=\"Openstreetmap\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.data.Openstreetmap**\n+\n+## gis.database\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/database/postgis.png\" alt=\"Postgis\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.database.Postgis**\n+\n+## gis.desktop\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/desktop/maptunik.png\" alt=\"Maptunik\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.desktop.Maptunik**\n+\n+<img width=\"30\" src=\"/img/resources/gis/desktop/qgis.png\" alt=\"QGIS\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.desktop.QGIS**\n+\n+## gis.format\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/format/geopackage.png\" alt=\"Geopackage\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.format.Geopackage**\n+\n+<img width=\"30\" src=\"/img/resources/gis/format/geoparquet.png\" alt=\"Geoparquet\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.format.Geoparquet**\n+\n+## gis.geocoding\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/geocoding/addok.png\" alt=\"Addok\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.geocoding.Addok**\n+\n+<img width=\"30\" src=\"/img/resources/gis/geocoding/gisgraphy.png\" alt=\"Gisgraphy\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.geocoding.Gisgraphy**\n+\n+<img width=\"30\" src=\"/img/resources/gis/geocoding/nominatim.png\" alt=\"Nominatim\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.geocoding.Nominatim**\n+\n+<img width=\"30\" src=\"/img/resources/gis/geocoding/pelias.png\" alt=\"Pelias\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.geocoding.Pelias**\n+\n+## gis.georchestra\n+\n+\n+## gis.java\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/java/geotools.png\" alt=\"Geotools\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.java.Geotools**\n+\n+## gis.javascript\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/cesium.png\" alt=\"Cesium\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Cesium**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/geostyler.png\" alt=\"Geostyler\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Geostyler**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/keplerjs.png\" alt=\"Keplerjs\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Keplerjs**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/leaflet.png\" alt=\"Leaflet\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Leaflet**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/maplibre.png\" alt=\"Maplibre\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Maplibre**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/ol-ext.png\" alt=\"OlExt\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.OlExt**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/openlayers.png\" alt=\"Openlayers\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Openlayers**\n+\n+<img width=\"30\" src=\"/img/resources/gis/javascript/turfjs.png\" alt=\"Turfjs\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.javascript.Turfjs**\n+\n+## gis.mobile\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/mobile/mergin.png\" alt=\"Mergin\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.mobile.Mergin**\n+\n+<img width=\"30\" src=\"/img/resources/gis/mobile/qfield.png\" alt=\"Qfield\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.mobile.Qfield**\n+\n+<img width=\"30\" src=\"/img/resources/gis/mobile/smash.png\" alt=\"Smash\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.mobile.Smash**\n+\n+## gis.ogc\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/ogc/ogc.png\" alt=\"OGC\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.ogc.OGC**\n+\n+<img width=\"30\" src=\"/img/resources/gis/ogc/wfs.png\" alt=\"WFS\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.ogc.WFS**\n+\n+<img width=\"30\" src=\"/img/resources/gis/ogc/wms.png\" alt=\"WMS\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.ogc.WMS**\n+\n+## gis.organization\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/organization/osgeo.png\" alt=\"Osgeo\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.organization.Osgeo**\n+\n+## gis.python\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/python/geopandas.png\" alt=\"Geopandas\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.python.Geopandas**\n+\n+<img width=\"30\" src=\"/img/resources/gis/python/pysal.png\" alt=\"Pysal\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.python.Pysal**\n+\n+## gis.routing\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/routing/graphhopper.png\" alt=\"Graphhopper\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.routing.Graphhopper**\n+\n+<img width=\"30\" src=\"/img/resources/gis/routing/osrm.png\" alt=\"Osrm\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.routing.Osrm**\n+\n+<img width=\"30\" src=\"/img/resources/gis/routing/pgrouting.png\" alt=\"Pgrouting\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.routing.Pgrouting**\n+\n+<img width=\"30\" src=\"/img/resources/gis/routing/valhalla.png\" alt=\"Valhalla\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.routing.Valhalla**\n+\n+## gis.server\n+\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/actinia.png\" alt=\"Actinia\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Actinia**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/baremaps.png\" alt=\"Baremaps\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Baremaps**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/deegree.png\" alt=\"Deegree\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Deegree**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/g3w-suite.png\" alt=\"G3WSuite\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.G3WSuite**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geohealthcheck.png\" alt=\"Geohealthcheck\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geohealthcheck**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geomapfish.png\" alt=\"Geomapfish\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geomapfish**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geomesa.png\" alt=\"Geomesa\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geomesa**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geonetwork.png\" alt=\"Geonetwork\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geonetwork**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geonode.png\" alt=\"Geonode\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geonode**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/georchestra.png\" alt=\"Georchestra\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Georchestra**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geoserver.png\" alt=\"Geoserver\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geoserver**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/geowebcache.png\" alt=\"Geowebcache\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Geowebcache**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/kepler.png\" alt=\"Kepler\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Kepler**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/mapproxy.png\" alt=\"Mapproxy\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Mapproxy**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/mapserver.png\" alt=\"Mapserver\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Mapserver**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/mapstore.png\" alt=\"Mapstore\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Mapstore**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/mviewer.png\" alt=\"Mviewer\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Mviewer**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/pg_tileserv.png\" alt=\"Pg_Tileserv\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Pg_Tileserv**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/pycsw.png\" alt=\"Pycsw\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Pycsw**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/pygeoapi.png\" alt=\"Pygeoapi\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Pygeoapi**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/qgis-server.png\" alt=\"QGISServer\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.QGISServer**\n+\n+<img width=\"30\" src=\"/img/resources/gis/server/zooproject.png\" alt=\"Zooproject\" style=\"float: left; padding-right: 5px;\" >\n+**diagrams.gis.server.Zooproject**\n+\n+## gis.toolkit\ndiff --git a/resources/gis/cli/gdal.png b/resources/gis/cli/gdal.png\nnew file mode 100644\nindex 000000000..19c93bde8\nBinary files /dev/null and b/resources/gis/cli/gdal.png differ\ndiff --git a/resources/gis/cli/imposm.png b/resources/gis/cli/imposm.png\nnew file mode 100644\nindex 000000000..6bbb013ba\nBinary files /dev/null and b/resources/gis/cli/imposm.png differ\ndiff --git a/resources/gis/cli/lastools.png b/resources/gis/cli/lastools.png\nnew file mode 100644\nindex 000000000..7e5848eea\nBinary files /dev/null and b/resources/gis/cli/lastools.png differ\ndiff --git a/resources/gis/cli/mapnik.png b/resources/gis/cli/mapnik.png\nnew file mode 100644\nindex 000000000..622cacf40\nBinary files /dev/null and b/resources/gis/cli/mapnik.png differ\ndiff --git a/resources/gis/cli/mdal.png b/resources/gis/cli/mdal.png\nnew file mode 100644\nindex 000000000..b1e1ed400\nBinary files /dev/null and b/resources/gis/cli/mdal.png differ\ndiff --git a/resources/gis/cli/pdal.png b/resources/gis/cli/pdal.png\nnew file mode 100644\nindex 000000000..522949b61\nBinary files /dev/null and b/resources/gis/cli/pdal.png differ\ndiff --git a/resources/gis/data/ban.png b/resources/gis/data/ban.png\nnew file mode 100644\nindex 000000000..af20419ba\nBinary files /dev/null and b/resources/gis/data/ban.png differ\ndiff --git a/resources/gis/data/here.png b/resources/gis/data/here.png\nnew file mode 100644\nindex 000000000..62b4f3045\nBinary files /dev/null and b/resources/gis/data/here.png differ\ndiff --git a/resources/gis/data/ign.png b/resources/gis/data/ign.png\nnew file mode 100644\nindex 000000000..c9b0e8c84\nBinary files /dev/null and b/resources/gis/data/ign.png differ\ndiff --git a/resources/gis/data/openstreetmap.png b/resources/gis/data/openstreetmap.png\nnew file mode 100644\nindex 000000000..385bd973e\nBinary files /dev/null and b/resources/gis/data/openstreetmap.png differ\ndiff --git a/resources/gis/database/postgis.png b/resources/gis/database/postgis.png\nnew file mode 100644\nindex 000000000..a6dc7b42c\nBinary files /dev/null and b/resources/gis/database/postgis.png differ\ndiff --git a/resources/gis/desktop/maptunik.png b/resources/gis/desktop/maptunik.png\nnew file mode 100644\nindex 000000000..4710e80f8\nBinary files /dev/null and b/resources/gis/desktop/maptunik.png differ\ndiff --git a/resources/gis/desktop/qgis.png b/resources/gis/desktop/qgis.png\nnew file mode 100644\nindex 000000000..3dc4b1cd4\nBinary files /dev/null and b/resources/gis/desktop/qgis.png differ\ndiff --git a/resources/gis/format/geopackage.png b/resources/gis/format/geopackage.png\nnew file mode 100644\nindex 000000000..0ff77fbf4\nBinary files /dev/null and b/resources/gis/format/geopackage.png differ\ndiff --git a/resources/gis/format/geoparquet.png b/resources/gis/format/geoparquet.png\nnew file mode 100644\nindex 000000000..d5ea1fd09\nBinary files /dev/null and b/resources/gis/format/geoparquet.png differ\ndiff --git a/resources/gis/geocoding/addok.png b/resources/gis/geocoding/addok.png\nnew file mode 100644\nindex 000000000..932824932\nBinary files /dev/null and b/resources/gis/geocoding/addok.png differ\ndiff --git a/resources/gis/geocoding/gisgraphy.png b/resources/gis/geocoding/gisgraphy.png\nnew file mode 100644\nindex 000000000..2d23928f7\nBinary files /dev/null and b/resources/gis/geocoding/gisgraphy.png differ\ndiff --git a/resources/gis/geocoding/nominatim.png b/resources/gis/geocoding/nominatim.png\nnew file mode 100644\nindex 000000000..385bd973e\nBinary files /dev/null and b/resources/gis/geocoding/nominatim.png differ\ndiff --git a/resources/gis/geocoding/pelias.png b/resources/gis/geocoding/pelias.png\nnew file mode 100644\nindex 000000000..6037fdeca\nBinary files /dev/null and b/resources/gis/geocoding/pelias.png differ\ndiff --git a/resources/gis/georchestra/analytics.svg b/resources/gis/georchestra/analytics.svg\nnew file mode 100644\nindex 000000000..fcd4027db\n--- /dev/null\n+++ b/resources/gis/georchestra/analytics.svg\n@@ -0,0 +1,355 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"-47.693263\"\n+     inkscape:cy=\"-98.669757\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <g\n+       id=\"g5250\"\n+       transform=\"translate(-0.20368658,-0.10736832)\">\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:0.168649;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620\"\n+         width=\"4.23177\"\n+         height=\"14.389493\"\n+         x=\"5.1819592\"\n+         y=\"7.5520296\" />\n+      <rect\n+         style=\"fill:#2a2661;fill-opacity:1;stroke:none;stroke-width:0.144688;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-1\"\n+         width=\"4.23177\"\n+         height=\"10.591175\"\n+         x=\"9.4137173\"\n+         y=\"11.350343\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:0.097886;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-2\"\n+         width=\"4.23177\"\n+         height=\"4.847527\"\n+         x=\"13.645481\"\n+         y=\"17.093992\" />\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.182146;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-9\"\n+         width=\"4.23177\"\n+         height=\"16.784679\"\n+         x=\"17.877266\"\n+         y=\"5.1568346\" />\n+    </g>\n+  </g>\n+</svg>\ndiff --git a/resources/gis/georchestra/data_api.svg b/resources/gis/georchestra/data_api.svg\nnew file mode 100644\nindex 000000000..004328e81\n--- /dev/null\n+++ b/resources/gis/georchestra/data_api.svg\n@@ -0,0 +1,335 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"54.259726\"\n+     inkscape:cy=\"-71.021489\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <g\n+       id=\"g4398\"\n+       transform=\"translate(-14.400962,-1.7821191)\">\n+      <rect\n+         style=\"fill:#2a2661;fill-opacity:1;stroke:none;stroke-width:0.450299;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect291252-4-7\"\n+         width=\"16.91852\"\n+         height=\"16.91852\"\n+         x=\"19.383512\"\n+         y=\"6.7646694\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-3\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"24.706367\"\n+         y=\"8.9828644\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-7\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"31.020798\"\n+         y=\"8.9828644\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-4\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"21.549156\"\n+         y=\"12.140085\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-37-2\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"27.863579\"\n+         y=\"12.140085\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-3-6\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"24.706367\"\n+         y=\"15.2973\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-7-7\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"31.020798\"\n+         y=\"15.2973\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-4-6\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"21.549156\"\n+         y=\"18.454504\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-37-2-9\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"27.863579\"\n+         y=\"18.454504\" />\n+    </g>\n+  </g>\n+</svg>\ndiff --git a/resources/gis/georchestra/datafeeder.svg b/resources/gis/georchestra/datafeeder.svg\nnew file mode 100644\nindex 000000000..c709fc467\n--- /dev/null\n+++ b/resources/gis/georchestra/datafeeder.svg\n@@ -0,0 +1,465 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   sodipodi:docname=\"geoserver_icon.svg\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"-52.531709\"\n+     inkscape:cy=\"-15.724952\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8-4\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6-4\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2-5\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2-9\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-1\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-3\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <rect\n+       style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.456273;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"rect291252-7-5\"\n+       width=\"17.143002\"\n+       height=\"17.143002\"\n+       x=\"5.006495\"\n+       y=\"4.9115372\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-3\"\n+       cx=\"9.3531199\"\n+       cy=\"9.3413706\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-7-3\"\n+       cx=\"17.765553\"\n+       cy=\"17.766909\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-7-6-3\"\n+       cx=\"17.807709\"\n+       cy=\"9.2519331\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-2-4\"\n+       cx=\"9.3393154\"\n+       cy=\"17.729809\"\n+       r=\"3.0508161\" />\n+  </g>\n+</svg>\ndiff --git a/resources/gis/gis.png b/resources/gis/gis.png\nnew file mode 100644\nindex 000000000..95e4a2ef4\nBinary files /dev/null and b/resources/gis/gis.png differ\ndiff --git a/resources/gis/java/geotools.png b/resources/gis/java/geotools.png\nnew file mode 100644\nindex 000000000..624de5e16\nBinary files /dev/null and b/resources/gis/java/geotools.png differ\ndiff --git a/resources/gis/javascript/cesium.png b/resources/gis/javascript/cesium.png\nnew file mode 100644\nindex 000000000..299a77d07\nBinary files /dev/null and b/resources/gis/javascript/cesium.png differ\ndiff --git a/resources/gis/javascript/geostyler.png b/resources/gis/javascript/geostyler.png\nnew file mode 100644\nindex 000000000..ba4b15849\nBinary files /dev/null and b/resources/gis/javascript/geostyler.png differ\ndiff --git a/resources/gis/javascript/keplerjs.png b/resources/gis/javascript/keplerjs.png\nnew file mode 100644\nindex 000000000..88363f020\nBinary files /dev/null and b/resources/gis/javascript/keplerjs.png differ\ndiff --git a/resources/gis/javascript/leaflet.png b/resources/gis/javascript/leaflet.png\nnew file mode 100644\nindex 000000000..de9bc2195\nBinary files /dev/null and b/resources/gis/javascript/leaflet.png differ\ndiff --git a/resources/gis/javascript/maplibre.png b/resources/gis/javascript/maplibre.png\nnew file mode 100644\nindex 000000000..245029532\nBinary files /dev/null and b/resources/gis/javascript/maplibre.png differ\ndiff --git a/resources/gis/javascript/ol-ext.png b/resources/gis/javascript/ol-ext.png\nnew file mode 100644\nindex 000000000..091fa6064\nBinary files /dev/null and b/resources/gis/javascript/ol-ext.png differ\ndiff --git a/resources/gis/javascript/openlayers.png b/resources/gis/javascript/openlayers.png\nnew file mode 100644\nindex 000000000..1ece99dbd\nBinary files /dev/null and b/resources/gis/javascript/openlayers.png differ\ndiff --git a/resources/gis/javascript/turfjs.png b/resources/gis/javascript/turfjs.png\nnew file mode 100644\nindex 000000000..fab4c46f4\nBinary files /dev/null and b/resources/gis/javascript/turfjs.png differ\ndiff --git a/resources/gis/mobile/mergin.png b/resources/gis/mobile/mergin.png\nnew file mode 100644\nindex 000000000..00289fc3d\nBinary files /dev/null and b/resources/gis/mobile/mergin.png differ\ndiff --git a/resources/gis/mobile/qfield.png b/resources/gis/mobile/qfield.png\nnew file mode 100644\nindex 000000000..eb8f8c19b\nBinary files /dev/null and b/resources/gis/mobile/qfield.png differ\ndiff --git a/resources/gis/mobile/smash.png b/resources/gis/mobile/smash.png\nnew file mode 100644\nindex 000000000..38256c378\nBinary files /dev/null and b/resources/gis/mobile/smash.png differ\ndiff --git a/resources/gis/ogc/ogc.png b/resources/gis/ogc/ogc.png\nnew file mode 100644\nindex 000000000..95b2f14f4\nBinary files /dev/null and b/resources/gis/ogc/ogc.png differ\ndiff --git a/resources/gis/ogc/wfs.png b/resources/gis/ogc/wfs.png\nnew file mode 100644\nindex 000000000..248ad0349\nBinary files /dev/null and b/resources/gis/ogc/wfs.png differ\ndiff --git a/resources/gis/ogc/wms.png b/resources/gis/ogc/wms.png\nnew file mode 100644\nindex 000000000..2893bbab4\nBinary files /dev/null and b/resources/gis/ogc/wms.png differ\ndiff --git a/resources/gis/organization/osgeo.png b/resources/gis/organization/osgeo.png\nnew file mode 100644\nindex 000000000..87095a95c\nBinary files /dev/null and b/resources/gis/organization/osgeo.png differ\ndiff --git a/resources/gis/python/geopandas.png b/resources/gis/python/geopandas.png\nnew file mode 100644\nindex 000000000..2bd72973c\nBinary files /dev/null and b/resources/gis/python/geopandas.png differ\ndiff --git a/resources/gis/python/pysal.png b/resources/gis/python/pysal.png\nnew file mode 100644\nindex 000000000..3e862666b\nBinary files /dev/null and b/resources/gis/python/pysal.png differ\ndiff --git a/resources/gis/routing/graphhopper.png b/resources/gis/routing/graphhopper.png\nnew file mode 100644\nindex 000000000..7d9bda144\nBinary files /dev/null and b/resources/gis/routing/graphhopper.png differ\ndiff --git a/resources/gis/routing/osrm.png b/resources/gis/routing/osrm.png\nnew file mode 100644\nindex 000000000..b2a922ab1\nBinary files /dev/null and b/resources/gis/routing/osrm.png differ\ndiff --git a/resources/gis/routing/pgrouting.png b/resources/gis/routing/pgrouting.png\nnew file mode 100644\nindex 000000000..65ca4f3e2\nBinary files /dev/null and b/resources/gis/routing/pgrouting.png differ\ndiff --git a/resources/gis/routing/valhalla.png b/resources/gis/routing/valhalla.png\nnew file mode 100644\nindex 000000000..4756cf99f\nBinary files /dev/null and b/resources/gis/routing/valhalla.png differ\ndiff --git a/resources/gis/server/actinia.png b/resources/gis/server/actinia.png\nnew file mode 100644\nindex 000000000..f75392a24\nBinary files /dev/null and b/resources/gis/server/actinia.png differ\ndiff --git a/resources/gis/server/baremaps.png b/resources/gis/server/baremaps.png\nnew file mode 100644\nindex 000000000..1614db7ba\nBinary files /dev/null and b/resources/gis/server/baremaps.png differ\ndiff --git a/resources/gis/server/deegree.png b/resources/gis/server/deegree.png\nnew file mode 100644\nindex 000000000..7ca174257\nBinary files /dev/null and b/resources/gis/server/deegree.png differ\ndiff --git a/resources/gis/server/g3w-suite.png b/resources/gis/server/g3w-suite.png\nnew file mode 100644\nindex 000000000..9deea2061\nBinary files /dev/null and b/resources/gis/server/g3w-suite.png differ\ndiff --git a/resources/gis/server/geohealthcheck.png b/resources/gis/server/geohealthcheck.png\nnew file mode 100644\nindex 000000000..852995537\nBinary files /dev/null and b/resources/gis/server/geohealthcheck.png differ\ndiff --git a/resources/gis/server/geomapfish.png b/resources/gis/server/geomapfish.png\nnew file mode 100644\nindex 000000000..631e38573\nBinary files /dev/null and b/resources/gis/server/geomapfish.png differ\ndiff --git a/resources/gis/server/geomesa.png b/resources/gis/server/geomesa.png\nnew file mode 100644\nindex 000000000..8fe1a64dd\nBinary files /dev/null and b/resources/gis/server/geomesa.png differ\ndiff --git a/resources/gis/server/geonetwork.png b/resources/gis/server/geonetwork.png\nnew file mode 100644\nindex 000000000..8d1170817\nBinary files /dev/null and b/resources/gis/server/geonetwork.png differ\ndiff --git a/resources/gis/server/geonode.png b/resources/gis/server/geonode.png\nnew file mode 100644\nindex 000000000..b8de5c259\nBinary files /dev/null and b/resources/gis/server/geonode.png differ\ndiff --git a/resources/gis/server/georchestra.png b/resources/gis/server/georchestra.png\nnew file mode 100644\nindex 000000000..3fe1b1c9f\nBinary files /dev/null and b/resources/gis/server/georchestra.png differ\ndiff --git a/resources/gis/server/geoserver.png b/resources/gis/server/geoserver.png\nnew file mode 100644\nindex 000000000..cea9265ed\nBinary files /dev/null and b/resources/gis/server/geoserver.png differ\ndiff --git a/resources/gis/server/geowebcache.png b/resources/gis/server/geowebcache.png\nnew file mode 100644\nindex 000000000..ff5277dd9\nBinary files /dev/null and b/resources/gis/server/geowebcache.png differ\ndiff --git a/resources/gis/server/kepler.png b/resources/gis/server/kepler.png\nnew file mode 100644\nindex 000000000..23e1428ef\nBinary files /dev/null and b/resources/gis/server/kepler.png differ\ndiff --git a/resources/gis/server/mapproxy.png b/resources/gis/server/mapproxy.png\nnew file mode 100644\nindex 000000000..9b119df67\nBinary files /dev/null and b/resources/gis/server/mapproxy.png differ\ndiff --git a/resources/gis/server/mapserver.png b/resources/gis/server/mapserver.png\nnew file mode 100644\nindex 000000000..f03354df8\nBinary files /dev/null and b/resources/gis/server/mapserver.png differ\ndiff --git a/resources/gis/server/mapstore.png b/resources/gis/server/mapstore.png\nnew file mode 100644\nindex 000000000..c8bf5fdbf\nBinary files /dev/null and b/resources/gis/server/mapstore.png differ\ndiff --git a/resources/gis/server/mviewer.png b/resources/gis/server/mviewer.png\nnew file mode 100644\nindex 000000000..0b4166ccd\nBinary files /dev/null and b/resources/gis/server/mviewer.png differ\ndiff --git a/resources/gis/server/pg_tileserv.png b/resources/gis/server/pg_tileserv.png\nnew file mode 100644\nindex 000000000..be52c5f58\nBinary files /dev/null and b/resources/gis/server/pg_tileserv.png differ\ndiff --git a/resources/gis/server/pycsw.png b/resources/gis/server/pycsw.png\nnew file mode 100644\nindex 000000000..acf6c054b\nBinary files /dev/null and b/resources/gis/server/pycsw.png differ\ndiff --git a/resources/gis/server/pygeoapi.png b/resources/gis/server/pygeoapi.png\nnew file mode 100644\nindex 000000000..8517f80e6\nBinary files /dev/null and b/resources/gis/server/pygeoapi.png differ\ndiff --git a/resources/gis/server/qgis-server.png b/resources/gis/server/qgis-server.png\nnew file mode 100644\nindex 000000000..3dc4b1cd4\nBinary files /dev/null and b/resources/gis/server/qgis-server.png differ\ndiff --git a/resources/gis/server/zooproject.png b/resources/gis/server/zooproject.png\nnew file mode 100644\nindex 000000000..53e71524c\nBinary files /dev/null and b/resources/gis/server/zooproject.png differ\ndiff --git a/scripts/resource.py b/scripts/resource.py\nindex bc98a72cf..02bbe746b 100644\n--- a/scripts/resource.py\n+++ b/scripts/resource.py\n@@ -136,6 +136,9 @@ def cleaner_outscale(f):\n def cleaner_openstack(f):\n     return f.lower()\n \n+def cleaner_gis(f):\n+    return f.lower()\n+\n \n cleaners = {\n     \"onprem\": cleaner_onprem,\n@@ -154,6 +157,7 @@ def cleaner_openstack(f):\n     \"outscale\": cleaner_outscale,\n     \"generic\": cleaner_generic,\n     \"openstack\": cleaner_openstack,\n+    \"gis\": cleaner_gis,\n }\n \n \ndiff --git a/website/i18n/en.json b/website/i18n/en.json\nindex 7af9afd01..e411b3437 100644\n--- a/website/i18n/en.json\n+++ b/website/i18n/en.json\n@@ -53,6 +53,9 @@\n       \"nodes/generic\": {\n         \"title\": \"Generic\"\n       },\n+      \"nodes/gis\": {\n+        \"title\": \"GIS\"\n+      },\n       \"nodes/ibm\": {\n         \"title\": \"IBM\"\n       },\ndiff --git a/website/sidebars.json b/website/sidebars.json\nindex 97086c081..e6b928fd2 100644\n--- a/website/sidebars.json\n+++ b/website/sidebars.json\n@@ -28,7 +28,8 @@\n       \"nodes/programming\",\n       \"nodes/saas\",\n       \"nodes/c4\",\n-      \"nodes/custom\"\n+      \"nodes/custom\",\n+      \"nodes/gis\"\n     ]\n   }\n }\ndiff --git a/website/static/img/resources/cas.png b/website/static/img/resources/cas.png\nnew file mode 100644\nindex 000000000..1f69615ff\nBinary files /dev/null and b/website/static/img/resources/cas.png differ\ndiff --git a/website/static/img/resources/gis/cli/gdal.png b/website/static/img/resources/gis/cli/gdal.png\nnew file mode 100644\nindex 000000000..19c93bde8\nBinary files /dev/null and b/website/static/img/resources/gis/cli/gdal.png differ\ndiff --git a/website/static/img/resources/gis/cli/imposm.png b/website/static/img/resources/gis/cli/imposm.png\nnew file mode 100644\nindex 000000000..6bbb013ba\nBinary files /dev/null and b/website/static/img/resources/gis/cli/imposm.png differ\ndiff --git a/website/static/img/resources/gis/cli/lastools.png b/website/static/img/resources/gis/cli/lastools.png\nnew file mode 100644\nindex 000000000..7e5848eea\nBinary files /dev/null and b/website/static/img/resources/gis/cli/lastools.png differ\ndiff --git a/website/static/img/resources/gis/cli/mapnik.png b/website/static/img/resources/gis/cli/mapnik.png\nnew file mode 100644\nindex 000000000..622cacf40\nBinary files /dev/null and b/website/static/img/resources/gis/cli/mapnik.png differ\ndiff --git a/website/static/img/resources/gis/cli/mdal.png b/website/static/img/resources/gis/cli/mdal.png\nnew file mode 100644\nindex 000000000..b1e1ed400\nBinary files /dev/null and b/website/static/img/resources/gis/cli/mdal.png differ\ndiff --git a/website/static/img/resources/gis/cli/pdal.png b/website/static/img/resources/gis/cli/pdal.png\nnew file mode 100644\nindex 000000000..522949b61\nBinary files /dev/null and b/website/static/img/resources/gis/cli/pdal.png differ\ndiff --git a/website/static/img/resources/gis/cplusplus/mapnik.png b/website/static/img/resources/gis/cplusplus/mapnik.png\nnew file mode 100644\nindex 000000000..622cacf40\nBinary files /dev/null and b/website/static/img/resources/gis/cplusplus/mapnik.png differ\ndiff --git a/website/static/img/resources/gis/data/ban.png b/website/static/img/resources/gis/data/ban.png\nnew file mode 100644\nindex 000000000..af20419ba\nBinary files /dev/null and b/website/static/img/resources/gis/data/ban.png differ\ndiff --git a/website/static/img/resources/gis/data/here.png b/website/static/img/resources/gis/data/here.png\nnew file mode 100644\nindex 000000000..62b4f3045\nBinary files /dev/null and b/website/static/img/resources/gis/data/here.png differ\ndiff --git a/website/static/img/resources/gis/data/ign.png b/website/static/img/resources/gis/data/ign.png\nnew file mode 100644\nindex 000000000..c9b0e8c84\nBinary files /dev/null and b/website/static/img/resources/gis/data/ign.png differ\ndiff --git a/website/static/img/resources/gis/data/nev_logo.png b/website/static/img/resources/gis/data/nev_logo.png\nnew file mode 100644\nindex 000000000..d56fe14e7\nBinary files /dev/null and b/website/static/img/resources/gis/data/nev_logo.png differ\ndiff --git a/website/static/img/resources/gis/data/openstreetmap.png b/website/static/img/resources/gis/data/openstreetmap.png\nnew file mode 100644\nindex 000000000..385bd973e\nBinary files /dev/null and b/website/static/img/resources/gis/data/openstreetmap.png differ\ndiff --git a/website/static/img/resources/gis/database/logo_square_postgis.png b/website/static/img/resources/gis/database/logo_square_postgis.png\nnew file mode 100644\nindex 000000000..0368e76ed\nBinary files /dev/null and b/website/static/img/resources/gis/database/logo_square_postgis.png differ\ndiff --git a/website/static/img/resources/gis/database/postgis.png b/website/static/img/resources/gis/database/postgis.png\nnew file mode 100644\nindex 000000000..a6dc7b42c\nBinary files /dev/null and b/website/static/img/resources/gis/database/postgis.png differ\ndiff --git a/website/static/img/resources/gis/desktop/maptunik.png b/website/static/img/resources/gis/desktop/maptunik.png\nnew file mode 100644\nindex 000000000..4710e80f8\nBinary files /dev/null and b/website/static/img/resources/gis/desktop/maptunik.png differ\ndiff --git a/website/static/img/resources/gis/desktop/qgis.png b/website/static/img/resources/gis/desktop/qgis.png\nnew file mode 100644\nindex 000000000..3dc4b1cd4\nBinary files /dev/null and b/website/static/img/resources/gis/desktop/qgis.png differ\ndiff --git a/website/static/img/resources/gis/format/geopackage.png b/website/static/img/resources/gis/format/geopackage.png\nnew file mode 100644\nindex 000000000..0ff77fbf4\nBinary files /dev/null and b/website/static/img/resources/gis/format/geopackage.png differ\ndiff --git a/website/static/img/resources/gis/format/geoparquet.png b/website/static/img/resources/gis/format/geoparquet.png\nnew file mode 100644\nindex 000000000..d5ea1fd09\nBinary files /dev/null and b/website/static/img/resources/gis/format/geoparquet.png differ\ndiff --git a/website/static/img/resources/gis/geocoding/addok.png b/website/static/img/resources/gis/geocoding/addok.png\nnew file mode 100644\nindex 000000000..932824932\nBinary files /dev/null and b/website/static/img/resources/gis/geocoding/addok.png differ\ndiff --git a/website/static/img/resources/gis/geocoding/gisgraphy.png b/website/static/img/resources/gis/geocoding/gisgraphy.png\nnew file mode 100644\nindex 000000000..2d23928f7\nBinary files /dev/null and b/website/static/img/resources/gis/geocoding/gisgraphy.png differ\ndiff --git a/website/static/img/resources/gis/geocoding/nominatim.png b/website/static/img/resources/gis/geocoding/nominatim.png\nnew file mode 100644\nindex 000000000..385bd973e\nBinary files /dev/null and b/website/static/img/resources/gis/geocoding/nominatim.png differ\ndiff --git a/website/static/img/resources/gis/geocoding/pelias.png b/website/static/img/resources/gis/geocoding/pelias.png\nnew file mode 100644\nindex 000000000..6037fdeca\nBinary files /dev/null and b/website/static/img/resources/gis/geocoding/pelias.png differ\ndiff --git a/website/static/img/resources/gis/georchestra/analytics.svg b/website/static/img/resources/gis/georchestra/analytics.svg\nnew file mode 100644\nindex 000000000..fcd4027db\n--- /dev/null\n+++ b/website/static/img/resources/gis/georchestra/analytics.svg\n@@ -0,0 +1,355 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"-47.693263\"\n+     inkscape:cy=\"-98.669757\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <g\n+       id=\"g5250\"\n+       transform=\"translate(-0.20368658,-0.10736832)\">\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:0.168649;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620\"\n+         width=\"4.23177\"\n+         height=\"14.389493\"\n+         x=\"5.1819592\"\n+         y=\"7.5520296\" />\n+      <rect\n+         style=\"fill:#2a2661;fill-opacity:1;stroke:none;stroke-width:0.144688;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-1\"\n+         width=\"4.23177\"\n+         height=\"10.591175\"\n+         x=\"9.4137173\"\n+         y=\"11.350343\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:0.097886;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-2\"\n+         width=\"4.23177\"\n+         height=\"4.847527\"\n+         x=\"13.645481\"\n+         y=\"17.093992\" />\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.182146;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect371620-9\"\n+         width=\"4.23177\"\n+         height=\"16.784679\"\n+         x=\"17.877266\"\n+         y=\"5.1568346\" />\n+    </g>\n+  </g>\n+</svg>\ndiff --git a/website/static/img/resources/gis/georchestra/data_api.svg b/website/static/img/resources/gis/georchestra/data_api.svg\nnew file mode 100644\nindex 000000000..004328e81\n--- /dev/null\n+++ b/website/static/img/resources/gis/georchestra/data_api.svg\n@@ -0,0 +1,335 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"54.259726\"\n+     inkscape:cy=\"-71.021489\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <g\n+       id=\"g4398\"\n+       transform=\"translate(-14.400962,-1.7821191)\">\n+      <rect\n+         style=\"fill:#2a2661;fill-opacity:1;stroke:none;stroke-width:0.450299;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect291252-4-7\"\n+         width=\"16.91852\"\n+         height=\"16.91852\"\n+         x=\"19.383512\"\n+         y=\"6.7646694\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-3\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"24.706367\"\n+         y=\"8.9828644\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-7\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"31.020798\"\n+         y=\"8.9828644\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-4\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"21.549156\"\n+         y=\"12.140085\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-37-2\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"27.863579\"\n+         y=\"12.140085\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-3-6\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"24.706367\"\n+         y=\"15.2973\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-7-7\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"31.020798\"\n+         y=\"15.2973\" />\n+      <rect\n+         style=\"fill:#2dd9cb;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-4-6\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"21.549156\"\n+         y=\"18.454504\" />\n+      <rect\n+         style=\"fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:2.13188;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect305737-37-2-9\"\n+         width=\"3.1572123\"\n+         height=\"3.1572123\"\n+         x=\"27.863579\"\n+         y=\"18.454504\" />\n+    </g>\n+  </g>\n+</svg>\ndiff --git a/website/static/img/resources/gis/georchestra/datafeeder.svg b/website/static/img/resources/gis/georchestra/datafeeder.svg\nnew file mode 100644\nindex 000000000..c709fc467\n--- /dev/null\n+++ b/website/static/img/resources/gis/georchestra/datafeeder.svg\n@@ -0,0 +1,465 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!-- Created with Inkscape (http://www.inkscape.org/) -->\n+\n+<svg\n+   width=\"63.944012\"\n+   height=\"63.944012\"\n+   viewBox=\"0 0 16.91852 16.91852\"\n+   version=\"1.1\"\n+   id=\"svg1161\"\n+   inkscape:version=\"1.1 (c68e22c387, 2021-05-23)\"\n+   sodipodi:docname=\"geoserver_icon.svg\"\n+   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n+   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n+   xmlns=\"http://www.w3.org/2000/svg\"\n+   xmlns:svg=\"http://www.w3.org/2000/svg\">\n+  <sodipodi:namedview\n+     id=\"namedview1163\"\n+     pagecolor=\"#ffffff\"\n+     bordercolor=\"#666666\"\n+     borderopacity=\"1.0\"\n+     inkscape:pageshadow=\"2\"\n+     inkscape:pageopacity=\"0.0\"\n+     inkscape:pagecheckerboard=\"0\"\n+     inkscape:document-units=\"mm\"\n+     showgrid=\"false\"\n+     units=\"px\"\n+     fit-margin-top=\"0\"\n+     fit-margin-left=\"0\"\n+     fit-margin-right=\"0\"\n+     fit-margin-bottom=\"0\"\n+     inkscape:zoom=\"2.8934905\"\n+     inkscape:cx=\"-52.531709\"\n+     inkscape:cy=\"-15.724952\"\n+     inkscape:window-width=\"2400\"\n+     inkscape:window-height=\"1271\"\n+     inkscape:window-x=\"2391\"\n+     inkscape:window-y=\"-9\"\n+     inkscape:window-maximized=\"1\"\n+     inkscape:current-layer=\"layer1\" />\n+  <defs\n+     id=\"defs1158\">\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-9-3-0-8-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-8-8-7-8-4\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-3-6-6-0-1\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-6-3-6-6-4\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-5-8-4-9-0\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-3-2-8-7-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-1-7-4-1-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-3-3-5-2-7\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-4-2-8-2-5\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-8-0-2-2-9\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353862-4\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353864-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353858-9\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353860-8\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353854-7\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353856-1\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath353850-8\">\n+      <rect\n+         style=\"fill:none;fill-opacity:1;stroke:#e2c015;stroke-width:0.49;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0;paint-order:markers stroke fill\"\n+         id=\"rect353852-0\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"180.56668\"\n+         y=\"183.06766\" />\n+    </clipPath>\n+    <clipPath\n+       clipPathUnits=\"userSpaceOnUse\"\n+       id=\"clipPath371594-3\">\n+      <rect\n+         style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.989769;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+         id=\"rect371596-5\"\n+         width=\"37.187374\"\n+         height=\"37.187374\"\n+         x=\"217.75404\"\n+         y=\"145.88028\" />\n+    </clipPath>\n+  </defs>\n+  <g\n+     inkscape:label=\"Calque 1\"\n+     inkscape:groupmode=\"layer\"\n+     id=\"layer1\"\n+     transform=\"translate(-4.9825511,-4.9825504)\">\n+    <rect\n+       style=\"fill:#85127e;fill-opacity:1;stroke:none;stroke-width:0.456273;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"rect291252-7-5\"\n+       width=\"17.143002\"\n+       height=\"17.143002\"\n+       x=\"5.006495\"\n+       y=\"4.9115372\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-3\"\n+       cx=\"9.3531199\"\n+       cy=\"9.3413706\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-7-3\"\n+       cx=\"17.765553\"\n+       cy=\"17.766909\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-7-6-3\"\n+       cx=\"17.807709\"\n+       cy=\"9.2519331\"\n+       r=\"3.0508161\" />\n+    <circle\n+       style=\"fill:none;fill-opacity:1;stroke:#ffffff;stroke-width:2.50376;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:markers stroke fill\"\n+       id=\"path296424-2-4\"\n+       cx=\"9.3393154\"\n+       cy=\"17.729809\"\n+       r=\"3.0508161\" />\n+  </g>\n+</svg>\ndiff --git a/website/static/img/resources/gis/gis.png b/website/static/img/resources/gis/gis.png\nnew file mode 100644\nindex 000000000..95e4a2ef4\nBinary files /dev/null and b/website/static/img/resources/gis/gis.png differ\ndiff --git a/website/static/img/resources/gis/java/geotools.png b/website/static/img/resources/gis/java/geotools.png\nnew file mode 100644\nindex 000000000..624de5e16\nBinary files /dev/null and b/website/static/img/resources/gis/java/geotools.png differ\ndiff --git a/website/static/img/resources/gis/javascript/cesium.png b/website/static/img/resources/gis/javascript/cesium.png\nnew file mode 100644\nindex 000000000..299a77d07\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/cesium.png differ\ndiff --git a/website/static/img/resources/gis/javascript/favicon.ico b/website/static/img/resources/gis/javascript/favicon.ico\nnew file mode 100644\nindex 000000000..bc4bafb6e\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/favicon.ico differ\ndiff --git a/website/static/img/resources/gis/javascript/geostyler.png b/website/static/img/resources/gis/javascript/geostyler.png\nnew file mode 100644\nindex 000000000..ba4b15849\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/geostyler.png differ\ndiff --git a/website/static/img/resources/gis/javascript/keplerjs.png b/website/static/img/resources/gis/javascript/keplerjs.png\nnew file mode 100644\nindex 000000000..88363f020\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/keplerjs.png differ\ndiff --git a/website/static/img/resources/gis/javascript/leaflet.png b/website/static/img/resources/gis/javascript/leaflet.png\nnew file mode 100644\nindex 000000000..de9bc2195\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/leaflet.png differ\ndiff --git a/website/static/img/resources/gis/javascript/maplibre.png b/website/static/img/resources/gis/javascript/maplibre.png\nnew file mode 100644\nindex 000000000..245029532\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/maplibre.png differ\ndiff --git a/website/static/img/resources/gis/javascript/ol-ext.png b/website/static/img/resources/gis/javascript/ol-ext.png\nnew file mode 100644\nindex 000000000..091fa6064\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/ol-ext.png differ\ndiff --git a/website/static/img/resources/gis/javascript/openlayers.png b/website/static/img/resources/gis/javascript/openlayers.png\nnew file mode 100644\nindex 000000000..1ece99dbd\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/openlayers.png differ\ndiff --git a/website/static/img/resources/gis/javascript/png-transparent-leaflet-javascript-library-web-browser-plug-in-software-framework-others-leaf-rss-map.png b/website/static/img/resources/gis/javascript/png-transparent-leaflet-javascript-library-web-browser-plug-in-software-framework-others-leaf-rss-map.png\nnew file mode 100644\nindex 000000000..85bfda1b9\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/png-transparent-leaflet-javascript-library-web-browser-plug-in-software-framework-others-leaf-rss-map.png differ\ndiff --git a/website/static/img/resources/gis/javascript/turfjs.png b/website/static/img/resources/gis/javascript/turfjs.png\nnew file mode 100644\nindex 000000000..fab4c46f4\nBinary files /dev/null and b/website/static/img/resources/gis/javascript/turfjs.png differ\ndiff --git a/website/static/img/resources/gis/mobile/88134486.png b/website/static/img/resources/gis/mobile/88134486.png\nnew file mode 100644\nindex 000000000..87a80c148\nBinary files /dev/null and b/website/static/img/resources/gis/mobile/88134486.png differ\ndiff --git a/website/static/img/resources/gis/mobile/mergin.png b/website/static/img/resources/gis/mobile/mergin.png\nnew file mode 100644\nindex 000000000..00289fc3d\nBinary files /dev/null and b/website/static/img/resources/gis/mobile/mergin.png differ\ndiff --git a/website/static/img/resources/gis/mobile/qfield.png b/website/static/img/resources/gis/mobile/qfield.png\nnew file mode 100644\nindex 000000000..eb8f8c19b\nBinary files /dev/null and b/website/static/img/resources/gis/mobile/qfield.png differ\ndiff --git a/website/static/img/resources/gis/mobile/smash.png b/website/static/img/resources/gis/mobile/smash.png\nnew file mode 100644\nindex 000000000..38256c378\nBinary files /dev/null and b/website/static/img/resources/gis/mobile/smash.png differ\ndiff --git a/website/static/img/resources/gis/ogc/ogc.png b/website/static/img/resources/gis/ogc/ogc.png\nnew file mode 100644\nindex 000000000..95b2f14f4\nBinary files /dev/null and b/website/static/img/resources/gis/ogc/ogc.png differ\ndiff --git a/website/static/img/resources/gis/ogc/wfs.png b/website/static/img/resources/gis/ogc/wfs.png\nnew file mode 100644\nindex 000000000..248ad0349\nBinary files /dev/null and b/website/static/img/resources/gis/ogc/wfs.png differ\ndiff --git a/website/static/img/resources/gis/ogc/wms.png b/website/static/img/resources/gis/ogc/wms.png\nnew file mode 100644\nindex 000000000..2893bbab4\nBinary files /dev/null and b/website/static/img/resources/gis/ogc/wms.png differ\ndiff --git a/website/static/img/resources/gis/organization/osgeo.png b/website/static/img/resources/gis/organization/osgeo.png\nnew file mode 100644\nindex 000000000..87095a95c\nBinary files /dev/null and b/website/static/img/resources/gis/organization/osgeo.png differ\ndiff --git a/website/static/img/resources/gis/python/geopandas.png b/website/static/img/resources/gis/python/geopandas.png\nnew file mode 100644\nindex 000000000..2bd72973c\nBinary files /dev/null and b/website/static/img/resources/gis/python/geopandas.png differ\ndiff --git a/website/static/img/resources/gis/python/pysal.png b/website/static/img/resources/gis/python/pysal.png\nnew file mode 100644\nindex 000000000..3e862666b\nBinary files /dev/null and b/website/static/img/resources/gis/python/pysal.png differ\ndiff --git a/website/static/img/resources/gis/routing/graphhopper.png b/website/static/img/resources/gis/routing/graphhopper.png\nnew file mode 100644\nindex 000000000..7d9bda144\nBinary files /dev/null and b/website/static/img/resources/gis/routing/graphhopper.png differ\ndiff --git a/website/static/img/resources/gis/routing/osmr.png b/website/static/img/resources/gis/routing/osmr.png\nnew file mode 100644\nindex 000000000..b2a922ab1\nBinary files /dev/null and b/website/static/img/resources/gis/routing/osmr.png differ\ndiff --git a/website/static/img/resources/gis/routing/osrm.png b/website/static/img/resources/gis/routing/osrm.png\nnew file mode 100644\nindex 000000000..b2a922ab1\nBinary files /dev/null and b/website/static/img/resources/gis/routing/osrm.png differ\ndiff --git a/website/static/img/resources/gis/routing/pgrouting.png b/website/static/img/resources/gis/routing/pgrouting.png\nnew file mode 100644\nindex 000000000..65ca4f3e2\nBinary files /dev/null and b/website/static/img/resources/gis/routing/pgrouting.png differ\ndiff --git a/website/static/img/resources/gis/routing/valhalla.png b/website/static/img/resources/gis/routing/valhalla.png\nnew file mode 100644\nindex 000000000..4756cf99f\nBinary files /dev/null and b/website/static/img/resources/gis/routing/valhalla.png differ\ndiff --git a/website/static/img/resources/gis/server/actinia.png b/website/static/img/resources/gis/server/actinia.png\nnew file mode 100644\nindex 000000000..f75392a24\nBinary files /dev/null and b/website/static/img/resources/gis/server/actinia.png differ\ndiff --git a/website/static/img/resources/gis/server/baremaps.png b/website/static/img/resources/gis/server/baremaps.png\nnew file mode 100644\nindex 000000000..1614db7ba\nBinary files /dev/null and b/website/static/img/resources/gis/server/baremaps.png differ\ndiff --git a/website/static/img/resources/gis/server/deegree.png b/website/static/img/resources/gis/server/deegree.png\nnew file mode 100644\nindex 000000000..7ca174257\nBinary files /dev/null and b/website/static/img/resources/gis/server/deegree.png differ\ndiff --git a/website/static/img/resources/gis/server/g3w-suite.png b/website/static/img/resources/gis/server/g3w-suite.png\nnew file mode 100644\nindex 000000000..9deea2061\nBinary files /dev/null and b/website/static/img/resources/gis/server/g3w-suite.png differ\ndiff --git a/website/static/img/resources/gis/server/geohealthcheck.png b/website/static/img/resources/gis/server/geohealthcheck.png\nnew file mode 100644\nindex 000000000..852995537\nBinary files /dev/null and b/website/static/img/resources/gis/server/geohealthcheck.png differ\ndiff --git a/website/static/img/resources/gis/server/geomapfish.jpg b/website/static/img/resources/gis/server/geomapfish.jpg\nnew file mode 100644\nindex 000000000..a39c869ab\nBinary files /dev/null and b/website/static/img/resources/gis/server/geomapfish.jpg differ\ndiff --git a/website/static/img/resources/gis/server/geomapfish.png b/website/static/img/resources/gis/server/geomapfish.png\nnew file mode 100644\nindex 000000000..631e38573\nBinary files /dev/null and b/website/static/img/resources/gis/server/geomapfish.png differ\ndiff --git a/website/static/img/resources/gis/server/geomesa.png b/website/static/img/resources/gis/server/geomesa.png\nnew file mode 100644\nindex 000000000..8fe1a64dd\nBinary files /dev/null and b/website/static/img/resources/gis/server/geomesa.png differ\ndiff --git a/website/static/img/resources/gis/server/geonetwork.png b/website/static/img/resources/gis/server/geonetwork.png\nnew file mode 100644\nindex 000000000..8d1170817\nBinary files /dev/null and b/website/static/img/resources/gis/server/geonetwork.png differ\ndiff --git a/website/static/img/resources/gis/server/geonode.png b/website/static/img/resources/gis/server/geonode.png\nnew file mode 100644\nindex 000000000..b8de5c259\nBinary files /dev/null and b/website/static/img/resources/gis/server/geonode.png differ\ndiff --git a/website/static/img/resources/gis/server/georchestra.png b/website/static/img/resources/gis/server/georchestra.png\nnew file mode 100644\nindex 000000000..3fe1b1c9f\nBinary files /dev/null and b/website/static/img/resources/gis/server/georchestra.png differ\ndiff --git a/website/static/img/resources/gis/server/geoserver.png b/website/static/img/resources/gis/server/geoserver.png\nnew file mode 100644\nindex 000000000..cea9265ed\nBinary files /dev/null and b/website/static/img/resources/gis/server/geoserver.png differ\ndiff --git a/website/static/img/resources/gis/server/geowebcache.png b/website/static/img/resources/gis/server/geowebcache.png\nnew file mode 100644\nindex 000000000..ff5277dd9\nBinary files /dev/null and b/website/static/img/resources/gis/server/geowebcache.png differ\ndiff --git a/website/static/img/resources/gis/server/kepler.png b/website/static/img/resources/gis/server/kepler.png\nnew file mode 100644\nindex 000000000..23e1428ef\nBinary files /dev/null and b/website/static/img/resources/gis/server/kepler.png differ\ndiff --git a/website/static/img/resources/gis/server/logo-geonetwork10.png b/website/static/img/resources/gis/server/logo-geonetwork10.png\nnew file mode 100644\nindex 000000000..ff2d4d527\nBinary files /dev/null and b/website/static/img/resources/gis/server/logo-geonetwork10.png differ\ndiff --git a/website/static/img/resources/gis/server/mapproxy.png b/website/static/img/resources/gis/server/mapproxy.png\nnew file mode 100644\nindex 000000000..9b119df67\nBinary files /dev/null and b/website/static/img/resources/gis/server/mapproxy.png differ\ndiff --git a/website/static/img/resources/gis/server/mapserver.png b/website/static/img/resources/gis/server/mapserver.png\nnew file mode 100644\nindex 000000000..f03354df8\nBinary files /dev/null and b/website/static/img/resources/gis/server/mapserver.png differ\ndiff --git a/website/static/img/resources/gis/server/mapstore.png b/website/static/img/resources/gis/server/mapstore.png\nnew file mode 100644\nindex 000000000..c8bf5fdbf\nBinary files /dev/null and b/website/static/img/resources/gis/server/mapstore.png differ\ndiff --git a/website/static/img/resources/gis/server/mviewer.png b/website/static/img/resources/gis/server/mviewer.png\nnew file mode 100644\nindex 000000000..0b4166ccd\nBinary files /dev/null and b/website/static/img/resources/gis/server/mviewer.png differ\ndiff --git a/website/static/img/resources/gis/server/nuCDhnVv_400x400.jpg b/website/static/img/resources/gis/server/nuCDhnVv_400x400.jpg\nnew file mode 100644\nindex 000000000..cab4e8f73\nBinary files /dev/null and b/website/static/img/resources/gis/server/nuCDhnVv_400x400.jpg differ\ndiff --git a/website/static/img/resources/gis/server/pg_tileserv.png b/website/static/img/resources/gis/server/pg_tileserv.png\nnew file mode 100644\nindex 000000000..be52c5f58\nBinary files /dev/null and b/website/static/img/resources/gis/server/pg_tileserv.png differ\ndiff --git a/website/static/img/resources/gis/server/pycsw.png b/website/static/img/resources/gis/server/pycsw.png\nnew file mode 100644\nindex 000000000..acf6c054b\nBinary files /dev/null and b/website/static/img/resources/gis/server/pycsw.png differ\ndiff --git a/website/static/img/resources/gis/server/pygeoapi.png b/website/static/img/resources/gis/server/pygeoapi.png\nnew file mode 100644\nindex 000000000..8517f80e6\nBinary files /dev/null and b/website/static/img/resources/gis/server/pygeoapi.png differ\ndiff --git a/website/static/img/resources/gis/server/qgis-server.png b/website/static/img/resources/gis/server/qgis-server.png\nnew file mode 100644\nindex 000000000..3dc4b1cd4\nBinary files /dev/null and b/website/static/img/resources/gis/server/qgis-server.png differ\ndiff --git a/website/static/img/resources/gis/server/zooproject.png b/website/static/img/resources/gis/server/zooproject.png\nnew file mode 100644\nindex 000000000..53e71524c\nBinary files /dev/null and b/website/static/img/resources/gis/server/zooproject.png differ\ndiff --git a/website/static/img/resources/gis/toolkit/mapnik.png b/website/static/img/resources/gis/toolkit/mapnik.png\nnew file mode 100644\nindex 000000000..622cacf40\nBinary files /dev/null and b/website/static/img/resources/gis/toolkit/mapnik.png differ\ndiff --git a/website/static/img/resources/onprem/certificates/certbot.png b/website/static/img/resources/onprem/certificates/certbot.png\nnew file mode 100644\nindex 000000000..9659a81b5\nBinary files /dev/null and b/website/static/img/resources/onprem/certificates/certbot.png differ\ndiff --git a/website/static/img/resources/openldap.png b/website/static/img/resources/openldap.png\nnew file mode 100644\nindex 000000000..c55718f80\nBinary files /dev/null and b/website/static/img/resources/openldap.png differ\n",
    "diff_length": 155363
  },
  {
    "index": 7,
    "repository": "mingrammer/diagrams",
    "pr_title": "Basic support for C4 model primitives.",
    "pr_body": "[C4](https://c4model.com/) is a model for visualizing software architecture. It defines a common terminology and a few core diagrams at different abstraction levels. We primarily use the System Landscape, System Context and Container diagrams so I started with just the entities needed for those. \r\n\r\nFor a definition like this:\r\n```python\r\nfrom diagrams import Diagram\r\nfrom diagrams.c4 import Person, Container, Database, System, SystemBoundary, Relationship\r\n\r\ngraph_attr = {\r\n    \"splines\": \"spli",
    "pr_number": 508,
    "comments": [
      "@mingrammer Any thoughts on this?",
      "@mbruggmann \r\nIt's a good start I can help to add more feature and documentation but I still want to wait if @mingrammer is interested to add it in diagrams.\r\nI also checked about C4 website and I think that is better to confirm that we can implement (i.e feasibility) more feature before adding any C4 support, otherwise we will have a poor implementation.\r\nMaybe we can start by listing what can be done and a roadmap! \r\nIf it's not merged in this lib we can always start a fork! ðŸ˜€\r\n",
      "Would be great to see c4 support in diagrams. @mbruggmann implementation looks promising, it has everything what is important",
      "@mbruggmann I dont know diagrams capabilities much but is it possible to make those components clickable and animated? So lets say you have your internet banking system as system boundary, one box. You double click it and it expands to more granular version like we see on screenshot you attached? ",
      "@BBartosz  have a look at https://graphviz.org/doc/info/attrs.html#d:URL ",
      "@BBartosz I don't know of any native animation capability in graphviz or the wrapper libraries.  Have a look at this library which uses d3 to animate https://github.com/magjac/d3-graphviz#examples \r\n\r\nI have not tested, but it looks like to create your graphs with this library, save the dot files, then use the magjac/d3-graphviz animation library on the dot files.",
      "@BBartosz What we do is roughly like this:\r\n\r\n* Have an internal website where we host diagram pages\r\n* Diagram pages follow a known URL scheme to address each system/container/..., like `my.internal.website/diagrams/container-id`\r\n* Use the `URL` or `href` attributes in the diagram to create links to other pages, eg `diagrams.c4.Container(..., href='my.internal.website/diagrams/container-id')`\r\n* Render the diagrams to svg to retain the links\r\n\r\nCurrently this is set up using PlantUML but I don't see a reason why it wouldn't work using diagrams in a similar fashion. I haven't tried though.",
      "@mbruggmann Thats also possibility. Just have CI to generate graphs and put them into static page manually/have a script to do this. Something similar is done here: https://adrianvlupu.github.io/C4-Builder/#/?id=overview",
      "Great. I'll review this feature soon.",
      "@mingrammer are you able to review this. I would love to see this feature asap",
      "Is the \"view\" part strictly separated from the \"model\"? I.e. can you create exactly one model and derive different views from that?",
      "@venthur At the moment, no. The suggested implementation is purely about rendering one view. So if you wanted to model entities/relationships, you'd need to do that outside of diagrams and just use this in the rendering path.",
      "@mingrammer Any way we can help get this PR over the line as would love to use this natively?",
      "Looking forward to this feature! I just bought @mingrammer [5 coffees](https://www.buymeacoffee.com/mingrammer). Maybe a little caffeine is all that's needed to help get this across the finish line. ðŸ˜‰ ",
      "I'll review this feature this week!! Sorry for the really late review.",
      "Hi @mingrammer, any chance to review and merge it soon? ðŸ˜„ It would be awesome!",
      "@mingrammer Cool, no worries. Documentation added!",
      "I'm on work time. I'll release the new version tomorrow morning. (KST)",
      "[diagrams@v0.22.0](https://github.com/mingrammer/diagrams/releases/tag/v0.22.0) is now released."
    ],
    "num_comments": 19,
    "diff": "diff --git a/README.md b/README.md\nindex d2883dd04..88869718d 100644\n--- a/README.md\n+++ b/README.md\n@@ -35,6 +35,7 @@ Diagrams lets you draw the cloud system architecture **in Python code**. It was\n ![generic provider](https://img.shields.io/badge/Generic-orange?color=5f87bf)\n ![programming provider](https://img.shields.io/badge/Programming-orange?color=5f87bf)\n ![saas provider](https://img.shields.io/badge/SaaS-orange?color=5f87bf)\n+![c4 provider](https://img.shields.io/badge/C4-orange?color=5f87bf)\n \n ## Getting Started\n \ndiff --git a/diagrams/c4/__init__.py b/diagrams/c4/__init__.py\nnew file mode 100644\nindex 000000000..40577c8c5\n--- /dev/null\n+++ b/diagrams/c4/__init__.py\n@@ -0,0 +1,97 @@\n+\"\"\"\n+A set of nodes and edges to visualize software architecture using the C4 model.\n+\"\"\"\n+import html\n+import textwrap\n+from diagrams import Cluster, Node, Edge\n+\n+\n+def _format_node_label(name, key, description):\n+    \"\"\"Create a graphviz label string for a C4 node\"\"\"\n+    title = f'<font point-size=\"12\"><b>{html.escape(name)}</b></font><br/>'\n+    subtitle = f'<font point-size=\"9\">[{html.escape(key)}]<br/></font>' if key else \"\"\n+    text = f'<br/><font point-size=\"10\">{_format_description(description)}</font>' if description else \"\"\n+    return f\"<{title}{subtitle}{text}>\"\n+\n+\n+def _format_description(description):\n+    \"\"\"\n+    Formats the description string so it fits into the C4 nodes.\n+\n+    It line-breaks the description so it fits onto exactly three lines. If there are more\n+    than three lines, all further lines are discarded and \"...\" inserted on the last line to\n+    indicate that it was shortened. This will also html-escape the description so it can\n+    safely be included in a HTML label.\n+    \"\"\"\n+    wrapper = textwrap.TextWrapper(width=40, max_lines=3)\n+    lines = [html.escape(line) for line in wrapper.wrap(description)]\n+    lines += [\"\"] * (3 - len(lines))  # fill up with empty lines so it is always three\n+    return \"<br/>\".join(lines)\n+\n+\n+def _format_edge_label(description):\n+    \"\"\"Create a graphviz label string for a C4 edge\"\"\"\n+    wrapper = textwrap.TextWrapper(width=24, max_lines=3)\n+    lines = [html.escape(line) for line in wrapper.wrap(description)]\n+    text = \"<br/>\".join(lines)\n+    return f'<<font point-size=\"10\">{text}</font>>'\n+\n+\n+def C4Node(name, technology=\"\", description=\"\", type=\"Container\", **kwargs):\n+    key = f\"{type}: {technology}\" if technology else type\n+    node_attributes = {\n+        \"label\": _format_node_label(name, key, description),\n+        \"labelloc\": \"c\",\n+        \"shape\": \"rect\",\n+        \"width\": \"2.6\",\n+        \"height\": \"1.6\",\n+        \"fixedsize\": \"true\",\n+        \"style\": \"filled\",\n+        \"fillcolor\": \"dodgerblue3\",\n+        \"fontcolor\": \"white\",\n+    }\n+    # collapse boxes to a smaller form if they don't have a description\n+    if not description:\n+        node_attributes.update({\"width\": \"2\", \"height\": \"1\"})\n+    node_attributes.update(kwargs)\n+    return Node(**node_attributes)\n+\n+\n+def Container(name, technology=\"\", description=\"\", **kwargs):\n+    return C4Node(name, technology=technology, description=description, type=\"Container\")\n+\n+\n+def Database(name, technology=\"\", description=\"\", **kwargs):\n+    return C4Node(name, technology=technology, description=description, type=\"Database\", shape=\"cylinder\", labelloc=\"b\")\n+\n+\n+def System(name, description=\"\", external=False, **kwargs):\n+    type = \"External System\" if external else \"System\"\n+    fillcolor = \"gray60\" if external else \"dodgerblue4\"\n+    return C4Node(name, description=description, type=type, fillcolor=fillcolor)\n+\n+\n+def Person(name, description=\"\", external=False, **kwargs):\n+    type = \"External Person\" if external else \"Person\"\n+    fillcolor = \"gray60\" if external else \"dodgerblue4\"\n+    style = \"rounded,filled\"\n+    return C4Node(name, description=description, type=type, fillcolor=fillcolor, style=style)\n+\n+\n+def SystemBoundary(name, **kwargs):\n+    graph_attributes = {\n+        \"label\": html.escape(name),\n+        \"bgcolor\": \"white\",\n+        \"margin\": \"16\",\n+        \"style\": \"dashed\",\n+    }\n+    graph_attributes.update(kwargs)\n+    return Cluster(name, graph_attr=graph_attributes)\n+\n+\n+def Relationship(label=\"\", **kwargs):\n+    edge_attribtues = {\"style\": \"dashed\", \"color\": \"gray60\"}\n+    if label:\n+        edge_attribtues.update({\"label\": _format_edge_label(label)})\n+    edge_attribtues.update(kwargs)\n+    return Edge(**edge_attribtues)\ndiff --git a/docs/nodes/c4.md b/docs/nodes/c4.md\nnew file mode 100644\nindex 000000000..9c21c2c84\n--- /dev/null\n+++ b/docs/nodes/c4.md\n@@ -0,0 +1,77 @@\n+---\n+id: c4\n+title: C4\n+---\n+\n+## C4 Diagrams\n+\n+[C4](https://c4model.com/) is a standardized model to visualize software architecture.\n+You can generate C4 diagrams by using the node and edge classes from the `diagrams.c4` package:\n+\n+```python\n+from diagrams import Diagram\n+from diagrams.c4 import Person, Container, Database, System, SystemBoundary, Relationship\n+\n+graph_attr = {\n+    \"splines\": \"spline\",\n+}\n+\n+with Diagram(\"Container diagram for Internet Banking System\", direction=\"TB\", graph_attr=graph_attr):\n+    customer = Person(\n+        name=\"Personal Banking Customer\", description=\"A customer of the bank, with personal bank accounts.\"\n+    )\n+\n+    with SystemBoundary(\"Internet Banking System\"):\n+        webapp = Container(\n+            name=\"Web Application\",\n+            technology=\"Java and Spring MVC\",\n+            description=\"Delivers the static content and the Internet banking single page application.\",\n+        )\n+\n+        spa = Container(\n+            name=\"Single-Page Application\",\n+            technology=\"Javascript and Angular\",\n+            description=\"Provides all of the Internet banking functionality to customers via their web browser.\",\n+        )\n+\n+        mobileapp = Container(\n+            name=\"Mobile App\",\n+            technology=\"Xamarin\",\n+            description=\"Provides a limited subset of the Internet banking functionality to customers via their mobile device.\",\n+        )\n+\n+        api = Container(\n+            name=\"API Application\",\n+            technology=\"Java and Spring MVC\",\n+            description=\"Provides Internet banking functionality via a JSON/HTTPS API.\",\n+        )\n+\n+        database = Database(\n+            name=\"Database\",\n+            technology=\"Oracle Database Schema\",\n+            description=\"Stores user registration information, hashed authentication credentials, access logs, etc.\",\n+        )\n+\n+    email = System(name=\"E-mail System\", description=\"The internal Microsoft Exchange e-mail system.\", external=True)\n+\n+    mainframe = System(\n+        name=\"Mainframe Banking System\",\n+        description=\"Stores all of the core banking information about customers, accounts, transactions, etc.\",\n+        external=True,\n+    )\n+\n+    customer >> Relationship(\"Visits bigbank.com/ib using [HTTPS]\") >> webapp\n+    customer >> Relationship(\"Views account balances, and makes payments using\") >> [spa, mobileapp]\n+    webapp >> Relationship(\"Delivers to the customer's web browser\") >> spa\n+    spa >> Relationship(\"Make API calls to [JSON/HTTPS]\") >> api\n+    mobileapp >> Relationship(\"Make API calls to [JSON/HTTPS]\") >> api\n+\n+    api >> Relationship(\"reads from and writes to\") >> database\n+    api >> Relationship(\"Sends email using [SMTP]\") >> email\n+    api >> Relationship(\"Makes API calls to [XML/HTTPS]\") >> mainframe\n+    customer << Relationship(\"Sends e-mails to\") << email\n+```\n+\n+It will produce the following diagram:\n+\n+![c4](/img/c4.png)\ndiff --git a/tests/test_c4.py b/tests/test_c4.py\nnew file mode 100644\nindex 000000000..25c854554\n--- /dev/null\n+++ b/tests/test_c4.py\n@@ -0,0 +1,64 @@\n+import os\n+import random\n+import string\n+import unittest\n+\n+from diagrams import Diagram\n+from diagrams import setcluster, setdiagram\n+from diagrams.c4 import Person, Container, Database, System, SystemBoundary, Relationship\n+\n+\n+class C4Test(unittest.TestCase):\n+    def setUp(self):\n+        self.name = \"diagram-\" + \"\".join([random.choice(string.hexdigits) for n in range(7)])\n+\n+    def tearDown(self):\n+        setdiagram(None)\n+        setcluster(None)\n+        try:\n+            os.remove(self.name + \".png\")\n+        except FileNotFoundError:\n+            pass\n+\n+    def test_nodes(self):\n+        with Diagram(name=self.name, show=False):\n+            person = Person(\"person\", \"A person.\")\n+            container = Container(\"container\", \"Java application\", \"The application.\")\n+            database = Database(\"database\", \"Oracle database\", \"Stores information.\")\n+\n+    def test_external_nodes(self):\n+        with Diagram(name=self.name, show=False):\n+            external_person = Person(\"person\", external=True)\n+            external_system = System(\"external\", external=True)\n+\n+    def test_systems(self):\n+        with Diagram(name=self.name, show=False):\n+            system = System(\"system\", \"The internal system.\")\n+            system_without_description = System(\"unknown\")\n+\n+    def test_edges(self):\n+        with Diagram(name=self.name, show=False):\n+            c1 = Container(\"container1\")\n+            c2 = Container(\"container2\")\n+\n+            c1 >> c2\n+\n+    def test_edges_with_labels(self):\n+        with Diagram(name=self.name, show=False):\n+            c1 = Container(\"container1\")\n+            c2 = Container(\"container2\")\n+\n+            c1 >> Relationship(\"depends on\") >> c2\n+            c1 << Relationship(\"is depended on by\") << c2\n+\n+    def test_edge_without_constraint(self):\n+        with Diagram(name=self.name, show=False):\n+            s1 = System(\"system 1\")\n+            s2 = System(\"system 2\")\n+\n+            s1 >> Relationship(constraint=\"False\") >> s2\n+\n+    def test_cluster(self):\n+        with Diagram(name=self.name, show=False):\n+            with SystemBoundary(\"System\"):\n+                Container(\"container\", \"type\", \"description\")\ndiff --git a/website/static/img/c4.png b/website/static/img/c4.png\nnew file mode 100644\nindex 000000000..e3ea5cc07\nBinary files /dev/null and b/website/static/img/c4.png differ\n",
    "diff_length": 10078
  },
  {
    "index": 8,
    "repository": "mingrammer/diagrams",
    "pr_title": "Node as cluster",
    "pr_body": "This PR contains and supersedes the #407 \r\nI'm collaborating with the OP @dan-ash but he seems to be having personal issues to keep this PR up to date.\r\n\r\n```python\r\nfrom diagrams import Cluster, Diagram\r\nfrom diagrams.aws.compute import ECS\r\nfrom diagrams.aws.database import RDS, Aurora\r\nfrom diagrams.aws.network import Route53, VPC\r\n\r\nwith Diagram(\"Simple Web Service with DB Cluster\", show=True, filename=\"mysql\"):\r\n    dns = Route53(\"dns\")\r\n    web = ECS(\"service\")\r\n\r\n    with VPC('VPC'):\r\n   ",
    "pr_number": 438,
    "comments": [
      "@bkmeneguello I suggest to close this in favour of #439 what do you think? did you got a change to go over it?",
      "@dan-ash Sorry, but I think this PR is more mature and featureful than #439. Maybe I could simplify the commits in more logical ones but this could remove your changes.",
      "I tried this, but I got the error.\r\n```\r\n    with VPC('VPC'):\r\nAttributeError: __enter__\r\n```\r\nCan anyone help?",
      "> I tried this, but I got the error.\r\n> \r\n> ```\r\n>     with VPC('VPC'):\r\n> AttributeError: __enter__\r\n> ```\r\n> \r\n> Can anyone help?\r\n\r\nUpdate:\r\nI tried implementing this:\r\n```\r\nclass VPC(Cluster):\r\n    # fmt: off\r\n    _default_graph_attrs = {\r\n        \"shape\": \"box\",\r\n        \"style\": \"dashed\",\r\n        \"labeljust\": \"l\",\r\n        \"pencolor\": \"#8c8c8c\",\r\n        \"fontname\": \"sans-serif\",\r\n        \"fontsize\": \"12\",\r\n    }\r\n    # fmt: on\r\n\r\nclass ECS(Cluster):\r\n     # fmt: off\r\n    _default_graph_attrs = {\r\n        \"shape\": \"box\",\r\n        \"style\": \"dashed\",\r\n        \"labeljust\": \"l\",\r\n        \"pencolor\": \"#8c8c8c\",\r\n        \"fontname\": \"sans-serif\",\r\n        \"fontsize\": \"12\",\r\n    }\r\n    # fmt: on\r\n\r\nclass Aurora(Cluster):\r\n     # fmt: off\r\n    _default_graph_attrs = {\r\n        \"shape\": \"box\",\r\n        \"style\": \"dashed\",\r\n        \"labeljust\": \"l\",\r\n        \"pencolor\": \"#8c8c8c\",\r\n        \"fontname\": \"sans-serif\",\r\n        \"fontsize\": \"12\",\r\n    }\r\n    # fmt: on\r\n ```\r\nbut it's not still displaying the cluster branding. Any solution?\r\n\r\n**One more doubt**:\r\nLine Spacing is not working i.e. **\\n**. And what if we want to display two lines on one edge, one on top, and one on bottom. What to do in this case? \r\nEdit: @clayms can you help?",
      "@bkmeneguello \r\nI run all the examples I found in the source and figure out 2 issues:\r\nFirst one is with the color, somehow the color order is shifted (I didn't checked the code yet so sorry for the lack of details).\r\n\r\nBasically when you do this:\r\n```python\r\n\r\nfrom diagrams import Diagram\r\nfrom diagrams.onprem.network import Nginx\r\nfrom diagrams.onprem.container import Docker\r\n\r\nwith Diagram(name=\"\", direction=\"TB\", show=False, filename=\"aws\"):\r\n    with Docker(\"Docker\") as container:\r\n      with Docker(\"Docker2 \"):\r\n        with Docker(\"Docker3 \"):\r\n          with Docker(\"Docker4 \"):\r\n            with Docker(\"Docker5 \"):\r\n                Nginx(\"Nginx\")\r\n\r\n    container\r\n```\r\nit render that:\r\n![aws](https://user-images.githubusercontent.com/283765/108698506-8d60ef00-7547-11eb-9357-e1a54acc90bc.png)\r\n\r\nWhere the first color is green.\r\n\r\nIf I  run the same nested code with actual version I have this:\r\n\r\n```python\r\nfrom diagrams import Diagram\r\nfrom diagrams.onprem.network import Nginx\r\nfrom diagrams.onprem.container import Docker\r\n\r\nwith Diagram(name=\"\", direction=\"TB\", show=False, filename=\"aws\"):\r\n    with Docker(\"Docker\") as container:\r\n      with Docker(\"Docker2 \"):\r\n        with Docker(\"Docker3 \"):\r\n          with Docker(\"Docker4 \"):\r\n            with Docker(\"Docker5 \"):\r\n                Nginx(\"Nginx\")\r\n\r\n    container\r\n\r\n```\r\nit render this one: \r\n![color](https://user-images.githubusercontent.com/283765/108698903-fc3e4800-7547-11eb-9009-163b6476f01f.png)\r\nWhich start with blue.\r\n\r\nThe second problem which is more serious even if there's no tests or example is the support for \"graph_attr\" in cluster.\r\n\r\n ```python\r\n\r\nfrom diagrams import Diagram, Cluster\r\nfrom diagrams.onprem.network import Nginx\r\n# from diagrams.onprem.container import Docker\r\n\r\nwith Diagram(name=\"\", direction=\"TB\", show=False, filename=\"aws\"):\r\n    with Cluster(\"AWS\", graph_attr={\"pencolor\": \"#60193C\", \"bgcolor\": \"#E587B5\"}) as container: # overwrite attributes for the default cluster\r\n        Nginx(\"Nginx\")\r\n\r\n    container\r\n    \r\n```\r\n\r\non master it render this:\r\n![pink_nginx](https://user-images.githubusercontent.com/283765/108699431-90a8aa80-7548-11eb-8486-f08cff6a50d7.png)\r\n\r\non your PR branch it generate an error:\r\n\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/src/diagrams/example.py\", line 9, in <module>\r\n    container\r\n  File \"/usr/src/diagrams/diagrams/__init__.py\", line 217, in __exit__\r\n    super().__exit__(*args)\r\n  File \"/usr/src/diagrams/diagrams/__init__.py\", line 71, in __exit__\r\n    self.dot.subgraph(subgraph.dot)\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/dot.py\", line 244, in subgraph\r\n    lines = ['\\t' + line for line in graph.__iter__(subgraph=True)]\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/dot.py\", line 244, in <listcomp>\r\n    lines = ['\\t' + line for line in graph.__iter__(subgraph=True)]\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/dot.py\", line 110, in __iter__\r\n    yield self._attr % (kw, self._attr_list(None, attrs))\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/lang.py\", line 136, in attr_list\r\n    content = a_list(label, kwargs, attributes)\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/lang.py\", line 109, in a_list\r\n    items = ['%s=%s' % (quote(k), quote(v))\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/lang.py\", line 109, in <listcomp>\r\n    items = ['%s=%s' % (quote(k), quote(v))\r\n  File \"/usr/local/lib/python3.9/site-packages/graphviz/lang.py\", line 72, in quote\r\n    if is_html_string(identifier) and not isinstance(identifier, NoHtml):\r\nTypeError: expected string or bytes-like object\r\n```",
      "```\r\nfrom diagrams import Diagram\r\nfrom diagrams.onprem.network import Nginx\r\nfrom diagrams.onprem.container import Docker\r\n\r\nwith Diagram(name=\"\", direction=\"TB\", show=False, filename=\"aws\"):\r\n    with Docker(\"Docker\") as container:\r\n      with Docker(\"Docker2 \"):\r\n        with Docker(\"Docker3 \"):\r\n          with Docker(\"Docker4 \"):\r\n            with Docker(\"Docker5 \"):\r\n                Nginx(\"Nginx\")\r\n\r\n    container\r\n```\r\nthis code is not working on my machine, it throws an error:\r\n```\r\n    with Docker(\"Docker\") as container:\r\nAttributeError: __enter__\r\n```\r\n",
      "@seema1711 \r\nCan you please stop posting on the issues, if you have problem or question you can use stackoverflow on how to use diagrams.\r\nTo make it clear this code is not working with your diagrams version, if you want to use the new feature consider forking the PR branch, if you don't understand what I'm talking about, just wait that this feature go in the new release.\r\n\r\nYour problem is that you use the actual library version which don't have the code of the PR and it's normal that this error raise.\r\nYou are only making noise by posting that it's not working and make us waste time.\r\n",
      "Any progress on this one? Would love to have this functionality!",
      "I'm here. Sorry for the late reply. I'll review this PR ASAP. It could be really good improvements. Thank you :)",
      "@bkmeneguello Please resolve the conflicts.",
      "@bkmeneguello Do you have time to resolve the conflicts? We really would like to have this feature.",
      "Sorry, two years ago I had the time, now I'm not involved anymore with this project. ",
      "I am willing to take this branch and resolve the conflicts if no one minds? I will open this as a new PR.",
      "@bkmeneguello @gabriel-tessier I'm significantly late. Could you please continue working on it? We can now manage it more actively."
    ],
    "num_comments": 14,
    "diff": "diff --git a/config.py b/config.py\nindex 57c98307a..514a2f6bc 100644\n--- a/config.py\n+++ b/config.py\n@@ -90,6 +90,9 @@\n # TODO: check if the classname exists\n ALIASES = {\n     \"onprem\": {\n+        \"analytics\": {\n+            \"Powerbi\": \"PowerBI\"\n+        },\n         \"ci\": {\n             \"Circleci\": \"CircleCI\",\n             \"Concourseci\": \"ConcourseCI\",\n@@ -239,6 +242,7 @@\n         \"compute\": {\n             \"ContainerRegistries\": \"ACR\",\n             \"KubernetesServices\": \"AKS\",\n+            \"VMScaleSet\": \"VMSS\"\n         },\n     },\n     \"gcp\": {\n@@ -392,6 +396,9 @@\n         }\n     },\n     \"programming\": {\n+        \"framework\": {\n+            \"Fastapi\": \"FastAPI\"\n+        },\n         \"language\": {\n             \"Javascript\": \"JavaScript\",\n             \"Nodejs\": \"NodeJS\",\ndiff --git a/diagrams/__init__.py b/diagrams/__init__.py\nindex a9e0f0c11..97b1099b9 100644\n--- a/diagrams/__init__.py\n+++ b/diagrams/__init__.py\n@@ -1,8 +1,9 @@\n import contextvars\n+import html\n import os\n import uuid\n from pathlib import Path\n-from typing import List, Union, Dict\n+from typing import List, Union, Dict, Sequence\n \n from graphviz import Digraph\n \n@@ -19,7 +20,7 @@ def getdiagram():\n     try:\n         return __diagram.get()\n     except LookupError:\n-        return None\n+        raise EnvironmentError(\"Global diagrams context not set up\")\n \n \n def setdiagram(diagram):\n@@ -36,9 +37,71 @@ def getcluster():\n def setcluster(cluster):\n     __cluster.set(cluster)\n \n-\n-class Diagram:\n+def new_init(cls, init):\n+    def reset_init(*args, **kwargs):\n+        cls.__init__ = init\n+    return reset_init\n+def new_init(cls, init):\n+    def reset_init(*args, **kwargs):\n+        cls.__init__ = init\n+    return reset_init\n+\n+class _Cluster:\n+class _Cluster:\n     __directions = (\"TB\", \"BT\", \"LR\", \"RL\")\n+\n+    def __init__(self, name=None, **kwargs):\n+        self.dot = Digraph(name, **kwargs)\n+        self.depth = 0\n+        self.nodes = {}\n+        self.subgraphs = []\n+\n+        try:\n+            self._parent = getcluster() or getdiagram()\n+        except EnvironmentError:\n+        except EnvironmentError:\n+            self._parent = None\n+\n+\n+    def __enter__(self):\n+        setcluster(self)\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        setcluster(self._parent)\n+\n+        for nodeid, node in self.nodes.items():\n+            self.dot.node(nodeid, label=node['label'], **node['attrs'])\n+\n+        for dot in self.subgraphs:\n+            self.dot.subgraph(dot)\n+\n+        if self._parent:\n+            self._parent.subgraph(self.dot)\n+\n+    def node(self, nodeid: str, label: str, **attrs) -> None:\n+        \"\"\"Create a new node.\"\"\"\n+        self.nodes[nodeid] = {'label': label, 'attrs': attrs}\n+\n+    def remove_node(self, nodeid: str) -> None:\n+        del self.nodes[nodeid]\n+\n+    def subgraph(self, dot: Digraph) -> None:\n+        \"\"\"Create a subgraph for clustering\"\"\"\n+        self.subgraphs.append(dot)\n+\n+    def _validate_direction(self, direction: str):\n+        direction = direction.upper()\n+        for v in self.__directions:\n+            if v == direction:\n+                return True\n+        return False\n+\n+    def __str__(self) -> str:\n+        return str(self.dot)\n+\n+\n+class Diagram(_Cluster):\n     __curvestyles = (\"ortho\", \"curved\")\n     __outformats = (\"png\", \"jpg\", \"svg\", \"pdf\")\n \n@@ -102,15 +165,21 @@ def __init__(\n         :param node_attr: Provide node_attr dot config attributes.\n         :param edge_attr: Provide edge_attr dot config attributes.\n         \"\"\"\n+\n+\n         self.name = name\n         if not name and not filename:\n           filename = \"diagrams_image\"\n         elif not filename:\n             filename = \"_\".join(self.name.split()).lower()\n         self.filename = filename\n-        self.dot = Digraph(self.name, filename=self.filename)\n \n+        super().__init__(self.name, filename=self.filename)\n+        self.edges = {}\n+\n+        self.dot.attr(compound=\"true\")\n         # Set attributes.\n+        self.dot.attr(compound=\"true\")\n         for k, v in self._default_graph_attrs.items():\n             self.dot.graph_attr[k] = v\n         self.dot.graph_attr[\"label\"] = self.name\n@@ -138,29 +207,34 @@ def __init__(\n \n         self.show = show\n \n-    def __str__(self) -> str:\n-        return str(self.dot)\n-\n     def __enter__(self):\n         setdiagram(self)\n+        super().__enter__()\n+        super().__enter__()\n         return self\n \n     def __exit__(self, exc_type, exc_value, traceback):\n+        super().__exit__(exc_type, exc_value, traceback)\n+        setdiagram(None)\n+\n+        for nodes, edge in self.edges.items():\n+            node1, node2 = nodes\n+            nodeid1, nodeid2 = node1.nodeid, node2.nodeid\n+            if node1.nodes:\n+                edge._attrs['ltail'] = nodeid1\n+                nodeid1 = next(iter(node1.nodes.keys()))\n+            if node2.nodes:\n+                edge._attrs['lhead'] = nodeid2\n+                nodeid2 = next(iter(node2.nodes.keys()))\n+            self.dot.edge(nodeid1, nodeid2, **edge.attrs)\n+\n         self.render()\n         # Remove the graphviz file leaving only the image.\n         os.remove(self.filename)\n-        setdiagram(None)\n \n     def _repr_png_(self):\n         return self.dot.pipe(format=\"png\")\n \n-    def _validate_direction(self, direction: str) -> bool:\n-        direction = direction.upper()\n-        for v in self.__directions:\n-            if v == direction:\n-                return True\n-        return False\n-\n     def _validate_curvestyle(self, curvestyle: str) -> bool:\n         curvestyle = curvestyle.lower()\n         for v in self.__curvestyles:\n@@ -177,22 +251,21 @@ def _validate_outformat(self, outformat: str) -> bool:\n \n     def node(self, nodeid: str, label: str, **attrs) -> None:\n         \"\"\"Create a new node.\"\"\"\n-        self.dot.node(nodeid, label=label, **attrs)\n+        self._nodes[nodeid] = {'label': label, 'attrs': attrs}\n+\n+    def remove_node(self, nodeid: str) -> None:\n+        del self._nodes[nodeid]\n \n     def connect(self, node: \"Node\", node2: \"Node\", edge: \"Edge\") -> None:\n         \"\"\"Connect the two Nodes.\"\"\"\n-        self.dot.edge(node.nodeid, node2.nodeid, **edge.attrs)\n-\n-    def subgraph(self, dot: Digraph) -> None:\n-        \"\"\"Create a subgraph for clustering\"\"\"\n-        self.dot.subgraph(dot)\n+        self.edges[(node, node2)] = edge\n \n     def render(self) -> None:\n         self.dot.render(format=self.outformat, view=self.show, quiet=True)\n \n \n-class Cluster:\n-    __directions = (\"TB\", \"BT\", \"LR\", \"RL\")\n+class Node(_Cluster):\n+    \"\"\"Node represents a node for a specific backend service.\"\"\"\n     __bgcolors = (\"#E5F5FD\", \"#EBF3E7\", \"#ECE8F6\", \"#FDF7E3\")\n \n     # fmt: off\n@@ -205,119 +278,99 @@ class Cluster:\n         \"fontsize\": \"12\",\n     }\n \n-    # fmt: on\n-\n-    # FIXME:\n-    #  Cluster direction does not work now. Graphviz couldn't render\n-    #  correctly for a subgraph that has a different rank direction.\n-    def __init__(\n-        self, label: str = \"cluster\", direction: str = \"LR\", graph_attr: dict = {},\n-    ):\n-        \"\"\"Cluster represents a cluster context.\n-\n-        :param label: Cluster label.\n-        :param direction: Data flow direction. Default is 'left to right'.\n-        :param graph_attr: Provide graph_attr dot config attributes.\n-        \"\"\"\n-        self.label = label\n-        self.name = \"cluster_\" + self.label\n-\n-        self.dot = Digraph(self.name)\n-\n-        # Set attributes.\n-        for k, v in self._default_graph_attrs.items():\n-            self.dot.graph_attr[k] = v\n-        self.dot.graph_attr[\"label\"] = self.label\n-\n-        if not self._validate_direction(direction):\n-            raise ValueError(f'\"{direction}\" is not a valid direction')\n-        self.dot.graph_attr[\"rankdir\"] = direction\n-\n-        # Node must be belong to a diagrams.\n-        self._diagram = getdiagram()\n-        if self._diagram is None:\n-            raise EnvironmentError(\"Global diagrams context not set up\")\n-        self._parent = getcluster()\n-\n-        # Set cluster depth for distinguishing the background color\n-        self.depth = self._parent.depth + 1 if self._parent else 0\n-        coloridx = self.depth % len(self.__bgcolors)\n-        self.dot.graph_attr[\"bgcolor\"] = self.__bgcolors[coloridx]\n-\n-        # Merge passed in attributes\n-        self.dot.graph_attr.update(graph_attr)\n-\n-    def __enter__(self):\n-        setcluster(self)\n-        return self\n-\n-    def __exit__(self, exc_type, exc_value, traceback):\n-        if self._parent:\n-            self._parent.subgraph(self.dot)\n-        else:\n-            self._diagram.subgraph(self.dot)\n-        setcluster(self._parent)\n-\n-    def _validate_direction(self, direction: str):\n-        direction = direction.upper()\n-        for v in self.__directions:\n-            if v == direction:\n-                return True\n-        return False\n-\n-    def node(self, nodeid: str, label: str, **attrs) -> None:\n-        \"\"\"Create a new node in the cluster.\"\"\"\n-        self.dot.node(nodeid, label=label, **attrs)\n-\n-    def subgraph(self, dot: Digraph) -> None:\n-        self.dot.subgraph(dot)\n-\n-\n-class Node:\n-    \"\"\"Node represents a node for a specific backend service.\"\"\"\n-\n     _provider = None\n     _type = None\n \n     _icon_dir = None\n     _icon = None\n-\n+    _icon_size = 30\n+    _direction = \"TB\"\n     _height = 1.9\n \n-    def __init__(self, label: str = \"\", **attrs: Dict):\n+    # fmt: on\n+\n+    # fmt: on\n+\n+    def __new__(cls, *args, **kwargs):\n+        instance = object.__new__(cls)\n+        lazy = kwargs.pop('_no_init', False)\n+        if not lazy:\n+            return instance\n+        cls.__init__ = new_init(cls, cls.__init__)\n+        return instance\n+\n+    def __init__(\n+        self,\n+        label: str = \"\",\n+        **attrs: Dict\n+        ):\n         \"\"\"Node represents a system component.\n \n         :param label: Node label.\n+        :param direction: Data flow direction. Default is \"LR\" (left to right).\n+        :param icon: Custom icon for tihs cluster. Must be a node class or reference.\n+        :param icon_size: The icon size when used as a Cluster. Default is 30.\n         \"\"\"\n         # Generates an ID for identifying a node.\n         self._id = self._rand_id()\n         self.label = label\n \n+        super().__init__()\n+\n         # fmt: off\n         # If a node has an icon, increase the height slightly to avoid\n         # that label being spanned between icon image and white space.\n         # Increase the height by the number of new lines included in the label.\n         padding = 0.4 * (label.count('\\n'))\n+        icon = self._load_icon()\n         self._attrs = {\n             \"shape\": \"none\",\n             \"height\": str(self._height + padding),\n-            \"image\": self._load_icon(),\n-        } if self._icon else {}\n+            \"image\": icon,\n+        } if icon else {}\n \n         # fmt: on\n         self._attrs.update(attrs)\n \n-        # Node must be belong to a diagrams.\n-        self._diagram = getdiagram()\n-        if self._diagram is None:\n-            raise EnvironmentError(\"Global diagrams context not set up\")\n-        self._cluster = getcluster()\n-\n         # If a node is in the cluster context, add it to cluster.\n-        if self._cluster:\n-            self._cluster.node(self._id, self.label, **self._attrs)\n-        else:\n-            self._diagram.node(self._id, self.label, **self._attrs)\n+        self._parent.node(self)\n+\n+    def __enter__(self):\n+        super().__enter__()\n+\n+        # Set attributes.\n+        for k, v in self._default_graph_attrs.items():\n+            self.dot.graph_attr[k] = v\n+\n+        icon = self._load_icon()\n+        if icon:\n+            self.dot.graph_attr[\"label\"] = '<<TABLE border=\"0\"><TR>'\\\n+                '<TD fixedsize=\"true\" width=\"' + str(self._icon_size) + '\" height=\"' + str(self._icon_size) + '\">'\\\n+                '<IMG SRC=\"' + icon + '\"></IMG></TD>'\\\n+                '<TD>' + self.label + '</TD></TR></TABLE>>'\n+\n+        if not self._validate_direction(self._direction):\n+            raise ValueError(f'\"{self._direction}\" is not a valid direction')\n+        self.dot.graph_attr[\"rankdir\"] = self._direction\n+\n+        # Set cluster depth for distinguishing the background color\n+        self.depth = self._parent.depth + 1\n+        coloridx = self.depth % len(self.__bgcolors)\n+        self.dot.graph_attr[\"bgcolor\"] = self.__bgcolors[coloridx]\n+\n+        return self\n+\n+    def __exit__(self, exc_type, exc_value, traceback):\n+        if not (self.nodes or self.subgraphs):\n+            return\n+\n+        self._parent.remove_node(self._id)\n+\n+        self._id = \"cluster_\" + self._id\n+        self.dot.name = self._id\n+\n+        super().__exit__(exc_type, exc_value, traceback)\n+\n \n     def __repr__(self):\n         _name = self.__class__.__name__\n@@ -406,7 +459,8 @@ def connect(self, node: \"Node\", edge: \"Edge\"):\n         if not isinstance(node, Edge):\n             ValueError(f\"{node} is not a valid Edge\")\n         # An edge must be added on the global diagrams, not a cluster.\n-        self._diagram.connect(self, node, edge)\n+        getdiagram().connect(self, node, edge)\n+        getdiagram().connect(self, node, edge)\n         return node\n \n     @staticmethod\n@@ -414,8 +468,36 @@ def _rand_id():\n         return uuid.uuid4().hex\n \n     def _load_icon(self):\n-        basedir = Path(os.path.abspath(os.path.dirname(__file__)))\n-        return os.path.join(basedir.parent, self._icon_dir, self._icon)\n+        if self._icon and self._icon_dir:\n+            basedir = Path(os.path.abspath(os.path.dirname(__file__)))\n+            return os.path.join(basedir.parent, self._icon_dir, self._icon)\n+        return None\n+\n+\n+class Cluster(Node):\n+    def __init__(\n+        self,\n+        label: str = \"\",\n+        direction: str = \"LR\",\n+        icon: object = None,\n+        icon_size: int = 30,\n+        **attrs: Dict\n+        ):\n+        \"\"\"Cluster represents a cluster context.\n+\n+        :param label: Cluster label.\n+        :param direction: Data flow direction. Default is \"LR\" (left to right).\n+        :param icon: Custom icon for tihs cluster. Must be a node class or reference.\n+        :param icon_size: The icon size. Default is 30.\n+        \"\"\"\n+        self._direction = direction\n+        if icon:\n+            _node = icon(_no_init=True)\n+            self._icon = _node._icon\n+            self._icon_dir = _node._icon_dir\n+        if icon_size:\n+            self._icon_size = icon_size\n+        super().__init__(label, **attrs)\n \n \n class Edge:\n@@ -464,6 +546,7 @@ def __init__(\n             # Graphviz complaining about using label for edges, so replace it with xlabel.\n             # Update: xlabel option causes the misaligned label position: https://github.com/mingrammer/diagrams/issues/83\n             self._attrs[\"label\"] = label\n+            self._attrs[\"tooltip\"] = label\n         if color:\n             self._attrs[\"color\"] = color\n         if style:\n@@ -536,4 +619,4 @@ def attrs(self) -> Dict:\n         return {**self._attrs, \"dir\": direction}\n \n \n-Group = Cluster\n+Group = Cluster = Node\ndiff --git a/diagrams/aws/__init__.py b/diagrams/aws/__init__.py\nindex 1550a0df3..8c912ba46 100644\n--- a/diagrams/aws/__init__.py\n+++ b/diagrams/aws/__init__.py\n@@ -2,7 +2,7 @@\n AWS provides a set of services for Amazon Web Service provider.\n \"\"\"\n \n-from diagrams import Node\n+from diagrams import Node, Cluster\n \n \n class _AWS(Node):\ndiff --git a/diagrams/aws/cluster.py b/diagrams/aws/cluster.py\nnew file mode 100644\nindex 000000000..6ecbabcb5\n--- /dev/null\n+++ b/diagrams/aws/cluster.py\n@@ -0,0 +1,104 @@\n+from diagrams import Cluster\n+from diagrams.aws.compute import EC2, ApplicationAutoScaling\n+from diagrams.aws.network import VPC, PrivateSubnet, PublicSubnet\n+\n+class Region(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dotted\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#AEB6BE\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class AvailabilityZone(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dashed\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#27a0ff\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class VirtualPrivateCloud(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#00D110\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = VPC\n+\n+class PrivateSubnet(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#329CFF\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = PrivateSubnet\n+\n+class PublicSubnet(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#00D110\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = PublicSubnet\n+\n+class SecurityGroup(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dashed\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FF361E\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class AutoScalling(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dashed\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FF7D1E\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = ApplicationAutoScaling\n+\n+class EC2Contents(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FFB432\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = EC2\ndiff --git a/diagrams/azure/cluster.py b/diagrams/azure/cluster.py\nnew file mode 100644\nindex 000000000..73bfcdae7\n--- /dev/null\n+++ b/diagrams/azure/cluster.py\n@@ -0,0 +1,143 @@\n+from diagrams import Cluster\n+from diagrams.azure.compute import VM, VMWindows, VMLinux #, VMScaleSet # Depends on PR-404\n+from diagrams.azure.network import VirtualNetworks, Subnets, NetworkSecurityGroupsClassic\n+\n+class Subscription(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dotted\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#AEB6BE\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class Region(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dotted\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#AEB6BE\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class AvailabilityZone(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dashed\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#27a0ff\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class VirtualNetwork(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#00D110\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = VirtualNetworks\n+\n+class SubnetWithNSG(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#329CFF\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = NetworkSecurityGroupsClassic\n+\n+class Subnet(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#00D110\",\n+        \"fontname\": \"sans-serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = Subnets\n+\n+class SecurityGroup(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"dashed\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FF361E\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+\n+class VMContents(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FFB432\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = VM\n+\n+class VMLinuxContents(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FFB432\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = VMLinux\n+\n+class VMWindowsContents(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#FFB432\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = VMWindows\n+\n+# Depends on PR-404\n+# class VMSS(Cluster):\n+#     # fmt: off\n+#     _default_graph_attrs = {\n+#         \"shape\": \"box\",\n+#         \"style\": \"dashed\",\n+#         \"labeljust\": \"l\",\n+#         \"pencolor\": \"#FF7D1E\",\n+#         \"fontname\": \"Sans-Serif\",\n+#         \"fontsize\": \"12\",\n+#     }\n+#     # fmt: on\n+#     _icon = VMScaleSet\ndiff --git a/diagrams/azure/compute.py b/diagrams/azure/compute.py\nindex aad7b1718..2a42b8790 100644\n--- a/diagrams/azure/compute.py\n+++ b/diagrams/azure/compute.py\n@@ -80,6 +80,10 @@ class VMLinux(_Compute):\n     _icon = \"vm-linux.png\"\n \n \n+class VMScaleSet(_Compute):\n+    _icon = \"vm-scale-set.png\"\n+\n+\n class VMWindows(_Compute):\n     _icon = \"vm-windows.png\"\n \ndiff --git a/diagrams/gcp/operations.py b/diagrams/gcp/operations.py\nnew file mode 100644\nindex 000000000..53ece13f3\n--- /dev/null\n+++ b/diagrams/gcp/operations.py\n@@ -0,0 +1,15 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _GCP\n+\n+\n+class _Operations(_GCP):\n+    _type = \"operations\"\n+    _icon_dir = \"resources/gcp/operations\"\n+\n+\n+class Monitoring(_Operations):\n+    _icon = \"monitoring.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/onprem/analytics.py b/diagrams/onprem/analytics.py\nindex a62e40175..182c28cd9 100644\n--- a/diagrams/onprem/analytics.py\n+++ b/diagrams/onprem/analytics.py\n@@ -44,6 +44,10 @@ class Presto(_Analytics):\n     _icon = \"presto.png\"\n \n \n+class Powerbi(_Analytics):\n+    _icon = \"powerbi.png\"\n+\n+\n class Singer(_Analytics):\n     _icon = \"singer.png\"\n \n@@ -65,3 +69,5 @@ class Tableau(_Analytics):\n \n \n # Aliases\n+\n+PowerBI = Powerbi\ndiff --git a/diagrams/onprem/cluster.py b/diagrams/onprem/cluster.py\nnew file mode 100644\nindex 000000000..4fd62f04a\n--- /dev/null\n+++ b/diagrams/onprem/cluster.py\n@@ -0,0 +1,15 @@\n+from diagrams import Cluster\n+from diagrams.onprem.compute import Server\n+\n+class ServerContents(Cluster):\n+    # fmt: off\n+    _default_graph_attrs = {\n+        \"shape\": \"box\",\n+        \"style\": \"rounded,dotted\",\n+        \"labeljust\": \"l\",\n+        \"pencolor\": \"#A0A0A0\",\n+        \"fontname\": \"Sans-Serif\",\n+        \"fontsize\": \"12\",\n+    }\n+    # fmt: on\n+    _icon = Server\ndiff --git a/diagrams/programming/flowchart.py b/diagrams/programming/flowchart.py\nnew file mode 100644\nindex 000000000..1e7ecf17b\n--- /dev/null\n+++ b/diagrams/programming/flowchart.py\n@@ -0,0 +1,107 @@\n+# This module is automatically generated by autogen.sh. DO NOT EDIT.\n+\n+from . import _Programming\n+\n+\n+class _Flowchart(_Programming):\n+    _type = \"flowchart\"\n+    _icon_dir = \"resources/programming/flowchart\"\n+\n+\n+class Action(_Flowchart):\n+    _icon = \"action.png\"\n+\n+\n+class Collate(_Flowchart):\n+    _icon = \"collate.png\"\n+\n+\n+class Database(_Flowchart):\n+    _icon = \"database.png\"\n+\n+\n+class Decision(_Flowchart):\n+    _icon = \"decision.png\"\n+\n+\n+class Delay(_Flowchart):\n+    _icon = \"delay.png\"\n+\n+\n+class Display(_Flowchart):\n+    _icon = \"display.png\"\n+\n+\n+class Document(_Flowchart):\n+    _icon = \"document.png\"\n+\n+\n+class InputOutput(_Flowchart):\n+    _icon = \"input-output.png\"\n+\n+\n+class Inspection(_Flowchart):\n+    _icon = \"inspection.png\"\n+\n+\n+class InternalStorage(_Flowchart):\n+    _icon = \"internal-storage.png\"\n+\n+\n+class LoopLimit(_Flowchart):\n+    _icon = \"loop-limit.png\"\n+\n+\n+class ManualInput(_Flowchart):\n+    _icon = \"manual-input.png\"\n+\n+\n+class ManualLoop(_Flowchart):\n+    _icon = \"manual-loop.png\"\n+\n+\n+class Merge(_Flowchart):\n+    _icon = \"merge.png\"\n+\n+\n+class MultipleDocuments(_Flowchart):\n+    _icon = \"multiple-documents.png\"\n+\n+\n+class OffPageConnectorLeft(_Flowchart):\n+    _icon = \"off-page-connector-left.png\"\n+\n+\n+class OffPageConnectorRight(_Flowchart):\n+    _icon = \"off-page-connector-right.png\"\n+\n+\n+class Or(_Flowchart):\n+    _icon = \"or.png\"\n+\n+\n+class PredefinedProcess(_Flowchart):\n+    _icon = \"predefined-process.png\"\n+\n+\n+class Preparation(_Flowchart):\n+    _icon = \"preparation.png\"\n+\n+\n+class Sort(_Flowchart):\n+    _icon = \"sort.png\"\n+\n+\n+class StartEnd(_Flowchart):\n+    _icon = \"start-end.png\"\n+\n+\n+class StoredData(_Flowchart):\n+    _icon = \"stored-data.png\"\n+\n+\n+class SummingJunction(_Flowchart):\n+    _icon = \"summing-junction.png\"\n+\n+\n+# Aliases\ndiff --git a/diagrams/programming/framework.py b/diagrams/programming/framework.py\nindex 48929c1da..f8d901fb0 100644\n--- a/diagrams/programming/framework.py\n+++ b/diagrams/programming/framework.py\n@@ -24,6 +24,10 @@ class Ember(_Framework):\n     _icon = \"ember.png\"\n \n \n+class Fastapi(_Framework):\n+    _icon = \"fastapi.png\"\n+\n+\n class Flask(_Framework):\n     _icon = \"flask.png\"\n \n@@ -57,3 +61,5 @@ class Vue(_Framework):\n \n \n # Aliases\n+\n+FastAPI = Fastapi\ndiff --git a/docker/dev/Dockerfile b/docker/dev/Dockerfile\nindex 2d4b26122..545701db0 100644\n--- a/docker/dev/Dockerfile\n+++ b/docker/dev/Dockerfile\n@@ -1,5 +1,5 @@\n-# use latest python alphine image.\n-FROM python:rc-alpine3.12\n+# use latest python alpine image.\n+FROM python:3.12.6-alpine3.20\n \n # install system dependencies.\n RUN apk update && apk add --no-cache \\\n@@ -9,14 +9,14 @@ RUN apk update && apk add --no-cache \\\n RUN go get github.com/mingrammer/round\n \n # install fonts\n-RUN curl -O https://noto-website.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip \\\n+RUN curl -O https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip \\\n && mkdir -p /usr/share/fonts/NotoSansCJKjp \\\n && unzip NotoSansCJKjp-hinted.zip -d /usr/share/fonts/NotoSansCJKjp/ \\\n && rm NotoSansCJKjp-hinted.zip \\\n && fc-cache -fv\n \n # add go bin to path.\n-ENV PATH \"$PATH:/root/go/bin\"\n+ENV PATH=\"$PATH:/root/go/bin\"\n \n # project directory.\n WORKDIR /usr/src/diagrams\ndiff --git a/docs/guides/cluster.md b/docs/guides/cluster.md\nindex 6cbf820e3..7594e2849 100644\n--- a/docs/guides/cluster.md\n+++ b/docs/guides/cluster.md\n@@ -66,6 +66,36 @@ with Diagram(\"Event Processing\", show=False):\n     handlers >> dw\n ```\n \n+## Clusters with icons in the label\n+\n+You can add a Node icon before the cluster label (and specify its size as well).  You need to import the used Node class first.\n+\n+It's also possible to use the node in the `with` context adding `cluster=True` to\n+make it behave like a cluster.\n+\n+```python\n+from diagrams import Cluster, Diagram\n+from diagrams.aws.compute import ECS\n+from diagrams.aws.database import RDS, Aurora\n+from diagrams.aws.network import Route53, VPC\n+\n+with Diagram(\"Simple Web Service with DB Cluster\", show=False):\n+    dns = Route53(\"dns\")\n+    web = ECS(\"service\")\n+\n+    with Cluster(label='VPC',icon=VPC):\n+        with Cluster(\"DB Cluster\",icon=Aurora,icon_size=30):\n+            db_master = RDS(\"master\")\n+            db_master - [RDS(\"slave1\"),\n+                         RDS(\"slave2\")]\n+        with Aurora(\"DB Cluster\", cluster=True):\n+            db_master = RDS(\"master\")\n+            db_master - [RDS(\"slave1\"),\n+                         RDS(\"slave2\")]\n+\n+        dns >> web >> db_master\n+```\n+\n ![event processing diagram](/img/event_processing_diagram.png)\n \n-> There is no depth limit of nesting. Feel free to create nested clusters as deep as you want.\n\\ No newline at end of file\n+> There is no depth limit of nesting. Feel free to create nested clusters as deep as you want.\ndiff --git a/docs/nodes/azure.md b/docs/nodes/azure.md\nindex 59413a08c..cb0511026 100644\n--- a/docs/nodes/azure.md\n+++ b/docs/nodes/azure.md\n@@ -39,6 +39,7 @@ Node classes list of azure provider.\n - **diagrams.azure.compute.VMClassic**\n - **diagrams.azure.compute.VMImages**\n - **diagrams.azure.compute.VMLinux**\n+- **diagrams.azure.compute.VMScaleSet**\n - **diagrams.azure.compute.VMWindows**\n - **diagrams.azure.compute.VM**\n \ndiff --git a/docs/nodes/gcp.md b/docs/nodes/gcp.md\nindex 39ad2e318..3a1ee4843 100644\n--- a/docs/nodes/gcp.md\n+++ b/docs/nodes/gcp.md\n@@ -112,6 +112,10 @@ Node classes list of gcp provider.\n - **diagrams.gcp.network.VirtualPrivateCloud**, **VPC** (alias)\n - **diagrams.gcp.network.VPN**\n \n+## gcp.operations\n+\n+- **diagrams.gcp.operations.Monitoring**\n+\n ## gcp.security\n \n - **diagrams.gcp.security.Iam**\ndiff --git a/docs/nodes/onprem.md b/docs/nodes/onprem.md\nindex ef64a7a9d..2d8137276 100644\n--- a/docs/nodes/onprem.md\n+++ b/docs/nodes/onprem.md\n@@ -21,6 +21,7 @@ Node classes list of onprem provider.\n - **diagrams.onprem.analytics.Metabase**\n - **diagrams.onprem.analytics.Norikra**\n - **diagrams.onprem.analytics.Presto**\n+- **diagrams.onprem.analytics.Powerbi**, **PowerBI** (alias)\n - **diagrams.onprem.analytics.Singer**\n - **diagrams.onprem.analytics.Spark**\n - **diagrams.onprem.analytics.Storm**\ndiff --git a/docs/nodes/programming.md b/docs/nodes/programming.md\nindex 8240515b6..fdd25404e 100644\n--- a/docs/nodes/programming.md\n+++ b/docs/nodes/programming.md\n@@ -5,12 +5,40 @@ title: Programming\n \n Node classes list of programming provider.\n \n+## programming.flowchart\n+\n+- **diagrams.programming.flowchart.Action**\n+- **diagrams.programming.flowchart.Collate**\n+- **diagrams.programming.flowchart.Database**\n+- **diagrams.programming.flowchart.Decision**\n+- **diagrams.programming.flowchart.Delay**\n+- **diagrams.programming.flowchart.Display**\n+- **diagrams.programming.flowchart.Document**\n+- **diagrams.programming.flowchart.InputOutput**\n+- **diagrams.programming.flowchart.Inspection**\n+- **diagrams.programming.flowchart.InternalStorage**\n+- **diagrams.programming.flowchart.LoopLimit**\n+- **diagrams.programming.flowchart.ManualInput**\n+- **diagrams.programming.flowchart.ManualLoop**\n+- **diagrams.programming.flowchart.Merge**\n+- **diagrams.programming.flowchart.MultipleDocuments**\n+- **diagrams.programming.flowchart.OffPageConnectorLeft**\n+- **diagrams.programming.flowchart.OffPageConnectorRight**\n+- **diagrams.programming.flowchart.Or**\n+- **diagrams.programming.flowchart.PredefinedProcess**\n+- **diagrams.programming.flowchart.Preparation**\n+- **diagrams.programming.flowchart.Sort**\n+- **diagrams.programming.flowchart.StartEnd**\n+- **diagrams.programming.flowchart.StoredData**\n+- **diagrams.programming.flowchart.SummingJunction**\n+\n ## programming.framework\n \n - **diagrams.programming.framework.Angular**\n - **diagrams.programming.framework.Backbone**\n - **diagrams.programming.framework.Django**\n - **diagrams.programming.framework.Ember**\n+- **diagrams.programming.framework.Fastapi**, **FastAPI** (alias)\n - **diagrams.programming.framework.Flask**\n - **diagrams.programming.framework.Flutter**\n - **diagrams.programming.framework.Laravel**\ndiff --git a/examples/__init__.py b/examples/__init__.py\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/examples/aws.png b/examples/aws.png\nnew file mode 100644\nindex 000000000..f762f76a2\nBinary files /dev/null and b/examples/aws.png differ\ndiff --git a/examples/aws.py b/examples/aws.py\nnew file mode 100644\nindex 000000000..3599a5c31\n--- /dev/null\n+++ b/examples/aws.py\n@@ -0,0 +1,26 @@\n+from diagrams import Diagram, Edge\n+from diagrams.aws.cluster import *\n+from diagrams.aws.compute import EC2\n+from diagrams.onprem.container import Docker\n+from diagrams.onprem.cluster import *\n+from diagrams.aws.network import ELB\n+\n+with Diagram(name=\"\", direction=\"TB\", show=True):\n+    with Cluster(\"AWS\"):\n+        with Region(\"eu-west-1\"):\n+            with AvailabilityZone(\"eu-west-1a\"):\n+                with VirtualPrivateCloud(\"\"):\n+                    with PrivateSubnet(\"Private\"):\n+                        with SecurityGroup(\"web sg\"):\n+                            with AutoScalling(\"\"):\n+                                with EC2Contents(\"A\"):\n+                                    d1 = Docker(\"Container\")\n+                                with ServerContents(\"A1\"):\n+                                    d2 = Docker(\"Container\")\n+\n+                    with PublicSubnet(\"Public\"):\n+                        with SecurityGroup(\"elb sg\"):\n+                            lb = ELB()\n+\n+    lb >> Edge(forward=True, reverse=True) >> d1\n+    lb >> Edge(forward=True, reverse=True) >> d2\ndiff --git a/examples/azure.png b/examples/azure.png\nnew file mode 100644\nindex 000000000..04af158c1\nBinary files /dev/null and b/examples/azure.png differ\ndiff --git a/examples/azure.py b/examples/azure.py\nnew file mode 100644\nindex 000000000..e0948879b\n--- /dev/null\n+++ b/examples/azure.py\n@@ -0,0 +1,24 @@\n+from diagrams import Diagram, Edge\n+from diagrams.azure.cluster import *\n+from diagrams.azure.compute import VM\n+from diagrams.onprem.container import Docker\n+from diagrams.onprem.cluster import *\n+from diagrams.azure.network import LoadBalancers\n+\n+with Diagram(name=\"\", filename=\"azure\", direction=\"TB\", show=True):\n+    with Cluster(\"Azure\"):\n+        with Region(\"East US2\"):\n+            with AvailabilityZone(\"Zone 2\"):\n+                with VirtualNetwork(\"\"):\n+                    with SubnetWithNSG(\"Private\"):\n+                        # with VMScaleSet(\"\"): # Depends on PR-404\n+                        with VMContents(\"A\"):\n+                            d1 = Docker(\"Container\")\n+                        with ServerContents(\"A1\"):\n+                            d2 = Docker(\"Container\")\n+\n+                    with Subnet(\"Public\"):\n+                        lb = LoadBalancers()\n+\n+    lb >> Edge(forward=True, reverse=True) >> d1\n+    lb >> Edge(forward=True, reverse=True) >> d2\ndiff --git a/resources/azure/compute/vm-scale-set.png b/resources/azure/compute/vm-scale-set.png\nnew file mode 100644\nindex 000000000..f69874c02\nBinary files /dev/null and b/resources/azure/compute/vm-scale-set.png differ\ndiff --git a/resources/gcp/operations/monitoring.png b/resources/gcp/operations/monitoring.png\nnew file mode 100644\nindex 000000000..427babb76\nBinary files /dev/null and b/resources/gcp/operations/monitoring.png differ\ndiff --git a/resources/onprem/analytics/powerbi.png b/resources/onprem/analytics/powerbi.png\nnew file mode 100644\nindex 000000000..9783fc946\nBinary files /dev/null and b/resources/onprem/analytics/powerbi.png differ\ndiff --git a/resources/programming/flowchart/action.png b/resources/programming/flowchart/action.png\nnew file mode 100644\nindex 000000000..28205f4b6\nBinary files /dev/null and b/resources/programming/flowchart/action.png differ\ndiff --git a/resources/programming/flowchart/collate.png b/resources/programming/flowchart/collate.png\nnew file mode 100644\nindex 000000000..2d5be1c84\nBinary files /dev/null and b/resources/programming/flowchart/collate.png differ\ndiff --git a/resources/programming/flowchart/database.png b/resources/programming/flowchart/database.png\nnew file mode 100644\nindex 000000000..78eb1718c\nBinary files /dev/null and b/resources/programming/flowchart/database.png differ\ndiff --git a/resources/programming/flowchart/decision.png b/resources/programming/flowchart/decision.png\nnew file mode 100644\nindex 000000000..40b9293d2\nBinary files /dev/null and b/resources/programming/flowchart/decision.png differ\ndiff --git a/resources/programming/flowchart/delay.png b/resources/programming/flowchart/delay.png\nnew file mode 100644\nindex 000000000..b859d173d\nBinary files /dev/null and b/resources/programming/flowchart/delay.png differ\ndiff --git a/resources/programming/flowchart/display.png b/resources/programming/flowchart/display.png\nnew file mode 100644\nindex 000000000..1d50abfc1\nBinary files /dev/null and b/resources/programming/flowchart/display.png differ\ndiff --git a/resources/programming/flowchart/document.png b/resources/programming/flowchart/document.png\nnew file mode 100644\nindex 000000000..02bb83c8c\nBinary files /dev/null and b/resources/programming/flowchart/document.png differ\ndiff --git a/resources/programming/flowchart/input-output.png b/resources/programming/flowchart/input-output.png\nnew file mode 100644\nindex 000000000..4211d0a7b\nBinary files /dev/null and b/resources/programming/flowchart/input-output.png differ\ndiff --git a/resources/programming/flowchart/inspection.png b/resources/programming/flowchart/inspection.png\nnew file mode 100644\nindex 000000000..64fbdc0d5\nBinary files /dev/null and b/resources/programming/flowchart/inspection.png differ\ndiff --git a/resources/programming/flowchart/internal-storage.png b/resources/programming/flowchart/internal-storage.png\nnew file mode 100644\nindex 000000000..65baf6ef5\nBinary files /dev/null and b/resources/programming/flowchart/internal-storage.png differ\ndiff --git a/resources/programming/flowchart/loop-limit.png b/resources/programming/flowchart/loop-limit.png\nnew file mode 100644\nindex 000000000..29813f993\nBinary files /dev/null and b/resources/programming/flowchart/loop-limit.png differ\ndiff --git a/resources/programming/flowchart/manual-input.png b/resources/programming/flowchart/manual-input.png\nnew file mode 100644\nindex 000000000..517786ac5\nBinary files /dev/null and b/resources/programming/flowchart/manual-input.png differ\ndiff --git a/resources/programming/flowchart/manual-loop.png b/resources/programming/flowchart/manual-loop.png\nnew file mode 100644\nindex 000000000..13d1e9f05\nBinary files /dev/null and b/resources/programming/flowchart/manual-loop.png differ\ndiff --git a/resources/programming/flowchart/merge.png b/resources/programming/flowchart/merge.png\nnew file mode 100644\nindex 000000000..d6a5851b6\nBinary files /dev/null and b/resources/programming/flowchart/merge.png differ\ndiff --git a/resources/programming/flowchart/multiple-documents.png b/resources/programming/flowchart/multiple-documents.png\nnew file mode 100644\nindex 000000000..ed376aace\nBinary files /dev/null and b/resources/programming/flowchart/multiple-documents.png differ\ndiff --git a/resources/programming/flowchart/off-page-connector-left.png b/resources/programming/flowchart/off-page-connector-left.png\nnew file mode 100644\nindex 000000000..afc8d5bb8\nBinary files /dev/null and b/resources/programming/flowchart/off-page-connector-left.png differ\ndiff --git a/resources/programming/flowchart/off-page-connector-right.png b/resources/programming/flowchart/off-page-connector-right.png\nnew file mode 100644\nindex 000000000..a12825014\nBinary files /dev/null and b/resources/programming/flowchart/off-page-connector-right.png differ\ndiff --git a/resources/programming/flowchart/or.png b/resources/programming/flowchart/or.png\nnew file mode 100644\nindex 000000000..2cb2402fc\nBinary files /dev/null and b/resources/programming/flowchart/or.png differ\ndiff --git a/resources/programming/flowchart/predefined-process.png b/resources/programming/flowchart/predefined-process.png\nnew file mode 100644\nindex 000000000..f052d7bf0\nBinary files /dev/null and b/resources/programming/flowchart/predefined-process.png differ\ndiff --git a/resources/programming/flowchart/preparation.png b/resources/programming/flowchart/preparation.png\nnew file mode 100644\nindex 000000000..50aab196d\nBinary files /dev/null and b/resources/programming/flowchart/preparation.png differ\ndiff --git a/resources/programming/flowchart/sort.png b/resources/programming/flowchart/sort.png\nnew file mode 100644\nindex 000000000..08718b4aa\nBinary files /dev/null and b/resources/programming/flowchart/sort.png differ\ndiff --git a/resources/programming/flowchart/start-end.png b/resources/programming/flowchart/start-end.png\nnew file mode 100644\nindex 000000000..4772c3679\nBinary files /dev/null and b/resources/programming/flowchart/start-end.png differ\ndiff --git a/resources/programming/flowchart/stored-data.png b/resources/programming/flowchart/stored-data.png\nnew file mode 100644\nindex 000000000..972e56090\nBinary files /dev/null and b/resources/programming/flowchart/stored-data.png differ\ndiff --git a/resources/programming/flowchart/summing-junction.png b/resources/programming/flowchart/summing-junction.png\nnew file mode 100644\nindex 000000000..47e876b35\nBinary files /dev/null and b/resources/programming/flowchart/summing-junction.png differ\ndiff --git a/resources/programming/framework/fastapi.png b/resources/programming/framework/fastapi.png\nnew file mode 100644\nindex 000000000..d79d51bf7\nBinary files /dev/null and b/resources/programming/framework/fastapi.png differ\ndiff --git a/tests/test_diagram.py b/tests/test_diagram.py\nindex ad8558c54..0242e9a58 100644\n--- a/tests/test_diagram.py\n+++ b/tests/test_diagram.py\n@@ -135,20 +135,20 @@ def test_validate_direction(self):\n \n     def test_with_global_context(self):\n         with Diagram(name=os.path.join(self.name, \"with_global_context\"), show=False):\n-            self.assertIsNone(getcluster())\n+            self.assertEqual(getcluster(), getdiagram())\n             with Cluster():\n-                self.assertIsNotNone(getcluster())\n-            self.assertIsNone(getcluster())\n+                self.assertNotEqual(getcluster(), getdiagram())\n+            self.assertEqual(getcluster(), getdiagram())\n \n     def test_with_nested_cluster(self):\n         with Diagram(name=os.path.join(self.name, \"with_nested_cluster\"), show=False):\n-            self.assertIsNone(getcluster())\n+            self.assertEqual(getcluster(), getdiagram())\n             with Cluster() as c1:\n                 self.assertEqual(c1, getcluster())\n                 with Cluster() as c2:\n                     self.assertEqual(c2, getcluster())\n                 self.assertEqual(c1, getcluster())\n-            self.assertIsNone(getcluster())\n+            self.assertEqual(getcluster(), getdiagram())\n \n     def test_node_not_in_diagram(self):\n         # Node must be belong to a diagrams.\n",
    "diff_length": 42521
  }
]