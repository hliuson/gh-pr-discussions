[
  {
    "text": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "label": 1
  },
  {
    "text": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "label": 1
  },
  {
    "text": "### Describe your change:\r\n\r\n#fixed issue #11804\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will no",
    "label": 1
  },
  {
    "text": "### Describe your change:\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fai",
    "label": 1
  },
  {
    "text": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "label": 1
  },
  {
    "text": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "label": 1
  },
  {
    "text": "",
    "label": 1
  },
  {
    "text": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "label": 1
  },
  {
    "text": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "label": 1
  },
  {
    "text": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "label": 1
  },
  {
    "text": "",
    "label": 1
  },
  {
    "text": "Kafami karistiran bir iki farkli yaklasimi ceviri icerisinde denedim, ornegin orijinal dokumanlarda `abbr` tag'ini bazi kavramlar icin bir kac defa kullanip sonrasinda kullanmayi birakiyordu, ben de buna benzer bir yaklasim sergilemeye calistim. Bunun disinda haddimden fazla yerellestirme yapmis olabilirim, incelemenizde lutfen acimayin ki ortaya duzgun bir sey ciksin \ud83d\ude04 ",
    "label": 1
  },
  {
    "text": "Currently, Whisper defaults to using the CPU on MacOS devices despite the fact that PyTorch has introduced Metal Performance Shaders framework for Apple devices in the nightly release ([more info](https://pytorch.org/blog/introducing-accelerated-pytorch-training-on-mac/)).\r\n\r\nWith my changes to __init__.py, torch checks in MPS is available if torch.device has not been specified. If it is, and CUDA is not available, then Whisper defaults to MPS.\r\n\r\nThis way, Mac users can experience speedups from",
    "label": 1
  },
  {
    "text": "",
    "label": 1
  },
  {
    "text": "This PR introduces a heuristic that determines if a segment is probably a hallucination. If that \"probable\" hallucination occurs after a period of silence (specified by `--hallucination_silence_threshold` in seconds), then we seek past the silence and reprocess from that point. Eliminating the silence before a hallucination improves the likelihood of getting a correct inference, but since this also requires extra processing time, we only do this when a probable hallucination is detected.\r\n\r\nThe ",
    "label": 1
  },
  {
    "text": "Obviously not meant to land, this RP is representative of what it would take to get dynamo working.\r\n\r\ntest_me.py takes 4.4 seconds on main branch\r\ntest_me.py takes 3.2 seconds in this PR\r\n\r\n**Overview:**\r\n1) I took some free audio book of chapter 1 of Charles Dickens' David Copperfield\r\n2) I used an mp3 splitting tool to split it into 8 parts, and then used the util in the model to get 10 chunks of 30 seconds each\r\n3) I \"preheated\" the model with audio part 0, and then ran inference on the othe",
    "label": 1
  },
  {
    "text": "",
    "label": 1
  },
  {
    "text": "The docs and some tests contain references to a master/slave db configuration.\nWhile this terminology has been used for a long time, those terms may carry racially charged meanings to users.\nThis patch replaces all occurrences of master and slave with 'leader' and 'follower'\n",
    "label": 1
  },
  {
    "text": "# Trac ticket number\r\n\r\nticket-373\r\n\r\n# Branch description\r\n\r\nThis branch adds the `CompositePrimaryKey` field. If present, Django will create a composite primary key.\r\n\r\nPlease refer to the [docs](https://github.com/django/django/pull/18056/files#diff-cca8870fcaec19104d999f61553ba925c72e2eb19b4933068c4849f2ce58a6f6) for a more in-depth explanation.\r\n\r\n[Proposal](https://forum.djangoproject.com/t/gsoc-2024-proposal-django-orm-support-for-composite-primary-keys/29146)\r\n[Previous PR](https://githu",
    "label": 1
  },
  {
    "text": "",
    "label": 1
  },
  {
    "text": "Adds jQuery Select2 version 4 to support async select inputs\r\nincluding a search feature.\r\n\r\n**I split the PR in two commits, one is vendoring select2, one contains my code.**\r\n\r\n### Links & Discussions\r\n* [djangoproject#14370](https://code.djangoproject.com/ticket/14370)\r\n* https://groups.google.com/forum/#!topic/django-developers/tCNWnLP8jzM\r\n* https://groups.google.com/forum/#!topic/django-developers/Ip63Xqw01IA/discussion\r\n* https://groups.google.com/forum/#!topic/django-developers/jGgZngTq3",
    "label": 1
  }
]