[
  {
    "pr_title": "move the translated documentation files to a docs folder",
    "pr_body": "- add translation section in Readme\r\n- replace multilinks with a  single link to translation section\r\n\r\nWill the (../filename) syntax work?",
    "pr_number": 6614,
    "comment_id": 972143319,
    "author": "davorpa",
    "body": "> Will the (../filename) syntax work?\r\n\r\nIt should!\r\n\r\nMaybe needs some checks after merge:\r\n- Insights -> Community: have a green status\r\n- start a navigation from assistive links provided by github (eg in issues or PR):\r\n  `Remember, contributions to this repository should follow its **contributing guidelines** and **code of conduct**.` \r\n![image](https://user-images.githubusercontent.com/3125580/142410107-553a6efe-d66c-4592-8edd-d81e6266bd6b.png)\r\n\r\n- Try links `(../README.md#translations)` from rendered Github Pages. Maybe would be better  `(../#translations)` as target, or make a README.md in `docs` too moving section added in root\r\n\r\n",
    "created_at": "2021-11-17T22:17:57Z",
    "updated_at": "2021-11-18T11:49:52Z",
    "repository": "Unknown",
    "comment_length": 648
  },
  {
    "pr_title": "Telugu courses added",
    "pr_body": "## What does this PR do?\r\nAdd resource(s) | Remove resource(s) | Add info | Improve repo\r\n\r\n## For resources\r\n### Description\r\n\r\n### Why is this valuable (or not)?\r\n\r\n### How do we know it's really free?\r\n\r\n### For book lists, is it a book? For course lists, is it a course? etc.\r\n\r\n## Checklist:\r\n- [ ] Read our [contributing guidelines](https://github.com/EbookFoundation/free-programming-books/blob/main/docs/CONTRIBUTING.md).\r\n- [ ] [Search](https://ebookfoundation.github.io/free-programming-boo",
    "pr_number": 7818,
    "comment_id": 1272260404,
    "author": "TejaPutcha",
    "body": "Can anyone please help me here? I do not understand what the problem is.",
    "created_at": "2022-10-08T08:07:14Z",
    "updated_at": "2022-10-08T08:07:14Z",
    "repository": "Unknown",
    "comment_length": 72
  },
  {
    "pr_title": "Format desc base on CONTRIBUTING-zh and Optimize zh version book comments.",
    "pr_body": "## What does this PR do?\r\nImprove Repo\r\n\r\n## For resources\r\n\r\n* [free-programming-books-zh.md](https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books-zh.md)\r\n\r\n### Description \r\n\r\nFormat desc of zh version programming books base on CONTRIBUTING-zh,\r\nOptimize zh version book comments. \r\n\r\n*comments:*  As there's a book which is refed to a dead link, and another one is required a WEIBO Account and must sign up another account of its website, I posted 2 comment",
    "pr_number": 3166,
    "comment_id": 470963942,
    "author": "eshellman",
    "body": "I'll merge this on Sunday - wanted to leave time for comment by folks whose 中文 is better than mine!",
    "created_at": "2019-03-08T15:18:45Z",
    "updated_at": "2019-03-08T15:18:45Z",
    "repository": "Unknown",
    "comment_length": 99
  },
  {
    "pr_title": "8 books",
    "pr_body": "## What does this PR do?\r\nAdd Resource(s) | Improve Repo\r\n\r\n## For resources\r\nA MACHINE MADE THIS BOOK ten sketches of computer science by JOHN WHITINGTON (PDF)\r\n\r\nby Dr. Chris Bourke (PDF)\r\nComputer Science I - Draft\r\nComputer Science II - Draft\r\nComputer Science III  - Lecture notes\r\nTrees - Lecture notes\r\nSearching & Sorting - Lecture notes\r\n\r\nCryptography & Security - Lecture notes\r\n\r\nIntoduction to Git and Github - Tutorial\r\n\r\n### Description \r\n\r\n### Why is this valuable (or not)\r\nAccademic",
    "pr_number": 3050,
    "comment_id": 437393999,
    "author": "harrykar",
    "body": "For curiosity   I did a search on \"Lecture\" keyword in book's list and the result is :\r\n\r\nLectures on scientific computing with python\r\nScipy Lecture Notes\r\nLectures Notes on Algorithm Analysis and Computational Complexity (Fourth Edition)\r\nPractical and Theoretical Aspects of Compiler Construction (class lectures and slides)\r\nLecture Notes of Linear Algebra\r\nComputer Musings (lectures by Donald Knuth)\r\nHigh-Performance Scientific Computing ((class lectures and slides))\r\nUNIX Application and System Programming, lecture notes",
    "created_at": "2018-11-09T15:27:58Z",
    "updated_at": "2018-11-09T18:25:28Z",
    "repository": "Unknown",
    "comment_length": 530
  },
  {
    "pr_title": "docs(howto): Homogenize HowTo's format across translated files",
    "pr_body": "## What does this PR do?\r\nImprove repo\r\n\r\n## For resources\r\n### Description\r\n\r\n- [x] Add H1 header\r\n- [x] `Read this` ... right alignmements\r\n- [x] Split a bit first paragraph to highlight welcome.\r\n- [x] Introduce Pull Request acronym.\r\n- [x] trademarks / typos: GitHub, YouTube, Pull Request\r\n- [x] Update GitHub links urls. `help`/`guides` subdomain was moved to `docs` so now a 301 Redirect is skipped.\r\n- [x] Details block added, with center align. When clicked, the contributor graphs is toggle",
    "pr_number": 6724,
    "comment_id": 1042796205,
    "author": "davorpa",
    "body": "Remaining conflicts are with #6700",
    "created_at": "2022-02-17T10:26:51Z",
    "updated_at": "2022-02-17T10:26:51Z",
    "repository": "Unknown",
    "comment_length": 34
  },
  {
    "pr_title": "issues:add in list #3009,#3010, correction blank in #3011",
    "pr_body": "## What does this PR do?\r\nAdd Resource(s) | Improve Repo\r\n\r\n## For resources\r\n### Description \r\nadded:\r\nObject-oriented Programming in JavaTM Textbook by Rick Halterman #3009\r\nIntroduction to Computer Science by Robert Sedgewick and Kevin Wayne. #3010\r\ncorrected:\r\nlink not displayed correctly(displayed with makdown)\r\ndeleted blanc ...Problem Solving] (https://archive.... in Java, Java, Java Object-Oriented Problem Solving by R. Morelli and R.Walde #3011\r\n\r\n### Why is this valuable (or not)\r\nKnow",
    "pr_number": 3026,
    "comment_id": 431255955,
    "author": "harrykar",
    "body": "I did all correct dunno why that conflict. Someone from staff need here i guess  ",
    "created_at": "2018-10-19T06:13:46Z",
    "updated_at": "2018-10-19T06:13:46Z",
    "repository": "Unknown",
    "comment_length": 81
  },
  {
    "pr_title": "docs(free-programming-books-subjects): fixed broken links #5470",
    "pr_body": "## What does this PR do?\r\nAdd info | Improve repo\r\n\r\n## For resources\r\n### Description\r\n\r\nI fixed the broken links on `free-programming-books-subjects.md`, see #5470.\r\n\r\nFalse-positive links: 07, 11, 12, 15\r\n\r\n\r\n## Checklist:\r\n- [X] Read our [contributing guidelines](https://github.com/EbookFoundation/free-programming-books/blob/master/CONTRIBUTING.md)\r\n- [X] Include author(s) and platform where appropriate.\r\n- [X] Put lists in alphabetical order, correct spacing.\r\n- [X] Add needed indications (",
    "pr_number": 6471,
    "comment_id": 953037017,
    "author": "eshellman",
    "body": "Thanks!!! Would appreciate an additional set of eyes to check the non-pdf resources. Sometimes the wayback machine doesn't pick up deeply linked parts of a website. for archived github resources, check to see if there's a clone of the repo somewhere, a big fraction of github repos get cloned.",
    "created_at": "2021-10-27T15:20:51Z",
    "updated_at": "2021-10-27T15:20:51Z",
    "repository": "Unknown",
    "comment_length": 293
  },
  {
    "pr_title": "fix: homogenize authoring format and place",
    "pr_body": "## What does this PR do?\r\nAdd info | Improve repo\r\n\r\n## For resources\r\n### Description\r\n\r\n- use colon as unique author delimiter (replaces `&`, `and`, `y`, `e`, `et`...)\r\n- ensures is placed after resource title, not part of itself `title - author`. Strip `by`\r\n- `et al.` as special author/token to group many\r\n- ~remove author role title/acronyms~\r\n- use ~`trad.`~ `trl.` as traducer notation instead remove it (needs review all added resources) Definition list: https://loc.gov/marc/relators/relat",
    "pr_number": 7034,
    "comment_id": 1223331478,
    "author": "davorpa",
    "body": "31dc7bb5ef1905d11e3b46fe71232f66a2dcd53d resolves conflicts with #7032 merge",
    "created_at": "2022-08-22T23:39:13Z",
    "updated_at": "2022-08-22T23:39:13Z",
    "repository": "Unknown",
    "comment_length": 76
  },
  {
    "pr_title": "add ruff ",
    "pr_body": "## What is this Python project?\r\n\r\nThis is in python library for linter\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n<p align=\"center\">\r\n  <img alt=\"Bar chart with benchmark results\" src=\"https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg\">\r\n</p>\r\n\r\n- 10-100x faster than existing linters\r\n-  Installable via pip\r\n- hammer_and_wrench pyproject.toml support\r\n- Native re-implementations of popular Flake8 plugins, like ",
    "pr_number": 2292,
    "comment_id": 1368204362,
    "author": "Alao-legalboy",
    "body": "0l\n\nOn Dec 30, 2022 6:23 PM, \"Pedro Fonseca\" ***@***.***> wrote:\n\nWhat is this Python project?\n\nThis is in python library for linter\nWhat's the difference between this Python project and similar ones?\n\n[image: Bar chart with benchmark results]\n<https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg>\n\n   - 10-100x faster than existing linters\n   - Installable via pip\n   - hammer_and_wrench pyproject.toml support\n   - Native re-implementations of popular Flake8 plugins, like\n   flake8-bugbear <https://pypi.org/project/flake8-bugbear/>\n   - Monorepo-friendly configuration via hierarchical and cascading settings\n\n--\n\nAnyone who agrees with this pull request could submit an *Approve* review\nto it.\n------------------------------\nYou can view, comment on, or merge this pull request online at:\n\n  https://github.com/vinta/awesome-python/pull/2292\nCommit Summary\n\n   - a50a140\n   <https://github.com/vinta/awesome-python/pull/2292/commits/a50a140da2ce2e300ba868c73df8a64a2c3afadb>\n   add ruff in code linters\n\nFile Changes\n\n(1 file <https://github.com/vinta/awesome-python/pull/2292/files>)\n\n   - *M* README.md\n   <https://github.com/vinta/awesome-python/pull/2292/files#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5>\n   (2)\n\nPatch Links:\n\n   - https://github.com/vinta/awesome-python/pull/2292.patch\n   - https://github.com/vinta/awesome-python/pull/2292.diff\n\n—\nReply to this email directly, view it on GitHub\n<https://github.com/vinta/awesome-python/pull/2292>, or unsubscribe\n<https://github.com/notifications/unsubscribe-auth/AX6RBONI7ZHDUUEAERK2M6TWP4SCBANCNFSM6AAAAAATNB6F44>\n.\nYou are receiving this because you are subscribed to this thread.Message\nID: ***@***.***>\n",
    "created_at": "2022-12-31T11:38:46Z",
    "updated_at": "2022-12-31T11:38:46Z",
    "repository": "Unknown",
    "comment_length": 1747
  },
  {
    "pr_title": ":triangular_flag_on_post: an extra accuracy README.md",
    "pr_body": "\"ORM\" may not encompass all database mapping tools, and the new phrasing provides clarity for users who might be unfamiliar with the term. But I believe the term \"ORM\" is so popular, especially around newcomers that dropping that from the title might be a bad idea. the Object Relational Mapper has an emphasis on the \"Relational\" side.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r",
    "pr_number": 2611,
    "comment_id": 2424296208,
    "author": "iwfyou",
    "body": "sorry I have some personal  problems with my condition  so I will update soon thanks ",
    "created_at": "2024-10-19T23:49:24Z",
    "updated_at": "2024-10-19T23:49:24Z",
    "repository": "Unknown",
    "comment_length": 85
  },
  {
    "pr_title": "add pydantic",
    "pr_body": "## What is this Python project?\r\n\r\nData validation and settings management using Python type hinting.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pure Python\r\n- Intended as a supplement to standard library dataclasses and typing modules\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "pr_number": 1723,
    "comment_id": 766494303,
    "author": "yhay81",
    "body": "Additional info:\r\nfastapi use it inside and fastapi recommend users to use it in tutorial.\r\nhttps://fastapi.tiangolo.com/tutorial/sql-databases/\r\nThey seem to have similar contributers.",
    "created_at": "2021-01-25T02:10:04Z",
    "updated_at": "2021-01-25T02:10:04Z",
    "repository": "Unknown",
    "comment_length": 185
  },
  {
    "pr_title": "Add copier",
    "pr_body": "## What is this Python project?\r\n\r\nA library and command-line utility for rendering projects templates. \r\nhttps://github.com/pykong/copier\r\n\r\n* Works with **local** paths and **git URLs** (GitHub, GitLab, etc.)\r\n* Your project can include any kind of file and the text-based files can have placeholders values to be replaced with user's data.\r\n* It can be used as a library and called from your own projects (instant superpower! 🚀).\r\n* It generates a beautiful output and take care of not overwrite e",
    "pr_number": 1350,
    "comment_id": 542711351,
    "author": "pykong",
    "body": "@vinta Hey, could you plz have a look into this **PR**?",
    "created_at": "2019-10-16T13:51:50Z",
    "updated_at": "2019-10-16T13:51:50Z",
    "repository": "Unknown",
    "comment_length": 55
  },
  {
    "pr_title": "Added marshmellow",
    "pr_body": "",
    "pr_number": 471,
    "comment_id": 146539644,
    "author": "lee-kagiso",
    "body": "http://marshmallow.readthedocs.org/en/latest/\n",
    "created_at": "2015-10-08T13:11:44Z",
    "updated_at": "2015-10-08T13:11:44Z",
    "repository": "Unknown",
    "comment_length": 46
  },
  {
    "pr_title": "add basic blockchain and detection of tempering",
    "pr_body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "pr_number": 7092,
    "comment_id": 1277354643,
    "author": "Shah-Aayush",
    "body": "I'm tired now and will not do anything further extra.\r\nmy both codes were perfect but your checks keeps giving errors IDK why.\r\n",
    "created_at": "2022-10-13T09:57:44Z",
    "updated_at": "2022-10-13T09:57:44Z",
    "repository": "Unknown",
    "comment_length": 128
  },
  {
    "pr_title": "XGBoost Classifier",
    "pr_body": "### Describe your change:\r\n\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [x] This PR only changes one algorithm file.  To ease review, please open sepa",
    "pr_number": 7106,
    "comment_id": 1277575336,
    "author": "Moddy2024",
    "body": "@cclauss  Can you please review this I hope this will be merged as all the tests are passing.",
    "created_at": "2022-10-13T13:03:33Z",
    "updated_at": "2022-10-13T13:03:33Z",
    "repository": "Unknown",
    "comment_length": 93
  },
  {
    "pr_title": "Chore: Game Theory algorithms are missing #11804",
    "pr_body": "### Describe your change:\r\n\r\n#fixed issue #11804\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will no",
    "pr_number": 11859,
    "comment_id": 2397035452,
    "author": "isatyamks",
    "body": "@zixindh, I noticed the PR has been approved—do you know why it hasn't been merged yet? Any further actions required on my end?",
    "created_at": "2024-10-07T14:06:26Z",
    "updated_at": "2024-10-07T14:06:26Z",
    "repository": "Unknown",
    "comment_length": 127
  },
  {
    "pr_title": "Adding LSTM algorithm from scratch in neural network algorithm sections",
    "pr_body": "### Describe your change:\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fai",
    "pr_number": 12082,
    "comment_id": 2413091491,
    "author": "LEVIII007",
    "body": "if it gets accepted, please give me hacktober fest accepted tag. Thank you!",
    "created_at": "2024-10-15T07:21:39Z",
    "updated_at": "2024-10-15T07:21:39Z",
    "repository": "Unknown",
    "comment_length": 75
  },
  {
    "pr_title": "Python Kinematics",
    "pr_body": "### **Describe your change:**\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [x] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have not plagiarized.\r\n* [x] I know that pull requests will not be merged if they fail the automated tests.\r\n* [ ] This PR only changes one algorithm file.  To ease review, please open ",
    "pr_number": 5232,
    "comment_id": 939777699,
    "author": "SaucyGames05",
    "body": "For simplicity and conciseness, I named my variables the same as the variables used to represent certain values in kinematic equations. \r\nExamples: https://www.physicsclassroom.com/class/1dkin/Lesson-6/Kinematic-Equations\r\n(\"d\" or \"distance\" is represented by \"x-x0\" or \"final position minus initial position\")",
    "created_at": "2021-10-11T07:51:50Z",
    "updated_at": "2021-10-11T07:51:50Z",
    "repository": "Unknown",
    "comment_length": 310
  },
  {
    "pr_title": "Add algorithm for N-body simulation - retry",
    "pr_body": "### **Describe your change:**\r\nNew pull request to replace #4245 since the old pull request ran into a branch conflict after updating. The changes to #4245 include better comments and more descriptive names.\r\n\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### **Checklist:**\r\n* [ ] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\r\n* [x] This pull request is all my own work -- I have ",
    "pr_number": 4298,
    "comment_id": 809305044,
    "author": "algobytewise",
    "body": "Several additional doctests were added for the methods of `Body` & `BodySystem`. I managed to simplify the `plot`-function by getting rid of the `init`-function. The `update`-function now calls the function `update_step`, which has its own doctests. I also refactored the examples into separate functions.",
    "created_at": "2021-03-29T11:30:58Z",
    "updated_at": "2021-03-29T11:30:58Z",
    "repository": "Unknown",
    "comment_length": 305
  },
  {
    "pr_title": "Improved Graph Implementations",
    "pr_body": "### Describe your change:\r\n\r\nThe graph implementations using the adjacency list and adjacency matrix were not very comprehensive and lacked supporting functions. I wanted to improve them and also write tests to prove they worked. This also solved Issue #8709, which I brought up. To run my tests, do `python3 <testfile>.py` under the `graphs/tests` folder.\r\n\r\n* [x] Add an algorithm?\r\n* [ ] Fix a bug or typo in an existing algorithm?\r\n* [ ] Documentation change?\r\n\r\n### Checklist:\r\n* [x] I have read",
    "pr_number": 8730,
    "comment_id": 1546818016,
    "author": "nith2001",
    "body": "I'll clear up the failed code quality test soon. First-time contributor so I didn't read the Contributor.md as closely as I should've regarding testing and quality.",
    "created_at": "2023-05-14T06:15:42Z",
    "updated_at": "2023-05-15T17:36:31Z",
    "repository": "Unknown",
    "comment_length": 164
  },
  {
    "pr_title": "feat(platform): Add Block Development SDK with auto-registration system",
    "pr_body": "## Block Development SDK - Simplifying Block Creation\n\n### Problem\nCurrently, creating a new block requires manual updates to **5+ files** scattered across the codebase:\n- `backend/data/block_cost_config.py` - Manually add block costs\n- `backend/integrations/credentials_store.py` - Add default credentials  \n- `backend/integrations/providers.py` - Register new providers\n- `backend/integrations/oauth/__init__.py` - Register OAuth handlers\n- `backend/integrations/webhooks/__init__.py` - Register we",
    "pr_number": 10074,
    "comment_id": 2944335692,
    "author": "Swiftyos",
    "body": "✅ **Preview Environment Deployed Successfully**\n\n📊 **Deployment Summary**\n| Service | Status |\n|---------|--------|\n| Redis | ✅ Success |\n| RabbitMQ | ✅ Success |\n| Backend Server | ✅ Success |\n| WebSocket Server | ✅ Success |\n| Scheduler Server | ✅ Success |\n| Frontend Builder | ✅ Success |\n\n🔔 Please check Discord for the preview environment URLs and details.\n\n*The deployment status and URLs will be posted in the AutoGPT Discord server.*",
    "created_at": "2025-06-05T13:29:00Z",
    "updated_at": "2025-06-05T13:29:00Z",
    "repository": "Unknown",
    "comment_length": 442
  },
  {
    "pr_title": "New rule: fix missing `git clone` when given a URL",
    "pr_body": "Often when I'm trying to `git clone` a project, I'll paste the URL into my terminal expecting it to also contain the `git clone` part. This rule should allow `thefuck` to detect the missing `git clone` and suggest it when someone pastes an SSH or HTTP/HTTP url that ends in `.git`.\r\n\r\nA rule for correcting for double `git clone git clone [repo]` already exists. This rule addresses the opposite problem.\r\n\r\n![image](https://user-images.githubusercontent.com/31365175/169957706-14e2c30d-5f84-4fb1-b59",
    "pr_number": 1302,
    "comment_id": 1139268291,
    "author": "MaddyGuthridge",
    "body": "@djh82 would appreciate a re-review. I think I've fixed up all the issues",
    "created_at": "2022-05-27T04:35:25Z",
    "updated_at": "2022-05-27T04:35:25Z",
    "repository": "Unknown",
    "comment_length": 73
  },
  {
    "pr_title": "Run flake8 in Travis, fix some errors",
    "pr_body": "",
    "pr_number": 563,
    "comment_id": 251724739,
    "author": "coveralls",
    "body": "[![Coverage Status](https://coveralls.io/builds/8199300/badge)](https://coveralls.io/builds/8199300)\n\nCoverage decreased (-2.8%) to 90.289% when pulling **01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8** into **ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master**.\n",
    "created_at": "2016-10-05T16:22:48Z",
    "updated_at": "2016-10-05T16:22:48Z",
    "repository": "Unknown",
    "comment_length": 288
  },
  {
    "pr_title": "Adding devcontainer for easy Python development",
    "pr_body": "Love the tool, wanted to contribute and here is the result :)\r\n\r\n- Added a [VSCode devcontainer](https://code.visualstudio.com/docs/remote/containers) to help people get up and running with the repo quicker without needing to install any tooling or do any setup of venv\r\n- Added a new rule to help when some repositories use `main` and some use `master` as the primary integration branch\r\n\r\nFeedback welcome and thanks for the great tooling",
    "pr_number": 1184,
    "comment_id": 871347756,
    "author": "scorphus",
    "body": "Also, the fix for Python 2.7 tests is already on current `master`, would you please rebase on top of that? 🙂 ",
    "created_at": "2021-06-30T12:09:22Z",
    "updated_at": "2021-06-30T12:09:22Z",
    "repository": "Unknown",
    "comment_length": 109
  },
  {
    "pr_title": "#1282 git misspelled",
    "pr_body": "The function git_support can not be useful if a command has the word \"git\" misspelled.\r\nThe purpose of this rule is to unfuck the commands like: gti commit -m 'message'.\r\nWithout this rule, for example, if you try to unfuck this command the result will be:\r\ngit commit -m message. This means that the quotation marks do not return. #1282\r\n\r\nThis rule is generally useful for every git command, in which the word git is misspelled.\r\n\r\nI have also run some tests!",
    "pr_number": 1292,
    "comment_id": 1118005534,
    "author": "nkakonas",
    "body": "I made test_not_match fucntion. I hope that now it is better!",
    "created_at": "2022-05-04T22:52:06Z",
    "updated_at": "2022-05-04T22:52:06Z",
    "repository": "Unknown",
    "comment_length": 61
  },
  {
    "pr_title": "Globalize pyenv rule ",
    "pr_body": "Getting pyenv_no_such_command.py rule as base, I created an env_no_such_command.py script able to hanlde all env related commands. Transforming, in this way, the pyenv rule in a more global one. \r\n\r\nThis commit was originated and fixes #1074 ",
    "pr_number": 1100,
    "comment_id": 647651945,
    "author": "gkodosis",
    "body": "@scorphus Is everything good with my pr, would you like me to enhance anything? :smile: ",
    "created_at": "2020-06-22T17:08:58Z",
    "updated_at": "2020-06-22T17:08:58Z",
    "repository": "Unknown",
    "comment_length": 88
  },
  {
    "pr_title": "config.fish: improve documentation on creating Fish functions",
    "pr_body": "How about this as solution to #128? Please review and comment. Thanks!\n",
    "pr_number": 130,
    "comment_id": 96277061,
    "author": "blaecwen",
    "body": "This solution works great, thanks.\n",
    "created_at": "2015-04-25T21:07:19Z",
    "updated_at": "2015-04-25T21:07:19Z",
    "repository": "Unknown",
    "comment_length": 35
  },
  {
    "pr_title": "Rule for branch dash 0",
    "pr_body": "fixes fat-fingering `git branch -0` instead of `git branch -v`",
    "pr_number": 942,
    "comment_id": 522730390,
    "author": "nvbn",
    "body": "Nice idea, maybe it will be a good thing to make that more generic? To just replace any argument that starts with `0` if it appears in `stderr`.",
    "created_at": "2019-08-19T19:58:21Z",
    "updated_at": "2019-08-19T19:58:21Z",
    "repository": "Unknown",
    "comment_length": 144
  },
  {
    "pr_title": "Fix Issue #959: breaks after composer require with single package, revamp composer rules",
    "pr_body": "Hello! I'm a day late for Hacktoberfest but I hope you find this PR useful.\r\n\r\nThis pull request aims to fix #959 and add better integration with the [composer](https://getcomposer.org) tool. It turns out the issue of the crash was not because \"there was only one suggestion\" as suggested in the Issue, but rather that the matcher erroneously matches __package not found__ errors instead of just __command not found__ errors. Since the output of the two varies significantly, I have created two separ",
    "pr_number": 1007,
    "comment_id": 549029363,
    "author": "scorphus",
    "body": "If only GitHub would show the comments in line-number order, other than chronological. Sorry if the review is confusing, please let me know if something is not clear.",
    "created_at": "2019-11-02T10:06:03Z",
    "updated_at": "2019-11-02T10:06:03Z",
    "repository": "Unknown",
    "comment_length": 166
  },
  {
    "pr_title": "feat: new rule for `nix-shell`",
    "pr_body": "Implementation is similar to the one explained in https://github.com/nvbn/thefuck/issues/912#issue-441679613.\r\n\r\nIn a nutshell, it tries to wrap the user's failed command in a nix-shell call.\r\n\r\n```\r\n$ ponysay moo\r\nThe program 'ponysay' is not in your PATH. You can make it available in an\r\nephemeral shell by typing:\r\n  nix-shell -p ponysay\r\n\r\n$ fuck\r\nnix-shell -p ponysay --run \"ponysay moo\" [enter/↑/↓/ctrl+c]\r\n```\r\n\r\nFurther info on nix-shell: https://thiagowfx.github.io/2022/02/nix-shell-in-a-n",
    "pr_number": 1393,
    "comment_id": 1762743866,
    "author": "kdb424",
    "body": "Been loving this. Hope it gets reviewed and upstreamed for all. Thanks for making this!",
    "created_at": "2023-10-14T08:47:52Z",
    "updated_at": "2023-10-14T08:47:52Z",
    "repository": "Unknown",
    "comment_length": 87
  },
  {
    "pr_title": "start work on -y",
    "pr_body": "Fixes #531 \n\n[WIP]\n\n@scorphus:  I have never programmed in Python before, is this where I add the option, or is it somewhere else?\n\nTODO\n- [ ] add flag\n- [ ] make flag set `settings.require_confirmation: False`\n- [ ] make flag execute the rest of the command\n- [ ] add tests\n",
    "pr_number": 532,
    "comment_id": 235042439,
    "author": "scorphus",
    "body": "To have it implemented the way we discussed earlier – at shell alias/function level – it would involve rewriting the shell alias – i.e. [`Fish.app_alias()`](https://github.com/nvbn/thefuck/blob/51415a5cb1ca6955fb99908e7d0e7bf012a66312/thefuck/shells/fish.py#L21) – in order to make it conditionally set `THEFUCK_REQUIRE_CONFIRMATION` to `0` prior to calling `thefuck ...`.\n",
    "created_at": "2016-07-25T18:32:51Z",
    "updated_at": "2016-07-25T18:33:24Z",
    "repository": "Unknown",
    "comment_length": 373
  },
  {
    "pr_title": "🌐 Add French translation for `docs/fr/docs/index.md`",
    "pr_body": "",
    "pr_number": 4203,
    "comment_id": 1007764102,
    "author": "mycaule",
    "body": "I just read the documentation in English today, and learned it was translated in French as well so the contents are quite fresh for me.\r\n\r\nAlmost finished in my opinion, you would need original poster @thiere18 to accept most suggestion, and do a final cleanup particularly on the uppercase/lowercase and punctuation in lists which don't match the French standards.",
    "created_at": "2022-01-07T21:49:06Z",
    "updated_at": "2022-01-07T21:49:16Z",
    "repository": "Unknown",
    "comment_length": 365
  },
  {
    "pr_title": ":globe_with_meridians: Add Turkish translation for `docs/tr/docs/alternatives.md`",
    "pr_body": "Kafami karistiran bir iki farkli yaklasimi ceviri icerisinde denedim, ornegin orijinal dokumanlarda `abbr` tag'ini bazi kavramlar icin bir kac defa kullanip sonrasinda kullanmayi birakiyordu, ben de buna benzer bir yaklasim sergilemeye calistim. Bunun disinda haddimden fazla yerellestirme yapmis olabilirim, incelemenizde lutfen acimayin ki ortaya duzgun bir sey ciksin 😄 ",
    "pr_number": 10502,
    "comment_id": 1775724156,
    "author": "tiangolo",
    "body": "📝 Docs preview for commit 121e6d6a9ed2176615b308489cc8953790ab72ff at: https://88cd7bfd.fastapitiangolo.pages.dev",
    "created_at": "2023-10-23T17:56:37Z",
    "updated_at": "2023-10-23T17:56:37Z",
    "repository": "Unknown",
    "comment_length": 113
  },
  {
    "pr_title": "🌐 Update Turkish translation for `docs/tr/docs/python-types.md`",
    "pr_body": "Fixes mistranslations and updates outdated doc",
    "pr_number": 10445,
    "comment_id": 1764129833,
    "author": "tiangolo",
    "body": "📝 Docs preview for commit 018703a41b7236195f10c1bdefa04b228f387071 at: https://149a3713.fastapitiangolo.pages.dev",
    "created_at": "2023-10-16T09:58:46Z",
    "updated_at": "2023-10-16T09:58:46Z",
    "repository": "Unknown",
    "comment_length": 113
  },
  {
    "pr_title": "🌐 Add Russian translation for `docs/ru/docs/tutorial/response-model.md`",
    "pr_body": "",
    "pr_number": 9675,
    "comment_id": 1590899009,
    "author": "tiangolo",
    "body": "📝 Docs preview for commit 1ad46b67e6dc33ffb1178d18a86c922aae69b44a at: https://6489918cc356c5078c7143d3--fastapi.netlify.app",
    "created_at": "2023-06-14T10:09:02Z",
    "updated_at": "2023-06-14T10:09:02Z",
    "repository": "Unknown",
    "comment_length": 124
  },
  {
    "pr_title": "🌐 Initialize translations for Traditional Chinese",
    "pr_body": "",
    "pr_number": 10505,
    "comment_id": 1776904536,
    "author": "tiangolo",
    "body": "📝 Docs preview for commit 3a0d3836b5a53cc11b6946e60eb9b5d7ef3d75f0 at: https://15e5624d.fastapitiangolo.pages.dev",
    "created_at": "2023-10-24T10:03:12Z",
    "updated_at": "2023-10-24T10:03:12Z",
    "repository": "Unknown",
    "comment_length": 113
  },
  {
    "pr_title": "🌐 Add Russian translation for `docs/ru/docs/tutorial/security/simple-oauth2.md`",
    "pr_body": "",
    "pr_number": 10599,
    "comment_id": 2028834325,
    "author": "codespearhead",
    "body": "Do you happen to know three Russian developers you can ask a [PR review](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review) from? [This](https://github.com/tiangolo/fastapi/pulls?q=is%3Apr+is%3Aopen+Russian) might help.",
    "created_at": "2024-03-31T17:27:38Z",
    "updated_at": "2024-03-31T17:27:38Z",
    "repository": "Unknown",
    "comment_length": 326
  },
  {
    "pr_title": "Uses MPS (Mac acceleration) by default when available",
    "pr_body": "Currently, Whisper defaults to using the CPU on MacOS devices despite the fact that PyTorch has introduced Metal Performance Shaders framework for Apple devices in the nightly release ([more info](https://pytorch.org/blog/introducing-accelerated-pytorch-training-on-mac/)).\r\n\r\nWith my changes to __init__.py, torch checks in MPS is available if torch.device has not been specified. If it is, and CUDA is not available, then Whisper defaults to MPS.\r\n\r\nThis way, Mac users can experience speedups from",
    "pr_number": 382,
    "comment_id": 1286492488,
    "author": "usergit",
    "body": "@dwarkeshsp have you measured any speedups compared to using the CPU?",
    "created_at": "2022-10-21T05:52:20Z",
    "updated_at": "2022-10-21T05:52:20Z",
    "repository": "Unknown",
    "comment_length": 69
  },
  {
    "pr_title": "word-level timestamps in `transcribe()`",
    "pr_body": "",
    "pr_number": 869,
    "comment_id": 1399100852,
    "author": "ryanheise",
    "body": "This DTW dependency introduces a licence incompatibility, but an alternative was suggested earlier in the discussions from memory.\r\n\r\nEdit: Alternative library recommended in https://github.com/openai/whisper/discussions/813#discussioncomment-4617447",
    "created_at": "2023-01-21T00:32:58Z",
    "updated_at": "2023-01-21T00:38:40Z",
    "repository": "Unknown",
    "comment_length": 250
  },
  {
    "pr_title": "Skip silence around hallucinations",
    "pr_body": "This PR introduces a heuristic that determines if a segment is probably a hallucination. If that \"probable\" hallucination occurs after a period of silence (specified by `--hallucination_silence_threshold` in seconds), then we seek past the silence and reprocess from that point. Eliminating the silence before a hallucination improves the likelihood of getting a correct inference, but since this also requires extra processing time, we only do this when a probable hallucination is detected.\r\n\r\nThe ",
    "pr_number": 1838,
    "comment_id": 1826189430,
    "author": "ryanheise",
    "body": "Testing on another example from https://github.com/openai/whisper/discussions/679#discussioncomment-7649183\r\n\r\n<details>\r\n<summary>Output</summary>\r\n\r\n```\r\nv2 runs:\r\n\r\n[00:00.000 --> 00:05.660]  spero che si ripigli un attimo, ho schiacciato qualche tasto che non dovevo\r\nDETECTED HALLUCINATION:  non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho\r\nDETECTED HALLUCINATION:  no\r\nDETECTED HALLUCINATION:  no\r\n\r\n\r\n\r\n[00:00.000 --> 00:05.660]  spero che si ripigli un attimo, ho schiacciato qualche tasto che non dovevo\r\nDETECTED HALLUCINATION:  non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho\r\nDETECTED HALLUCINATION:  .....\r\nDETECTED HALLUCINATION:  .....\r\n\r\n\r\n\r\n[00:00.000 --> 00:05.660]  spero che si ripigli un attimo, ho schiacciato qualche tasto che non dovevo\r\nDETECTED HALLUCINATION:  non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho capito, non ho\r\nDETECTED HALLUCINATION:  uh\r\nDETECTED HALLUCINATION:  uh\r\n\r\n\r\n\r\nv3 run:\r\n\r\n[00:00.000 --> 00:04.240]  Spero che si ripigli un attimo, ho schiacciato qualche tasto che non dovevo.\r\nDETECTED HALLUCINATION:  Grazie a tutti.\r\nDETECTED HALLUCINATION:  E' un attimo che non dovevo.\r\n[00:54.440 --> 00:55.700]  Ehm, ehm.\r\n```",
    "created_at": "2023-11-25T02:13:34Z",
    "updated_at": "2023-11-25T02:13:34Z",
    "repository": "Unknown",
    "comment_length": 3011
  },
  {
    "pr_title": "[Do not land] [RFC] 1.375x speedup - Remove control flow from model, small hacks, enable TorchDynamo + TorchInductor",
    "pr_body": "Obviously not meant to land, this RP is representative of what it would take to get dynamo working.\r\n\r\ntest_me.py takes 4.4 seconds on main branch\r\ntest_me.py takes 3.2 seconds in this PR\r\n\r\n**Overview:**\r\n1) I took some free audio book of chapter 1 of Charles Dickens' David Copperfield\r\n2) I used an mp3 splitting tool to split it into 8 parts, and then used the util in the model to get 10 chunks of 30 seconds each\r\n3) I \"preheated\" the model with audio part 0, and then ran inference on the othe",
    "pr_number": 43,
    "comment_id": 1255747003,
    "author": "jansel",
    "body": "For those who haven't heard of [TorchDynamo/TorchInductor](https://github.com/pytorch/torchdynamo), it is automatically fusing and mapping PyTorch to [Triton](https://github.com/openai/triton).",
    "created_at": "2022-09-23T02:48:12Z",
    "updated_at": "2022-09-23T02:48:12Z",
    "repository": "Unknown",
    "comment_length": 193
  },
  {
    "pr_title": "attempt to fix the repetition/hallucination issue identified in #1046",
    "pr_body": "",
    "pr_number": 1052,
    "comment_id": 1459104988,
    "author": "ryanheise",
    "body": "Hi @jongwook Not sure if you saw the comment below, but it includes a reproduction case which might be useful:\r\n\r\nhttps://github.com/openai/whisper/pull/869#issuecomment-1445024980\r\n\r\nThe repetition persists with this PR.",
    "created_at": "2023-03-08T01:02:42Z",
    "updated_at": "2023-03-08T01:02:42Z",
    "repository": "Unknown",
    "comment_length": 221
  },
  {
    "pr_title": "Per Token Confidence + Color terminal example",
    "pr_body": "Hello!\r\nI implemented per-token confidence scores and also added a little example under examples/confidence_per_token.py, where you get a fancy colored text output resembling the confidence score of each token:\r\n\r\n\r\n(image incorrect, look at last commented image)\r\n![image](https://user-images.githubusercontent.com/43215895/226175988-e18657f4-589a-422d-a93c-6f3139648eaf.png)\r\nExample WAV: https://www.voiptroubleshooter.com/open_speech/american/OSR_us_000_0010_8k.wav\r\n\r\n\r\nI am aware of the work of",
    "pr_number": 1119,
    "comment_id": 1480433375,
    "author": "SinanAkkoyun",
    "body": "EDIT: Done\r\n\r\nTODO: correct propability display when supplying prompts (prompt tokens seem to get assigned prob of 0, if anyone can please help, I'd appreciate it)",
    "created_at": "2023-03-23T00:49:56Z",
    "updated_at": "2023-03-23T01:21:20Z",
    "repository": "Unknown",
    "comment_length": 163
  },
  {
    "pr_title": "add always_use_initial_prompt",
    "pr_body": "    always_use_initial_prompt: bool\r\n        if True, the initial_prompt will be used to all windows, and condition_on_previous_text\r\n        will be ignored. Enabling this may make the text more consistent if the audio is long\r\n        and you set the initial_prompt properly.",
    "pr_number": 1040,
    "comment_id": 1457651898,
    "author": "ryanheise",
    "body": "I think some variation on this idea might help it to remember your prompting in long audio, but when a window boundary occurs mid sentence, I think it's also important to have the previous text as the prompt.\r\n\r\nAs a compromise, have you thought about truncating the previous text at a sentence boundary and then prepending the initial prompt before that? It might be the best of both worlds.",
    "created_at": "2023-03-07T07:02:33Z",
    "updated_at": "2023-03-07T07:02:55Z",
    "repository": "Unknown",
    "comment_length": 392
  },
  {
    "pr_title": "Replaced 'no' langauge code with 'nb' and use full norwegian language names",
    "pr_body": "The 'no' language code is a obsolete language code that is the union of language codes 'nb' (Norwegian Bokmål) and 'nn' (Norwegian Nynorsk), the two written variants in use in Norway.  As 'no' is misleading, and seem to be used by Whisper to mean Norwegian Bokmål, I recommend replacing it with 'nb' and using the full names for both of the norwegian written forms.\r\n\r\nUseful references:\r\n\r\n * https://linguistics.stackexchange.com/questions/36784/norwegian-translation-codes-no-nn-nb-which-to-use-on",
    "pr_number": 1250,
    "comment_id": 1511359090,
    "author": "ryanheise",
    "body": "From my understanding, this may be similar to Chinese which also has multiple written variants, although Chinese also has multiple spoken dialects. The way Whisper was trained, it was trained on all of these written and spoken variants under the umbrella of \"Chinese\", and so ultimately a single language code has to describe all of these. Since there is only one language code for Chinese, the way you get it to transcribe for a particular variant is therefore not by specifying a different language but by using the same language code and then using a prompt to get it off on the right foot with the variant. It may not be a strictly correct use of language codes, but the training is already done that way.\r\n\r\nI haven't tried transcribing Norwegian, but is it similar in that Whisper contains training data for both writing systems under a single umbrella of \"no\" which can be accessed by using a prompt to set it off in one of those two directions? If so, I'm not sure if changing it to \"nb\" would make sense.",
    "created_at": "2023-04-17T13:33:55Z",
    "updated_at": "2023-04-17T13:33:55Z",
    "repository": "Unknown",
    "comment_length": 1013
  },
  {
    "pr_title": "Add CSV formatted output in transcript, using integer start/end times in milliseconds.",
    "pr_body": "This PR adds CSV output to Whisper transcription similar to the way #102 added SRT subtitle formatted output.\r\n\r\nEach line of the resulting CSV file is formatted like:\r\n` <startTime-in-integer-milliseconds>, <endTime-in-integer-milliseconds>, \"<transcript-including-commas>\"`\r\n\r\nOne of the reasons for using integer millisecond timings is to avoid regional incompatibilities with writing and reading floating point timings across language regions which use different characters - either \".\" or \",\" - ",
    "pr_number": 228,
    "comment_id": 1292794024,
    "author": "Yoyoma22",
    "body": "The CSV seems to just multiply the range by 1000 to get ms resolution.  Could we please have actual ms resolution for the speakers?  If doing text-to-speech of a natural conversation, and trying to combine it with speaker recognition (pytorch for example), two persons may speak in the same second.  We don't know who said what.  Therefore, if we had ms resolution out of whisper, we could easily know who said what sentence in a natural conversation.",
    "created_at": "2022-10-27T00:09:13Z",
    "updated_at": "2022-10-27T00:17:24Z",
    "repository": "Unknown",
    "comment_length": 451
  },
  {
    "pr_title": "#22667 replaced occurrences of master/slave terminology with leader/follower",
    "pr_body": "The docs and some tests contain references to a master/slave db configuration.\nWhile this terminology has been used for a long time, those terms may carry racially charged meanings to users.\nThis patch replaces all occurrences of master and slave with 'leader' and 'follower'\n",
    "pr_number": 2692,
    "comment_id": 43650352,
    "author": "alex",
    "body": "Thanks for taking the time to do this!\n",
    "created_at": "2014-05-20T16:37:11Z",
    "updated_at": "2014-05-20T16:37:11Z",
    "repository": "Unknown",
    "comment_length": 39
  },
  {
    "pr_title": "Fixed #373 -- Added CompositePrimaryKey.",
    "pr_body": "# Trac ticket number\r\n\r\nticket-373\r\n\r\n# Branch description\r\n\r\nThis branch adds the `CompositePrimaryKey` field. If present, Django will create a composite primary key.\r\n\r\nPlease refer to the [docs](https://github.com/django/django/pull/18056/files#diff-cca8870fcaec19104d999f61553ba925c72e2eb19b4933068c4849f2ce58a6f6) for a more in-depth explanation.\r\n\r\n[Proposal](https://forum.djangoproject.com/t/gsoc-2024-proposal-django-orm-support-for-composite-primary-keys/29146)\r\n[Previous PR](https://githu",
    "pr_number": 18056,
    "comment_id": 2062013314,
    "author": "grjones",
    "body": "I was trying out this exciting branch and ran into this error when running a test:\r\n```\r\n<...>/lib/python3.12/site-packages/django/db/models/lookups.py:30: in __init__\r\n    self.rhs = self.get_prep_lookup()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = TupleIn(<django.db.models.fields.composite.Cols object at 0x107560980>, <django.db.models.sql.query.Query object at 0x1074e23f0>)\r\n\r\n    def get_prep_lookup(self):\r\n        if not isinstance(self.lhs, Cols):\r\n            raise ValueError(\r\n                \"The left-hand side of the 'in' lookup must be an instance of Cols\"\r\n            )\r\n        if not isinstance(self.rhs, Iterable):\r\n>           raise ValueError(\r\n                \"The right-hand side of the 'in' lookup must be an iterable\"\r\n            )\r\nE           ValueError: The right-hand side of the 'in' lookup must be an iterable\r\n```\r\n\r\nThe issue stems from the use of `isnull` like so:\r\n\r\n```\r\nMyModel.objects.filter(\r\n    type_override__severity__isnull=False\r\n).update(severity=\"high\")\r\n```\r\n\r\nCurious if anyone ran into this as well.\r\n\r\nEdited for traceback:\r\n\r\n```\r\n<...>\r\nlib/python3.12/site-packages/django/db/models/sql/compiler.py:2080: in pre_sql_setup\r\n    self.query.add_filter(\"pk__in\", query)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1601: in add_filter\r\n    self.add_q(Q((filter_lhs, filter_rhs)))\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1617: in add_q\r\n    clause, _ = self._add_q(q_object, self.used_aliases)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1649: in _add_q\r\n    child_clause, needed_inner = self.build_filter(\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1563: in build_filter\r\n    condition = self.build_lookup(lookups, col, value)\r\nlib/python3.12/site-packages/django/db/models/sql/query.py:1393: in build_lookup\r\n    lookup = lookup_class(lhs, rhs)\r\nlib/python3.12/site-packages/django/db/models/lookups.py:30: in __init__\r\n    self.rhs = self.get_prep_lookup()\r\n```\r\n\r\nSo, this is part of `SQLUpdateCompiler` and is coming from the `update` code path.",
    "created_at": "2024-04-17T19:04:43Z",
    "updated_at": "2024-04-17T19:16:32Z",
    "repository": "Unknown",
    "comment_length": 2228
  },
  {
    "pr_title": "[Soc2014] Official meta API",
    "pr_body": "",
    "pr_number": 3114,
    "comment_id": 54512777,
    "author": "timgraham",
    "body": "Here are some docs edits: http://dpaste.com/1X0TZB4\nLet me know if any changes look questionable.\n",
    "created_at": "2014-09-04T17:19:45Z",
    "updated_at": "2014-09-04T17:19:45Z",
    "repository": "Unknown",
    "comment_length": 98
  },
  {
    "pr_title": "Fixed #14370 -- Added select2 widget for related object fields in admin.",
    "pr_body": "Adds jQuery Select2 version 4 to support async select inputs\r\nincluding a search feature.\r\n\r\n**I split the PR in two commits, one is vendoring select2, one contains my code.**\r\n\r\n### Links & Discussions\r\n* [djangoproject#14370](https://code.djangoproject.com/ticket/14370)\r\n* https://groups.google.com/forum/#!topic/django-developers/tCNWnLP8jzM\r\n* https://groups.google.com/forum/#!topic/django-developers/Ip63Xqw01IA/discussion\r\n* https://groups.google.com/forum/#!topic/django-developers/jGgZngTq3",
    "pr_number": 6385,
    "comment_id": 204826391,
    "author": "codingjoe",
    "body": "@jpic this is a first draft, I tested it manually, it seems fine\n@timgraham I only added tests for the new json view, I'll add the widget tests in the sprint tomorrow\n",
    "created_at": "2016-04-02T23:29:15Z",
    "updated_at": "2016-04-02T23:29:15Z",
    "repository": "Unknown",
    "comment_length": 167
  },
  {
    "pr_title": "Schema alteration",
    "pr_body": "To accompany the mailing list thread here: https://groups.google.com/forum/?fromgroups=#!topic/django-developers/esCFLLXwIOY\n",
    "pr_number": 376,
    "comment_id": 9347516,
    "author": "ptone",
    "body": "Andrew - it's occurred to me that this may not address the situation when someone starts a project then switches to a swapped user model - I am **NOT** talking about the data migration fore user data (people are own for that) - but raising the issue of what, if anything, needs to be done when a model._meta.swapped goes from False to True from one migration to the next.\n\nNot really being familiar with the core approach here, I don't even know if anything needs to be done, just realizing that this was probably developed before _meta.swapped was introduced and pointing that out. cc @freakboy3742 \n",
    "created_at": "2012-10-11T16:34:17Z",
    "updated_at": "2012-10-11T16:34:17Z",
    "repository": "Unknown",
    "comment_length": 601
  },
  {
    "pr_title": "Fixed #12990 -- Added JSONField model field.",
    "pr_body": "### This pull request is closed. Please look at #12392 instead.\r\n\r\n---\r\n\r\nTicket [#12990](https://code.djangoproject.com/ticket/12990), as part of the [Google Summer of Code](https://g.co/gsoc) program.\r\n\r\nSome points:\r\n- Currently supports storing and retrieving any valid JSON value (boolean, integer, float, string, object, array) on all supported database backends (SQLite, PostgreSQL, MySQL, MariaDB, Oracle).\r\n  Note: Oracle only supports JSON object and array if `IS JSON` constraint is enable",
    "pr_number": 11452,
    "comment_id": 500188044,
    "author": "laymonage",
    "body": "Any clue on which version of MariaDB is used on [djangoci.com](//djangoci.com)? The `json` data type is introduced in MariaDB 10.2.7.",
    "created_at": "2019-06-09T06:11:54Z",
    "updated_at": "2020-01-28T08:04:47Z",
    "repository": "Unknown",
    "comment_length": 133
  },
  {
    "pr_title": "Checking framework",
    "pr_body": "This branch is part of my Google Summer of Code 2013 project. It's not intended to be merged, it's only to make deep review easier.\n\nSee discussion of checking framework on django-developers: https://groups.google.com/forum/?fromgroups=&hl=en#!topic/django-developers/fEf21dtpqDE\n",
    "pr_number": 1364,
    "comment_id": 21826377,
    "author": "chrismedrela",
    "body": "I've made error message single-line so there is no short/long description separation. See https://github.com/chrismedrela/django/commit/1929a8c3565bdd6aa36b8ce3f578f34091105d59.\n",
    "created_at": "2013-07-30T22:02:01Z",
    "updated_at": "2013-07-30T22:02:01Z",
    "repository": "Unknown",
    "comment_length": 178
  },
  {
    "pr_title": "Refs #28643 -- Added math database functions.",
    "pr_body": "Added ACOS, ASIN, ATAN, ATAN2, CEILING, COS, COT, DEGREES, EXP,\r\nFLOOR, LOG, MOD, PI, POWER, RADIANS, ROUND, SIN, SQRT, TAN\r\nABS was added according to the commit by onkruid. \r\nAny suggestion is welcome!",
    "pr_number": 9622,
    "comment_id": 361011971,
    "author": "loic",
    "body": "> It seems that the test_math.py cannot import my math functions. However, it works just fine for me locally. Could anybody help me with that?\r\n\r\nAre you still struggling with that?\r\n\r\nIt seems a bit odd to me, PY2 could have got mixed up between the absolute `math` package and the relative one, but PY3 doesn't have this issue.\r\n\r\nHave you tried clearing `__pycache__`?",
    "created_at": "2018-01-27T20:13:25Z",
    "updated_at": "2018-01-27T20:13:25Z",
    "repository": "Unknown",
    "comment_length": 371
  },
  {
    "pr_title": "Fixed #33308 -- Added support for psycopg version 3",
    "pr_body": "What did I do? I took\r\nhttps://github.com/dvarrazzo/django-psycopg3-backend and blackified it +\r\nported over most (all?) new commits. I am now opening this on GitHub to\r\nbe able to nicely diff and start a discussion about whether we can\r\nsupport psycopg2 & 3 easiyl from the same codebase (I think we can).\r\n\r\n----\r\nI (i.e. @felixxm) have the following plan to move this forward:\r\n- [x]  merge #16245,\r\n- [x]  squash commits,\r\n- [x]  rebase,\r\n- [x]  revert unnecessary changes, e.g.\r\n  - [x]  https:/",
    "pr_number": 15687,
    "comment_id": 1125216585,
    "author": "apollo13",
    "body": "Looking through the code base there are quite a few areas where it would probably be easier if we just assumed that if psycopg3 is installed that we want to use it; this might get a bit more fun for testing (extra environment, but realistically speaking we want to be on psycopg3 only in the longrun anways…)",
    "created_at": "2022-05-12T16:51:24Z",
    "updated_at": "2022-05-12T16:51:24Z",
    "repository": "Unknown",
    "comment_length": 308
  },
  {
    "pr_title": "Fixed #33012 -- Added Redis cache backend.",
    "pr_body": "ticket-33012\r\n\r\nThis PR is in accordance with this [GSoC project](https://summerofcode.withgoogle.com/projects/#6292871491092480)\r\nThe detailed proposal can be found [here](https://docs.google.com/document/d/1_gIa_17uCNlwJTmqiMLkiVtRgTOD2MvHpy4NNFvKBWc/edit?usp=sharing)\r\n\r\nThis PR aims at adding support for Redis to be used as a caching backend with Django. As redis is the most popular caching backend, adding it to django.core.cache module would be a great addition for developers who previously ",
    "pr_number": 14437,
    "comment_id": 846650949,
    "author": "abbasidaniyal",
    "body": "Hey @carltongibson \r\nSo I was able to get a quick and simple implementation up and running. However, there are several decisions that I made for simplicity, like using pickle for serializing data. \r\nI am still not sure how shall be handle multiple servers. Do we setup a sharding based client (like memcached) or should it cater to a replication based setup with a \"Primary and replica\" based setup?\r\n\r\nDo let me know what improvement I should make and how I shall proceed!",
    "created_at": "2021-05-24T00:15:36Z",
    "updated_at": "2021-05-24T00:15:36Z",
    "repository": "Unknown",
    "comment_length": 473
  },
  {
    "pr_title": "Code() in file Code_mobject.py to display code with color highlighted works correctly with updates in text_mobject.py and svg_mobject. ",
    "pr_body": "you can use it as follow.\r\nif you put file into \"assets/codes\" folder then you don't need to specify full file path, just name of file is enough otherwise specify full file path.\r\n`if generate_html_file==True` it create a html file with color  highlighted and save it to \"assets/codes/generated_html_files/\" \r\n```python\r\nfrom manimlib.imports import *\r\nclass codeExample(Scene):\r\n    def construct(self):\r\n        heading = TextMobject(\"\\\"Hello, World\\\" Program\", stroke_width=0).scale(1.3)\r\n        ",
    "pr_number": 1018,
    "comment_id": 622539841,
    "author": "NavpreetDevpuri",
    "body": "`text = Text('a', ' ', 'b')`\r\nit shows only 'a' to the screen \r\nany one can help ?",
    "created_at": "2020-05-01T19:56:11Z",
    "updated_at": "2020-05-01T19:56:11Z",
    "repository": "Unknown",
    "comment_length": 82
  },
  {
    "pr_title": "Fixed Some bugs of code_mobject.py and Text_mobject.py",
    "pr_body": "Fixed https://github.com/3b1b/manim/issues/1067\r\nNOTE : SurroundingRectangle() only contains visible text.\r\n```Python\r\nclass te(Scene):\r\n    def construct(self):\r\n        text1 = Text(\" ab \", font=\"Consolas\", size=2)\r\n        rect1 = SurroundingRectangle(text1)\r\n        text1.chars[1].set_color(GREEN)\r\n        self.add(text1,rect1)\r\n```\r\nOutput\r\n![te](https://user-images.githubusercontent.com/30471072/81986815-27f5de80-9656-11ea-8eef-9e6a927e28c0.png)\r\n\r\n```python\r\nclass bug1(Scene):\r\n    def co",
    "pr_number": 1071,
    "comment_id": 628951427,
    "author": "TonyCrane",
    "body": "Good job!\r\nBut can you fix the second bug mentioned in #1067, by making `Code()` distinguish between space and tabs for identation.\r\n\r\nAnd I think it's better to put front space characters in the first display character's position, which makes them in the first line. This can make Transform more natural.",
    "created_at": "2020-05-15T00:13:29Z",
    "updated_at": "2020-05-15T00:17:09Z",
    "repository": "Unknown",
    "comment_length": 305
  },
  {
    "pr_title": "Fix space characters problem of Text",
    "pr_body": "Related issue #1017\r\n\r\nCode to reproduce the problem\r\n1. character `'\\n'`\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r\n    def construct(self):\r\n        t1 = Text('a\\nb').move_to(UP)\r\n        t2 = Text('123').move_to(DOWN)\r\n        self.play(Transform(t1, t2))\r\n        self.wait()\r\n```\r\n![enter](https://user-images.githubusercontent.com/47266984/81162376-ac45c300-8fbf-11ea-97bf-96c3a18eab17.gif)\r\n\r\n2. character `'\\t'`\r\n```py\r\nfrom manimlib.imports import *\r\n\r\nclass Test(Scene):\r",
    "pr_number": 1035,
    "comment_id": 624800665,
    "author": "NavpreetDevpuri",
    "body": "`\\t` is going to fail t2c() ..etc \r\n",
    "created_at": "2020-05-06T18:00:43Z",
    "updated_at": "2020-05-06T18:00:43Z",
    "repository": "Unknown",
    "comment_length": 36
  },
  {
    "pr_title": "Refactor the structure of the package and add configuration guidelines",
    "pr_body": "<!-- Thanks for contributing to manim!\r\n    Please ensure that your pull request works with the latest version of manim.\r\n-->\r\n## Motivation\r\n<!-- Outline your motivation: In what way do your changes improve the library? -->\r\nThe current `manimlib` is relatively inconsistent with the package specification, so some slight refactoring has been carried out.\r\nAnd added an automation guide for setting `custom_default.yml`\r\n## Proposed changes\r\n<!-- What you changed in those files -->\r\n- Move `manimli",
    "pr_number": 1366,
    "comment_id": 774727382,
    "author": "3b1b",
    "body": "Most of this is certainly in the right direction, thank you.\r\n\r\n> Move manimlib/imports.py into manimlib/__init__.py. So we can use from manimlib import * to import this package.\r\n\r\nGiven that the current use of manimlib/imports.py is not the best practice, I'd be hesitant to make it something that's called by default when you import the package.\r\n\r\nAt the very least, it would be best to separate out the non-manim libraries that it imports at the bottom.  In fact, arguably most of those should be removed, and we should encourage more explicit imports of numpy, math, etc.  If for someone's personal use-case they want to bring all those in with a single highly-implicit import call, they can always do that, but I don't think it should be systematized into the structure of manim.\r\n\r\n> Add configuration guide, which will be run when there is no configuration file (custom_config.yml or manimlib/default_config.yml)\r\n\r\nI don't think the first time someone runs manim they should have to fill all this out.  It's a nicer user experience if it falls back on some defaults so they can at least jump in and start running scenes.  It might be better to print a warning that certain defaults are used, which points the user to where they can go to set their own defaults for where files are output, etc.",
    "created_at": "2021-02-07T18:27:32Z",
    "updated_at": "2021-02-07T18:33:55Z",
    "repository": "Unknown",
    "comment_length": 1303
  },
  {
    "pr_title": "Code() in file Code_mobject.py to display code with color highlighted added Paragraph() and \"exact_spaces\" parameter to Text() ",
    "pr_body": "## It solves the following problems\r\n1) display code with color highlighted\r\n2) manage to print single '{' or '}'  because of using Text() instead of TextMobject() from https://github.com/3b1b/manim/issues/941#issuecomment-621615699\r\n3) Solved Text( ) transform animation for \" \" space character from https://github.com/3b1b/manim/issues/1017\r\n4) Text() with tabs, indexes not works correctly https://github.com/3b1b/manim/issues/1060\r\n5) Text() don't shows spaces in front of the text and at the end",
    "pr_number": 1036,
    "comment_id": 625022352,
    "author": "TonyCrane",
    "body": "In my opinion, there is no need to turn `Text` into `SingleStringTextMobject`, that will cause some problems when users using Text from old version to new version.\r\n\r\nIt is better to create a new class `Texts` to archive the same effect of `Text` now which archives more functions. Do you undersand me?\r\n```text\r\nSingleStringTextMobject -> Text\r\nText -> Texts\r\n```",
    "created_at": "2020-05-07T04:29:06Z",
    "updated_at": "2020-05-07T04:29:06Z",
    "repository": "Unknown",
    "comment_length": 364
  },
  {
    "pr_title": "Package manimlib and automatically publish to pypi",
    "pr_body": "I added the code to package manimlib and publish it on pypi using GitHub Action. Also fixed some bugs that made manimlib unable to be used normally after packaging.\r\n- The first commit https://github.com/3b1b/manim/commit/9916f56fb10b8600856b37e1bb84b57f5cc63ad2: The package will not include `manim.py`, so the \"manim\" module will not be found. So I changed to get the manimlib directory, and returned to the previous level to get the original \"manim_dir\".\r\n- The second commit https://github.com/3b",
    "pr_number": 1336,
    "comment_id": 771851376,
    "author": "3b1b",
    "body": "Before doing this, we should better check in with the manim community to think about what the two versions of manim look like on pypi.  Let me get back to you here.",
    "created_at": "2021-02-02T18:06:24Z",
    "updated_at": "2021-02-02T18:06:24Z",
    "repository": "Unknown",
    "comment_length": 164
  },
  {
    "pr_title": "Interactive Mobjects Performance Improvements",
    "pr_body": "# Motivation\r\nAs mentioned in https://github.com/3b1b/manim/pull/1323#issuecomment-769350572, interactive mobjects were a bit laggy.\r\n\r\nSo, to improve interactively mobjects performance, the following changes are made.\r\n1. Maintain a separate list of mobject listeners instead of filtering mobjects on every frame.\r\n>   This significantly improved the performance on all events except the on_mouse_drag event. So to improve it the 2nd change was made.\r\n2.  Changed the way drag events are handled.\r\n>",
    "pr_number": 1326,
    "comment_id": 770403139,
    "author": "BenEcon",
    "body": "Great. One issue for me is when I run ControlsExample without the “self.embed()”, it works just as you show. However, if is included, then the python crashes and error message appears as:\r\n\r\n```\r\nPython 3.9.1 (v3.9.1:1e5d33e9b9, Dec  7 2020, 12:10:52) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.19.0 -- An enhanced Interactive Python. Type '?' for help.\r\n~/Pycharm/Manim/venv/lib/python3.9/site-packages/IPython/terminal/embed.py:285: UserWarning: Failed to get module example_scenes\r\n    warnings.warn(\"Failed to get module %s\" % \\\r\n```\r\n\r\nAny ideas about what is wrong here for me? Thank you.\r\n",
    "created_at": "2021-01-31T15:52:29Z",
    "updated_at": "2021-01-31T15:52:29Z",
    "repository": "Unknown",
    "comment_length": 628
  },
  {
    "pr_title": "Update learning_by_example.rst",
    "pr_body": "",
    "pr_number": 580,
    "comment_id": 500097775,
    "author": "Kolloom",
    "body": "Never done this three way merge before. Could deleted something during the process. Let me know ",
    "created_at": "2019-06-08T05:39:29Z",
    "updated_at": "2019-06-08T05:39:29Z",
    "repository": "Unknown",
    "comment_length": 96
  },
  {
    "pr_title": "Added security answers and questions",
    "pr_body": "Hello again @bregman-arie !\r\n\r\nWe added a few answers to already existing questions. Additionally, we created questions about software supply chain, package management and security concerns related to the topics. We are more than happy to hear your feedback and fix potential issues if there are any, and kudos to you and the other contributors in this repo!\r\n\r\nBest regards,\r\n@Akseluhr & @Abdullah1428 ",
    "pr_number": 229,
    "comment_id": 1115926079,
    "author": "Akseluhr",
    "body": "Hi again @bregman-arie. Thanks a lot for the interesting feedback. We decided to have further discussion among the two of us regarding the answers of the questions that were already there. Therefore, we decided to delete those answers for now.\r\n\r\nOn the contrary, we decided to focus on the questions we came up with regarding software supply chain and package management, and the feedback we received on it. \r\n\r\nAgain, we are more than happy to address any issues with the latest commit if there are any. Thanks for the detailed answer and your time.\r\n\r\nBest regards,\r\nAksel and Abdullah.",
    "created_at": "2022-05-03T10:01:36Z",
    "updated_at": "2022-05-03T10:01:36Z",
    "repository": "Unknown",
    "comment_length": 589
  },
  {
    "pr_title": "Adding Anthos on GCP and K8s questions",
    "pr_body": "Adding more sections on K8s with core concepts and scheduling",
    "pr_number": 104,
    "comment_id": 688221103,
    "author": "bregman-arie",
    "body": "@CloudGrimm please switch every \\</summary>\\<br>\\<br> with \\</summary>\\<br>\\<b> like in every other question in this repo",
    "created_at": "2020-09-07T10:08:25Z",
    "updated_at": "2020-09-07T10:08:25Z",
    "repository": "Unknown",
    "comment_length": 121
  },
  {
    "pr_title": "Updated the Beginners Section of Terraform",
    "pr_body": "Answered the definition questions for provider, resources and provisioner and those of terraform commands.",
    "pr_number": 45,
    "comment_id": 558552718,
    "author": "bregman-arie",
    "body": "You added the answers in the questions. Answers should be added after \"<br><b>\"\r\nThanks for contributing.",
    "created_at": "2019-11-26T09:54:46Z",
    "updated_at": "2019-11-26T09:54:46Z",
    "repository": "Unknown",
    "comment_length": 105
  },
  {
    "pr_title": "Added the answer for the question: 'How Web Servers Works'",
    "pr_body": "Here I added the appropriate answer for the question.",
    "pr_number": 195,
    "comment_id": 1019559870,
    "author": "bregman-arie",
    "body": "You focused on how browsing works (mainly from client side) rather than how the web server works. Maybe you can add more details on how web server does what it does, with any specifics you feel are relevant.",
    "created_at": "2022-01-23T20:22:20Z",
    "updated_at": "2022-01-23T20:22:20Z",
    "repository": "Unknown",
    "comment_length": 207
  },
  {
    "pr_title": "Added Grafana questions and answers",
    "pr_body": "Adding answers to questions in https://github.com/bregman-arie/devops-exercises/issues/4. Also added new questions and answers ",
    "pr_number": 244,
    "comment_id": 1132725503,
    "author": "AbyelT",
    "body": "Hello @bregman-arie, i added some answers to existing questions from https://github.com/bregman-arie/devops-exercises/issues/4 and created some new questions about using and organizing an Grafana instance. I'm not fully done yet (some typo checking, references) but would love to hear feedback if you have any. Thanks in advance :)\r\n",
    "created_at": "2022-05-20T10:09:08Z",
    "updated_at": "2022-05-20T10:09:08Z",
    "repository": "Unknown",
    "comment_length": 333
  },
  {
    "pr_title": "Added Cloud answers",
    "pr_body": "I have answered the unanswered questions of Cloud.\r\nIf there is anything to improve, do let me know",
    "pr_number": 115,
    "comment_id": 714925413,
    "author": "anwesh-b",
    "body": "I just deleted half of the readme",
    "created_at": "2020-10-23T05:40:11Z",
    "updated_at": "2020-10-23T05:40:11Z",
    "repository": "Unknown",
    "comment_length": 33
  },
  {
    "pr_title": "added more exercises and solutions for shell scripting",
    "pr_body": "I've added 2 more exercises and solutions to the shell scripting section, working on more..\r\n\r\ni would love if this pull request is merge thank you, @bregman-arie @spuder ",
    "pr_number": 358,
    "comment_id": 1460830529,
    "author": "spuder",
    "body": "Thanks for sharing. Unfortunately I'm not a maintainer and I can't approve. ",
    "created_at": "2023-03-08T20:25:39Z",
    "updated_at": "2023-03-08T20:25:39Z",
    "repository": "Unknown",
    "comment_length": 76
  },
  {
    "pr_title": "Ali",
    "pr_body": "# See: https://circleci.com/docs/2.0/configuration-reference/#workflows\r\n",
    "pr_number": 337,
    "comment_id": 1407035401,
    "author": "alig68537",
    "body": "# See: https://circleci.com/docs/2.0/configuration-reference/#workflows\r\n",
    "created_at": "2023-01-27T20:21:26Z",
    "updated_at": "2023-01-27T20:21:26Z",
    "repository": "Unknown",
    "comment_length": 73
  },
  {
    "pr_title": "Fix spelling errors",
    "pr_body": "",
    "pr_number": 36,
    "comment_id": 546836327,
    "author": "bregman-arie",
    "body": "why \"Explain stateless vs. stateful\" needs a question mark?\r\nIf it was \"Can you Explain stateless vs. stateful?\" I understand but why the first form requires a question mark?",
    "created_at": "2019-10-28T08:10:51Z",
    "updated_at": "2019-10-28T08:10:51Z",
    "repository": "Unknown",
    "comment_length": 174
  },
  {
    "pr_title": "Feature/new perl regex questions and answers",
    "pr_body": "",
    "pr_number": 186,
    "comment_id": 974440083,
    "author": "bregman-arie",
    "body": "Nice. I think we might want to have a whole separate section for regular expression exercises, but that's for another commit.",
    "created_at": "2021-11-19T20:36:28Z",
    "updated_at": "2021-11-19T20:36:38Z",
    "repository": "Unknown",
    "comment_length": 125
  }
]